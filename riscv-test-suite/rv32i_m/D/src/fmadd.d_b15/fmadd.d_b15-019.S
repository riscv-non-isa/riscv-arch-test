
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_13824:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2dffffffffff800; valaddr_reg:x3; val_offset:41472*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41472*0 + 3*0*FLEN/8, x4, x1, x2)

inst_13825:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2dffffffffffc00; valaddr_reg:x3; val_offset:41475*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41475*0 + 3*1*FLEN/8, x4, x1, x2)

inst_13826:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2dffffffffffe00; valaddr_reg:x3; val_offset:41478*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41478*0 + 3*2*FLEN/8, x4, x1, x2)

inst_13827:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2dfffffffffff00; valaddr_reg:x3; val_offset:41481*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41481*0 + 3*3*FLEN/8, x4, x1, x2)

inst_13828:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2dfffffffffff80; valaddr_reg:x3; val_offset:41484*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41484*0 + 3*4*FLEN/8, x4, x1, x2)

inst_13829:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2dfffffffffffc0; valaddr_reg:x3; val_offset:41487*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41487*0 + 3*5*FLEN/8, x4, x1, x2)

inst_13830:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2dfffffffffffe0; valaddr_reg:x3; val_offset:41490*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41490*0 + 3*6*FLEN/8, x4, x1, x2)

inst_13831:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2dffffffffffff0; valaddr_reg:x3; val_offset:41493*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41493*0 + 3*7*FLEN/8, x4, x1, x2)

inst_13832:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2dffffffffffff8; valaddr_reg:x3; val_offset:41496*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41496*0 + 3*8*FLEN/8, x4, x1, x2)

inst_13833:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2dffffffffffffc; valaddr_reg:x3; val_offset:41499*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41499*0 + 3*9*FLEN/8, x4, x1, x2)

inst_13834:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2dffffffffffffe; valaddr_reg:x3; val_offset:41502*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41502*0 + 3*10*FLEN/8, x4, x1, x2)

inst_13835:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2dfffffffffffff; valaddr_reg:x3; val_offset:41505*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41505*0 + 3*11*FLEN/8, x4, x1, x2)

inst_13836:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ea0000000000000; valaddr_reg:x3; val_offset:41508*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41508*0 + 3*12*FLEN/8, x4, x1, x2)

inst_13837:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ea0000000000001; valaddr_reg:x3; val_offset:41511*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41511*0 + 3*13*FLEN/8, x4, x1, x2)

inst_13838:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ea0000000000003; valaddr_reg:x3; val_offset:41514*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41514*0 + 3*14*FLEN/8, x4, x1, x2)

inst_13839:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ea0000000000007; valaddr_reg:x3; val_offset:41517*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41517*0 + 3*15*FLEN/8, x4, x1, x2)

inst_13840:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ea000000000000f; valaddr_reg:x3; val_offset:41520*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41520*0 + 3*16*FLEN/8, x4, x1, x2)

inst_13841:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ea000000000001f; valaddr_reg:x3; val_offset:41523*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41523*0 + 3*17*FLEN/8, x4, x1, x2)

inst_13842:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ea000000000003f; valaddr_reg:x3; val_offset:41526*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41526*0 + 3*18*FLEN/8, x4, x1, x2)

inst_13843:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ea000000000007f; valaddr_reg:x3; val_offset:41529*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41529*0 + 3*19*FLEN/8, x4, x1, x2)

inst_13844:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ea00000000000ff; valaddr_reg:x3; val_offset:41532*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41532*0 + 3*20*FLEN/8, x4, x1, x2)

inst_13845:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ea00000000001ff; valaddr_reg:x3; val_offset:41535*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41535*0 + 3*21*FLEN/8, x4, x1, x2)

inst_13846:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ea00000000003ff; valaddr_reg:x3; val_offset:41538*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41538*0 + 3*22*FLEN/8, x4, x1, x2)

inst_13847:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ea00000000007ff; valaddr_reg:x3; val_offset:41541*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41541*0 + 3*23*FLEN/8, x4, x1, x2)

inst_13848:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ea0000000000fff; valaddr_reg:x3; val_offset:41544*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41544*0 + 3*24*FLEN/8, x4, x1, x2)

inst_13849:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ea0000000001fff; valaddr_reg:x3; val_offset:41547*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41547*0 + 3*25*FLEN/8, x4, x1, x2)

inst_13850:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ea0000000003fff; valaddr_reg:x3; val_offset:41550*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41550*0 + 3*26*FLEN/8, x4, x1, x2)

inst_13851:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ea0000000007fff; valaddr_reg:x3; val_offset:41553*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41553*0 + 3*27*FLEN/8, x4, x1, x2)

inst_13852:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ea000000000ffff; valaddr_reg:x3; val_offset:41556*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41556*0 + 3*28*FLEN/8, x4, x1, x2)

inst_13853:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ea000000001ffff; valaddr_reg:x3; val_offset:41559*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41559*0 + 3*29*FLEN/8, x4, x1, x2)

inst_13854:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ea000000003ffff; valaddr_reg:x3; val_offset:41562*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41562*0 + 3*30*FLEN/8, x4, x1, x2)

inst_13855:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ea000000007ffff; valaddr_reg:x3; val_offset:41565*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41565*0 + 3*31*FLEN/8, x4, x1, x2)

inst_13856:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ea00000000fffff; valaddr_reg:x3; val_offset:41568*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41568*0 + 3*32*FLEN/8, x4, x1, x2)

inst_13857:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ea00000001fffff; valaddr_reg:x3; val_offset:41571*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41571*0 + 3*33*FLEN/8, x4, x1, x2)

inst_13858:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ea00000003fffff; valaddr_reg:x3; val_offset:41574*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41574*0 + 3*34*FLEN/8, x4, x1, x2)

inst_13859:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ea00000007fffff; valaddr_reg:x3; val_offset:41577*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41577*0 + 3*35*FLEN/8, x4, x1, x2)

inst_13860:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ea0000000ffffff; valaddr_reg:x3; val_offset:41580*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41580*0 + 3*36*FLEN/8, x4, x1, x2)

inst_13861:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ea0000001ffffff; valaddr_reg:x3; val_offset:41583*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41583*0 + 3*37*FLEN/8, x4, x1, x2)

inst_13862:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ea0000003ffffff; valaddr_reg:x3; val_offset:41586*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41586*0 + 3*38*FLEN/8, x4, x1, x2)

inst_13863:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ea0000007ffffff; valaddr_reg:x3; val_offset:41589*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41589*0 + 3*39*FLEN/8, x4, x1, x2)

inst_13864:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ea000000fffffff; valaddr_reg:x3; val_offset:41592*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41592*0 + 3*40*FLEN/8, x4, x1, x2)

inst_13865:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ea000001fffffff; valaddr_reg:x3; val_offset:41595*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41595*0 + 3*41*FLEN/8, x4, x1, x2)

inst_13866:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ea000003fffffff; valaddr_reg:x3; val_offset:41598*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41598*0 + 3*42*FLEN/8, x4, x1, x2)

inst_13867:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ea000007fffffff; valaddr_reg:x3; val_offset:41601*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41601*0 + 3*43*FLEN/8, x4, x1, x2)

inst_13868:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ea00000ffffffff; valaddr_reg:x3; val_offset:41604*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41604*0 + 3*44*FLEN/8, x4, x1, x2)

inst_13869:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ea00001ffffffff; valaddr_reg:x3; val_offset:41607*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41607*0 + 3*45*FLEN/8, x4, x1, x2)

inst_13870:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ea00003ffffffff; valaddr_reg:x3; val_offset:41610*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41610*0 + 3*46*FLEN/8, x4, x1, x2)

inst_13871:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ea00007ffffffff; valaddr_reg:x3; val_offset:41613*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41613*0 + 3*47*FLEN/8, x4, x1, x2)

inst_13872:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ea0000fffffffff; valaddr_reg:x3; val_offset:41616*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41616*0 + 3*48*FLEN/8, x4, x1, x2)

inst_13873:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ea0001fffffffff; valaddr_reg:x3; val_offset:41619*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41619*0 + 3*49*FLEN/8, x4, x1, x2)

inst_13874:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ea0003fffffffff; valaddr_reg:x3; val_offset:41622*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41622*0 + 3*50*FLEN/8, x4, x1, x2)

inst_13875:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ea0007fffffffff; valaddr_reg:x3; val_offset:41625*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41625*0 + 3*51*FLEN/8, x4, x1, x2)

inst_13876:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ea000ffffffffff; valaddr_reg:x3; val_offset:41628*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41628*0 + 3*52*FLEN/8, x4, x1, x2)

inst_13877:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ea001ffffffffff; valaddr_reg:x3; val_offset:41631*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41631*0 + 3*53*FLEN/8, x4, x1, x2)

inst_13878:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ea003ffffffffff; valaddr_reg:x3; val_offset:41634*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41634*0 + 3*54*FLEN/8, x4, x1, x2)

inst_13879:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ea007ffffffffff; valaddr_reg:x3; val_offset:41637*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41637*0 + 3*55*FLEN/8, x4, x1, x2)

inst_13880:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ea00fffffffffff; valaddr_reg:x3; val_offset:41640*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41640*0 + 3*56*FLEN/8, x4, x1, x2)

inst_13881:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ea01fffffffffff; valaddr_reg:x3; val_offset:41643*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41643*0 + 3*57*FLEN/8, x4, x1, x2)

inst_13882:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ea03fffffffffff; valaddr_reg:x3; val_offset:41646*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41646*0 + 3*58*FLEN/8, x4, x1, x2)

inst_13883:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ea07fffffffffff; valaddr_reg:x3; val_offset:41649*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41649*0 + 3*59*FLEN/8, x4, x1, x2)

inst_13884:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ea0ffffffffffff; valaddr_reg:x3; val_offset:41652*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41652*0 + 3*60*FLEN/8, x4, x1, x2)

inst_13885:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ea1ffffffffffff; valaddr_reg:x3; val_offset:41655*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41655*0 + 3*61*FLEN/8, x4, x1, x2)

inst_13886:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ea3ffffffffffff; valaddr_reg:x3; val_offset:41658*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41658*0 + 3*62*FLEN/8, x4, x1, x2)

inst_13887:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ea7ffffffffffff; valaddr_reg:x3; val_offset:41661*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41661*0 + 3*63*FLEN/8, x4, x1, x2)

inst_13888:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ea8000000000000; valaddr_reg:x3; val_offset:41664*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41664*0 + 3*64*FLEN/8, x4, x1, x2)

inst_13889:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3eac000000000000; valaddr_reg:x3; val_offset:41667*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41667*0 + 3*65*FLEN/8, x4, x1, x2)

inst_13890:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3eae000000000000; valaddr_reg:x3; val_offset:41670*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41670*0 + 3*66*FLEN/8, x4, x1, x2)

inst_13891:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3eaf000000000000; valaddr_reg:x3; val_offset:41673*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41673*0 + 3*67*FLEN/8, x4, x1, x2)

inst_13892:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3eaf800000000000; valaddr_reg:x3; val_offset:41676*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41676*0 + 3*68*FLEN/8, x4, x1, x2)

inst_13893:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3eafc00000000000; valaddr_reg:x3; val_offset:41679*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41679*0 + 3*69*FLEN/8, x4, x1, x2)

inst_13894:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3eafe00000000000; valaddr_reg:x3; val_offset:41682*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41682*0 + 3*70*FLEN/8, x4, x1, x2)

inst_13895:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3eaff00000000000; valaddr_reg:x3; val_offset:41685*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41685*0 + 3*71*FLEN/8, x4, x1, x2)

inst_13896:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3eaff80000000000; valaddr_reg:x3; val_offset:41688*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41688*0 + 3*72*FLEN/8, x4, x1, x2)

inst_13897:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3eaffc0000000000; valaddr_reg:x3; val_offset:41691*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41691*0 + 3*73*FLEN/8, x4, x1, x2)

inst_13898:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3eaffe0000000000; valaddr_reg:x3; val_offset:41694*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41694*0 + 3*74*FLEN/8, x4, x1, x2)

inst_13899:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3eafff0000000000; valaddr_reg:x3; val_offset:41697*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41697*0 + 3*75*FLEN/8, x4, x1, x2)

inst_13900:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3eafff8000000000; valaddr_reg:x3; val_offset:41700*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41700*0 + 3*76*FLEN/8, x4, x1, x2)

inst_13901:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3eafffc000000000; valaddr_reg:x3; val_offset:41703*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41703*0 + 3*77*FLEN/8, x4, x1, x2)

inst_13902:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3eafffe000000000; valaddr_reg:x3; val_offset:41706*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41706*0 + 3*78*FLEN/8, x4, x1, x2)

inst_13903:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3eaffff000000000; valaddr_reg:x3; val_offset:41709*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41709*0 + 3*79*FLEN/8, x4, x1, x2)

inst_13904:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3eaffff800000000; valaddr_reg:x3; val_offset:41712*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41712*0 + 3*80*FLEN/8, x4, x1, x2)

inst_13905:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3eaffffc00000000; valaddr_reg:x3; val_offset:41715*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41715*0 + 3*81*FLEN/8, x4, x1, x2)

inst_13906:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3eaffffe00000000; valaddr_reg:x3; val_offset:41718*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41718*0 + 3*82*FLEN/8, x4, x1, x2)

inst_13907:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3eafffff00000000; valaddr_reg:x3; val_offset:41721*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41721*0 + 3*83*FLEN/8, x4, x1, x2)

inst_13908:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3eafffff80000000; valaddr_reg:x3; val_offset:41724*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41724*0 + 3*84*FLEN/8, x4, x1, x2)

inst_13909:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3eafffffc0000000; valaddr_reg:x3; val_offset:41727*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41727*0 + 3*85*FLEN/8, x4, x1, x2)

inst_13910:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3eafffffe0000000; valaddr_reg:x3; val_offset:41730*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41730*0 + 3*86*FLEN/8, x4, x1, x2)

inst_13911:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3eaffffff0000000; valaddr_reg:x3; val_offset:41733*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41733*0 + 3*87*FLEN/8, x4, x1, x2)

inst_13912:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3eaffffff8000000; valaddr_reg:x3; val_offset:41736*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41736*0 + 3*88*FLEN/8, x4, x1, x2)

inst_13913:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3eaffffffc000000; valaddr_reg:x3; val_offset:41739*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41739*0 + 3*89*FLEN/8, x4, x1, x2)

inst_13914:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3eaffffffe000000; valaddr_reg:x3; val_offset:41742*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41742*0 + 3*90*FLEN/8, x4, x1, x2)

inst_13915:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3eafffffff000000; valaddr_reg:x3; val_offset:41745*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41745*0 + 3*91*FLEN/8, x4, x1, x2)

inst_13916:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3eafffffff800000; valaddr_reg:x3; val_offset:41748*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41748*0 + 3*92*FLEN/8, x4, x1, x2)

inst_13917:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3eafffffffc00000; valaddr_reg:x3; val_offset:41751*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41751*0 + 3*93*FLEN/8, x4, x1, x2)

inst_13918:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3eafffffffe00000; valaddr_reg:x3; val_offset:41754*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41754*0 + 3*94*FLEN/8, x4, x1, x2)

inst_13919:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3eaffffffff00000; valaddr_reg:x3; val_offset:41757*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41757*0 + 3*95*FLEN/8, x4, x1, x2)

inst_13920:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3eaffffffff80000; valaddr_reg:x3; val_offset:41760*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41760*0 + 3*96*FLEN/8, x4, x1, x2)

inst_13921:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3eaffffffffc0000; valaddr_reg:x3; val_offset:41763*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41763*0 + 3*97*FLEN/8, x4, x1, x2)

inst_13922:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3eaffffffffe0000; valaddr_reg:x3; val_offset:41766*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41766*0 + 3*98*FLEN/8, x4, x1, x2)

inst_13923:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3eafffffffff0000; valaddr_reg:x3; val_offset:41769*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41769*0 + 3*99*FLEN/8, x4, x1, x2)

inst_13924:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3eafffffffff8000; valaddr_reg:x3; val_offset:41772*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41772*0 + 3*100*FLEN/8, x4, x1, x2)

inst_13925:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3eafffffffffc000; valaddr_reg:x3; val_offset:41775*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41775*0 + 3*101*FLEN/8, x4, x1, x2)

inst_13926:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3eafffffffffe000; valaddr_reg:x3; val_offset:41778*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41778*0 + 3*102*FLEN/8, x4, x1, x2)

inst_13927:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3eaffffffffff000; valaddr_reg:x3; val_offset:41781*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41781*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13928:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3eaffffffffff800; valaddr_reg:x3; val_offset:41784*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41784*0 + 3*104*FLEN/8, x4, x1, x2)

inst_13929:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3eaffffffffffc00; valaddr_reg:x3; val_offset:41787*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41787*0 + 3*105*FLEN/8, x4, x1, x2)

inst_13930:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3eaffffffffffe00; valaddr_reg:x3; val_offset:41790*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41790*0 + 3*106*FLEN/8, x4, x1, x2)

inst_13931:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3eafffffffffff00; valaddr_reg:x3; val_offset:41793*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41793*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13932:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3eafffffffffff80; valaddr_reg:x3; val_offset:41796*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41796*0 + 3*108*FLEN/8, x4, x1, x2)

inst_13933:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3eafffffffffffc0; valaddr_reg:x3; val_offset:41799*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41799*0 + 3*109*FLEN/8, x4, x1, x2)

inst_13934:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3eafffffffffffe0; valaddr_reg:x3; val_offset:41802*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41802*0 + 3*110*FLEN/8, x4, x1, x2)

inst_13935:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3eaffffffffffff0; valaddr_reg:x3; val_offset:41805*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41805*0 + 3*111*FLEN/8, x4, x1, x2)

inst_13936:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3eaffffffffffff8; valaddr_reg:x3; val_offset:41808*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41808*0 + 3*112*FLEN/8, x4, x1, x2)

inst_13937:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3eaffffffffffffc; valaddr_reg:x3; val_offset:41811*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41811*0 + 3*113*FLEN/8, x4, x1, x2)

inst_13938:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3eaffffffffffffe; valaddr_reg:x3; val_offset:41814*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41814*0 + 3*114*FLEN/8, x4, x1, x2)

inst_13939:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3eafffffffffffff; valaddr_reg:x3; val_offset:41817*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41817*0 + 3*115*FLEN/8, x4, x1, x2)

inst_13940:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:41820*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41820*0 + 3*116*FLEN/8, x4, x1, x2)

inst_13941:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:41823*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41823*0 + 3*117*FLEN/8, x4, x1, x2)

inst_13942:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:41826*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41826*0 + 3*118*FLEN/8, x4, x1, x2)

inst_13943:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:41829*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41829*0 + 3*119*FLEN/8, x4, x1, x2)

inst_13944:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:41832*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41832*0 + 3*120*FLEN/8, x4, x1, x2)

inst_13945:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:41835*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41835*0 + 3*121*FLEN/8, x4, x1, x2)

inst_13946:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:41838*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41838*0 + 3*122*FLEN/8, x4, x1, x2)

inst_13947:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:41841*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41841*0 + 3*123*FLEN/8, x4, x1, x2)

inst_13948:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:41844*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41844*0 + 3*124*FLEN/8, x4, x1, x2)

inst_13949:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:41847*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41847*0 + 3*125*FLEN/8, x4, x1, x2)

inst_13950:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:41850*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41850*0 + 3*126*FLEN/8, x4, x1, x2)

inst_13951:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:41853*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41853*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_13952:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:41856*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41856*0 + 3*128*FLEN/8, x4, x1, x2)

inst_13953:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:41859*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41859*0 + 3*129*FLEN/8, x4, x1, x2)

inst_13954:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:41862*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41862*0 + 3*130*FLEN/8, x4, x1, x2)

inst_13955:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:41865*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41865*0 + 3*131*FLEN/8, x4, x1, x2)

inst_13956:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:41868*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41868*0 + 3*132*FLEN/8, x4, x1, x2)

inst_13957:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:41871*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41871*0 + 3*133*FLEN/8, x4, x1, x2)

inst_13958:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:41874*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41874*0 + 3*134*FLEN/8, x4, x1, x2)

inst_13959:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:41877*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41877*0 + 3*135*FLEN/8, x4, x1, x2)

inst_13960:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:41880*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41880*0 + 3*136*FLEN/8, x4, x1, x2)

inst_13961:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd77ce5be64ef7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x15ff1d51fbb64 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d77ce5be64ef7; op2val:0x20615ff1d51fbb64;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:41883*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41883*0 + 3*137*FLEN/8, x4, x1, x2)

inst_13962:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e50000000000000; valaddr_reg:x3; val_offset:41886*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41886*0 + 3*138*FLEN/8, x4, x1, x2)

inst_13963:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e50000000000001; valaddr_reg:x3; val_offset:41889*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41889*0 + 3*139*FLEN/8, x4, x1, x2)

inst_13964:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e50000000000003; valaddr_reg:x3; val_offset:41892*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41892*0 + 3*140*FLEN/8, x4, x1, x2)

inst_13965:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e50000000000007; valaddr_reg:x3; val_offset:41895*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41895*0 + 3*141*FLEN/8, x4, x1, x2)

inst_13966:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5000000000000f; valaddr_reg:x3; val_offset:41898*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41898*0 + 3*142*FLEN/8, x4, x1, x2)

inst_13967:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5000000000001f; valaddr_reg:x3; val_offset:41901*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41901*0 + 3*143*FLEN/8, x4, x1, x2)

inst_13968:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5000000000003f; valaddr_reg:x3; val_offset:41904*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41904*0 + 3*144*FLEN/8, x4, x1, x2)

inst_13969:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5000000000007f; valaddr_reg:x3; val_offset:41907*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41907*0 + 3*145*FLEN/8, x4, x1, x2)

inst_13970:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e500000000000ff; valaddr_reg:x3; val_offset:41910*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41910*0 + 3*146*FLEN/8, x4, x1, x2)

inst_13971:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e500000000001ff; valaddr_reg:x3; val_offset:41913*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41913*0 + 3*147*FLEN/8, x4, x1, x2)

inst_13972:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e500000000003ff; valaddr_reg:x3; val_offset:41916*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41916*0 + 3*148*FLEN/8, x4, x1, x2)

inst_13973:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e500000000007ff; valaddr_reg:x3; val_offset:41919*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41919*0 + 3*149*FLEN/8, x4, x1, x2)

inst_13974:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e50000000000fff; valaddr_reg:x3; val_offset:41922*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41922*0 + 3*150*FLEN/8, x4, x1, x2)

inst_13975:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e50000000001fff; valaddr_reg:x3; val_offset:41925*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41925*0 + 3*151*FLEN/8, x4, x1, x2)

inst_13976:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e50000000003fff; valaddr_reg:x3; val_offset:41928*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41928*0 + 3*152*FLEN/8, x4, x1, x2)

inst_13977:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e50000000007fff; valaddr_reg:x3; val_offset:41931*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41931*0 + 3*153*FLEN/8, x4, x1, x2)

inst_13978:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5000000000ffff; valaddr_reg:x3; val_offset:41934*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41934*0 + 3*154*FLEN/8, x4, x1, x2)

inst_13979:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5000000001ffff; valaddr_reg:x3; val_offset:41937*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41937*0 + 3*155*FLEN/8, x4, x1, x2)

inst_13980:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5000000003ffff; valaddr_reg:x3; val_offset:41940*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41940*0 + 3*156*FLEN/8, x4, x1, x2)

inst_13981:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5000000007ffff; valaddr_reg:x3; val_offset:41943*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41943*0 + 3*157*FLEN/8, x4, x1, x2)

inst_13982:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e500000000fffff; valaddr_reg:x3; val_offset:41946*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41946*0 + 3*158*FLEN/8, x4, x1, x2)

inst_13983:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e500000001fffff; valaddr_reg:x3; val_offset:41949*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41949*0 + 3*159*FLEN/8, x4, x1, x2)

inst_13984:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e500000003fffff; valaddr_reg:x3; val_offset:41952*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41952*0 + 3*160*FLEN/8, x4, x1, x2)

inst_13985:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e500000007fffff; valaddr_reg:x3; val_offset:41955*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41955*0 + 3*161*FLEN/8, x4, x1, x2)

inst_13986:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e50000000ffffff; valaddr_reg:x3; val_offset:41958*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41958*0 + 3*162*FLEN/8, x4, x1, x2)

inst_13987:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e50000001ffffff; valaddr_reg:x3; val_offset:41961*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41961*0 + 3*163*FLEN/8, x4, x1, x2)

inst_13988:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e50000003ffffff; valaddr_reg:x3; val_offset:41964*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41964*0 + 3*164*FLEN/8, x4, x1, x2)

inst_13989:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e50000007ffffff; valaddr_reg:x3; val_offset:41967*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41967*0 + 3*165*FLEN/8, x4, x1, x2)

inst_13990:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5000000fffffff; valaddr_reg:x3; val_offset:41970*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41970*0 + 3*166*FLEN/8, x4, x1, x2)

inst_13991:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5000001fffffff; valaddr_reg:x3; val_offset:41973*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41973*0 + 3*167*FLEN/8, x4, x1, x2)

inst_13992:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5000003fffffff; valaddr_reg:x3; val_offset:41976*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41976*0 + 3*168*FLEN/8, x4, x1, x2)

inst_13993:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5000007fffffff; valaddr_reg:x3; val_offset:41979*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41979*0 + 3*169*FLEN/8, x4, x1, x2)

inst_13994:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e500000ffffffff; valaddr_reg:x3; val_offset:41982*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41982*0 + 3*170*FLEN/8, x4, x1, x2)

inst_13995:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e500001ffffffff; valaddr_reg:x3; val_offset:41985*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41985*0 + 3*171*FLEN/8, x4, x1, x2)

inst_13996:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e500003ffffffff; valaddr_reg:x3; val_offset:41988*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41988*0 + 3*172*FLEN/8, x4, x1, x2)

inst_13997:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e500007ffffffff; valaddr_reg:x3; val_offset:41991*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41991*0 + 3*173*FLEN/8, x4, x1, x2)

inst_13998:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e50000fffffffff; valaddr_reg:x3; val_offset:41994*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41994*0 + 3*174*FLEN/8, x4, x1, x2)

inst_13999:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e50001fffffffff; valaddr_reg:x3; val_offset:41997*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41997*0 + 3*175*FLEN/8, x4, x1, x2)

inst_14000:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e50003fffffffff; valaddr_reg:x3; val_offset:42000*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42000*0 + 3*176*FLEN/8, x4, x1, x2)

inst_14001:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e50007fffffffff; valaddr_reg:x3; val_offset:42003*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42003*0 + 3*177*FLEN/8, x4, x1, x2)

inst_14002:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5000ffffffffff; valaddr_reg:x3; val_offset:42006*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42006*0 + 3*178*FLEN/8, x4, x1, x2)

inst_14003:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5001ffffffffff; valaddr_reg:x3; val_offset:42009*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42009*0 + 3*179*FLEN/8, x4, x1, x2)

inst_14004:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5003ffffffffff; valaddr_reg:x3; val_offset:42012*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42012*0 + 3*180*FLEN/8, x4, x1, x2)

inst_14005:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5007ffffffffff; valaddr_reg:x3; val_offset:42015*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42015*0 + 3*181*FLEN/8, x4, x1, x2)

inst_14006:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e500fffffffffff; valaddr_reg:x3; val_offset:42018*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42018*0 + 3*182*FLEN/8, x4, x1, x2)

inst_14007:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e501fffffffffff; valaddr_reg:x3; val_offset:42021*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42021*0 + 3*183*FLEN/8, x4, x1, x2)

inst_14008:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e503fffffffffff; valaddr_reg:x3; val_offset:42024*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42024*0 + 3*184*FLEN/8, x4, x1, x2)

inst_14009:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e507fffffffffff; valaddr_reg:x3; val_offset:42027*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42027*0 + 3*185*FLEN/8, x4, x1, x2)

inst_14010:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e50ffffffffffff; valaddr_reg:x3; val_offset:42030*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42030*0 + 3*186*FLEN/8, x4, x1, x2)

inst_14011:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e51ffffffffffff; valaddr_reg:x3; val_offset:42033*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42033*0 + 3*187*FLEN/8, x4, x1, x2)

inst_14012:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e53ffffffffffff; valaddr_reg:x3; val_offset:42036*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42036*0 + 3*188*FLEN/8, x4, x1, x2)

inst_14013:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e57ffffffffffff; valaddr_reg:x3; val_offset:42039*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42039*0 + 3*189*FLEN/8, x4, x1, x2)

inst_14014:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e58000000000000; valaddr_reg:x3; val_offset:42042*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42042*0 + 3*190*FLEN/8, x4, x1, x2)

inst_14015:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5c000000000000; valaddr_reg:x3; val_offset:42045*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42045*0 + 3*191*FLEN/8, x4, x1, x2)

inst_14016:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5e000000000000; valaddr_reg:x3; val_offset:42048*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42048*0 + 3*192*FLEN/8, x4, x1, x2)

inst_14017:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5f000000000000; valaddr_reg:x3; val_offset:42051*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42051*0 + 3*193*FLEN/8, x4, x1, x2)

inst_14018:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5f800000000000; valaddr_reg:x3; val_offset:42054*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42054*0 + 3*194*FLEN/8, x4, x1, x2)

inst_14019:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5fc00000000000; valaddr_reg:x3; val_offset:42057*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42057*0 + 3*195*FLEN/8, x4, x1, x2)

inst_14020:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5fe00000000000; valaddr_reg:x3; val_offset:42060*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42060*0 + 3*196*FLEN/8, x4, x1, x2)

inst_14021:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5ff00000000000; valaddr_reg:x3; val_offset:42063*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42063*0 + 3*197*FLEN/8, x4, x1, x2)

inst_14022:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5ff80000000000; valaddr_reg:x3; val_offset:42066*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42066*0 + 3*198*FLEN/8, x4, x1, x2)

inst_14023:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5ffc0000000000; valaddr_reg:x3; val_offset:42069*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42069*0 + 3*199*FLEN/8, x4, x1, x2)

inst_14024:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5ffe0000000000; valaddr_reg:x3; val_offset:42072*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42072*0 + 3*200*FLEN/8, x4, x1, x2)

inst_14025:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5fff0000000000; valaddr_reg:x3; val_offset:42075*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42075*0 + 3*201*FLEN/8, x4, x1, x2)

inst_14026:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5fff8000000000; valaddr_reg:x3; val_offset:42078*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42078*0 + 3*202*FLEN/8, x4, x1, x2)

inst_14027:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5fffc000000000; valaddr_reg:x3; val_offset:42081*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42081*0 + 3*203*FLEN/8, x4, x1, x2)

inst_14028:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5fffe000000000; valaddr_reg:x3; val_offset:42084*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42084*0 + 3*204*FLEN/8, x4, x1, x2)

inst_14029:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5ffff000000000; valaddr_reg:x3; val_offset:42087*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42087*0 + 3*205*FLEN/8, x4, x1, x2)

inst_14030:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5ffff800000000; valaddr_reg:x3; val_offset:42090*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42090*0 + 3*206*FLEN/8, x4, x1, x2)

inst_14031:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5ffffc00000000; valaddr_reg:x3; val_offset:42093*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42093*0 + 3*207*FLEN/8, x4, x1, x2)

inst_14032:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5ffffe00000000; valaddr_reg:x3; val_offset:42096*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42096*0 + 3*208*FLEN/8, x4, x1, x2)

inst_14033:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5fffff00000000; valaddr_reg:x3; val_offset:42099*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42099*0 + 3*209*FLEN/8, x4, x1, x2)

inst_14034:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5fffff80000000; valaddr_reg:x3; val_offset:42102*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42102*0 + 3*210*FLEN/8, x4, x1, x2)

inst_14035:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5fffffc0000000; valaddr_reg:x3; val_offset:42105*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42105*0 + 3*211*FLEN/8, x4, x1, x2)

inst_14036:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5fffffe0000000; valaddr_reg:x3; val_offset:42108*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42108*0 + 3*212*FLEN/8, x4, x1, x2)

inst_14037:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5ffffff0000000; valaddr_reg:x3; val_offset:42111*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42111*0 + 3*213*FLEN/8, x4, x1, x2)

inst_14038:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5ffffff8000000; valaddr_reg:x3; val_offset:42114*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42114*0 + 3*214*FLEN/8, x4, x1, x2)

inst_14039:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5ffffffc000000; valaddr_reg:x3; val_offset:42117*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42117*0 + 3*215*FLEN/8, x4, x1, x2)

inst_14040:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5ffffffe000000; valaddr_reg:x3; val_offset:42120*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42120*0 + 3*216*FLEN/8, x4, x1, x2)

inst_14041:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5fffffff000000; valaddr_reg:x3; val_offset:42123*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42123*0 + 3*217*FLEN/8, x4, x1, x2)

inst_14042:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5fffffff800000; valaddr_reg:x3; val_offset:42126*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42126*0 + 3*218*FLEN/8, x4, x1, x2)

inst_14043:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5fffffffc00000; valaddr_reg:x3; val_offset:42129*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42129*0 + 3*219*FLEN/8, x4, x1, x2)

inst_14044:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5fffffffe00000; valaddr_reg:x3; val_offset:42132*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42132*0 + 3*220*FLEN/8, x4, x1, x2)

inst_14045:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5ffffffff00000; valaddr_reg:x3; val_offset:42135*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42135*0 + 3*221*FLEN/8, x4, x1, x2)

inst_14046:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5ffffffff80000; valaddr_reg:x3; val_offset:42138*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42138*0 + 3*222*FLEN/8, x4, x1, x2)

inst_14047:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5ffffffffc0000; valaddr_reg:x3; val_offset:42141*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42141*0 + 3*223*FLEN/8, x4, x1, x2)

inst_14048:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5ffffffffe0000; valaddr_reg:x3; val_offset:42144*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42144*0 + 3*224*FLEN/8, x4, x1, x2)

inst_14049:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5fffffffff0000; valaddr_reg:x3; val_offset:42147*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42147*0 + 3*225*FLEN/8, x4, x1, x2)

inst_14050:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5fffffffff8000; valaddr_reg:x3; val_offset:42150*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42150*0 + 3*226*FLEN/8, x4, x1, x2)

inst_14051:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5fffffffffc000; valaddr_reg:x3; val_offset:42153*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42153*0 + 3*227*FLEN/8, x4, x1, x2)

inst_14052:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5fffffffffe000; valaddr_reg:x3; val_offset:42156*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42156*0 + 3*228*FLEN/8, x4, x1, x2)

inst_14053:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5ffffffffff000; valaddr_reg:x3; val_offset:42159*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42159*0 + 3*229*FLEN/8, x4, x1, x2)

inst_14054:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5ffffffffff800; valaddr_reg:x3; val_offset:42162*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42162*0 + 3*230*FLEN/8, x4, x1, x2)

inst_14055:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5ffffffffffc00; valaddr_reg:x3; val_offset:42165*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42165*0 + 3*231*FLEN/8, x4, x1, x2)

inst_14056:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5ffffffffffe00; valaddr_reg:x3; val_offset:42168*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42168*0 + 3*232*FLEN/8, x4, x1, x2)

inst_14057:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5fffffffffff00; valaddr_reg:x3; val_offset:42171*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42171*0 + 3*233*FLEN/8, x4, x1, x2)

inst_14058:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5fffffffffff80; valaddr_reg:x3; val_offset:42174*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42174*0 + 3*234*FLEN/8, x4, x1, x2)

inst_14059:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5fffffffffffc0; valaddr_reg:x3; val_offset:42177*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42177*0 + 3*235*FLEN/8, x4, x1, x2)

inst_14060:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5fffffffffffe0; valaddr_reg:x3; val_offset:42180*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42180*0 + 3*236*FLEN/8, x4, x1, x2)

inst_14061:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5ffffffffffff0; valaddr_reg:x3; val_offset:42183*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42183*0 + 3*237*FLEN/8, x4, x1, x2)

inst_14062:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5ffffffffffff8; valaddr_reg:x3; val_offset:42186*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42186*0 + 3*238*FLEN/8, x4, x1, x2)

inst_14063:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5ffffffffffffc; valaddr_reg:x3; val_offset:42189*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42189*0 + 3*239*FLEN/8, x4, x1, x2)

inst_14064:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5ffffffffffffe; valaddr_reg:x3; val_offset:42192*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42192*0 + 3*240*FLEN/8, x4, x1, x2)

inst_14065:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3e5 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3e5fffffffffffff; valaddr_reg:x3; val_offset:42195*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42195*0 + 3*241*FLEN/8, x4, x1, x2)

inst_14066:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:42198*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42198*0 + 3*242*FLEN/8, x4, x1, x2)

inst_14067:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:42201*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42201*0 + 3*243*FLEN/8, x4, x1, x2)

inst_14068:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:42204*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42204*0 + 3*244*FLEN/8, x4, x1, x2)

inst_14069:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:42207*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42207*0 + 3*245*FLEN/8, x4, x1, x2)

inst_14070:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:42210*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42210*0 + 3*246*FLEN/8, x4, x1, x2)

inst_14071:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:42213*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42213*0 + 3*247*FLEN/8, x4, x1, x2)

inst_14072:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:42216*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42216*0 + 3*248*FLEN/8, x4, x1, x2)

inst_14073:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:42219*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42219*0 + 3*249*FLEN/8, x4, x1, x2)

inst_14074:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:42222*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42222*0 + 3*250*FLEN/8, x4, x1, x2)

inst_14075:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:42225*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42225*0 + 3*251*FLEN/8, x4, x1, x2)

inst_14076:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:42228*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42228*0 + 3*252*FLEN/8, x4, x1, x2)

inst_14077:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:42231*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42231*0 + 3*253*FLEN/8, x4, x1, x2)

inst_14078:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:42234*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42234*0 + 3*254*FLEN/8, x4, x1, x2)

inst_14079:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:42237*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42237*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_14080:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:42240*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42240*0 + 3*256*FLEN/8, x4, x1, x2)

inst_14081:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:42243*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42243*0 + 3*257*FLEN/8, x4, x1, x2)

inst_14082:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:42246*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42246*0 + 3*258*FLEN/8, x4, x1, x2)

inst_14083:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:42249*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42249*0 + 3*259*FLEN/8, x4, x1, x2)

inst_14084:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:42252*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42252*0 + 3*260*FLEN/8, x4, x1, x2)

inst_14085:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:42255*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42255*0 + 3*261*FLEN/8, x4, x1, x2)

inst_14086:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:42258*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42258*0 + 3*262*FLEN/8, x4, x1, x2)

inst_14087:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xda3b7fb90429f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x14633f50b32f9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7da3b7fb90429f; op2val:0x20614633f50b32f9;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:42261*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42261*0 + 3*263*FLEN/8, x4, x1, x2)

inst_14088:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:42264*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42264*0 + 3*264*FLEN/8, x4, x1, x2)

inst_14089:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:42267*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42267*0 + 3*265*FLEN/8, x4, x1, x2)

inst_14090:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:42270*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42270*0 + 3*266*FLEN/8, x4, x1, x2)

inst_14091:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:42273*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42273*0 + 3*267*FLEN/8, x4, x1, x2)

inst_14092:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:42276*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42276*0 + 3*268*FLEN/8, x4, x1, x2)

inst_14093:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:42279*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42279*0 + 3*269*FLEN/8, x4, x1, x2)

inst_14094:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:42282*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42282*0 + 3*270*FLEN/8, x4, x1, x2)

inst_14095:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:42285*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42285*0 + 3*271*FLEN/8, x4, x1, x2)

inst_14096:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:42288*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42288*0 + 3*272*FLEN/8, x4, x1, x2)

inst_14097:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:42291*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42291*0 + 3*273*FLEN/8, x4, x1, x2)

inst_14098:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:42294*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42294*0 + 3*274*FLEN/8, x4, x1, x2)

inst_14099:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:42297*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42297*0 + 3*275*FLEN/8, x4, x1, x2)

inst_14100:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:42300*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42300*0 + 3*276*FLEN/8, x4, x1, x2)

inst_14101:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:42303*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42303*0 + 3*277*FLEN/8, x4, x1, x2)

inst_14102:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:42306*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42306*0 + 3*278*FLEN/8, x4, x1, x2)

inst_14103:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:42309*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42309*0 + 3*279*FLEN/8, x4, x1, x2)

inst_14104:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:42312*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42312*0 + 3*280*FLEN/8, x4, x1, x2)

inst_14105:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:42315*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42315*0 + 3*281*FLEN/8, x4, x1, x2)

inst_14106:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:42318*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42318*0 + 3*282*FLEN/8, x4, x1, x2)

inst_14107:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:42321*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42321*0 + 3*283*FLEN/8, x4, x1, x2)

inst_14108:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:42324*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42324*0 + 3*284*FLEN/8, x4, x1, x2)

inst_14109:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:42327*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42327*0 + 3*285*FLEN/8, x4, x1, x2)

inst_14110:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x8220000000000000; valaddr_reg:x3; val_offset:42330*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42330*0 + 3*286*FLEN/8, x4, x1, x2)

inst_14111:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x8220000000000001; valaddr_reg:x3; val_offset:42333*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42333*0 + 3*287*FLEN/8, x4, x1, x2)

inst_14112:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x8220000000000003; valaddr_reg:x3; val_offset:42336*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42336*0 + 3*288*FLEN/8, x4, x1, x2)

inst_14113:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x8220000000000007; valaddr_reg:x3; val_offset:42339*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42339*0 + 3*289*FLEN/8, x4, x1, x2)

inst_14114:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822000000000000f; valaddr_reg:x3; val_offset:42342*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42342*0 + 3*290*FLEN/8, x4, x1, x2)

inst_14115:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822000000000001f; valaddr_reg:x3; val_offset:42345*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42345*0 + 3*291*FLEN/8, x4, x1, x2)

inst_14116:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822000000000003f; valaddr_reg:x3; val_offset:42348*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42348*0 + 3*292*FLEN/8, x4, x1, x2)

inst_14117:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822000000000007f; valaddr_reg:x3; val_offset:42351*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42351*0 + 3*293*FLEN/8, x4, x1, x2)

inst_14118:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x82200000000000ff; valaddr_reg:x3; val_offset:42354*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42354*0 + 3*294*FLEN/8, x4, x1, x2)

inst_14119:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x82200000000001ff; valaddr_reg:x3; val_offset:42357*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42357*0 + 3*295*FLEN/8, x4, x1, x2)

inst_14120:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x82200000000003ff; valaddr_reg:x3; val_offset:42360*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42360*0 + 3*296*FLEN/8, x4, x1, x2)

inst_14121:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x82200000000007ff; valaddr_reg:x3; val_offset:42363*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42363*0 + 3*297*FLEN/8, x4, x1, x2)

inst_14122:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x8220000000000fff; valaddr_reg:x3; val_offset:42366*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42366*0 + 3*298*FLEN/8, x4, x1, x2)

inst_14123:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x8220000000001fff; valaddr_reg:x3; val_offset:42369*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42369*0 + 3*299*FLEN/8, x4, x1, x2)

inst_14124:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x8220000000003fff; valaddr_reg:x3; val_offset:42372*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42372*0 + 3*300*FLEN/8, x4, x1, x2)

inst_14125:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x8220000000007fff; valaddr_reg:x3; val_offset:42375*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42375*0 + 3*301*FLEN/8, x4, x1, x2)

inst_14126:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822000000000ffff; valaddr_reg:x3; val_offset:42378*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42378*0 + 3*302*FLEN/8, x4, x1, x2)

inst_14127:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822000000001ffff; valaddr_reg:x3; val_offset:42381*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42381*0 + 3*303*FLEN/8, x4, x1, x2)

inst_14128:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822000000003ffff; valaddr_reg:x3; val_offset:42384*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42384*0 + 3*304*FLEN/8, x4, x1, x2)

inst_14129:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822000000007ffff; valaddr_reg:x3; val_offset:42387*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42387*0 + 3*305*FLEN/8, x4, x1, x2)

inst_14130:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x82200000000fffff; valaddr_reg:x3; val_offset:42390*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42390*0 + 3*306*FLEN/8, x4, x1, x2)

inst_14131:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x82200000001fffff; valaddr_reg:x3; val_offset:42393*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42393*0 + 3*307*FLEN/8, x4, x1, x2)

inst_14132:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x82200000003fffff; valaddr_reg:x3; val_offset:42396*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42396*0 + 3*308*FLEN/8, x4, x1, x2)

inst_14133:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x82200000007fffff; valaddr_reg:x3; val_offset:42399*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42399*0 + 3*309*FLEN/8, x4, x1, x2)

inst_14134:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x8220000000ffffff; valaddr_reg:x3; val_offset:42402*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42402*0 + 3*310*FLEN/8, x4, x1, x2)

inst_14135:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x8220000001ffffff; valaddr_reg:x3; val_offset:42405*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42405*0 + 3*311*FLEN/8, x4, x1, x2)

inst_14136:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x8220000003ffffff; valaddr_reg:x3; val_offset:42408*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42408*0 + 3*312*FLEN/8, x4, x1, x2)

inst_14137:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x8220000007ffffff; valaddr_reg:x3; val_offset:42411*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42411*0 + 3*313*FLEN/8, x4, x1, x2)

inst_14138:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822000000fffffff; valaddr_reg:x3; val_offset:42414*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42414*0 + 3*314*FLEN/8, x4, x1, x2)

inst_14139:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822000001fffffff; valaddr_reg:x3; val_offset:42417*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42417*0 + 3*315*FLEN/8, x4, x1, x2)

inst_14140:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822000003fffffff; valaddr_reg:x3; val_offset:42420*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42420*0 + 3*316*FLEN/8, x4, x1, x2)

inst_14141:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822000007fffffff; valaddr_reg:x3; val_offset:42423*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42423*0 + 3*317*FLEN/8, x4, x1, x2)

inst_14142:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x82200000ffffffff; valaddr_reg:x3; val_offset:42426*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42426*0 + 3*318*FLEN/8, x4, x1, x2)

inst_14143:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x82200001ffffffff; valaddr_reg:x3; val_offset:42429*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42429*0 + 3*319*FLEN/8, x4, x1, x2)

inst_14144:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x82200003ffffffff; valaddr_reg:x3; val_offset:42432*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42432*0 + 3*320*FLEN/8, x4, x1, x2)

inst_14145:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x82200007ffffffff; valaddr_reg:x3; val_offset:42435*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42435*0 + 3*321*FLEN/8, x4, x1, x2)

inst_14146:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x8220000fffffffff; valaddr_reg:x3; val_offset:42438*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42438*0 + 3*322*FLEN/8, x4, x1, x2)

inst_14147:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x8220001fffffffff; valaddr_reg:x3; val_offset:42441*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42441*0 + 3*323*FLEN/8, x4, x1, x2)

inst_14148:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x8220003fffffffff; valaddr_reg:x3; val_offset:42444*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42444*0 + 3*324*FLEN/8, x4, x1, x2)

inst_14149:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x8220007fffffffff; valaddr_reg:x3; val_offset:42447*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42447*0 + 3*325*FLEN/8, x4, x1, x2)

inst_14150:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822000ffffffffff; valaddr_reg:x3; val_offset:42450*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42450*0 + 3*326*FLEN/8, x4, x1, x2)

inst_14151:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822001ffffffffff; valaddr_reg:x3; val_offset:42453*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42453*0 + 3*327*FLEN/8, x4, x1, x2)

inst_14152:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822003ffffffffff; valaddr_reg:x3; val_offset:42456*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42456*0 + 3*328*FLEN/8, x4, x1, x2)

inst_14153:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822007ffffffffff; valaddr_reg:x3; val_offset:42459*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42459*0 + 3*329*FLEN/8, x4, x1, x2)

inst_14154:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x82200fffffffffff; valaddr_reg:x3; val_offset:42462*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42462*0 + 3*330*FLEN/8, x4, x1, x2)

inst_14155:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x82201fffffffffff; valaddr_reg:x3; val_offset:42465*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42465*0 + 3*331*FLEN/8, x4, x1, x2)

inst_14156:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x82203fffffffffff; valaddr_reg:x3; val_offset:42468*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42468*0 + 3*332*FLEN/8, x4, x1, x2)

inst_14157:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x82207fffffffffff; valaddr_reg:x3; val_offset:42471*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42471*0 + 3*333*FLEN/8, x4, x1, x2)

inst_14158:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x8220ffffffffffff; valaddr_reg:x3; val_offset:42474*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42474*0 + 3*334*FLEN/8, x4, x1, x2)

inst_14159:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x8221ffffffffffff; valaddr_reg:x3; val_offset:42477*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42477*0 + 3*335*FLEN/8, x4, x1, x2)

inst_14160:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x8223ffffffffffff; valaddr_reg:x3; val_offset:42480*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42480*0 + 3*336*FLEN/8, x4, x1, x2)

inst_14161:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x8227ffffffffffff; valaddr_reg:x3; val_offset:42483*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42483*0 + 3*337*FLEN/8, x4, x1, x2)

inst_14162:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x8228000000000000; valaddr_reg:x3; val_offset:42486*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42486*0 + 3*338*FLEN/8, x4, x1, x2)

inst_14163:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822c000000000000; valaddr_reg:x3; val_offset:42489*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42489*0 + 3*339*FLEN/8, x4, x1, x2)

inst_14164:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822e000000000000; valaddr_reg:x3; val_offset:42492*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42492*0 + 3*340*FLEN/8, x4, x1, x2)

inst_14165:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822f000000000000; valaddr_reg:x3; val_offset:42495*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42495*0 + 3*341*FLEN/8, x4, x1, x2)

inst_14166:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822f800000000000; valaddr_reg:x3; val_offset:42498*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42498*0 + 3*342*FLEN/8, x4, x1, x2)

inst_14167:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822fc00000000000; valaddr_reg:x3; val_offset:42501*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42501*0 + 3*343*FLEN/8, x4, x1, x2)

inst_14168:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822fe00000000000; valaddr_reg:x3; val_offset:42504*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42504*0 + 3*344*FLEN/8, x4, x1, x2)

inst_14169:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822ff00000000000; valaddr_reg:x3; val_offset:42507*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42507*0 + 3*345*FLEN/8, x4, x1, x2)

inst_14170:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822ff80000000000; valaddr_reg:x3; val_offset:42510*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42510*0 + 3*346*FLEN/8, x4, x1, x2)

inst_14171:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822ffc0000000000; valaddr_reg:x3; val_offset:42513*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42513*0 + 3*347*FLEN/8, x4, x1, x2)

inst_14172:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822ffe0000000000; valaddr_reg:x3; val_offset:42516*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42516*0 + 3*348*FLEN/8, x4, x1, x2)

inst_14173:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822fff0000000000; valaddr_reg:x3; val_offset:42519*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42519*0 + 3*349*FLEN/8, x4, x1, x2)

inst_14174:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822fff8000000000; valaddr_reg:x3; val_offset:42522*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42522*0 + 3*350*FLEN/8, x4, x1, x2)

inst_14175:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822fffc000000000; valaddr_reg:x3; val_offset:42525*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42525*0 + 3*351*FLEN/8, x4, x1, x2)

inst_14176:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822fffe000000000; valaddr_reg:x3; val_offset:42528*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42528*0 + 3*352*FLEN/8, x4, x1, x2)

inst_14177:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822ffff000000000; valaddr_reg:x3; val_offset:42531*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42531*0 + 3*353*FLEN/8, x4, x1, x2)

inst_14178:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822ffff800000000; valaddr_reg:x3; val_offset:42534*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42534*0 + 3*354*FLEN/8, x4, x1, x2)

inst_14179:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822ffffc00000000; valaddr_reg:x3; val_offset:42537*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42537*0 + 3*355*FLEN/8, x4, x1, x2)

inst_14180:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822ffffe00000000; valaddr_reg:x3; val_offset:42540*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42540*0 + 3*356*FLEN/8, x4, x1, x2)

inst_14181:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822fffff00000000; valaddr_reg:x3; val_offset:42543*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42543*0 + 3*357*FLEN/8, x4, x1, x2)

inst_14182:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822fffff80000000; valaddr_reg:x3; val_offset:42546*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42546*0 + 3*358*FLEN/8, x4, x1, x2)

inst_14183:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822fffffc0000000; valaddr_reg:x3; val_offset:42549*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42549*0 + 3*359*FLEN/8, x4, x1, x2)

inst_14184:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822fffffe0000000; valaddr_reg:x3; val_offset:42552*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42552*0 + 3*360*FLEN/8, x4, x1, x2)

inst_14185:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822ffffff0000000; valaddr_reg:x3; val_offset:42555*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42555*0 + 3*361*FLEN/8, x4, x1, x2)

inst_14186:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822ffffff8000000; valaddr_reg:x3; val_offset:42558*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42558*0 + 3*362*FLEN/8, x4, x1, x2)

inst_14187:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822ffffffc000000; valaddr_reg:x3; val_offset:42561*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42561*0 + 3*363*FLEN/8, x4, x1, x2)

inst_14188:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822ffffffe000000; valaddr_reg:x3; val_offset:42564*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42564*0 + 3*364*FLEN/8, x4, x1, x2)

inst_14189:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822fffffff000000; valaddr_reg:x3; val_offset:42567*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42567*0 + 3*365*FLEN/8, x4, x1, x2)

inst_14190:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822fffffff800000; valaddr_reg:x3; val_offset:42570*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42570*0 + 3*366*FLEN/8, x4, x1, x2)

inst_14191:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822fffffffc00000; valaddr_reg:x3; val_offset:42573*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42573*0 + 3*367*FLEN/8, x4, x1, x2)

inst_14192:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822fffffffe00000; valaddr_reg:x3; val_offset:42576*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42576*0 + 3*368*FLEN/8, x4, x1, x2)

inst_14193:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822ffffffff00000; valaddr_reg:x3; val_offset:42579*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42579*0 + 3*369*FLEN/8, x4, x1, x2)

inst_14194:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822ffffffff80000; valaddr_reg:x3; val_offset:42582*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42582*0 + 3*370*FLEN/8, x4, x1, x2)

inst_14195:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822ffffffffc0000; valaddr_reg:x3; val_offset:42585*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42585*0 + 3*371*FLEN/8, x4, x1, x2)

inst_14196:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822ffffffffe0000; valaddr_reg:x3; val_offset:42588*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42588*0 + 3*372*FLEN/8, x4, x1, x2)

inst_14197:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822fffffffff0000; valaddr_reg:x3; val_offset:42591*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42591*0 + 3*373*FLEN/8, x4, x1, x2)

inst_14198:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822fffffffff8000; valaddr_reg:x3; val_offset:42594*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42594*0 + 3*374*FLEN/8, x4, x1, x2)

inst_14199:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822fffffffffc000; valaddr_reg:x3; val_offset:42597*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42597*0 + 3*375*FLEN/8, x4, x1, x2)

inst_14200:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822fffffffffe000; valaddr_reg:x3; val_offset:42600*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42600*0 + 3*376*FLEN/8, x4, x1, x2)

inst_14201:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822ffffffffff000; valaddr_reg:x3; val_offset:42603*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42603*0 + 3*377*FLEN/8, x4, x1, x2)

inst_14202:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822ffffffffff800; valaddr_reg:x3; val_offset:42606*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42606*0 + 3*378*FLEN/8, x4, x1, x2)

inst_14203:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822ffffffffffc00; valaddr_reg:x3; val_offset:42609*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42609*0 + 3*379*FLEN/8, x4, x1, x2)

inst_14204:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822ffffffffffe00; valaddr_reg:x3; val_offset:42612*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42612*0 + 3*380*FLEN/8, x4, x1, x2)

inst_14205:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822fffffffffff00; valaddr_reg:x3; val_offset:42615*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42615*0 + 3*381*FLEN/8, x4, x1, x2)

inst_14206:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822fffffffffff80; valaddr_reg:x3; val_offset:42618*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42618*0 + 3*382*FLEN/8, x4, x1, x2)

inst_14207:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822fffffffffffc0; valaddr_reg:x3; val_offset:42621*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42621*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_14208:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822fffffffffffe0; valaddr_reg:x3; val_offset:42624*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42624*0 + 3*384*FLEN/8, x4, x1, x2)

inst_14209:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822ffffffffffff0; valaddr_reg:x3; val_offset:42627*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42627*0 + 3*385*FLEN/8, x4, x1, x2)

inst_14210:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822ffffffffffff8; valaddr_reg:x3; val_offset:42630*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42630*0 + 3*386*FLEN/8, x4, x1, x2)

inst_14211:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822ffffffffffffc; valaddr_reg:x3; val_offset:42633*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42633*0 + 3*387*FLEN/8, x4, x1, x2)

inst_14212:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822ffffffffffffe; valaddr_reg:x3; val_offset:42636*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42636*0 + 3*388*FLEN/8, x4, x1, x2)

inst_14213:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dfc83569216bf; op2val:0x8000;
op3val:0x822fffffffffffff; valaddr_reg:x3; val_offset:42639*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42639*0 + 3*389*FLEN/8, x4, x1, x2)

inst_14214:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x3910000000000000; valaddr_reg:x3; val_offset:42642*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42642*0 + 3*390*FLEN/8, x4, x1, x2)

inst_14215:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x3910000000000001; valaddr_reg:x3; val_offset:42645*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42645*0 + 3*391*FLEN/8, x4, x1, x2)

inst_14216:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x3910000000000003; valaddr_reg:x3; val_offset:42648*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42648*0 + 3*392*FLEN/8, x4, x1, x2)

inst_14217:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x3910000000000007; valaddr_reg:x3; val_offset:42651*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42651*0 + 3*393*FLEN/8, x4, x1, x2)

inst_14218:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391000000000000f; valaddr_reg:x3; val_offset:42654*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42654*0 + 3*394*FLEN/8, x4, x1, x2)

inst_14219:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391000000000001f; valaddr_reg:x3; val_offset:42657*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42657*0 + 3*395*FLEN/8, x4, x1, x2)

inst_14220:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391000000000003f; valaddr_reg:x3; val_offset:42660*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42660*0 + 3*396*FLEN/8, x4, x1, x2)

inst_14221:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391000000000007f; valaddr_reg:x3; val_offset:42663*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42663*0 + 3*397*FLEN/8, x4, x1, x2)

inst_14222:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x39100000000000ff; valaddr_reg:x3; val_offset:42666*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42666*0 + 3*398*FLEN/8, x4, x1, x2)

inst_14223:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x39100000000001ff; valaddr_reg:x3; val_offset:42669*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42669*0 + 3*399*FLEN/8, x4, x1, x2)

inst_14224:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x39100000000003ff; valaddr_reg:x3; val_offset:42672*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42672*0 + 3*400*FLEN/8, x4, x1, x2)

inst_14225:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x39100000000007ff; valaddr_reg:x3; val_offset:42675*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42675*0 + 3*401*FLEN/8, x4, x1, x2)

inst_14226:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x3910000000000fff; valaddr_reg:x3; val_offset:42678*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42678*0 + 3*402*FLEN/8, x4, x1, x2)

inst_14227:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x3910000000001fff; valaddr_reg:x3; val_offset:42681*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42681*0 + 3*403*FLEN/8, x4, x1, x2)

inst_14228:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x3910000000003fff; valaddr_reg:x3; val_offset:42684*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42684*0 + 3*404*FLEN/8, x4, x1, x2)

inst_14229:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x3910000000007fff; valaddr_reg:x3; val_offset:42687*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42687*0 + 3*405*FLEN/8, x4, x1, x2)

inst_14230:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391000000000ffff; valaddr_reg:x3; val_offset:42690*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42690*0 + 3*406*FLEN/8, x4, x1, x2)

inst_14231:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391000000001ffff; valaddr_reg:x3; val_offset:42693*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42693*0 + 3*407*FLEN/8, x4, x1, x2)

inst_14232:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391000000003ffff; valaddr_reg:x3; val_offset:42696*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42696*0 + 3*408*FLEN/8, x4, x1, x2)

inst_14233:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391000000007ffff; valaddr_reg:x3; val_offset:42699*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42699*0 + 3*409*FLEN/8, x4, x1, x2)

inst_14234:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x39100000000fffff; valaddr_reg:x3; val_offset:42702*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42702*0 + 3*410*FLEN/8, x4, x1, x2)

inst_14235:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x39100000001fffff; valaddr_reg:x3; val_offset:42705*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42705*0 + 3*411*FLEN/8, x4, x1, x2)

inst_14236:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x39100000003fffff; valaddr_reg:x3; val_offset:42708*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42708*0 + 3*412*FLEN/8, x4, x1, x2)

inst_14237:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x39100000007fffff; valaddr_reg:x3; val_offset:42711*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42711*0 + 3*413*FLEN/8, x4, x1, x2)

inst_14238:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x3910000000ffffff; valaddr_reg:x3; val_offset:42714*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42714*0 + 3*414*FLEN/8, x4, x1, x2)

inst_14239:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x3910000001ffffff; valaddr_reg:x3; val_offset:42717*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42717*0 + 3*415*FLEN/8, x4, x1, x2)

inst_14240:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x3910000003ffffff; valaddr_reg:x3; val_offset:42720*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42720*0 + 3*416*FLEN/8, x4, x1, x2)

inst_14241:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x3910000007ffffff; valaddr_reg:x3; val_offset:42723*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42723*0 + 3*417*FLEN/8, x4, x1, x2)

inst_14242:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391000000fffffff; valaddr_reg:x3; val_offset:42726*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42726*0 + 3*418*FLEN/8, x4, x1, x2)

inst_14243:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391000001fffffff; valaddr_reg:x3; val_offset:42729*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42729*0 + 3*419*FLEN/8, x4, x1, x2)

inst_14244:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391000003fffffff; valaddr_reg:x3; val_offset:42732*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42732*0 + 3*420*FLEN/8, x4, x1, x2)

inst_14245:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391000007fffffff; valaddr_reg:x3; val_offset:42735*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42735*0 + 3*421*FLEN/8, x4, x1, x2)

inst_14246:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x39100000ffffffff; valaddr_reg:x3; val_offset:42738*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42738*0 + 3*422*FLEN/8, x4, x1, x2)

inst_14247:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x39100001ffffffff; valaddr_reg:x3; val_offset:42741*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42741*0 + 3*423*FLEN/8, x4, x1, x2)

inst_14248:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x39100003ffffffff; valaddr_reg:x3; val_offset:42744*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42744*0 + 3*424*FLEN/8, x4, x1, x2)

inst_14249:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x39100007ffffffff; valaddr_reg:x3; val_offset:42747*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42747*0 + 3*425*FLEN/8, x4, x1, x2)

inst_14250:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x3910000fffffffff; valaddr_reg:x3; val_offset:42750*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42750*0 + 3*426*FLEN/8, x4, x1, x2)

inst_14251:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x3910001fffffffff; valaddr_reg:x3; val_offset:42753*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42753*0 + 3*427*FLEN/8, x4, x1, x2)

inst_14252:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x3910003fffffffff; valaddr_reg:x3; val_offset:42756*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42756*0 + 3*428*FLEN/8, x4, x1, x2)

inst_14253:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x3910007fffffffff; valaddr_reg:x3; val_offset:42759*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42759*0 + 3*429*FLEN/8, x4, x1, x2)

inst_14254:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391000ffffffffff; valaddr_reg:x3; val_offset:42762*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42762*0 + 3*430*FLEN/8, x4, x1, x2)

inst_14255:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391001ffffffffff; valaddr_reg:x3; val_offset:42765*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42765*0 + 3*431*FLEN/8, x4, x1, x2)

inst_14256:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391003ffffffffff; valaddr_reg:x3; val_offset:42768*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42768*0 + 3*432*FLEN/8, x4, x1, x2)

inst_14257:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391007ffffffffff; valaddr_reg:x3; val_offset:42771*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42771*0 + 3*433*FLEN/8, x4, x1, x2)

inst_14258:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x39100fffffffffff; valaddr_reg:x3; val_offset:42774*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42774*0 + 3*434*FLEN/8, x4, x1, x2)

inst_14259:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x39101fffffffffff; valaddr_reg:x3; val_offset:42777*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42777*0 + 3*435*FLEN/8, x4, x1, x2)

inst_14260:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x39103fffffffffff; valaddr_reg:x3; val_offset:42780*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42780*0 + 3*436*FLEN/8, x4, x1, x2)

inst_14261:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x39107fffffffffff; valaddr_reg:x3; val_offset:42783*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42783*0 + 3*437*FLEN/8, x4, x1, x2)

inst_14262:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x3910ffffffffffff; valaddr_reg:x3; val_offset:42786*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42786*0 + 3*438*FLEN/8, x4, x1, x2)

inst_14263:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x3911ffffffffffff; valaddr_reg:x3; val_offset:42789*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42789*0 + 3*439*FLEN/8, x4, x1, x2)

inst_14264:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x3913ffffffffffff; valaddr_reg:x3; val_offset:42792*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42792*0 + 3*440*FLEN/8, x4, x1, x2)

inst_14265:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x3917ffffffffffff; valaddr_reg:x3; val_offset:42795*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42795*0 + 3*441*FLEN/8, x4, x1, x2)

inst_14266:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x3918000000000000; valaddr_reg:x3; val_offset:42798*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42798*0 + 3*442*FLEN/8, x4, x1, x2)

inst_14267:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391c000000000000; valaddr_reg:x3; val_offset:42801*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42801*0 + 3*443*FLEN/8, x4, x1, x2)

inst_14268:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391e000000000000; valaddr_reg:x3; val_offset:42804*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42804*0 + 3*444*FLEN/8, x4, x1, x2)

inst_14269:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391f000000000000; valaddr_reg:x3; val_offset:42807*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42807*0 + 3*445*FLEN/8, x4, x1, x2)

inst_14270:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391f800000000000; valaddr_reg:x3; val_offset:42810*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42810*0 + 3*446*FLEN/8, x4, x1, x2)

inst_14271:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391fc00000000000; valaddr_reg:x3; val_offset:42813*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42813*0 + 3*447*FLEN/8, x4, x1, x2)

inst_14272:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391fe00000000000; valaddr_reg:x3; val_offset:42816*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42816*0 + 3*448*FLEN/8, x4, x1, x2)

inst_14273:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391ff00000000000; valaddr_reg:x3; val_offset:42819*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42819*0 + 3*449*FLEN/8, x4, x1, x2)

inst_14274:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391ff80000000000; valaddr_reg:x3; val_offset:42822*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42822*0 + 3*450*FLEN/8, x4, x1, x2)

inst_14275:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391ffc0000000000; valaddr_reg:x3; val_offset:42825*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42825*0 + 3*451*FLEN/8, x4, x1, x2)

inst_14276:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391ffe0000000000; valaddr_reg:x3; val_offset:42828*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42828*0 + 3*452*FLEN/8, x4, x1, x2)

inst_14277:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391fff0000000000; valaddr_reg:x3; val_offset:42831*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42831*0 + 3*453*FLEN/8, x4, x1, x2)

inst_14278:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391fff8000000000; valaddr_reg:x3; val_offset:42834*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42834*0 + 3*454*FLEN/8, x4, x1, x2)

inst_14279:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391fffc000000000; valaddr_reg:x3; val_offset:42837*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42837*0 + 3*455*FLEN/8, x4, x1, x2)

inst_14280:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391fffe000000000; valaddr_reg:x3; val_offset:42840*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42840*0 + 3*456*FLEN/8, x4, x1, x2)

inst_14281:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391ffff000000000; valaddr_reg:x3; val_offset:42843*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42843*0 + 3*457*FLEN/8, x4, x1, x2)

inst_14282:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391ffff800000000; valaddr_reg:x3; val_offset:42846*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42846*0 + 3*458*FLEN/8, x4, x1, x2)

inst_14283:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391ffffc00000000; valaddr_reg:x3; val_offset:42849*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42849*0 + 3*459*FLEN/8, x4, x1, x2)

inst_14284:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391ffffe00000000; valaddr_reg:x3; val_offset:42852*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42852*0 + 3*460*FLEN/8, x4, x1, x2)

inst_14285:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391fffff00000000; valaddr_reg:x3; val_offset:42855*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42855*0 + 3*461*FLEN/8, x4, x1, x2)

inst_14286:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391fffff80000000; valaddr_reg:x3; val_offset:42858*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42858*0 + 3*462*FLEN/8, x4, x1, x2)

inst_14287:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391fffffc0000000; valaddr_reg:x3; val_offset:42861*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42861*0 + 3*463*FLEN/8, x4, x1, x2)

inst_14288:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391fffffe0000000; valaddr_reg:x3; val_offset:42864*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42864*0 + 3*464*FLEN/8, x4, x1, x2)

inst_14289:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391ffffff0000000; valaddr_reg:x3; val_offset:42867*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42867*0 + 3*465*FLEN/8, x4, x1, x2)

inst_14290:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391ffffff8000000; valaddr_reg:x3; val_offset:42870*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42870*0 + 3*466*FLEN/8, x4, x1, x2)

inst_14291:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391ffffffc000000; valaddr_reg:x3; val_offset:42873*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42873*0 + 3*467*FLEN/8, x4, x1, x2)

inst_14292:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391ffffffe000000; valaddr_reg:x3; val_offset:42876*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42876*0 + 3*468*FLEN/8, x4, x1, x2)

inst_14293:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391fffffff000000; valaddr_reg:x3; val_offset:42879*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42879*0 + 3*469*FLEN/8, x4, x1, x2)

inst_14294:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391fffffff800000; valaddr_reg:x3; val_offset:42882*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42882*0 + 3*470*FLEN/8, x4, x1, x2)

inst_14295:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391fffffffc00000; valaddr_reg:x3; val_offset:42885*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42885*0 + 3*471*FLEN/8, x4, x1, x2)

inst_14296:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391fffffffe00000; valaddr_reg:x3; val_offset:42888*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42888*0 + 3*472*FLEN/8, x4, x1, x2)

inst_14297:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391ffffffff00000; valaddr_reg:x3; val_offset:42891*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42891*0 + 3*473*FLEN/8, x4, x1, x2)

inst_14298:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391ffffffff80000; valaddr_reg:x3; val_offset:42894*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42894*0 + 3*474*FLEN/8, x4, x1, x2)

inst_14299:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391ffffffffc0000; valaddr_reg:x3; val_offset:42897*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42897*0 + 3*475*FLEN/8, x4, x1, x2)

inst_14300:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391ffffffffe0000; valaddr_reg:x3; val_offset:42900*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42900*0 + 3*476*FLEN/8, x4, x1, x2)

inst_14301:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391fffffffff0000; valaddr_reg:x3; val_offset:42903*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42903*0 + 3*477*FLEN/8, x4, x1, x2)

inst_14302:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391fffffffff8000; valaddr_reg:x3; val_offset:42906*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42906*0 + 3*478*FLEN/8, x4, x1, x2)

inst_14303:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391fffffffffc000; valaddr_reg:x3; val_offset:42909*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42909*0 + 3*479*FLEN/8, x4, x1, x2)

inst_14304:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391fffffffffe000; valaddr_reg:x3; val_offset:42912*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42912*0 + 3*480*FLEN/8, x4, x1, x2)

inst_14305:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391ffffffffff000; valaddr_reg:x3; val_offset:42915*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42915*0 + 3*481*FLEN/8, x4, x1, x2)

inst_14306:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391ffffffffff800; valaddr_reg:x3; val_offset:42918*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42918*0 + 3*482*FLEN/8, x4, x1, x2)

inst_14307:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391ffffffffffc00; valaddr_reg:x3; val_offset:42921*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42921*0 + 3*483*FLEN/8, x4, x1, x2)

inst_14308:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391ffffffffffe00; valaddr_reg:x3; val_offset:42924*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42924*0 + 3*484*FLEN/8, x4, x1, x2)

inst_14309:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391fffffffffff00; valaddr_reg:x3; val_offset:42927*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42927*0 + 3*485*FLEN/8, x4, x1, x2)

inst_14310:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391fffffffffff80; valaddr_reg:x3; val_offset:42930*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42930*0 + 3*486*FLEN/8, x4, x1, x2)

inst_14311:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391fffffffffffc0; valaddr_reg:x3; val_offset:42933*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42933*0 + 3*487*FLEN/8, x4, x1, x2)

inst_14312:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391fffffffffffe0; valaddr_reg:x3; val_offset:42936*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42936*0 + 3*488*FLEN/8, x4, x1, x2)

inst_14313:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391ffffffffffff0; valaddr_reg:x3; val_offset:42939*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42939*0 + 3*489*FLEN/8, x4, x1, x2)

inst_14314:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391ffffffffffff8; valaddr_reg:x3; val_offset:42942*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42942*0 + 3*490*FLEN/8, x4, x1, x2)

inst_14315:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391ffffffffffffc; valaddr_reg:x3; val_offset:42945*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42945*0 + 3*491*FLEN/8, x4, x1, x2)

inst_14316:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391ffffffffffffe; valaddr_reg:x3; val_offset:42948*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42948*0 + 3*492*FLEN/8, x4, x1, x2)

inst_14317:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x391 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x391fffffffffffff; valaddr_reg:x3; val_offset:42951*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42951*0 + 3*493*FLEN/8, x4, x1, x2)

inst_14318:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:42954*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42954*0 + 3*494*FLEN/8, x4, x1, x2)

inst_14319:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:42957*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42957*0 + 3*495*FLEN/8, x4, x1, x2)

inst_14320:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:42960*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42960*0 + 3*496*FLEN/8, x4, x1, x2)

inst_14321:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:42963*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42963*0 + 3*497*FLEN/8, x4, x1, x2)

inst_14322:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:42966*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42966*0 + 3*498*FLEN/8, x4, x1, x2)

inst_14323:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:42969*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42969*0 + 3*499*FLEN/8, x4, x1, x2)

inst_14324:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:42972*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42972*0 + 3*500*FLEN/8, x4, x1, x2)

inst_14325:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:42975*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42975*0 + 3*501*FLEN/8, x4, x1, x2)

inst_14326:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:42978*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42978*0 + 3*502*FLEN/8, x4, x1, x2)

inst_14327:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:42981*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42981*0 + 3*503*FLEN/8, x4, x1, x2)

inst_14328:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:42984*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42984*0 + 3*504*FLEN/8, x4, x1, x2)

inst_14329:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:42987*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42987*0 + 3*505*FLEN/8, x4, x1, x2)

inst_14330:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:42990*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42990*0 + 3*506*FLEN/8, x4, x1, x2)

inst_14331:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:42993*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42993*0 + 3*507*FLEN/8, x4, x1, x2)

inst_14332:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:42996*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42996*0 + 3*508*FLEN/8, x4, x1, x2)

inst_14333:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:42999*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42999*0 + 3*509*FLEN/8, x4, x1, x2)

inst_14334:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:43002*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43002*0 + 3*510*FLEN/8, x4, x1, x2)

inst_14335:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:43005*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43005*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_14336:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:43008*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43008*0 + 3*512*FLEN/8, x4, x1, x2)

inst_14337:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:43011*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43011*0 + 3*513*FLEN/8, x4, x1, x2)

inst_14338:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:43014*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43014*0 + 3*514*FLEN/8, x4, x1, x2)

inst_14339:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe01a93318ea3f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x1101f3a46b268 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e01a93318ea3f; op2val:0x2061101f3a46b268;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:43017*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43017*0 + 3*515*FLEN/8, x4, x1, x2)

inst_14340:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:43020*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43020*0 + 3*516*FLEN/8, x4, x1, x2)

inst_14341:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:43023*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43023*0 + 3*517*FLEN/8, x4, x1, x2)

inst_14342:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:43026*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43026*0 + 3*518*FLEN/8, x4, x1, x2)

inst_14343:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:43029*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43029*0 + 3*519*FLEN/8, x4, x1, x2)

inst_14344:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:43032*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43032*0 + 3*520*FLEN/8, x4, x1, x2)

inst_14345:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:43035*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43035*0 + 3*521*FLEN/8, x4, x1, x2)

inst_14346:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:43038*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43038*0 + 3*522*FLEN/8, x4, x1, x2)

inst_14347:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:43041*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43041*0 + 3*523*FLEN/8, x4, x1, x2)

inst_14348:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:43044*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43044*0 + 3*524*FLEN/8, x4, x1, x2)

inst_14349:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:43047*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43047*0 + 3*525*FLEN/8, x4, x1, x2)

inst_14350:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:43050*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43050*0 + 3*526*FLEN/8, x4, x1, x2)

inst_14351:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:43053*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43053*0 + 3*527*FLEN/8, x4, x1, x2)

inst_14352:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:43056*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43056*0 + 3*528*FLEN/8, x4, x1, x2)

inst_14353:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:43059*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43059*0 + 3*529*FLEN/8, x4, x1, x2)

inst_14354:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:43062*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43062*0 + 3*530*FLEN/8, x4, x1, x2)

inst_14355:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:43065*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43065*0 + 3*531*FLEN/8, x4, x1, x2)

inst_14356:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:43068*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43068*0 + 3*532*FLEN/8, x4, x1, x2)

inst_14357:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:43071*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43071*0 + 3*533*FLEN/8, x4, x1, x2)

inst_14358:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:43074*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43074*0 + 3*534*FLEN/8, x4, x1, x2)

inst_14359:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:43077*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43077*0 + 3*535*FLEN/8, x4, x1, x2)

inst_14360:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:43080*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43080*0 + 3*536*FLEN/8, x4, x1, x2)

inst_14361:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:43083*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43083*0 + 3*537*FLEN/8, x4, x1, x2)

inst_14362:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x8100000000000000; valaddr_reg:x3; val_offset:43086*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43086*0 + 3*538*FLEN/8, x4, x1, x2)

inst_14363:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x8100000000000001; valaddr_reg:x3; val_offset:43089*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43089*0 + 3*539*FLEN/8, x4, x1, x2)

inst_14364:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x8100000000000003; valaddr_reg:x3; val_offset:43092*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43092*0 + 3*540*FLEN/8, x4, x1, x2)

inst_14365:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x8100000000000007; valaddr_reg:x3; val_offset:43095*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43095*0 + 3*541*FLEN/8, x4, x1, x2)

inst_14366:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810000000000000f; valaddr_reg:x3; val_offset:43098*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43098*0 + 3*542*FLEN/8, x4, x1, x2)

inst_14367:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810000000000001f; valaddr_reg:x3; val_offset:43101*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43101*0 + 3*543*FLEN/8, x4, x1, x2)

inst_14368:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810000000000003f; valaddr_reg:x3; val_offset:43104*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43104*0 + 3*544*FLEN/8, x4, x1, x2)

inst_14369:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810000000000007f; valaddr_reg:x3; val_offset:43107*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43107*0 + 3*545*FLEN/8, x4, x1, x2)

inst_14370:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x81000000000000ff; valaddr_reg:x3; val_offset:43110*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43110*0 + 3*546*FLEN/8, x4, x1, x2)

inst_14371:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x81000000000001ff; valaddr_reg:x3; val_offset:43113*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43113*0 + 3*547*FLEN/8, x4, x1, x2)

inst_14372:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x81000000000003ff; valaddr_reg:x3; val_offset:43116*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43116*0 + 3*548*FLEN/8, x4, x1, x2)

inst_14373:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x81000000000007ff; valaddr_reg:x3; val_offset:43119*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43119*0 + 3*549*FLEN/8, x4, x1, x2)

inst_14374:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x8100000000000fff; valaddr_reg:x3; val_offset:43122*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43122*0 + 3*550*FLEN/8, x4, x1, x2)

inst_14375:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x8100000000001fff; valaddr_reg:x3; val_offset:43125*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43125*0 + 3*551*FLEN/8, x4, x1, x2)

inst_14376:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x8100000000003fff; valaddr_reg:x3; val_offset:43128*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43128*0 + 3*552*FLEN/8, x4, x1, x2)

inst_14377:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x8100000000007fff; valaddr_reg:x3; val_offset:43131*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43131*0 + 3*553*FLEN/8, x4, x1, x2)

inst_14378:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810000000000ffff; valaddr_reg:x3; val_offset:43134*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43134*0 + 3*554*FLEN/8, x4, x1, x2)

inst_14379:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810000000001ffff; valaddr_reg:x3; val_offset:43137*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43137*0 + 3*555*FLEN/8, x4, x1, x2)

inst_14380:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810000000003ffff; valaddr_reg:x3; val_offset:43140*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43140*0 + 3*556*FLEN/8, x4, x1, x2)

inst_14381:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810000000007ffff; valaddr_reg:x3; val_offset:43143*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43143*0 + 3*557*FLEN/8, x4, x1, x2)

inst_14382:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x81000000000fffff; valaddr_reg:x3; val_offset:43146*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43146*0 + 3*558*FLEN/8, x4, x1, x2)

inst_14383:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x81000000001fffff; valaddr_reg:x3; val_offset:43149*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43149*0 + 3*559*FLEN/8, x4, x1, x2)

inst_14384:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x81000000003fffff; valaddr_reg:x3; val_offset:43152*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43152*0 + 3*560*FLEN/8, x4, x1, x2)

inst_14385:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x81000000007fffff; valaddr_reg:x3; val_offset:43155*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43155*0 + 3*561*FLEN/8, x4, x1, x2)

inst_14386:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x8100000000ffffff; valaddr_reg:x3; val_offset:43158*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43158*0 + 3*562*FLEN/8, x4, x1, x2)

inst_14387:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x8100000001ffffff; valaddr_reg:x3; val_offset:43161*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43161*0 + 3*563*FLEN/8, x4, x1, x2)

inst_14388:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x8100000003ffffff; valaddr_reg:x3; val_offset:43164*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43164*0 + 3*564*FLEN/8, x4, x1, x2)

inst_14389:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x8100000007ffffff; valaddr_reg:x3; val_offset:43167*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43167*0 + 3*565*FLEN/8, x4, x1, x2)

inst_14390:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810000000fffffff; valaddr_reg:x3; val_offset:43170*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43170*0 + 3*566*FLEN/8, x4, x1, x2)

inst_14391:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810000001fffffff; valaddr_reg:x3; val_offset:43173*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43173*0 + 3*567*FLEN/8, x4, x1, x2)

inst_14392:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810000003fffffff; valaddr_reg:x3; val_offset:43176*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43176*0 + 3*568*FLEN/8, x4, x1, x2)

inst_14393:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810000007fffffff; valaddr_reg:x3; val_offset:43179*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43179*0 + 3*569*FLEN/8, x4, x1, x2)

inst_14394:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x81000000ffffffff; valaddr_reg:x3; val_offset:43182*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43182*0 + 3*570*FLEN/8, x4, x1, x2)

inst_14395:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x81000001ffffffff; valaddr_reg:x3; val_offset:43185*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43185*0 + 3*571*FLEN/8, x4, x1, x2)

inst_14396:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x81000003ffffffff; valaddr_reg:x3; val_offset:43188*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43188*0 + 3*572*FLEN/8, x4, x1, x2)

inst_14397:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x81000007ffffffff; valaddr_reg:x3; val_offset:43191*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43191*0 + 3*573*FLEN/8, x4, x1, x2)

inst_14398:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x8100000fffffffff; valaddr_reg:x3; val_offset:43194*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43194*0 + 3*574*FLEN/8, x4, x1, x2)

inst_14399:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x8100001fffffffff; valaddr_reg:x3; val_offset:43197*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43197*0 + 3*575*FLEN/8, x4, x1, x2)

inst_14400:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x8100003fffffffff; valaddr_reg:x3; val_offset:43200*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43200*0 + 3*576*FLEN/8, x4, x1, x2)

inst_14401:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x8100007fffffffff; valaddr_reg:x3; val_offset:43203*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43203*0 + 3*577*FLEN/8, x4, x1, x2)

inst_14402:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810000ffffffffff; valaddr_reg:x3; val_offset:43206*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43206*0 + 3*578*FLEN/8, x4, x1, x2)

inst_14403:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810001ffffffffff; valaddr_reg:x3; val_offset:43209*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43209*0 + 3*579*FLEN/8, x4, x1, x2)

inst_14404:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810003ffffffffff; valaddr_reg:x3; val_offset:43212*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43212*0 + 3*580*FLEN/8, x4, x1, x2)

inst_14405:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810007ffffffffff; valaddr_reg:x3; val_offset:43215*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43215*0 + 3*581*FLEN/8, x4, x1, x2)

inst_14406:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x81000fffffffffff; valaddr_reg:x3; val_offset:43218*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43218*0 + 3*582*FLEN/8, x4, x1, x2)

inst_14407:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x81001fffffffffff; valaddr_reg:x3; val_offset:43221*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43221*0 + 3*583*FLEN/8, x4, x1, x2)

inst_14408:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x81003fffffffffff; valaddr_reg:x3; val_offset:43224*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43224*0 + 3*584*FLEN/8, x4, x1, x2)

inst_14409:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x81007fffffffffff; valaddr_reg:x3; val_offset:43227*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43227*0 + 3*585*FLEN/8, x4, x1, x2)

inst_14410:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x8100ffffffffffff; valaddr_reg:x3; val_offset:43230*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43230*0 + 3*586*FLEN/8, x4, x1, x2)

inst_14411:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x8101ffffffffffff; valaddr_reg:x3; val_offset:43233*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43233*0 + 3*587*FLEN/8, x4, x1, x2)

inst_14412:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x8103ffffffffffff; valaddr_reg:x3; val_offset:43236*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43236*0 + 3*588*FLEN/8, x4, x1, x2)

inst_14413:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x8107ffffffffffff; valaddr_reg:x3; val_offset:43239*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43239*0 + 3*589*FLEN/8, x4, x1, x2)

inst_14414:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x8108000000000000; valaddr_reg:x3; val_offset:43242*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43242*0 + 3*590*FLEN/8, x4, x1, x2)

inst_14415:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810c000000000000; valaddr_reg:x3; val_offset:43245*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43245*0 + 3*591*FLEN/8, x4, x1, x2)

inst_14416:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810e000000000000; valaddr_reg:x3; val_offset:43248*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43248*0 + 3*592*FLEN/8, x4, x1, x2)

inst_14417:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810f000000000000; valaddr_reg:x3; val_offset:43251*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43251*0 + 3*593*FLEN/8, x4, x1, x2)

inst_14418:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810f800000000000; valaddr_reg:x3; val_offset:43254*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43254*0 + 3*594*FLEN/8, x4, x1, x2)

inst_14419:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810fc00000000000; valaddr_reg:x3; val_offset:43257*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43257*0 + 3*595*FLEN/8, x4, x1, x2)

inst_14420:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810fe00000000000; valaddr_reg:x3; val_offset:43260*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43260*0 + 3*596*FLEN/8, x4, x1, x2)

inst_14421:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810ff00000000000; valaddr_reg:x3; val_offset:43263*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43263*0 + 3*597*FLEN/8, x4, x1, x2)

inst_14422:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810ff80000000000; valaddr_reg:x3; val_offset:43266*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43266*0 + 3*598*FLEN/8, x4, x1, x2)

inst_14423:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810ffc0000000000; valaddr_reg:x3; val_offset:43269*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43269*0 + 3*599*FLEN/8, x4, x1, x2)

inst_14424:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810ffe0000000000; valaddr_reg:x3; val_offset:43272*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43272*0 + 3*600*FLEN/8, x4, x1, x2)

inst_14425:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810fff0000000000; valaddr_reg:x3; val_offset:43275*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43275*0 + 3*601*FLEN/8, x4, x1, x2)

inst_14426:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810fff8000000000; valaddr_reg:x3; val_offset:43278*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43278*0 + 3*602*FLEN/8, x4, x1, x2)

inst_14427:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810fffc000000000; valaddr_reg:x3; val_offset:43281*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43281*0 + 3*603*FLEN/8, x4, x1, x2)

inst_14428:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810fffe000000000; valaddr_reg:x3; val_offset:43284*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43284*0 + 3*604*FLEN/8, x4, x1, x2)

inst_14429:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810ffff000000000; valaddr_reg:x3; val_offset:43287*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43287*0 + 3*605*FLEN/8, x4, x1, x2)

inst_14430:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810ffff800000000; valaddr_reg:x3; val_offset:43290*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43290*0 + 3*606*FLEN/8, x4, x1, x2)

inst_14431:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810ffffc00000000; valaddr_reg:x3; val_offset:43293*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43293*0 + 3*607*FLEN/8, x4, x1, x2)

inst_14432:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810ffffe00000000; valaddr_reg:x3; val_offset:43296*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43296*0 + 3*608*FLEN/8, x4, x1, x2)

inst_14433:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810fffff00000000; valaddr_reg:x3; val_offset:43299*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43299*0 + 3*609*FLEN/8, x4, x1, x2)

inst_14434:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810fffff80000000; valaddr_reg:x3; val_offset:43302*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43302*0 + 3*610*FLEN/8, x4, x1, x2)

inst_14435:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810fffffc0000000; valaddr_reg:x3; val_offset:43305*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43305*0 + 3*611*FLEN/8, x4, x1, x2)

inst_14436:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810fffffe0000000; valaddr_reg:x3; val_offset:43308*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43308*0 + 3*612*FLEN/8, x4, x1, x2)

inst_14437:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810ffffff0000000; valaddr_reg:x3; val_offset:43311*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43311*0 + 3*613*FLEN/8, x4, x1, x2)

inst_14438:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810ffffff8000000; valaddr_reg:x3; val_offset:43314*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43314*0 + 3*614*FLEN/8, x4, x1, x2)

inst_14439:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810ffffffc000000; valaddr_reg:x3; val_offset:43317*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43317*0 + 3*615*FLEN/8, x4, x1, x2)

inst_14440:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810ffffffe000000; valaddr_reg:x3; val_offset:43320*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43320*0 + 3*616*FLEN/8, x4, x1, x2)

inst_14441:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810fffffff000000; valaddr_reg:x3; val_offset:43323*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43323*0 + 3*617*FLEN/8, x4, x1, x2)

inst_14442:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810fffffff800000; valaddr_reg:x3; val_offset:43326*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43326*0 + 3*618*FLEN/8, x4, x1, x2)

inst_14443:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810fffffffc00000; valaddr_reg:x3; val_offset:43329*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43329*0 + 3*619*FLEN/8, x4, x1, x2)

inst_14444:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810fffffffe00000; valaddr_reg:x3; val_offset:43332*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43332*0 + 3*620*FLEN/8, x4, x1, x2)

inst_14445:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810ffffffff00000; valaddr_reg:x3; val_offset:43335*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43335*0 + 3*621*FLEN/8, x4, x1, x2)

inst_14446:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810ffffffff80000; valaddr_reg:x3; val_offset:43338*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43338*0 + 3*622*FLEN/8, x4, x1, x2)

inst_14447:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810ffffffffc0000; valaddr_reg:x3; val_offset:43341*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43341*0 + 3*623*FLEN/8, x4, x1, x2)

inst_14448:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810ffffffffe0000; valaddr_reg:x3; val_offset:43344*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43344*0 + 3*624*FLEN/8, x4, x1, x2)

inst_14449:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810fffffffff0000; valaddr_reg:x3; val_offset:43347*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43347*0 + 3*625*FLEN/8, x4, x1, x2)

inst_14450:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810fffffffff8000; valaddr_reg:x3; val_offset:43350*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43350*0 + 3*626*FLEN/8, x4, x1, x2)

inst_14451:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810fffffffffc000; valaddr_reg:x3; val_offset:43353*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43353*0 + 3*627*FLEN/8, x4, x1, x2)

inst_14452:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810fffffffffe000; valaddr_reg:x3; val_offset:43356*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43356*0 + 3*628*FLEN/8, x4, x1, x2)

inst_14453:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810ffffffffff000; valaddr_reg:x3; val_offset:43359*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43359*0 + 3*629*FLEN/8, x4, x1, x2)

inst_14454:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810ffffffffff800; valaddr_reg:x3; val_offset:43362*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43362*0 + 3*630*FLEN/8, x4, x1, x2)

inst_14455:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810ffffffffffc00; valaddr_reg:x3; val_offset:43365*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43365*0 + 3*631*FLEN/8, x4, x1, x2)

inst_14456:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810ffffffffffe00; valaddr_reg:x3; val_offset:43368*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43368*0 + 3*632*FLEN/8, x4, x1, x2)

inst_14457:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810fffffffffff00; valaddr_reg:x3; val_offset:43371*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43371*0 + 3*633*FLEN/8, x4, x1, x2)

inst_14458:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810fffffffffff80; valaddr_reg:x3; val_offset:43374*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43374*0 + 3*634*FLEN/8, x4, x1, x2)

inst_14459:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810fffffffffffc0; valaddr_reg:x3; val_offset:43377*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43377*0 + 3*635*FLEN/8, x4, x1, x2)

inst_14460:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810fffffffffffe0; valaddr_reg:x3; val_offset:43380*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43380*0 + 3*636*FLEN/8, x4, x1, x2)

inst_14461:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810ffffffffffff0; valaddr_reg:x3; val_offset:43383*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43383*0 + 3*637*FLEN/8, x4, x1, x2)

inst_14462:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810ffffffffffff8; valaddr_reg:x3; val_offset:43386*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43386*0 + 3*638*FLEN/8, x4, x1, x2)

inst_14463:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810ffffffffffffc; valaddr_reg:x3; val_offset:43389*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43389*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_14464:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810ffffffffffffe; valaddr_reg:x3; val_offset:43392*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43392*0 + 3*640*FLEN/8, x4, x1, x2)

inst_14465:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe3d59c2bd5d37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e3d59c2bd5d37; op2val:0x8000;
op3val:0x810fffffffffffff; valaddr_reg:x3; val_offset:43395*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43395*0 + 3*641*FLEN/8, x4, x1, x2)

inst_14466:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:43398*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43398*0 + 3*642*FLEN/8, x4, x1, x2)

inst_14467:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:43401*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43401*0 + 3*643*FLEN/8, x4, x1, x2)

inst_14468:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:43404*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43404*0 + 3*644*FLEN/8, x4, x1, x2)

inst_14469:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:43407*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43407*0 + 3*645*FLEN/8, x4, x1, x2)

inst_14470:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:43410*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43410*0 + 3*646*FLEN/8, x4, x1, x2)

inst_14471:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:43413*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43413*0 + 3*647*FLEN/8, x4, x1, x2)

inst_14472:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:43416*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43416*0 + 3*648*FLEN/8, x4, x1, x2)

inst_14473:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:43419*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43419*0 + 3*649*FLEN/8, x4, x1, x2)

inst_14474:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:43422*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43422*0 + 3*650*FLEN/8, x4, x1, x2)

inst_14475:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:43425*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43425*0 + 3*651*FLEN/8, x4, x1, x2)

inst_14476:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:43428*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43428*0 + 3*652*FLEN/8, x4, x1, x2)

inst_14477:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:43431*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43431*0 + 3*653*FLEN/8, x4, x1, x2)

inst_14478:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:43434*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43434*0 + 3*654*FLEN/8, x4, x1, x2)

inst_14479:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:43437*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43437*0 + 3*655*FLEN/8, x4, x1, x2)

inst_14480:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:43440*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43440*0 + 3*656*FLEN/8, x4, x1, x2)

inst_14481:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:43443*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43443*0 + 3*657*FLEN/8, x4, x1, x2)

inst_14482:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:43446*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43446*0 + 3*658*FLEN/8, x4, x1, x2)

inst_14483:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:43449*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43449*0 + 3*659*FLEN/8, x4, x1, x2)

inst_14484:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:43452*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43452*0 + 3*660*FLEN/8, x4, x1, x2)

inst_14485:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:43455*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43455*0 + 3*661*FLEN/8, x4, x1, x2)

inst_14486:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:43458*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43458*0 + 3*662*FLEN/8, x4, x1, x2)

inst_14487:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:43461*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43461*0 + 3*663*FLEN/8, x4, x1, x2)

inst_14488:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83a0000000000000; valaddr_reg:x3; val_offset:43464*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43464*0 + 3*664*FLEN/8, x4, x1, x2)

inst_14489:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83a0000000000001; valaddr_reg:x3; val_offset:43467*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43467*0 + 3*665*FLEN/8, x4, x1, x2)

inst_14490:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83a0000000000003; valaddr_reg:x3; val_offset:43470*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43470*0 + 3*666*FLEN/8, x4, x1, x2)

inst_14491:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83a0000000000007; valaddr_reg:x3; val_offset:43473*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43473*0 + 3*667*FLEN/8, x4, x1, x2)

inst_14492:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83a000000000000f; valaddr_reg:x3; val_offset:43476*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43476*0 + 3*668*FLEN/8, x4, x1, x2)

inst_14493:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83a000000000001f; valaddr_reg:x3; val_offset:43479*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43479*0 + 3*669*FLEN/8, x4, x1, x2)

inst_14494:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83a000000000003f; valaddr_reg:x3; val_offset:43482*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43482*0 + 3*670*FLEN/8, x4, x1, x2)

inst_14495:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83a000000000007f; valaddr_reg:x3; val_offset:43485*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43485*0 + 3*671*FLEN/8, x4, x1, x2)

inst_14496:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83a00000000000ff; valaddr_reg:x3; val_offset:43488*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43488*0 + 3*672*FLEN/8, x4, x1, x2)

inst_14497:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83a00000000001ff; valaddr_reg:x3; val_offset:43491*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43491*0 + 3*673*FLEN/8, x4, x1, x2)

inst_14498:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83a00000000003ff; valaddr_reg:x3; val_offset:43494*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43494*0 + 3*674*FLEN/8, x4, x1, x2)

inst_14499:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83a00000000007ff; valaddr_reg:x3; val_offset:43497*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43497*0 + 3*675*FLEN/8, x4, x1, x2)

inst_14500:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83a0000000000fff; valaddr_reg:x3; val_offset:43500*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43500*0 + 3*676*FLEN/8, x4, x1, x2)

inst_14501:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83a0000000001fff; valaddr_reg:x3; val_offset:43503*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43503*0 + 3*677*FLEN/8, x4, x1, x2)

inst_14502:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83a0000000003fff; valaddr_reg:x3; val_offset:43506*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43506*0 + 3*678*FLEN/8, x4, x1, x2)

inst_14503:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83a0000000007fff; valaddr_reg:x3; val_offset:43509*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43509*0 + 3*679*FLEN/8, x4, x1, x2)

inst_14504:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83a000000000ffff; valaddr_reg:x3; val_offset:43512*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43512*0 + 3*680*FLEN/8, x4, x1, x2)

inst_14505:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83a000000001ffff; valaddr_reg:x3; val_offset:43515*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43515*0 + 3*681*FLEN/8, x4, x1, x2)

inst_14506:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83a000000003ffff; valaddr_reg:x3; val_offset:43518*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43518*0 + 3*682*FLEN/8, x4, x1, x2)

inst_14507:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83a000000007ffff; valaddr_reg:x3; val_offset:43521*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43521*0 + 3*683*FLEN/8, x4, x1, x2)

inst_14508:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83a00000000fffff; valaddr_reg:x3; val_offset:43524*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43524*0 + 3*684*FLEN/8, x4, x1, x2)

inst_14509:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83a00000001fffff; valaddr_reg:x3; val_offset:43527*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43527*0 + 3*685*FLEN/8, x4, x1, x2)

inst_14510:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83a00000003fffff; valaddr_reg:x3; val_offset:43530*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43530*0 + 3*686*FLEN/8, x4, x1, x2)

inst_14511:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83a00000007fffff; valaddr_reg:x3; val_offset:43533*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43533*0 + 3*687*FLEN/8, x4, x1, x2)

inst_14512:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83a0000000ffffff; valaddr_reg:x3; val_offset:43536*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43536*0 + 3*688*FLEN/8, x4, x1, x2)

inst_14513:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83a0000001ffffff; valaddr_reg:x3; val_offset:43539*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43539*0 + 3*689*FLEN/8, x4, x1, x2)

inst_14514:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83a0000003ffffff; valaddr_reg:x3; val_offset:43542*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43542*0 + 3*690*FLEN/8, x4, x1, x2)

inst_14515:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83a0000007ffffff; valaddr_reg:x3; val_offset:43545*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43545*0 + 3*691*FLEN/8, x4, x1, x2)

inst_14516:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83a000000fffffff; valaddr_reg:x3; val_offset:43548*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43548*0 + 3*692*FLEN/8, x4, x1, x2)

inst_14517:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83a000001fffffff; valaddr_reg:x3; val_offset:43551*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43551*0 + 3*693*FLEN/8, x4, x1, x2)

inst_14518:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83a000003fffffff; valaddr_reg:x3; val_offset:43554*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43554*0 + 3*694*FLEN/8, x4, x1, x2)

inst_14519:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83a000007fffffff; valaddr_reg:x3; val_offset:43557*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43557*0 + 3*695*FLEN/8, x4, x1, x2)

inst_14520:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83a00000ffffffff; valaddr_reg:x3; val_offset:43560*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43560*0 + 3*696*FLEN/8, x4, x1, x2)

inst_14521:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83a00001ffffffff; valaddr_reg:x3; val_offset:43563*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43563*0 + 3*697*FLEN/8, x4, x1, x2)

inst_14522:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83a00003ffffffff; valaddr_reg:x3; val_offset:43566*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43566*0 + 3*698*FLEN/8, x4, x1, x2)

inst_14523:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83a00007ffffffff; valaddr_reg:x3; val_offset:43569*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43569*0 + 3*699*FLEN/8, x4, x1, x2)

inst_14524:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83a0000fffffffff; valaddr_reg:x3; val_offset:43572*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43572*0 + 3*700*FLEN/8, x4, x1, x2)

inst_14525:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83a0001fffffffff; valaddr_reg:x3; val_offset:43575*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43575*0 + 3*701*FLEN/8, x4, x1, x2)

inst_14526:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83a0003fffffffff; valaddr_reg:x3; val_offset:43578*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43578*0 + 3*702*FLEN/8, x4, x1, x2)

inst_14527:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83a0007fffffffff; valaddr_reg:x3; val_offset:43581*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43581*0 + 3*703*FLEN/8, x4, x1, x2)

inst_14528:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83a000ffffffffff; valaddr_reg:x3; val_offset:43584*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43584*0 + 3*704*FLEN/8, x4, x1, x2)

inst_14529:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83a001ffffffffff; valaddr_reg:x3; val_offset:43587*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43587*0 + 3*705*FLEN/8, x4, x1, x2)

inst_14530:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83a003ffffffffff; valaddr_reg:x3; val_offset:43590*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43590*0 + 3*706*FLEN/8, x4, x1, x2)

inst_14531:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83a007ffffffffff; valaddr_reg:x3; val_offset:43593*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43593*0 + 3*707*FLEN/8, x4, x1, x2)

inst_14532:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83a00fffffffffff; valaddr_reg:x3; val_offset:43596*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43596*0 + 3*708*FLEN/8, x4, x1, x2)

inst_14533:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83a01fffffffffff; valaddr_reg:x3; val_offset:43599*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43599*0 + 3*709*FLEN/8, x4, x1, x2)

inst_14534:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83a03fffffffffff; valaddr_reg:x3; val_offset:43602*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43602*0 + 3*710*FLEN/8, x4, x1, x2)

inst_14535:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83a07fffffffffff; valaddr_reg:x3; val_offset:43605*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43605*0 + 3*711*FLEN/8, x4, x1, x2)

inst_14536:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83a0ffffffffffff; valaddr_reg:x3; val_offset:43608*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43608*0 + 3*712*FLEN/8, x4, x1, x2)

inst_14537:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83a1ffffffffffff; valaddr_reg:x3; val_offset:43611*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43611*0 + 3*713*FLEN/8, x4, x1, x2)

inst_14538:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83a3ffffffffffff; valaddr_reg:x3; val_offset:43614*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43614*0 + 3*714*FLEN/8, x4, x1, x2)

inst_14539:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83a7ffffffffffff; valaddr_reg:x3; val_offset:43617*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43617*0 + 3*715*FLEN/8, x4, x1, x2)

inst_14540:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83a8000000000000; valaddr_reg:x3; val_offset:43620*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43620*0 + 3*716*FLEN/8, x4, x1, x2)

inst_14541:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83ac000000000000; valaddr_reg:x3; val_offset:43623*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43623*0 + 3*717*FLEN/8, x4, x1, x2)

inst_14542:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83ae000000000000; valaddr_reg:x3; val_offset:43626*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43626*0 + 3*718*FLEN/8, x4, x1, x2)

inst_14543:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83af000000000000; valaddr_reg:x3; val_offset:43629*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43629*0 + 3*719*FLEN/8, x4, x1, x2)

inst_14544:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83af800000000000; valaddr_reg:x3; val_offset:43632*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43632*0 + 3*720*FLEN/8, x4, x1, x2)

inst_14545:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83afc00000000000; valaddr_reg:x3; val_offset:43635*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43635*0 + 3*721*FLEN/8, x4, x1, x2)

inst_14546:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83afe00000000000; valaddr_reg:x3; val_offset:43638*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43638*0 + 3*722*FLEN/8, x4, x1, x2)

inst_14547:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83aff00000000000; valaddr_reg:x3; val_offset:43641*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43641*0 + 3*723*FLEN/8, x4, x1, x2)

inst_14548:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83aff80000000000; valaddr_reg:x3; val_offset:43644*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43644*0 + 3*724*FLEN/8, x4, x1, x2)

inst_14549:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83affc0000000000; valaddr_reg:x3; val_offset:43647*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43647*0 + 3*725*FLEN/8, x4, x1, x2)

inst_14550:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83affe0000000000; valaddr_reg:x3; val_offset:43650*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43650*0 + 3*726*FLEN/8, x4, x1, x2)

inst_14551:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83afff0000000000; valaddr_reg:x3; val_offset:43653*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43653*0 + 3*727*FLEN/8, x4, x1, x2)

inst_14552:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83afff8000000000; valaddr_reg:x3; val_offset:43656*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43656*0 + 3*728*FLEN/8, x4, x1, x2)

inst_14553:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83afffc000000000; valaddr_reg:x3; val_offset:43659*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43659*0 + 3*729*FLEN/8, x4, x1, x2)

inst_14554:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83afffe000000000; valaddr_reg:x3; val_offset:43662*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43662*0 + 3*730*FLEN/8, x4, x1, x2)

inst_14555:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83affff000000000; valaddr_reg:x3; val_offset:43665*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43665*0 + 3*731*FLEN/8, x4, x1, x2)

inst_14556:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83affff800000000; valaddr_reg:x3; val_offset:43668*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43668*0 + 3*732*FLEN/8, x4, x1, x2)

inst_14557:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83affffc00000000; valaddr_reg:x3; val_offset:43671*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43671*0 + 3*733*FLEN/8, x4, x1, x2)

inst_14558:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83affffe00000000; valaddr_reg:x3; val_offset:43674*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43674*0 + 3*734*FLEN/8, x4, x1, x2)

inst_14559:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83afffff00000000; valaddr_reg:x3; val_offset:43677*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43677*0 + 3*735*FLEN/8, x4, x1, x2)

inst_14560:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83afffff80000000; valaddr_reg:x3; val_offset:43680*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43680*0 + 3*736*FLEN/8, x4, x1, x2)

inst_14561:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83afffffc0000000; valaddr_reg:x3; val_offset:43683*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43683*0 + 3*737*FLEN/8, x4, x1, x2)

inst_14562:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83afffffe0000000; valaddr_reg:x3; val_offset:43686*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43686*0 + 3*738*FLEN/8, x4, x1, x2)

inst_14563:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83affffff0000000; valaddr_reg:x3; val_offset:43689*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43689*0 + 3*739*FLEN/8, x4, x1, x2)

inst_14564:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83affffff8000000; valaddr_reg:x3; val_offset:43692*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43692*0 + 3*740*FLEN/8, x4, x1, x2)

inst_14565:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83affffffc000000; valaddr_reg:x3; val_offset:43695*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43695*0 + 3*741*FLEN/8, x4, x1, x2)

inst_14566:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83affffffe000000; valaddr_reg:x3; val_offset:43698*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43698*0 + 3*742*FLEN/8, x4, x1, x2)

inst_14567:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83afffffff000000; valaddr_reg:x3; val_offset:43701*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43701*0 + 3*743*FLEN/8, x4, x1, x2)

inst_14568:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83afffffff800000; valaddr_reg:x3; val_offset:43704*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43704*0 + 3*744*FLEN/8, x4, x1, x2)

inst_14569:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83afffffffc00000; valaddr_reg:x3; val_offset:43707*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43707*0 + 3*745*FLEN/8, x4, x1, x2)

inst_14570:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83afffffffe00000; valaddr_reg:x3; val_offset:43710*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43710*0 + 3*746*FLEN/8, x4, x1, x2)

inst_14571:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83affffffff00000; valaddr_reg:x3; val_offset:43713*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43713*0 + 3*747*FLEN/8, x4, x1, x2)

inst_14572:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83affffffff80000; valaddr_reg:x3; val_offset:43716*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43716*0 + 3*748*FLEN/8, x4, x1, x2)

inst_14573:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83affffffffc0000; valaddr_reg:x3; val_offset:43719*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43719*0 + 3*749*FLEN/8, x4, x1, x2)

inst_14574:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83affffffffe0000; valaddr_reg:x3; val_offset:43722*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43722*0 + 3*750*FLEN/8, x4, x1, x2)

inst_14575:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83afffffffff0000; valaddr_reg:x3; val_offset:43725*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43725*0 + 3*751*FLEN/8, x4, x1, x2)

inst_14576:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83afffffffff8000; valaddr_reg:x3; val_offset:43728*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43728*0 + 3*752*FLEN/8, x4, x1, x2)

inst_14577:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83afffffffffc000; valaddr_reg:x3; val_offset:43731*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43731*0 + 3*753*FLEN/8, x4, x1, x2)

inst_14578:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83afffffffffe000; valaddr_reg:x3; val_offset:43734*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43734*0 + 3*754*FLEN/8, x4, x1, x2)

inst_14579:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83affffffffff000; valaddr_reg:x3; val_offset:43737*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43737*0 + 3*755*FLEN/8, x4, x1, x2)

inst_14580:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83affffffffff800; valaddr_reg:x3; val_offset:43740*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43740*0 + 3*756*FLEN/8, x4, x1, x2)

inst_14581:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83affffffffffc00; valaddr_reg:x3; val_offset:43743*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43743*0 + 3*757*FLEN/8, x4, x1, x2)

inst_14582:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83affffffffffe00; valaddr_reg:x3; val_offset:43746*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43746*0 + 3*758*FLEN/8, x4, x1, x2)

inst_14583:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83afffffffffff00; valaddr_reg:x3; val_offset:43749*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43749*0 + 3*759*FLEN/8, x4, x1, x2)

inst_14584:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83afffffffffff80; valaddr_reg:x3; val_offset:43752*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43752*0 + 3*760*FLEN/8, x4, x1, x2)

inst_14585:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83afffffffffffc0; valaddr_reg:x3; val_offset:43755*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43755*0 + 3*761*FLEN/8, x4, x1, x2)

inst_14586:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83afffffffffffe0; valaddr_reg:x3; val_offset:43758*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43758*0 + 3*762*FLEN/8, x4, x1, x2)

inst_14587:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83affffffffffff0; valaddr_reg:x3; val_offset:43761*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43761*0 + 3*763*FLEN/8, x4, x1, x2)

inst_14588:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83affffffffffff8; valaddr_reg:x3; val_offset:43764*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43764*0 + 3*764*FLEN/8, x4, x1, x2)

inst_14589:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83affffffffffffc; valaddr_reg:x3; val_offset:43767*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43767*0 + 3*765*FLEN/8, x4, x1, x2)

inst_14590:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83affffffffffffe; valaddr_reg:x3; val_offset:43770*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43770*0 + 3*766*FLEN/8, x4, x1, x2)

inst_14591:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe45425f13a7f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e45425f13a7f7; op2val:0x8000;
op3val:0x83afffffffffffff; valaddr_reg:x3; val_offset:43773*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43773*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859040768,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859041792,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042304,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042560,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042688,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042752,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042784,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042800,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042808,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042812,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042814,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042815,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4512606826625236992,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4512606826625236993,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4512606826625236995,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4512606826625236999,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4512606826625237007,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4512606826625237023,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4512606826625237055,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4512606826625237119,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4512606826625237247,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4512606826625237503,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4512606826625238015,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4512606826625239039,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4512606826625241087,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4512606826625245183,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4512606826625253375,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4512606826625269759,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4512606826625302527,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4512606826625368063,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4512606826625499135,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4512606826625761279,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4512606826626285567,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4512606826627334143,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4512606826629431295,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4512606826633625599,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4512606826642014207,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4512606826658791423,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4512606826692345855,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4512606826759454719,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4512606826893672447,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4512606827162107903,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4512606827698978815,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4512606828772720639,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4512606830920204287,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4512606835215171583,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4512606843805106175,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4512606860984975359,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4512606895344713727,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4512606964064190463,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4512607101503143935,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4512607376381050879,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4512607926136864767,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4512609025648492543,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4512611224671748095,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4512615622718259199,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4512624418811281407,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4512642010997325823,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4512677195369414655,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4512747564113592319,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4512888301601947647,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4513169776578658303,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4513732726532079615,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4514858626438922239,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4514858626438922240,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4515984526345764864,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4516547476299186176,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4516828951275896832,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4516969688764252160,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4517040057508429824,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4517075241880518656,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4517092834066563072,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4517101630159585280,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4517106028206096384,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4517108227229351936,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4517109326740979712,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4517109876496793600,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4517110151374700544,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4517110288813654016,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4517110357533130752,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4517110391892869120,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4517110409072738304,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4517110417662672896,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4517110421957640192,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4517110424105123840,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4517110425178865664,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4517110425715736576,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4517110425984172032,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4517110426118389760,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4517110426185498624,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4517110426219053056,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4517110426235830272,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4517110426244218880,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4517110426248413184,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4517110426250510336,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4517110426251558912,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4517110426252083200,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4517110426252345344,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4517110426252476416,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4517110426252541952,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4517110426252574720,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4517110426252591104,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4517110426252599296,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4517110426252603392,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4517110426252605440,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4517110426252606464,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4517110426252606976,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4517110426252607232,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4517110426252607360,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4517110426252607424,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4517110426252607456,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4517110426252607472,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4517110426252607480,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4517110426252607484,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4517110426252607486,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4517110426252607487,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6880787533880774391,64,FLEN)
NAN_BOXED(2333251574222011236,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4490088828488384512,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4490088828488384513,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4490088828488384515,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4490088828488384519,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4490088828488384527,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4490088828488384543,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4490088828488384575,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4490088828488384639,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4490088828488384767,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4490088828488385023,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4490088828488385535,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4490088828488386559,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4490088828488388607,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4490088828488392703,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4490088828488400895,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4490088828488417279,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4490088828488450047,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4490088828488515583,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4490088828488646655,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4490088828488908799,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4490088828489433087,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4490088828490481663,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4490088828492578815,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4490088828496773119,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4490088828505161727,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4490088828521938943,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4490088828555493375,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4490088828622602239,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4490088828756819967,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4490088829025255423,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4490088829562126335,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4490088830635868159,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4490088832783351807,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4490088837078319103,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4490088845668253695,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4490088862848122879,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4490088897207861247,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4490088965927337983,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4490089103366291455,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4490089378244198399,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4490089928000012287,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4490091027511640063,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4490093226534895615,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4490097624581406719,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4490106420674428927,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4490124012860473343,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4490159197232562175,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4490229565976739839,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4490370303465095167,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4490651778441805823,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4491214728395227135,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4492340628302069759,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4492340628302069760,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4493466528208912384,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4494029478162333696,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4494310953139044352,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4494451690627399680,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4494522059371577344,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4494557243743666176,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4494574835929710592,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4494583632022732800,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4494588030069243904,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4494590229092499456,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4494591328604127232,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4494591878359941120,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4494592153237848064,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4494592290676801536,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4494592359396278272,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4494592393756016640,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4494592410935885824,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4494592419525820416,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4494592423820787712,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4494592425968271360,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4494592427042013184,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4494592427578884096,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4494592427847319552,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4494592427981537280,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4494592428048646144,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4494592428082200576,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4494592428098977792,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4494592428107366400,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4494592428111560704,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4494592428113657856,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4494592428114706432,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4494592428115230720,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4494592428115492864,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4494592428115623936,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4494592428115689472,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4494592428115722240,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4494592428115738624,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4494592428115746816,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4494592428115750912,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4494592428115752960,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4494592428115753984,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4494592428115754496,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4494592428115754752,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4494592428115754880,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4494592428115754944,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4494592428115754976,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4494592428115754992,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4494592428115755000,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4494592428115755004,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4494592428115755006,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4494592428115755007,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6880835816286864031,64,FLEN)
NAN_BOXED(2333223270923055865,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372672,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372673,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372675,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372679,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372687,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372703,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372735,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372799,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372927,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185373183,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185373695,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185374719,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185376767,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185380863,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185389055,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185405439,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185438207,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185503743,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185634815,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185896959,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424186421247,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424187469823,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424189566975,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424193761279,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424202149887,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424218927103,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424252481535,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424319590399,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424453808127,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424722243583,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494425259114495,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494426332856319,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494428480339967,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494432775307263,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494441365241855,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494458545111039,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494492904849407,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494561624326143,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494699063279615,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494973941186559,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376495523697000447,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376496623208628223,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376498822231883775,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376503220278394879,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376512016371417087,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376529608557461503,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376564792929550335,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376635161673727999,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376775899162083327,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9377057374138793983,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9377620324092215295,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9378746223999057919,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9378746223999057920,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9379872123905900544,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380435073859321856,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380716548836032512,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380857286324387840,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380927655068565504,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380962839440654336,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380980431626698752,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380989227719720960,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380993625766232064,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380995824789487616,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380996924301115392,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380997474056929280,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380997748934836224,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380997886373789696,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380997955093266432,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380997989453004800,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998006632873984,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998015222808576,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998019517775872,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998021665259520,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998022739001344,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023275872256,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023544307712,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023678525440,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023745634304,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023779188736,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023795965952,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023804354560,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023808548864,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023810646016,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023811694592,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812218880,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812481024,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812612096,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812677632,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812710400,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812726784,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812734976,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812739072,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812741120,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812742144,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812742656,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812742912,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743040,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743104,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743136,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743152,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743160,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743164,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743166,64,FLEN)
NAN_BOXED(6880933446715315903,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743167,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4111786459789262848,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4111786459789262849,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4111786459789262851,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4111786459789262855,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4111786459789262863,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4111786459789262879,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4111786459789262911,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4111786459789262975,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4111786459789263103,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4111786459789263359,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4111786459789263871,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4111786459789264895,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4111786459789266943,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4111786459789271039,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4111786459789279231,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4111786459789295615,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4111786459789328383,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4111786459789393919,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4111786459789524991,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4111786459789787135,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4111786459790311423,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4111786459791359999,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4111786459793457151,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4111786459797651455,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4111786459806040063,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4111786459822817279,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4111786459856371711,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4111786459923480575,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4111786460057698303,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4111786460326133759,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4111786460863004671,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4111786461936746495,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4111786464084230143,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4111786468379197439,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4111786476969132031,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4111786494149001215,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4111786528508739583,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4111786597228216319,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4111786734667169791,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4111787009545076735,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4111787559300890623,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4111788658812518399,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4111790857835773951,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4111795255882285055,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4111804051975307263,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4111821644161351679,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4111856828533440511,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4111927197277618175,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4112067934765973503,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4112349409742684159,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4112912359696105471,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4114038259602948095,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4114038259602948096,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4115164159509790720,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4115727109463212032,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4116008584439922688,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4116149321928278016,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4116219690672455680,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4116254875044544512,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4116272467230588928,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4116281263323611136,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4116285661370122240,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4116287860393377792,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4116288959905005568,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4116289509660819456,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4116289784538726400,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4116289921977679872,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4116289990697156608,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4116290025056894976,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4116290042236764160,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4116290050826698752,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4116290055121666048,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4116290057269149696,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4116290058342891520,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4116290058879762432,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4116290059148197888,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4116290059282415616,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4116290059349524480,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4116290059383078912,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4116290059399856128,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4116290059408244736,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4116290059412439040,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4116290059414536192,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4116290059415584768,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4116290059416109056,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4116290059416371200,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4116290059416502272,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4116290059416567808,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4116290059416600576,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4116290059416616960,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4116290059416625152,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4116290059416629248,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4116290059416631296,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4116290059416632320,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4116290059416632832,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4116290059416633088,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4116290059416633216,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4116290059416633280,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4116290059416633312,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4116290059416633328,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4116290059416633336,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4116290059416633340,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4116290059416633342,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4116290059416633343,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6880939106887068223,64,FLEN)
NAN_BOXED(2333163808262369896,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703744,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703745,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703747,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703751,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703759,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703775,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703807,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703871,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703999,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892704255,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892704767,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892705791,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892707839,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892711935,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892720127,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892736511,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892769279,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892834815,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892965887,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630893228031,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630893752319,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630894800895,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630896898047,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630901092351,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630909480959,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630926258175,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630959812607,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429631026921471,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429631161139199,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429631429574655,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429631966445567,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429633040187391,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429635187671039,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429639482638335,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429648072572927,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429665252442111,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429699612180479,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429768331657215,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429905770610687,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295430180648517631,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295430730404331519,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295431829915959295,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295434028939214847,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295438426985725951,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295447223078748159,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295464815264792575,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295499999636881407,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295570368381059071,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295711105869414399,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295992580846125055,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9296555530799546367,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9297681430706388991,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9297681430706388992,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9298807330613231616,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299370280566652928,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299651755543363584,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299792493031718912,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299862861775896576,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299898046147985408,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299915638334029824,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299924434427052032,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299928832473563136,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299931031496818688,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299932131008446464,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299932680764260352,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299932955642167296,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933093081120768,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933161800597504,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933196160335872,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933213340205056,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933221930139648,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933226225106944,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933228372590592,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933229446332416,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933229983203328,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230251638784,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230385856512,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230452965376,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230486519808,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230503297024,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230511685632,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230515879936,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230517977088,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230519025664,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230519549952,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230519812096,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230519943168,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520008704,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520041472,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520057856,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520066048,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520070144,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520072192,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520073216,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520073728,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520073984,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074112,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074176,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074208,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074224,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074232,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074236,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074238,64,FLEN)
NAN_BOXED(6881004736397270327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074239,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264576,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264577,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264579,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264583,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264591,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264607,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264639,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264703,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264831,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242265087,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242265599,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242266623,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242268671,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242272767,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242280959,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242297343,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242330111,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242395647,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242526719,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242788863,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815243313151,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815244361727,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815246458879,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815250653183,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815259041791,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815275819007,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815309373439,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815376482303,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815510700031,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815779135487,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580816316006399,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580817389748223,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580819537231871,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580823832199167,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580832422133759,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580849602002943,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580883961741311,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580952681218047,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484581090120171519,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484581364998078463,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484581914753892351,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484583014265520127,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484585213288775679,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484589611335286783,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484598407428308991,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484615999614353407,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484651183986442239,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484721552730619903,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484862290218975231,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9485143765195685887,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9485706715149107199,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9486832615055949823,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9486832615055949824,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9487958514962792448,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9488521464916213760,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9488802939892924416,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9488943677381279744,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489014046125457408,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489049230497546240,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489066822683590656,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489075618776612864,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489080016823123968,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489082215846379520,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489083315358007296,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489083865113821184,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084139991728128,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084277430681600,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084346150158336,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084380509896704,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084397689765888,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084406279700480,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084410574667776,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084412722151424,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084413795893248,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414332764160,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414601199616,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414735417344,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414802526208,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414836080640,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414852857856,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414861246464,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414865440768,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414867537920,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414868586496,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869110784,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869372928,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869504000,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869569536,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869602304,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869618688,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869626880,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869630976,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869633024,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869634048,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869634560,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869634816,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869634944,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635008,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635040,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635056,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635064,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635068,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635070,64,FLEN)
NAN_BOXED(6881013432033978359,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635071,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
