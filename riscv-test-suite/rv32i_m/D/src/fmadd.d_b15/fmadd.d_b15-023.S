
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_16896:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2f0000000003fff; valaddr_reg:x3; val_offset:50688*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50688*0 + 3*0*FLEN/8, x4, x1, x2)

inst_16897:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2f0000000007fff; valaddr_reg:x3; val_offset:50691*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50691*0 + 3*1*FLEN/8, x4, x1, x2)

inst_16898:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2f000000000ffff; valaddr_reg:x3; val_offset:50694*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50694*0 + 3*2*FLEN/8, x4, x1, x2)

inst_16899:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2f000000001ffff; valaddr_reg:x3; val_offset:50697*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50697*0 + 3*3*FLEN/8, x4, x1, x2)

inst_16900:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2f000000003ffff; valaddr_reg:x3; val_offset:50700*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50700*0 + 3*4*FLEN/8, x4, x1, x2)

inst_16901:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2f000000007ffff; valaddr_reg:x3; val_offset:50703*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50703*0 + 3*5*FLEN/8, x4, x1, x2)

inst_16902:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2f00000000fffff; valaddr_reg:x3; val_offset:50706*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50706*0 + 3*6*FLEN/8, x4, x1, x2)

inst_16903:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2f00000001fffff; valaddr_reg:x3; val_offset:50709*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50709*0 + 3*7*FLEN/8, x4, x1, x2)

inst_16904:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2f00000003fffff; valaddr_reg:x3; val_offset:50712*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50712*0 + 3*8*FLEN/8, x4, x1, x2)

inst_16905:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2f00000007fffff; valaddr_reg:x3; val_offset:50715*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50715*0 + 3*9*FLEN/8, x4, x1, x2)

inst_16906:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2f0000000ffffff; valaddr_reg:x3; val_offset:50718*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50718*0 + 3*10*FLEN/8, x4, x1, x2)

inst_16907:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2f0000001ffffff; valaddr_reg:x3; val_offset:50721*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50721*0 + 3*11*FLEN/8, x4, x1, x2)

inst_16908:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2f0000003ffffff; valaddr_reg:x3; val_offset:50724*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50724*0 + 3*12*FLEN/8, x4, x1, x2)

inst_16909:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2f0000007ffffff; valaddr_reg:x3; val_offset:50727*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50727*0 + 3*13*FLEN/8, x4, x1, x2)

inst_16910:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2f000000fffffff; valaddr_reg:x3; val_offset:50730*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50730*0 + 3*14*FLEN/8, x4, x1, x2)

inst_16911:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2f000001fffffff; valaddr_reg:x3; val_offset:50733*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50733*0 + 3*15*FLEN/8, x4, x1, x2)

inst_16912:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2f000003fffffff; valaddr_reg:x3; val_offset:50736*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50736*0 + 3*16*FLEN/8, x4, x1, x2)

inst_16913:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2f000007fffffff; valaddr_reg:x3; val_offset:50739*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50739*0 + 3*17*FLEN/8, x4, x1, x2)

inst_16914:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2f00000ffffffff; valaddr_reg:x3; val_offset:50742*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50742*0 + 3*18*FLEN/8, x4, x1, x2)

inst_16915:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2f00001ffffffff; valaddr_reg:x3; val_offset:50745*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50745*0 + 3*19*FLEN/8, x4, x1, x2)

inst_16916:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2f00003ffffffff; valaddr_reg:x3; val_offset:50748*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50748*0 + 3*20*FLEN/8, x4, x1, x2)

inst_16917:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2f00007ffffffff; valaddr_reg:x3; val_offset:50751*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50751*0 + 3*21*FLEN/8, x4, x1, x2)

inst_16918:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2f0000fffffffff; valaddr_reg:x3; val_offset:50754*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50754*0 + 3*22*FLEN/8, x4, x1, x2)

inst_16919:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2f0001fffffffff; valaddr_reg:x3; val_offset:50757*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50757*0 + 3*23*FLEN/8, x4, x1, x2)

inst_16920:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2f0003fffffffff; valaddr_reg:x3; val_offset:50760*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50760*0 + 3*24*FLEN/8, x4, x1, x2)

inst_16921:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2f0007fffffffff; valaddr_reg:x3; val_offset:50763*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50763*0 + 3*25*FLEN/8, x4, x1, x2)

inst_16922:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2f000ffffffffff; valaddr_reg:x3; val_offset:50766*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50766*0 + 3*26*FLEN/8, x4, x1, x2)

inst_16923:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2f001ffffffffff; valaddr_reg:x3; val_offset:50769*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50769*0 + 3*27*FLEN/8, x4, x1, x2)

inst_16924:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2f003ffffffffff; valaddr_reg:x3; val_offset:50772*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50772*0 + 3*28*FLEN/8, x4, x1, x2)

inst_16925:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2f007ffffffffff; valaddr_reg:x3; val_offset:50775*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50775*0 + 3*29*FLEN/8, x4, x1, x2)

inst_16926:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2f00fffffffffff; valaddr_reg:x3; val_offset:50778*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50778*0 + 3*30*FLEN/8, x4, x1, x2)

inst_16927:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2f01fffffffffff; valaddr_reg:x3; val_offset:50781*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50781*0 + 3*31*FLEN/8, x4, x1, x2)

inst_16928:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2f03fffffffffff; valaddr_reg:x3; val_offset:50784*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50784*0 + 3*32*FLEN/8, x4, x1, x2)

inst_16929:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2f07fffffffffff; valaddr_reg:x3; val_offset:50787*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50787*0 + 3*33*FLEN/8, x4, x1, x2)

inst_16930:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2f0ffffffffffff; valaddr_reg:x3; val_offset:50790*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50790*0 + 3*34*FLEN/8, x4, x1, x2)

inst_16931:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2f1ffffffffffff; valaddr_reg:x3; val_offset:50793*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50793*0 + 3*35*FLEN/8, x4, x1, x2)

inst_16932:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2f3ffffffffffff; valaddr_reg:x3; val_offset:50796*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50796*0 + 3*36*FLEN/8, x4, x1, x2)

inst_16933:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2f7ffffffffffff; valaddr_reg:x3; val_offset:50799*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50799*0 + 3*37*FLEN/8, x4, x1, x2)

inst_16934:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2f8000000000000; valaddr_reg:x3; val_offset:50802*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50802*0 + 3*38*FLEN/8, x4, x1, x2)

inst_16935:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2fc000000000000; valaddr_reg:x3; val_offset:50805*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50805*0 + 3*39*FLEN/8, x4, x1, x2)

inst_16936:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2fe000000000000; valaddr_reg:x3; val_offset:50808*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50808*0 + 3*40*FLEN/8, x4, x1, x2)

inst_16937:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2ff000000000000; valaddr_reg:x3; val_offset:50811*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50811*0 + 3*41*FLEN/8, x4, x1, x2)

inst_16938:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2ff800000000000; valaddr_reg:x3; val_offset:50814*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50814*0 + 3*42*FLEN/8, x4, x1, x2)

inst_16939:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2ffc00000000000; valaddr_reg:x3; val_offset:50817*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50817*0 + 3*43*FLEN/8, x4, x1, x2)

inst_16940:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2ffe00000000000; valaddr_reg:x3; val_offset:50820*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50820*0 + 3*44*FLEN/8, x4, x1, x2)

inst_16941:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2fff00000000000; valaddr_reg:x3; val_offset:50823*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50823*0 + 3*45*FLEN/8, x4, x1, x2)

inst_16942:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2fff80000000000; valaddr_reg:x3; val_offset:50826*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50826*0 + 3*46*FLEN/8, x4, x1, x2)

inst_16943:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2fffc0000000000; valaddr_reg:x3; val_offset:50829*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50829*0 + 3*47*FLEN/8, x4, x1, x2)

inst_16944:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2fffe0000000000; valaddr_reg:x3; val_offset:50832*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50832*0 + 3*48*FLEN/8, x4, x1, x2)

inst_16945:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2ffff0000000000; valaddr_reg:x3; val_offset:50835*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50835*0 + 3*49*FLEN/8, x4, x1, x2)

inst_16946:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2ffff8000000000; valaddr_reg:x3; val_offset:50838*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50838*0 + 3*50*FLEN/8, x4, x1, x2)

inst_16947:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2ffffc000000000; valaddr_reg:x3; val_offset:50841*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50841*0 + 3*51*FLEN/8, x4, x1, x2)

inst_16948:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2ffffe000000000; valaddr_reg:x3; val_offset:50844*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50844*0 + 3*52*FLEN/8, x4, x1, x2)

inst_16949:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2fffff000000000; valaddr_reg:x3; val_offset:50847*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50847*0 + 3*53*FLEN/8, x4, x1, x2)

inst_16950:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2fffff800000000; valaddr_reg:x3; val_offset:50850*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50850*0 + 3*54*FLEN/8, x4, x1, x2)

inst_16951:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2fffffc00000000; valaddr_reg:x3; val_offset:50853*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50853*0 + 3*55*FLEN/8, x4, x1, x2)

inst_16952:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2fffffe00000000; valaddr_reg:x3; val_offset:50856*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50856*0 + 3*56*FLEN/8, x4, x1, x2)

inst_16953:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2ffffff00000000; valaddr_reg:x3; val_offset:50859*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50859*0 + 3*57*FLEN/8, x4, x1, x2)

inst_16954:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2ffffff80000000; valaddr_reg:x3; val_offset:50862*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50862*0 + 3*58*FLEN/8, x4, x1, x2)

inst_16955:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2ffffffc0000000; valaddr_reg:x3; val_offset:50865*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50865*0 + 3*59*FLEN/8, x4, x1, x2)

inst_16956:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2ffffffe0000000; valaddr_reg:x3; val_offset:50868*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50868*0 + 3*60*FLEN/8, x4, x1, x2)

inst_16957:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2fffffff0000000; valaddr_reg:x3; val_offset:50871*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50871*0 + 3*61*FLEN/8, x4, x1, x2)

inst_16958:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2fffffff8000000; valaddr_reg:x3; val_offset:50874*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50874*0 + 3*62*FLEN/8, x4, x1, x2)

inst_16959:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2fffffffc000000; valaddr_reg:x3; val_offset:50877*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50877*0 + 3*63*FLEN/8, x4, x1, x2)

inst_16960:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2fffffffe000000; valaddr_reg:x3; val_offset:50880*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50880*0 + 3*64*FLEN/8, x4, x1, x2)

inst_16961:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2ffffffff000000; valaddr_reg:x3; val_offset:50883*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50883*0 + 3*65*FLEN/8, x4, x1, x2)

inst_16962:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2ffffffff800000; valaddr_reg:x3; val_offset:50886*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50886*0 + 3*66*FLEN/8, x4, x1, x2)

inst_16963:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2ffffffffc00000; valaddr_reg:x3; val_offset:50889*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50889*0 + 3*67*FLEN/8, x4, x1, x2)

inst_16964:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2ffffffffe00000; valaddr_reg:x3; val_offset:50892*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50892*0 + 3*68*FLEN/8, x4, x1, x2)

inst_16965:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2fffffffff00000; valaddr_reg:x3; val_offset:50895*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50895*0 + 3*69*FLEN/8, x4, x1, x2)

inst_16966:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2fffffffff80000; valaddr_reg:x3; val_offset:50898*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50898*0 + 3*70*FLEN/8, x4, x1, x2)

inst_16967:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2fffffffffc0000; valaddr_reg:x3; val_offset:50901*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50901*0 + 3*71*FLEN/8, x4, x1, x2)

inst_16968:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2fffffffffe0000; valaddr_reg:x3; val_offset:50904*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50904*0 + 3*72*FLEN/8, x4, x1, x2)

inst_16969:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2ffffffffff0000; valaddr_reg:x3; val_offset:50907*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50907*0 + 3*73*FLEN/8, x4, x1, x2)

inst_16970:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2ffffffffff8000; valaddr_reg:x3; val_offset:50910*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50910*0 + 3*74*FLEN/8, x4, x1, x2)

inst_16971:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2ffffffffffc000; valaddr_reg:x3; val_offset:50913*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50913*0 + 3*75*FLEN/8, x4, x1, x2)

inst_16972:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2ffffffffffe000; valaddr_reg:x3; val_offset:50916*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50916*0 + 3*76*FLEN/8, x4, x1, x2)

inst_16973:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2fffffffffff000; valaddr_reg:x3; val_offset:50919*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50919*0 + 3*77*FLEN/8, x4, x1, x2)

inst_16974:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2fffffffffff800; valaddr_reg:x3; val_offset:50922*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50922*0 + 3*78*FLEN/8, x4, x1, x2)

inst_16975:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2fffffffffffc00; valaddr_reg:x3; val_offset:50925*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50925*0 + 3*79*FLEN/8, x4, x1, x2)

inst_16976:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2fffffffffffe00; valaddr_reg:x3; val_offset:50928*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50928*0 + 3*80*FLEN/8, x4, x1, x2)

inst_16977:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2ffffffffffff00; valaddr_reg:x3; val_offset:50931*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50931*0 + 3*81*FLEN/8, x4, x1, x2)

inst_16978:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2ffffffffffff80; valaddr_reg:x3; val_offset:50934*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50934*0 + 3*82*FLEN/8, x4, x1, x2)

inst_16979:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2ffffffffffffc0; valaddr_reg:x3; val_offset:50937*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50937*0 + 3*83*FLEN/8, x4, x1, x2)

inst_16980:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2ffffffffffffe0; valaddr_reg:x3; val_offset:50940*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50940*0 + 3*84*FLEN/8, x4, x1, x2)

inst_16981:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2fffffffffffff0; valaddr_reg:x3; val_offset:50943*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50943*0 + 3*85*FLEN/8, x4, x1, x2)

inst_16982:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2fffffffffffff8; valaddr_reg:x3; val_offset:50946*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50946*0 + 3*86*FLEN/8, x4, x1, x2)

inst_16983:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2fffffffffffffc; valaddr_reg:x3; val_offset:50949*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50949*0 + 3*87*FLEN/8, x4, x1, x2)

inst_16984:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2fffffffffffffe; valaddr_reg:x3; val_offset:50952*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50952*0 + 3*88*FLEN/8, x4, x1, x2)

inst_16985:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x23d419cd9d2b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f823d419cd9d2b3; op2val:0x0;
op3val:0x2ffffffffffffff; valaddr_reg:x3; val_offset:50955*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50955*0 + 3*89*FLEN/8, x4, x1, x2)

inst_16986:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbba0000000000000; valaddr_reg:x3; val_offset:50958*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50958*0 + 3*90*FLEN/8, x4, x1, x2)

inst_16987:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbba0000000000001; valaddr_reg:x3; val_offset:50961*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50961*0 + 3*91*FLEN/8, x4, x1, x2)

inst_16988:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbba0000000000003; valaddr_reg:x3; val_offset:50964*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50964*0 + 3*92*FLEN/8, x4, x1, x2)

inst_16989:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbba0000000000007; valaddr_reg:x3; val_offset:50967*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50967*0 + 3*93*FLEN/8, x4, x1, x2)

inst_16990:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbba000000000000f; valaddr_reg:x3; val_offset:50970*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50970*0 + 3*94*FLEN/8, x4, x1, x2)

inst_16991:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbba000000000001f; valaddr_reg:x3; val_offset:50973*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50973*0 + 3*95*FLEN/8, x4, x1, x2)

inst_16992:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbba000000000003f; valaddr_reg:x3; val_offset:50976*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50976*0 + 3*96*FLEN/8, x4, x1, x2)

inst_16993:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbba000000000007f; valaddr_reg:x3; val_offset:50979*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50979*0 + 3*97*FLEN/8, x4, x1, x2)

inst_16994:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbba00000000000ff; valaddr_reg:x3; val_offset:50982*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50982*0 + 3*98*FLEN/8, x4, x1, x2)

inst_16995:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbba00000000001ff; valaddr_reg:x3; val_offset:50985*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50985*0 + 3*99*FLEN/8, x4, x1, x2)

inst_16996:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbba00000000003ff; valaddr_reg:x3; val_offset:50988*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50988*0 + 3*100*FLEN/8, x4, x1, x2)

inst_16997:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbba00000000007ff; valaddr_reg:x3; val_offset:50991*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50991*0 + 3*101*FLEN/8, x4, x1, x2)

inst_16998:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbba0000000000fff; valaddr_reg:x3; val_offset:50994*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50994*0 + 3*102*FLEN/8, x4, x1, x2)

inst_16999:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbba0000000001fff; valaddr_reg:x3; val_offset:50997*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50997*0 + 3*103*FLEN/8, x4, x1, x2)

inst_17000:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbba0000000003fff; valaddr_reg:x3; val_offset:51000*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51000*0 + 3*104*FLEN/8, x4, x1, x2)

inst_17001:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbba0000000007fff; valaddr_reg:x3; val_offset:51003*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51003*0 + 3*105*FLEN/8, x4, x1, x2)

inst_17002:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbba000000000ffff; valaddr_reg:x3; val_offset:51006*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51006*0 + 3*106*FLEN/8, x4, x1, x2)

inst_17003:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbba000000001ffff; valaddr_reg:x3; val_offset:51009*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51009*0 + 3*107*FLEN/8, x4, x1, x2)

inst_17004:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbba000000003ffff; valaddr_reg:x3; val_offset:51012*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51012*0 + 3*108*FLEN/8, x4, x1, x2)

inst_17005:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbba000000007ffff; valaddr_reg:x3; val_offset:51015*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51015*0 + 3*109*FLEN/8, x4, x1, x2)

inst_17006:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbba00000000fffff; valaddr_reg:x3; val_offset:51018*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51018*0 + 3*110*FLEN/8, x4, x1, x2)

inst_17007:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbba00000001fffff; valaddr_reg:x3; val_offset:51021*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51021*0 + 3*111*FLEN/8, x4, x1, x2)

inst_17008:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbba00000003fffff; valaddr_reg:x3; val_offset:51024*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51024*0 + 3*112*FLEN/8, x4, x1, x2)

inst_17009:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbba00000007fffff; valaddr_reg:x3; val_offset:51027*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51027*0 + 3*113*FLEN/8, x4, x1, x2)

inst_17010:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbba0000000ffffff; valaddr_reg:x3; val_offset:51030*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51030*0 + 3*114*FLEN/8, x4, x1, x2)

inst_17011:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbba0000001ffffff; valaddr_reg:x3; val_offset:51033*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51033*0 + 3*115*FLEN/8, x4, x1, x2)

inst_17012:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbba0000003ffffff; valaddr_reg:x3; val_offset:51036*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51036*0 + 3*116*FLEN/8, x4, x1, x2)

inst_17013:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbba0000007ffffff; valaddr_reg:x3; val_offset:51039*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51039*0 + 3*117*FLEN/8, x4, x1, x2)

inst_17014:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbba000000fffffff; valaddr_reg:x3; val_offset:51042*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51042*0 + 3*118*FLEN/8, x4, x1, x2)

inst_17015:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbba000001fffffff; valaddr_reg:x3; val_offset:51045*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51045*0 + 3*119*FLEN/8, x4, x1, x2)

inst_17016:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbba000003fffffff; valaddr_reg:x3; val_offset:51048*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51048*0 + 3*120*FLEN/8, x4, x1, x2)

inst_17017:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbba000007fffffff; valaddr_reg:x3; val_offset:51051*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51051*0 + 3*121*FLEN/8, x4, x1, x2)

inst_17018:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbba00000ffffffff; valaddr_reg:x3; val_offset:51054*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51054*0 + 3*122*FLEN/8, x4, x1, x2)

inst_17019:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbba00001ffffffff; valaddr_reg:x3; val_offset:51057*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51057*0 + 3*123*FLEN/8, x4, x1, x2)

inst_17020:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbba00003ffffffff; valaddr_reg:x3; val_offset:51060*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51060*0 + 3*124*FLEN/8, x4, x1, x2)

inst_17021:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbba00007ffffffff; valaddr_reg:x3; val_offset:51063*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51063*0 + 3*125*FLEN/8, x4, x1, x2)

inst_17022:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbba0000fffffffff; valaddr_reg:x3; val_offset:51066*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51066*0 + 3*126*FLEN/8, x4, x1, x2)

inst_17023:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbba0001fffffffff; valaddr_reg:x3; val_offset:51069*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51069*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_17024:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbba0003fffffffff; valaddr_reg:x3; val_offset:51072*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51072*0 + 3*128*FLEN/8, x4, x1, x2)

inst_17025:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbba0007fffffffff; valaddr_reg:x3; val_offset:51075*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51075*0 + 3*129*FLEN/8, x4, x1, x2)

inst_17026:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbba000ffffffffff; valaddr_reg:x3; val_offset:51078*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51078*0 + 3*130*FLEN/8, x4, x1, x2)

inst_17027:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbba001ffffffffff; valaddr_reg:x3; val_offset:51081*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51081*0 + 3*131*FLEN/8, x4, x1, x2)

inst_17028:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbba003ffffffffff; valaddr_reg:x3; val_offset:51084*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51084*0 + 3*132*FLEN/8, x4, x1, x2)

inst_17029:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbba007ffffffffff; valaddr_reg:x3; val_offset:51087*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51087*0 + 3*133*FLEN/8, x4, x1, x2)

inst_17030:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbba00fffffffffff; valaddr_reg:x3; val_offset:51090*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51090*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17031:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbba01fffffffffff; valaddr_reg:x3; val_offset:51093*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51093*0 + 3*135*FLEN/8, x4, x1, x2)

inst_17032:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbba03fffffffffff; valaddr_reg:x3; val_offset:51096*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51096*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17033:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbba07fffffffffff; valaddr_reg:x3; val_offset:51099*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51099*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17034:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbba0ffffffffffff; valaddr_reg:x3; val_offset:51102*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51102*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17035:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbba1ffffffffffff; valaddr_reg:x3; val_offset:51105*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51105*0 + 3*139*FLEN/8, x4, x1, x2)

inst_17036:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbba3ffffffffffff; valaddr_reg:x3; val_offset:51108*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51108*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17037:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbba7ffffffffffff; valaddr_reg:x3; val_offset:51111*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51111*0 + 3*141*FLEN/8, x4, x1, x2)

inst_17038:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbba8000000000000; valaddr_reg:x3; val_offset:51114*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51114*0 + 3*142*FLEN/8, x4, x1, x2)

inst_17039:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbbac000000000000; valaddr_reg:x3; val_offset:51117*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51117*0 + 3*143*FLEN/8, x4, x1, x2)

inst_17040:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbbae000000000000; valaddr_reg:x3; val_offset:51120*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51120*0 + 3*144*FLEN/8, x4, x1, x2)

inst_17041:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbbaf000000000000; valaddr_reg:x3; val_offset:51123*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51123*0 + 3*145*FLEN/8, x4, x1, x2)

inst_17042:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbbaf800000000000; valaddr_reg:x3; val_offset:51126*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51126*0 + 3*146*FLEN/8, x4, x1, x2)

inst_17043:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbbafc00000000000; valaddr_reg:x3; val_offset:51129*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51129*0 + 3*147*FLEN/8, x4, x1, x2)

inst_17044:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbbafe00000000000; valaddr_reg:x3; val_offset:51132*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51132*0 + 3*148*FLEN/8, x4, x1, x2)

inst_17045:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbbaff00000000000; valaddr_reg:x3; val_offset:51135*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51135*0 + 3*149*FLEN/8, x4, x1, x2)

inst_17046:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbbaff80000000000; valaddr_reg:x3; val_offset:51138*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51138*0 + 3*150*FLEN/8, x4, x1, x2)

inst_17047:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbbaffc0000000000; valaddr_reg:x3; val_offset:51141*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51141*0 + 3*151*FLEN/8, x4, x1, x2)

inst_17048:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbbaffe0000000000; valaddr_reg:x3; val_offset:51144*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51144*0 + 3*152*FLEN/8, x4, x1, x2)

inst_17049:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbbafff0000000000; valaddr_reg:x3; val_offset:51147*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51147*0 + 3*153*FLEN/8, x4, x1, x2)

inst_17050:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbbafff8000000000; valaddr_reg:x3; val_offset:51150*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51150*0 + 3*154*FLEN/8, x4, x1, x2)

inst_17051:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbbafffc000000000; valaddr_reg:x3; val_offset:51153*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51153*0 + 3*155*FLEN/8, x4, x1, x2)

inst_17052:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbbafffe000000000; valaddr_reg:x3; val_offset:51156*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51156*0 + 3*156*FLEN/8, x4, x1, x2)

inst_17053:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbbaffff000000000; valaddr_reg:x3; val_offset:51159*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51159*0 + 3*157*FLEN/8, x4, x1, x2)

inst_17054:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbbaffff800000000; valaddr_reg:x3; val_offset:51162*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51162*0 + 3*158*FLEN/8, x4, x1, x2)

inst_17055:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbbaffffc00000000; valaddr_reg:x3; val_offset:51165*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51165*0 + 3*159*FLEN/8, x4, x1, x2)

inst_17056:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbbaffffe00000000; valaddr_reg:x3; val_offset:51168*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51168*0 + 3*160*FLEN/8, x4, x1, x2)

inst_17057:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbbafffff00000000; valaddr_reg:x3; val_offset:51171*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51171*0 + 3*161*FLEN/8, x4, x1, x2)

inst_17058:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbbafffff80000000; valaddr_reg:x3; val_offset:51174*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51174*0 + 3*162*FLEN/8, x4, x1, x2)

inst_17059:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbbafffffc0000000; valaddr_reg:x3; val_offset:51177*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51177*0 + 3*163*FLEN/8, x4, x1, x2)

inst_17060:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbbafffffe0000000; valaddr_reg:x3; val_offset:51180*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51180*0 + 3*164*FLEN/8, x4, x1, x2)

inst_17061:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbbaffffff0000000; valaddr_reg:x3; val_offset:51183*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51183*0 + 3*165*FLEN/8, x4, x1, x2)

inst_17062:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbbaffffff8000000; valaddr_reg:x3; val_offset:51186*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51186*0 + 3*166*FLEN/8, x4, x1, x2)

inst_17063:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbbaffffffc000000; valaddr_reg:x3; val_offset:51189*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51189*0 + 3*167*FLEN/8, x4, x1, x2)

inst_17064:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbbaffffffe000000; valaddr_reg:x3; val_offset:51192*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51192*0 + 3*168*FLEN/8, x4, x1, x2)

inst_17065:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbbafffffff000000; valaddr_reg:x3; val_offset:51195*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51195*0 + 3*169*FLEN/8, x4, x1, x2)

inst_17066:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbbafffffff800000; valaddr_reg:x3; val_offset:51198*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51198*0 + 3*170*FLEN/8, x4, x1, x2)

inst_17067:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbbafffffffc00000; valaddr_reg:x3; val_offset:51201*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51201*0 + 3*171*FLEN/8, x4, x1, x2)

inst_17068:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbbafffffffe00000; valaddr_reg:x3; val_offset:51204*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51204*0 + 3*172*FLEN/8, x4, x1, x2)

inst_17069:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbbaffffffff00000; valaddr_reg:x3; val_offset:51207*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51207*0 + 3*173*FLEN/8, x4, x1, x2)

inst_17070:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbbaffffffff80000; valaddr_reg:x3; val_offset:51210*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51210*0 + 3*174*FLEN/8, x4, x1, x2)

inst_17071:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbbaffffffffc0000; valaddr_reg:x3; val_offset:51213*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51213*0 + 3*175*FLEN/8, x4, x1, x2)

inst_17072:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbbaffffffffe0000; valaddr_reg:x3; val_offset:51216*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51216*0 + 3*176*FLEN/8, x4, x1, x2)

inst_17073:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbbafffffffff0000; valaddr_reg:x3; val_offset:51219*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51219*0 + 3*177*FLEN/8, x4, x1, x2)

inst_17074:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbbafffffffff8000; valaddr_reg:x3; val_offset:51222*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51222*0 + 3*178*FLEN/8, x4, x1, x2)

inst_17075:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbbafffffffffc000; valaddr_reg:x3; val_offset:51225*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51225*0 + 3*179*FLEN/8, x4, x1, x2)

inst_17076:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbbafffffffffe000; valaddr_reg:x3; val_offset:51228*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51228*0 + 3*180*FLEN/8, x4, x1, x2)

inst_17077:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbbaffffffffff000; valaddr_reg:x3; val_offset:51231*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51231*0 + 3*181*FLEN/8, x4, x1, x2)

inst_17078:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbbaffffffffff800; valaddr_reg:x3; val_offset:51234*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51234*0 + 3*182*FLEN/8, x4, x1, x2)

inst_17079:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbbaffffffffffc00; valaddr_reg:x3; val_offset:51237*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51237*0 + 3*183*FLEN/8, x4, x1, x2)

inst_17080:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbbaffffffffffe00; valaddr_reg:x3; val_offset:51240*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51240*0 + 3*184*FLEN/8, x4, x1, x2)

inst_17081:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbbafffffffffff00; valaddr_reg:x3; val_offset:51243*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51243*0 + 3*185*FLEN/8, x4, x1, x2)

inst_17082:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbbafffffffffff80; valaddr_reg:x3; val_offset:51246*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51246*0 + 3*186*FLEN/8, x4, x1, x2)

inst_17083:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbbafffffffffffc0; valaddr_reg:x3; val_offset:51249*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51249*0 + 3*187*FLEN/8, x4, x1, x2)

inst_17084:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbbafffffffffffe0; valaddr_reg:x3; val_offset:51252*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51252*0 + 3*188*FLEN/8, x4, x1, x2)

inst_17085:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbbaffffffffffff0; valaddr_reg:x3; val_offset:51255*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51255*0 + 3*189*FLEN/8, x4, x1, x2)

inst_17086:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbbaffffffffffff8; valaddr_reg:x3; val_offset:51258*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51258*0 + 3*190*FLEN/8, x4, x1, x2)

inst_17087:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbbaffffffffffffc; valaddr_reg:x3; val_offset:51261*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51261*0 + 3*191*FLEN/8, x4, x1, x2)

inst_17088:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbbaffffffffffffe; valaddr_reg:x3; val_offset:51264*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51264*0 + 3*192*FLEN/8, x4, x1, x2)

inst_17089:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3ba and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbbafffffffffffff; valaddr_reg:x3; val_offset:51267*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51267*0 + 3*193*FLEN/8, x4, x1, x2)

inst_17090:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:51270*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51270*0 + 3*194*FLEN/8, x4, x1, x2)

inst_17091:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:51273*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51273*0 + 3*195*FLEN/8, x4, x1, x2)

inst_17092:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:51276*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51276*0 + 3*196*FLEN/8, x4, x1, x2)

inst_17093:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:51279*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51279*0 + 3*197*FLEN/8, x4, x1, x2)

inst_17094:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:51282*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51282*0 + 3*198*FLEN/8, x4, x1, x2)

inst_17095:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:51285*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51285*0 + 3*199*FLEN/8, x4, x1, x2)

inst_17096:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:51288*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51288*0 + 3*200*FLEN/8, x4, x1, x2)

inst_17097:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:51291*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51291*0 + 3*201*FLEN/8, x4, x1, x2)

inst_17098:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:51294*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51294*0 + 3*202*FLEN/8, x4, x1, x2)

inst_17099:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:51297*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51297*0 + 3*203*FLEN/8, x4, x1, x2)

inst_17100:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:51300*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51300*0 + 3*204*FLEN/8, x4, x1, x2)

inst_17101:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:51303*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51303*0 + 3*205*FLEN/8, x4, x1, x2)

inst_17102:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:51306*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51306*0 + 3*206*FLEN/8, x4, x1, x2)

inst_17103:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:51309*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51309*0 + 3*207*FLEN/8, x4, x1, x2)

inst_17104:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:51312*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51312*0 + 3*208*FLEN/8, x4, x1, x2)

inst_17105:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:51315*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51315*0 + 3*209*FLEN/8, x4, x1, x2)

inst_17106:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:51318*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51318*0 + 3*210*FLEN/8, x4, x1, x2)

inst_17107:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:51321*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51321*0 + 3*211*FLEN/8, x4, x1, x2)

inst_17108:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:51324*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51324*0 + 3*212*FLEN/8, x4, x1, x2)

inst_17109:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:51327*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51327*0 + 3*213*FLEN/8, x4, x1, x2)

inst_17110:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:51330*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51330*0 + 3*214*FLEN/8, x4, x1, x2)

inst_17111:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xb54b5e550bc38 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbbe71ac902b; op2val:0x9feb54b5e550bc38;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:51333*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51333*0 + 3*215*FLEN/8, x4, x1, x2)

inst_17112:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:51336*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51336*0 + 3*216*FLEN/8, x4, x1, x2)

inst_17113:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:51339*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51339*0 + 3*217*FLEN/8, x4, x1, x2)

inst_17114:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:51342*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51342*0 + 3*218*FLEN/8, x4, x1, x2)

inst_17115:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:51345*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51345*0 + 3*219*FLEN/8, x4, x1, x2)

inst_17116:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:51348*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51348*0 + 3*220*FLEN/8, x4, x1, x2)

inst_17117:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:51351*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51351*0 + 3*221*FLEN/8, x4, x1, x2)

inst_17118:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:51354*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51354*0 + 3*222*FLEN/8, x4, x1, x2)

inst_17119:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:51357*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51357*0 + 3*223*FLEN/8, x4, x1, x2)

inst_17120:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:51360*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51360*0 + 3*224*FLEN/8, x4, x1, x2)

inst_17121:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:51363*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51363*0 + 3*225*FLEN/8, x4, x1, x2)

inst_17122:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:51366*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51366*0 + 3*226*FLEN/8, x4, x1, x2)

inst_17123:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:51369*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51369*0 + 3*227*FLEN/8, x4, x1, x2)

inst_17124:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:51372*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51372*0 + 3*228*FLEN/8, x4, x1, x2)

inst_17125:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:51375*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51375*0 + 3*229*FLEN/8, x4, x1, x2)

inst_17126:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:51378*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51378*0 + 3*230*FLEN/8, x4, x1, x2)

inst_17127:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:51381*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51381*0 + 3*231*FLEN/8, x4, x1, x2)

inst_17128:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:51384*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51384*0 + 3*232*FLEN/8, x4, x1, x2)

inst_17129:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:51387*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51387*0 + 3*233*FLEN/8, x4, x1, x2)

inst_17130:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:51390*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51390*0 + 3*234*FLEN/8, x4, x1, x2)

inst_17131:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:51393*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51393*0 + 3*235*FLEN/8, x4, x1, x2)

inst_17132:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:51396*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51396*0 + 3*236*FLEN/8, x4, x1, x2)

inst_17133:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:51399*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51399*0 + 3*237*FLEN/8, x4, x1, x2)

inst_17134:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x8280000000000000; valaddr_reg:x3; val_offset:51402*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51402*0 + 3*238*FLEN/8, x4, x1, x2)

inst_17135:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x8280000000000001; valaddr_reg:x3; val_offset:51405*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51405*0 + 3*239*FLEN/8, x4, x1, x2)

inst_17136:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x8280000000000003; valaddr_reg:x3; val_offset:51408*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51408*0 + 3*240*FLEN/8, x4, x1, x2)

inst_17137:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x8280000000000007; valaddr_reg:x3; val_offset:51411*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51411*0 + 3*241*FLEN/8, x4, x1, x2)

inst_17138:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828000000000000f; valaddr_reg:x3; val_offset:51414*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51414*0 + 3*242*FLEN/8, x4, x1, x2)

inst_17139:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828000000000001f; valaddr_reg:x3; val_offset:51417*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51417*0 + 3*243*FLEN/8, x4, x1, x2)

inst_17140:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828000000000003f; valaddr_reg:x3; val_offset:51420*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51420*0 + 3*244*FLEN/8, x4, x1, x2)

inst_17141:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828000000000007f; valaddr_reg:x3; val_offset:51423*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51423*0 + 3*245*FLEN/8, x4, x1, x2)

inst_17142:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x82800000000000ff; valaddr_reg:x3; val_offset:51426*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51426*0 + 3*246*FLEN/8, x4, x1, x2)

inst_17143:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x82800000000001ff; valaddr_reg:x3; val_offset:51429*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51429*0 + 3*247*FLEN/8, x4, x1, x2)

inst_17144:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x82800000000003ff; valaddr_reg:x3; val_offset:51432*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51432*0 + 3*248*FLEN/8, x4, x1, x2)

inst_17145:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x82800000000007ff; valaddr_reg:x3; val_offset:51435*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51435*0 + 3*249*FLEN/8, x4, x1, x2)

inst_17146:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x8280000000000fff; valaddr_reg:x3; val_offset:51438*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51438*0 + 3*250*FLEN/8, x4, x1, x2)

inst_17147:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x8280000000001fff; valaddr_reg:x3; val_offset:51441*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51441*0 + 3*251*FLEN/8, x4, x1, x2)

inst_17148:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x8280000000003fff; valaddr_reg:x3; val_offset:51444*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51444*0 + 3*252*FLEN/8, x4, x1, x2)

inst_17149:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x8280000000007fff; valaddr_reg:x3; val_offset:51447*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51447*0 + 3*253*FLEN/8, x4, x1, x2)

inst_17150:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828000000000ffff; valaddr_reg:x3; val_offset:51450*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51450*0 + 3*254*FLEN/8, x4, x1, x2)

inst_17151:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828000000001ffff; valaddr_reg:x3; val_offset:51453*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51453*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_17152:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828000000003ffff; valaddr_reg:x3; val_offset:51456*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51456*0 + 3*256*FLEN/8, x4, x1, x2)

inst_17153:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828000000007ffff; valaddr_reg:x3; val_offset:51459*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51459*0 + 3*257*FLEN/8, x4, x1, x2)

inst_17154:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x82800000000fffff; valaddr_reg:x3; val_offset:51462*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51462*0 + 3*258*FLEN/8, x4, x1, x2)

inst_17155:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x82800000001fffff; valaddr_reg:x3; val_offset:51465*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51465*0 + 3*259*FLEN/8, x4, x1, x2)

inst_17156:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x82800000003fffff; valaddr_reg:x3; val_offset:51468*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51468*0 + 3*260*FLEN/8, x4, x1, x2)

inst_17157:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x82800000007fffff; valaddr_reg:x3; val_offset:51471*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51471*0 + 3*261*FLEN/8, x4, x1, x2)

inst_17158:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x8280000000ffffff; valaddr_reg:x3; val_offset:51474*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51474*0 + 3*262*FLEN/8, x4, x1, x2)

inst_17159:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x8280000001ffffff; valaddr_reg:x3; val_offset:51477*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51477*0 + 3*263*FLEN/8, x4, x1, x2)

inst_17160:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x8280000003ffffff; valaddr_reg:x3; val_offset:51480*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51480*0 + 3*264*FLEN/8, x4, x1, x2)

inst_17161:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x8280000007ffffff; valaddr_reg:x3; val_offset:51483*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51483*0 + 3*265*FLEN/8, x4, x1, x2)

inst_17162:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828000000fffffff; valaddr_reg:x3; val_offset:51486*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51486*0 + 3*266*FLEN/8, x4, x1, x2)

inst_17163:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828000001fffffff; valaddr_reg:x3; val_offset:51489*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51489*0 + 3*267*FLEN/8, x4, x1, x2)

inst_17164:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828000003fffffff; valaddr_reg:x3; val_offset:51492*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51492*0 + 3*268*FLEN/8, x4, x1, x2)

inst_17165:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828000007fffffff; valaddr_reg:x3; val_offset:51495*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51495*0 + 3*269*FLEN/8, x4, x1, x2)

inst_17166:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x82800000ffffffff; valaddr_reg:x3; val_offset:51498*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51498*0 + 3*270*FLEN/8, x4, x1, x2)

inst_17167:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x82800001ffffffff; valaddr_reg:x3; val_offset:51501*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51501*0 + 3*271*FLEN/8, x4, x1, x2)

inst_17168:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x82800003ffffffff; valaddr_reg:x3; val_offset:51504*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51504*0 + 3*272*FLEN/8, x4, x1, x2)

inst_17169:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x82800007ffffffff; valaddr_reg:x3; val_offset:51507*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51507*0 + 3*273*FLEN/8, x4, x1, x2)

inst_17170:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x8280000fffffffff; valaddr_reg:x3; val_offset:51510*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51510*0 + 3*274*FLEN/8, x4, x1, x2)

inst_17171:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x8280001fffffffff; valaddr_reg:x3; val_offset:51513*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51513*0 + 3*275*FLEN/8, x4, x1, x2)

inst_17172:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x8280003fffffffff; valaddr_reg:x3; val_offset:51516*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51516*0 + 3*276*FLEN/8, x4, x1, x2)

inst_17173:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x8280007fffffffff; valaddr_reg:x3; val_offset:51519*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51519*0 + 3*277*FLEN/8, x4, x1, x2)

inst_17174:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828000ffffffffff; valaddr_reg:x3; val_offset:51522*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51522*0 + 3*278*FLEN/8, x4, x1, x2)

inst_17175:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828001ffffffffff; valaddr_reg:x3; val_offset:51525*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51525*0 + 3*279*FLEN/8, x4, x1, x2)

inst_17176:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828003ffffffffff; valaddr_reg:x3; val_offset:51528*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51528*0 + 3*280*FLEN/8, x4, x1, x2)

inst_17177:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828007ffffffffff; valaddr_reg:x3; val_offset:51531*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51531*0 + 3*281*FLEN/8, x4, x1, x2)

inst_17178:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x82800fffffffffff; valaddr_reg:x3; val_offset:51534*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51534*0 + 3*282*FLEN/8, x4, x1, x2)

inst_17179:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x82801fffffffffff; valaddr_reg:x3; val_offset:51537*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51537*0 + 3*283*FLEN/8, x4, x1, x2)

inst_17180:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x82803fffffffffff; valaddr_reg:x3; val_offset:51540*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51540*0 + 3*284*FLEN/8, x4, x1, x2)

inst_17181:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x82807fffffffffff; valaddr_reg:x3; val_offset:51543*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51543*0 + 3*285*FLEN/8, x4, x1, x2)

inst_17182:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x8280ffffffffffff; valaddr_reg:x3; val_offset:51546*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51546*0 + 3*286*FLEN/8, x4, x1, x2)

inst_17183:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x8281ffffffffffff; valaddr_reg:x3; val_offset:51549*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51549*0 + 3*287*FLEN/8, x4, x1, x2)

inst_17184:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x8283ffffffffffff; valaddr_reg:x3; val_offset:51552*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51552*0 + 3*288*FLEN/8, x4, x1, x2)

inst_17185:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x8287ffffffffffff; valaddr_reg:x3; val_offset:51555*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51555*0 + 3*289*FLEN/8, x4, x1, x2)

inst_17186:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x8288000000000000; valaddr_reg:x3; val_offset:51558*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51558*0 + 3*290*FLEN/8, x4, x1, x2)

inst_17187:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828c000000000000; valaddr_reg:x3; val_offset:51561*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51561*0 + 3*291*FLEN/8, x4, x1, x2)

inst_17188:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828e000000000000; valaddr_reg:x3; val_offset:51564*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51564*0 + 3*292*FLEN/8, x4, x1, x2)

inst_17189:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828f000000000000; valaddr_reg:x3; val_offset:51567*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51567*0 + 3*293*FLEN/8, x4, x1, x2)

inst_17190:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828f800000000000; valaddr_reg:x3; val_offset:51570*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51570*0 + 3*294*FLEN/8, x4, x1, x2)

inst_17191:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828fc00000000000; valaddr_reg:x3; val_offset:51573*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51573*0 + 3*295*FLEN/8, x4, x1, x2)

inst_17192:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828fe00000000000; valaddr_reg:x3; val_offset:51576*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51576*0 + 3*296*FLEN/8, x4, x1, x2)

inst_17193:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828ff00000000000; valaddr_reg:x3; val_offset:51579*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51579*0 + 3*297*FLEN/8, x4, x1, x2)

inst_17194:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828ff80000000000; valaddr_reg:x3; val_offset:51582*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51582*0 + 3*298*FLEN/8, x4, x1, x2)

inst_17195:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828ffc0000000000; valaddr_reg:x3; val_offset:51585*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51585*0 + 3*299*FLEN/8, x4, x1, x2)

inst_17196:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828ffe0000000000; valaddr_reg:x3; val_offset:51588*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51588*0 + 3*300*FLEN/8, x4, x1, x2)

inst_17197:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828fff0000000000; valaddr_reg:x3; val_offset:51591*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51591*0 + 3*301*FLEN/8, x4, x1, x2)

inst_17198:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828fff8000000000; valaddr_reg:x3; val_offset:51594*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51594*0 + 3*302*FLEN/8, x4, x1, x2)

inst_17199:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828fffc000000000; valaddr_reg:x3; val_offset:51597*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51597*0 + 3*303*FLEN/8, x4, x1, x2)

inst_17200:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828fffe000000000; valaddr_reg:x3; val_offset:51600*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51600*0 + 3*304*FLEN/8, x4, x1, x2)

inst_17201:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828ffff000000000; valaddr_reg:x3; val_offset:51603*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51603*0 + 3*305*FLEN/8, x4, x1, x2)

inst_17202:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828ffff800000000; valaddr_reg:x3; val_offset:51606*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51606*0 + 3*306*FLEN/8, x4, x1, x2)

inst_17203:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828ffffc00000000; valaddr_reg:x3; val_offset:51609*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51609*0 + 3*307*FLEN/8, x4, x1, x2)

inst_17204:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828ffffe00000000; valaddr_reg:x3; val_offset:51612*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51612*0 + 3*308*FLEN/8, x4, x1, x2)

inst_17205:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828fffff00000000; valaddr_reg:x3; val_offset:51615*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51615*0 + 3*309*FLEN/8, x4, x1, x2)

inst_17206:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828fffff80000000; valaddr_reg:x3; val_offset:51618*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51618*0 + 3*310*FLEN/8, x4, x1, x2)

inst_17207:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828fffffc0000000; valaddr_reg:x3; val_offset:51621*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51621*0 + 3*311*FLEN/8, x4, x1, x2)

inst_17208:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828fffffe0000000; valaddr_reg:x3; val_offset:51624*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51624*0 + 3*312*FLEN/8, x4, x1, x2)

inst_17209:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828ffffff0000000; valaddr_reg:x3; val_offset:51627*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51627*0 + 3*313*FLEN/8, x4, x1, x2)

inst_17210:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828ffffff8000000; valaddr_reg:x3; val_offset:51630*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51630*0 + 3*314*FLEN/8, x4, x1, x2)

inst_17211:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828ffffffc000000; valaddr_reg:x3; val_offset:51633*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51633*0 + 3*315*FLEN/8, x4, x1, x2)

inst_17212:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828ffffffe000000; valaddr_reg:x3; val_offset:51636*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51636*0 + 3*316*FLEN/8, x4, x1, x2)

inst_17213:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828fffffff000000; valaddr_reg:x3; val_offset:51639*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51639*0 + 3*317*FLEN/8, x4, x1, x2)

inst_17214:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828fffffff800000; valaddr_reg:x3; val_offset:51642*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51642*0 + 3*318*FLEN/8, x4, x1, x2)

inst_17215:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828fffffffc00000; valaddr_reg:x3; val_offset:51645*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51645*0 + 3*319*FLEN/8, x4, x1, x2)

inst_17216:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828fffffffe00000; valaddr_reg:x3; val_offset:51648*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51648*0 + 3*320*FLEN/8, x4, x1, x2)

inst_17217:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828ffffffff00000; valaddr_reg:x3; val_offset:51651*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51651*0 + 3*321*FLEN/8, x4, x1, x2)

inst_17218:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828ffffffff80000; valaddr_reg:x3; val_offset:51654*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51654*0 + 3*322*FLEN/8, x4, x1, x2)

inst_17219:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828ffffffffc0000; valaddr_reg:x3; val_offset:51657*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51657*0 + 3*323*FLEN/8, x4, x1, x2)

inst_17220:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828ffffffffe0000; valaddr_reg:x3; val_offset:51660*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51660*0 + 3*324*FLEN/8, x4, x1, x2)

inst_17221:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828fffffffff0000; valaddr_reg:x3; val_offset:51663*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51663*0 + 3*325*FLEN/8, x4, x1, x2)

inst_17222:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828fffffffff8000; valaddr_reg:x3; val_offset:51666*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51666*0 + 3*326*FLEN/8, x4, x1, x2)

inst_17223:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828fffffffffc000; valaddr_reg:x3; val_offset:51669*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51669*0 + 3*327*FLEN/8, x4, x1, x2)

inst_17224:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828fffffffffe000; valaddr_reg:x3; val_offset:51672*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51672*0 + 3*328*FLEN/8, x4, x1, x2)

inst_17225:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828ffffffffff000; valaddr_reg:x3; val_offset:51675*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51675*0 + 3*329*FLEN/8, x4, x1, x2)

inst_17226:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828ffffffffff800; valaddr_reg:x3; val_offset:51678*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51678*0 + 3*330*FLEN/8, x4, x1, x2)

inst_17227:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828ffffffffffc00; valaddr_reg:x3; val_offset:51681*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51681*0 + 3*331*FLEN/8, x4, x1, x2)

inst_17228:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828ffffffffffe00; valaddr_reg:x3; val_offset:51684*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51684*0 + 3*332*FLEN/8, x4, x1, x2)

inst_17229:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828fffffffffff00; valaddr_reg:x3; val_offset:51687*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51687*0 + 3*333*FLEN/8, x4, x1, x2)

inst_17230:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828fffffffffff80; valaddr_reg:x3; val_offset:51690*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51690*0 + 3*334*FLEN/8, x4, x1, x2)

inst_17231:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828fffffffffffc0; valaddr_reg:x3; val_offset:51693*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51693*0 + 3*335*FLEN/8, x4, x1, x2)

inst_17232:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828fffffffffffe0; valaddr_reg:x3; val_offset:51696*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51696*0 + 3*336*FLEN/8, x4, x1, x2)

inst_17233:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828ffffffffffff0; valaddr_reg:x3; val_offset:51699*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51699*0 + 3*337*FLEN/8, x4, x1, x2)

inst_17234:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828ffffffffffff8; valaddr_reg:x3; val_offset:51702*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51702*0 + 3*338*FLEN/8, x4, x1, x2)

inst_17235:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828ffffffffffffc; valaddr_reg:x3; val_offset:51705*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51705*0 + 3*339*FLEN/8, x4, x1, x2)

inst_17236:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828ffffffffffffe; valaddr_reg:x3; val_offset:51708*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51708*0 + 3*340*FLEN/8, x4, x1, x2)

inst_17237:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bbdffdaf66c3; op2val:0x8000;
op3val:0x828fffffffffffff; valaddr_reg:x3; val_offset:51711*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51711*0 + 3*341*FLEN/8, x4, x1, x2)

inst_17238:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:51714*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51714*0 + 3*342*FLEN/8, x4, x1, x2)

inst_17239:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:51717*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51717*0 + 3*343*FLEN/8, x4, x1, x2)

inst_17240:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:51720*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51720*0 + 3*344*FLEN/8, x4, x1, x2)

inst_17241:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:51723*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51723*0 + 3*345*FLEN/8, x4, x1, x2)

inst_17242:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:51726*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51726*0 + 3*346*FLEN/8, x4, x1, x2)

inst_17243:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:51729*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51729*0 + 3*347*FLEN/8, x4, x1, x2)

inst_17244:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:51732*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51732*0 + 3*348*FLEN/8, x4, x1, x2)

inst_17245:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:51735*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51735*0 + 3*349*FLEN/8, x4, x1, x2)

inst_17246:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:51738*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51738*0 + 3*350*FLEN/8, x4, x1, x2)

inst_17247:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:51741*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51741*0 + 3*351*FLEN/8, x4, x1, x2)

inst_17248:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:51744*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51744*0 + 3*352*FLEN/8, x4, x1, x2)

inst_17249:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:51747*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51747*0 + 3*353*FLEN/8, x4, x1, x2)

inst_17250:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:51750*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51750*0 + 3*354*FLEN/8, x4, x1, x2)

inst_17251:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:51753*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51753*0 + 3*355*FLEN/8, x4, x1, x2)

inst_17252:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:51756*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51756*0 + 3*356*FLEN/8, x4, x1, x2)

inst_17253:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:51759*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51759*0 + 3*357*FLEN/8, x4, x1, x2)

inst_17254:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:51762*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51762*0 + 3*358*FLEN/8, x4, x1, x2)

inst_17255:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:51765*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51765*0 + 3*359*FLEN/8, x4, x1, x2)

inst_17256:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:51768*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51768*0 + 3*360*FLEN/8, x4, x1, x2)

inst_17257:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:51771*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51771*0 + 3*361*FLEN/8, x4, x1, x2)

inst_17258:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:51774*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51774*0 + 3*362*FLEN/8, x4, x1, x2)

inst_17259:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:51777*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51777*0 + 3*363*FLEN/8, x4, x1, x2)

inst_17260:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x110000000000000; valaddr_reg:x3; val_offset:51780*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51780*0 + 3*364*FLEN/8, x4, x1, x2)

inst_17261:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x110000000000001; valaddr_reg:x3; val_offset:51783*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51783*0 + 3*365*FLEN/8, x4, x1, x2)

inst_17262:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x110000000000003; valaddr_reg:x3; val_offset:51786*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51786*0 + 3*366*FLEN/8, x4, x1, x2)

inst_17263:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x110000000000007; valaddr_reg:x3; val_offset:51789*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51789*0 + 3*367*FLEN/8, x4, x1, x2)

inst_17264:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11000000000000f; valaddr_reg:x3; val_offset:51792*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51792*0 + 3*368*FLEN/8, x4, x1, x2)

inst_17265:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11000000000001f; valaddr_reg:x3; val_offset:51795*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51795*0 + 3*369*FLEN/8, x4, x1, x2)

inst_17266:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11000000000003f; valaddr_reg:x3; val_offset:51798*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51798*0 + 3*370*FLEN/8, x4, x1, x2)

inst_17267:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11000000000007f; valaddr_reg:x3; val_offset:51801*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51801*0 + 3*371*FLEN/8, x4, x1, x2)

inst_17268:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x1100000000000ff; valaddr_reg:x3; val_offset:51804*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51804*0 + 3*372*FLEN/8, x4, x1, x2)

inst_17269:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x1100000000001ff; valaddr_reg:x3; val_offset:51807*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51807*0 + 3*373*FLEN/8, x4, x1, x2)

inst_17270:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x1100000000003ff; valaddr_reg:x3; val_offset:51810*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51810*0 + 3*374*FLEN/8, x4, x1, x2)

inst_17271:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x1100000000007ff; valaddr_reg:x3; val_offset:51813*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51813*0 + 3*375*FLEN/8, x4, x1, x2)

inst_17272:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x110000000000fff; valaddr_reg:x3; val_offset:51816*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51816*0 + 3*376*FLEN/8, x4, x1, x2)

inst_17273:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x110000000001fff; valaddr_reg:x3; val_offset:51819*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51819*0 + 3*377*FLEN/8, x4, x1, x2)

inst_17274:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x110000000003fff; valaddr_reg:x3; val_offset:51822*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51822*0 + 3*378*FLEN/8, x4, x1, x2)

inst_17275:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x110000000007fff; valaddr_reg:x3; val_offset:51825*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51825*0 + 3*379*FLEN/8, x4, x1, x2)

inst_17276:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11000000000ffff; valaddr_reg:x3; val_offset:51828*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51828*0 + 3*380*FLEN/8, x4, x1, x2)

inst_17277:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11000000001ffff; valaddr_reg:x3; val_offset:51831*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51831*0 + 3*381*FLEN/8, x4, x1, x2)

inst_17278:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11000000003ffff; valaddr_reg:x3; val_offset:51834*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51834*0 + 3*382*FLEN/8, x4, x1, x2)

inst_17279:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11000000007ffff; valaddr_reg:x3; val_offset:51837*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51837*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_17280:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x1100000000fffff; valaddr_reg:x3; val_offset:51840*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51840*0 + 3*384*FLEN/8, x4, x1, x2)

inst_17281:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x1100000001fffff; valaddr_reg:x3; val_offset:51843*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51843*0 + 3*385*FLEN/8, x4, x1, x2)

inst_17282:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x1100000003fffff; valaddr_reg:x3; val_offset:51846*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51846*0 + 3*386*FLEN/8, x4, x1, x2)

inst_17283:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x1100000007fffff; valaddr_reg:x3; val_offset:51849*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51849*0 + 3*387*FLEN/8, x4, x1, x2)

inst_17284:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x110000000ffffff; valaddr_reg:x3; val_offset:51852*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51852*0 + 3*388*FLEN/8, x4, x1, x2)

inst_17285:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x110000001ffffff; valaddr_reg:x3; val_offset:51855*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51855*0 + 3*389*FLEN/8, x4, x1, x2)

inst_17286:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x110000003ffffff; valaddr_reg:x3; val_offset:51858*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51858*0 + 3*390*FLEN/8, x4, x1, x2)

inst_17287:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x110000007ffffff; valaddr_reg:x3; val_offset:51861*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51861*0 + 3*391*FLEN/8, x4, x1, x2)

inst_17288:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11000000fffffff; valaddr_reg:x3; val_offset:51864*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51864*0 + 3*392*FLEN/8, x4, x1, x2)

inst_17289:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11000001fffffff; valaddr_reg:x3; val_offset:51867*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51867*0 + 3*393*FLEN/8, x4, x1, x2)

inst_17290:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11000003fffffff; valaddr_reg:x3; val_offset:51870*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51870*0 + 3*394*FLEN/8, x4, x1, x2)

inst_17291:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11000007fffffff; valaddr_reg:x3; val_offset:51873*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51873*0 + 3*395*FLEN/8, x4, x1, x2)

inst_17292:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x1100000ffffffff; valaddr_reg:x3; val_offset:51876*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51876*0 + 3*396*FLEN/8, x4, x1, x2)

inst_17293:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x1100001ffffffff; valaddr_reg:x3; val_offset:51879*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51879*0 + 3*397*FLEN/8, x4, x1, x2)

inst_17294:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x1100003ffffffff; valaddr_reg:x3; val_offset:51882*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51882*0 + 3*398*FLEN/8, x4, x1, x2)

inst_17295:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x1100007ffffffff; valaddr_reg:x3; val_offset:51885*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51885*0 + 3*399*FLEN/8, x4, x1, x2)

inst_17296:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x110000fffffffff; valaddr_reg:x3; val_offset:51888*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51888*0 + 3*400*FLEN/8, x4, x1, x2)

inst_17297:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x110001fffffffff; valaddr_reg:x3; val_offset:51891*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51891*0 + 3*401*FLEN/8, x4, x1, x2)

inst_17298:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x110003fffffffff; valaddr_reg:x3; val_offset:51894*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51894*0 + 3*402*FLEN/8, x4, x1, x2)

inst_17299:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x110007fffffffff; valaddr_reg:x3; val_offset:51897*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51897*0 + 3*403*FLEN/8, x4, x1, x2)

inst_17300:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11000ffffffffff; valaddr_reg:x3; val_offset:51900*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51900*0 + 3*404*FLEN/8, x4, x1, x2)

inst_17301:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11001ffffffffff; valaddr_reg:x3; val_offset:51903*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51903*0 + 3*405*FLEN/8, x4, x1, x2)

inst_17302:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11003ffffffffff; valaddr_reg:x3; val_offset:51906*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51906*0 + 3*406*FLEN/8, x4, x1, x2)

inst_17303:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11007ffffffffff; valaddr_reg:x3; val_offset:51909*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51909*0 + 3*407*FLEN/8, x4, x1, x2)

inst_17304:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x1100fffffffffff; valaddr_reg:x3; val_offset:51912*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51912*0 + 3*408*FLEN/8, x4, x1, x2)

inst_17305:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x1101fffffffffff; valaddr_reg:x3; val_offset:51915*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51915*0 + 3*409*FLEN/8, x4, x1, x2)

inst_17306:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x1103fffffffffff; valaddr_reg:x3; val_offset:51918*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51918*0 + 3*410*FLEN/8, x4, x1, x2)

inst_17307:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x1107fffffffffff; valaddr_reg:x3; val_offset:51921*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51921*0 + 3*411*FLEN/8, x4, x1, x2)

inst_17308:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x110ffffffffffff; valaddr_reg:x3; val_offset:51924*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51924*0 + 3*412*FLEN/8, x4, x1, x2)

inst_17309:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x111ffffffffffff; valaddr_reg:x3; val_offset:51927*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51927*0 + 3*413*FLEN/8, x4, x1, x2)

inst_17310:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x113ffffffffffff; valaddr_reg:x3; val_offset:51930*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51930*0 + 3*414*FLEN/8, x4, x1, x2)

inst_17311:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x117ffffffffffff; valaddr_reg:x3; val_offset:51933*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51933*0 + 3*415*FLEN/8, x4, x1, x2)

inst_17312:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x118000000000000; valaddr_reg:x3; val_offset:51936*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51936*0 + 3*416*FLEN/8, x4, x1, x2)

inst_17313:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11c000000000000; valaddr_reg:x3; val_offset:51939*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51939*0 + 3*417*FLEN/8, x4, x1, x2)

inst_17314:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11e000000000000; valaddr_reg:x3; val_offset:51942*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51942*0 + 3*418*FLEN/8, x4, x1, x2)

inst_17315:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11f000000000000; valaddr_reg:x3; val_offset:51945*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51945*0 + 3*419*FLEN/8, x4, x1, x2)

inst_17316:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11f800000000000; valaddr_reg:x3; val_offset:51948*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51948*0 + 3*420*FLEN/8, x4, x1, x2)

inst_17317:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11fc00000000000; valaddr_reg:x3; val_offset:51951*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51951*0 + 3*421*FLEN/8, x4, x1, x2)

inst_17318:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11fe00000000000; valaddr_reg:x3; val_offset:51954*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51954*0 + 3*422*FLEN/8, x4, x1, x2)

inst_17319:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11ff00000000000; valaddr_reg:x3; val_offset:51957*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51957*0 + 3*423*FLEN/8, x4, x1, x2)

inst_17320:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11ff80000000000; valaddr_reg:x3; val_offset:51960*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51960*0 + 3*424*FLEN/8, x4, x1, x2)

inst_17321:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11ffc0000000000; valaddr_reg:x3; val_offset:51963*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51963*0 + 3*425*FLEN/8, x4, x1, x2)

inst_17322:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11ffe0000000000; valaddr_reg:x3; val_offset:51966*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51966*0 + 3*426*FLEN/8, x4, x1, x2)

inst_17323:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11fff0000000000; valaddr_reg:x3; val_offset:51969*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51969*0 + 3*427*FLEN/8, x4, x1, x2)

inst_17324:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11fff8000000000; valaddr_reg:x3; val_offset:51972*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51972*0 + 3*428*FLEN/8, x4, x1, x2)

inst_17325:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11fffc000000000; valaddr_reg:x3; val_offset:51975*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51975*0 + 3*429*FLEN/8, x4, x1, x2)

inst_17326:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11fffe000000000; valaddr_reg:x3; val_offset:51978*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51978*0 + 3*430*FLEN/8, x4, x1, x2)

inst_17327:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11ffff000000000; valaddr_reg:x3; val_offset:51981*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51981*0 + 3*431*FLEN/8, x4, x1, x2)

inst_17328:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11ffff800000000; valaddr_reg:x3; val_offset:51984*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51984*0 + 3*432*FLEN/8, x4, x1, x2)

inst_17329:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11ffffc00000000; valaddr_reg:x3; val_offset:51987*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51987*0 + 3*433*FLEN/8, x4, x1, x2)

inst_17330:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11ffffe00000000; valaddr_reg:x3; val_offset:51990*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51990*0 + 3*434*FLEN/8, x4, x1, x2)

inst_17331:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11fffff00000000; valaddr_reg:x3; val_offset:51993*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51993*0 + 3*435*FLEN/8, x4, x1, x2)

inst_17332:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11fffff80000000; valaddr_reg:x3; val_offset:51996*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51996*0 + 3*436*FLEN/8, x4, x1, x2)

inst_17333:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11fffffc0000000; valaddr_reg:x3; val_offset:51999*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51999*0 + 3*437*FLEN/8, x4, x1, x2)

inst_17334:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11fffffe0000000; valaddr_reg:x3; val_offset:52002*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52002*0 + 3*438*FLEN/8, x4, x1, x2)

inst_17335:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11ffffff0000000; valaddr_reg:x3; val_offset:52005*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52005*0 + 3*439*FLEN/8, x4, x1, x2)

inst_17336:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11ffffff8000000; valaddr_reg:x3; val_offset:52008*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52008*0 + 3*440*FLEN/8, x4, x1, x2)

inst_17337:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11ffffffc000000; valaddr_reg:x3; val_offset:52011*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52011*0 + 3*441*FLEN/8, x4, x1, x2)

inst_17338:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11ffffffe000000; valaddr_reg:x3; val_offset:52014*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52014*0 + 3*442*FLEN/8, x4, x1, x2)

inst_17339:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11fffffff000000; valaddr_reg:x3; val_offset:52017*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52017*0 + 3*443*FLEN/8, x4, x1, x2)

inst_17340:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11fffffff800000; valaddr_reg:x3; val_offset:52020*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52020*0 + 3*444*FLEN/8, x4, x1, x2)

inst_17341:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11fffffffc00000; valaddr_reg:x3; val_offset:52023*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52023*0 + 3*445*FLEN/8, x4, x1, x2)

inst_17342:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11fffffffe00000; valaddr_reg:x3; val_offset:52026*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52026*0 + 3*446*FLEN/8, x4, x1, x2)

inst_17343:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11ffffffff00000; valaddr_reg:x3; val_offset:52029*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52029*0 + 3*447*FLEN/8, x4, x1, x2)

inst_17344:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11ffffffff80000; valaddr_reg:x3; val_offset:52032*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52032*0 + 3*448*FLEN/8, x4, x1, x2)

inst_17345:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11ffffffffc0000; valaddr_reg:x3; val_offset:52035*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52035*0 + 3*449*FLEN/8, x4, x1, x2)

inst_17346:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11ffffffffe0000; valaddr_reg:x3; val_offset:52038*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52038*0 + 3*450*FLEN/8, x4, x1, x2)

inst_17347:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11fffffffff0000; valaddr_reg:x3; val_offset:52041*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52041*0 + 3*451*FLEN/8, x4, x1, x2)

inst_17348:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11fffffffff8000; valaddr_reg:x3; val_offset:52044*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52044*0 + 3*452*FLEN/8, x4, x1, x2)

inst_17349:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11fffffffffc000; valaddr_reg:x3; val_offset:52047*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52047*0 + 3*453*FLEN/8, x4, x1, x2)

inst_17350:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11fffffffffe000; valaddr_reg:x3; val_offset:52050*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52050*0 + 3*454*FLEN/8, x4, x1, x2)

inst_17351:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11ffffffffff000; valaddr_reg:x3; val_offset:52053*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52053*0 + 3*455*FLEN/8, x4, x1, x2)

inst_17352:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11ffffffffff800; valaddr_reg:x3; val_offset:52056*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52056*0 + 3*456*FLEN/8, x4, x1, x2)

inst_17353:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11ffffffffffc00; valaddr_reg:x3; val_offset:52059*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52059*0 + 3*457*FLEN/8, x4, x1, x2)

inst_17354:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11ffffffffffe00; valaddr_reg:x3; val_offset:52062*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52062*0 + 3*458*FLEN/8, x4, x1, x2)

inst_17355:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11fffffffffff00; valaddr_reg:x3; val_offset:52065*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52065*0 + 3*459*FLEN/8, x4, x1, x2)

inst_17356:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11fffffffffff80; valaddr_reg:x3; val_offset:52068*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52068*0 + 3*460*FLEN/8, x4, x1, x2)

inst_17357:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11fffffffffffc0; valaddr_reg:x3; val_offset:52071*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52071*0 + 3*461*FLEN/8, x4, x1, x2)

inst_17358:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11fffffffffffe0; valaddr_reg:x3; val_offset:52074*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52074*0 + 3*462*FLEN/8, x4, x1, x2)

inst_17359:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11ffffffffffff0; valaddr_reg:x3; val_offset:52077*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52077*0 + 3*463*FLEN/8, x4, x1, x2)

inst_17360:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11ffffffffffff8; valaddr_reg:x3; val_offset:52080*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52080*0 + 3*464*FLEN/8, x4, x1, x2)

inst_17361:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11ffffffffffffc; valaddr_reg:x3; val_offset:52083*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52083*0 + 3*465*FLEN/8, x4, x1, x2)

inst_17362:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11ffffffffffffe; valaddr_reg:x3; val_offset:52086*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52086*0 + 3*466*FLEN/8, x4, x1, x2)

inst_17363:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cfa194f65d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cfa194f65d4b; op2val:0x0;
op3val:0x11fffffffffffff; valaddr_reg:x3; val_offset:52089*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52089*0 + 3*467*FLEN/8, x4, x1, x2)

inst_17364:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:52092*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52092*0 + 3*468*FLEN/8, x4, x1, x2)

inst_17365:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:52095*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52095*0 + 3*469*FLEN/8, x4, x1, x2)

inst_17366:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:52098*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52098*0 + 3*470*FLEN/8, x4, x1, x2)

inst_17367:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:52101*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52101*0 + 3*471*FLEN/8, x4, x1, x2)

inst_17368:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:52104*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52104*0 + 3*472*FLEN/8, x4, x1, x2)

inst_17369:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:52107*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52107*0 + 3*473*FLEN/8, x4, x1, x2)

inst_17370:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:52110*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52110*0 + 3*474*FLEN/8, x4, x1, x2)

inst_17371:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:52113*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52113*0 + 3*475*FLEN/8, x4, x1, x2)

inst_17372:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:52116*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52116*0 + 3*476*FLEN/8, x4, x1, x2)

inst_17373:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:52119*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52119*0 + 3*477*FLEN/8, x4, x1, x2)

inst_17374:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:52122*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52122*0 + 3*478*FLEN/8, x4, x1, x2)

inst_17375:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:52125*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52125*0 + 3*479*FLEN/8, x4, x1, x2)

inst_17376:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:52128*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52128*0 + 3*480*FLEN/8, x4, x1, x2)

inst_17377:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:52131*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52131*0 + 3*481*FLEN/8, x4, x1, x2)

inst_17378:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:52134*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52134*0 + 3*482*FLEN/8, x4, x1, x2)

inst_17379:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:52137*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52137*0 + 3*483*FLEN/8, x4, x1, x2)

inst_17380:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:52140*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52140*0 + 3*484*FLEN/8, x4, x1, x2)

inst_17381:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:52143*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52143*0 + 3*485*FLEN/8, x4, x1, x2)

inst_17382:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:52146*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52146*0 + 3*486*FLEN/8, x4, x1, x2)

inst_17383:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:52149*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52149*0 + 3*487*FLEN/8, x4, x1, x2)

inst_17384:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:52152*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52152*0 + 3*488*FLEN/8, x4, x1, x2)

inst_17385:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:52155*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52155*0 + 3*489*FLEN/8, x4, x1, x2)

inst_17386:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x40000000000000; valaddr_reg:x3; val_offset:52158*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52158*0 + 3*490*FLEN/8, x4, x1, x2)

inst_17387:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x40000000000001; valaddr_reg:x3; val_offset:52161*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52161*0 + 3*491*FLEN/8, x4, x1, x2)

inst_17388:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x40000000000003; valaddr_reg:x3; val_offset:52164*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52164*0 + 3*492*FLEN/8, x4, x1, x2)

inst_17389:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x40000000000007; valaddr_reg:x3; val_offset:52167*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52167*0 + 3*493*FLEN/8, x4, x1, x2)

inst_17390:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4000000000000f; valaddr_reg:x3; val_offset:52170*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52170*0 + 3*494*FLEN/8, x4, x1, x2)

inst_17391:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4000000000001f; valaddr_reg:x3; val_offset:52173*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52173*0 + 3*495*FLEN/8, x4, x1, x2)

inst_17392:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4000000000003f; valaddr_reg:x3; val_offset:52176*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52176*0 + 3*496*FLEN/8, x4, x1, x2)

inst_17393:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4000000000007f; valaddr_reg:x3; val_offset:52179*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52179*0 + 3*497*FLEN/8, x4, x1, x2)

inst_17394:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x400000000000ff; valaddr_reg:x3; val_offset:52182*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52182*0 + 3*498*FLEN/8, x4, x1, x2)

inst_17395:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x400000000001ff; valaddr_reg:x3; val_offset:52185*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52185*0 + 3*499*FLEN/8, x4, x1, x2)

inst_17396:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x400000000003ff; valaddr_reg:x3; val_offset:52188*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52188*0 + 3*500*FLEN/8, x4, x1, x2)

inst_17397:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x400000000007ff; valaddr_reg:x3; val_offset:52191*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52191*0 + 3*501*FLEN/8, x4, x1, x2)

inst_17398:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x40000000000fff; valaddr_reg:x3; val_offset:52194*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52194*0 + 3*502*FLEN/8, x4, x1, x2)

inst_17399:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x40000000001fff; valaddr_reg:x3; val_offset:52197*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52197*0 + 3*503*FLEN/8, x4, x1, x2)

inst_17400:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x40000000003fff; valaddr_reg:x3; val_offset:52200*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52200*0 + 3*504*FLEN/8, x4, x1, x2)

inst_17401:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x40000000007fff; valaddr_reg:x3; val_offset:52203*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52203*0 + 3*505*FLEN/8, x4, x1, x2)

inst_17402:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4000000000ffff; valaddr_reg:x3; val_offset:52206*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52206*0 + 3*506*FLEN/8, x4, x1, x2)

inst_17403:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4000000001ffff; valaddr_reg:x3; val_offset:52209*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52209*0 + 3*507*FLEN/8, x4, x1, x2)

inst_17404:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4000000003ffff; valaddr_reg:x3; val_offset:52212*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52212*0 + 3*508*FLEN/8, x4, x1, x2)

inst_17405:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4000000007ffff; valaddr_reg:x3; val_offset:52215*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52215*0 + 3*509*FLEN/8, x4, x1, x2)

inst_17406:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x400000000fffff; valaddr_reg:x3; val_offset:52218*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52218*0 + 3*510*FLEN/8, x4, x1, x2)

inst_17407:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x400000001fffff; valaddr_reg:x3; val_offset:52221*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52221*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_17408:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x400000003fffff; valaddr_reg:x3; val_offset:52224*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52224*0 + 3*512*FLEN/8, x4, x1, x2)

inst_17409:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x400000007fffff; valaddr_reg:x3; val_offset:52227*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52227*0 + 3*513*FLEN/8, x4, x1, x2)

inst_17410:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x40000000ffffff; valaddr_reg:x3; val_offset:52230*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52230*0 + 3*514*FLEN/8, x4, x1, x2)

inst_17411:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x40000001ffffff; valaddr_reg:x3; val_offset:52233*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52233*0 + 3*515*FLEN/8, x4, x1, x2)

inst_17412:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x40000003ffffff; valaddr_reg:x3; val_offset:52236*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52236*0 + 3*516*FLEN/8, x4, x1, x2)

inst_17413:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x40000007ffffff; valaddr_reg:x3; val_offset:52239*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52239*0 + 3*517*FLEN/8, x4, x1, x2)

inst_17414:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4000000fffffff; valaddr_reg:x3; val_offset:52242*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52242*0 + 3*518*FLEN/8, x4, x1, x2)

inst_17415:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4000001fffffff; valaddr_reg:x3; val_offset:52245*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52245*0 + 3*519*FLEN/8, x4, x1, x2)

inst_17416:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4000003fffffff; valaddr_reg:x3; val_offset:52248*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52248*0 + 3*520*FLEN/8, x4, x1, x2)

inst_17417:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4000007fffffff; valaddr_reg:x3; val_offset:52251*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52251*0 + 3*521*FLEN/8, x4, x1, x2)

inst_17418:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x400000ffffffff; valaddr_reg:x3; val_offset:52254*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52254*0 + 3*522*FLEN/8, x4, x1, x2)

inst_17419:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x400001ffffffff; valaddr_reg:x3; val_offset:52257*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52257*0 + 3*523*FLEN/8, x4, x1, x2)

inst_17420:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x400003ffffffff; valaddr_reg:x3; val_offset:52260*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52260*0 + 3*524*FLEN/8, x4, x1, x2)

inst_17421:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x400007ffffffff; valaddr_reg:x3; val_offset:52263*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52263*0 + 3*525*FLEN/8, x4, x1, x2)

inst_17422:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x40000fffffffff; valaddr_reg:x3; val_offset:52266*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52266*0 + 3*526*FLEN/8, x4, x1, x2)

inst_17423:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x40001fffffffff; valaddr_reg:x3; val_offset:52269*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52269*0 + 3*527*FLEN/8, x4, x1, x2)

inst_17424:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x40003fffffffff; valaddr_reg:x3; val_offset:52272*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52272*0 + 3*528*FLEN/8, x4, x1, x2)

inst_17425:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x40007fffffffff; valaddr_reg:x3; val_offset:52275*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52275*0 + 3*529*FLEN/8, x4, x1, x2)

inst_17426:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4000ffffffffff; valaddr_reg:x3; val_offset:52278*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52278*0 + 3*530*FLEN/8, x4, x1, x2)

inst_17427:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4001ffffffffff; valaddr_reg:x3; val_offset:52281*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52281*0 + 3*531*FLEN/8, x4, x1, x2)

inst_17428:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4003ffffffffff; valaddr_reg:x3; val_offset:52284*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52284*0 + 3*532*FLEN/8, x4, x1, x2)

inst_17429:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4007ffffffffff; valaddr_reg:x3; val_offset:52287*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52287*0 + 3*533*FLEN/8, x4, x1, x2)

inst_17430:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x400fffffffffff; valaddr_reg:x3; val_offset:52290*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52290*0 + 3*534*FLEN/8, x4, x1, x2)

inst_17431:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x401fffffffffff; valaddr_reg:x3; val_offset:52293*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52293*0 + 3*535*FLEN/8, x4, x1, x2)

inst_17432:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x403fffffffffff; valaddr_reg:x3; val_offset:52296*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52296*0 + 3*536*FLEN/8, x4, x1, x2)

inst_17433:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x407fffffffffff; valaddr_reg:x3; val_offset:52299*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52299*0 + 3*537*FLEN/8, x4, x1, x2)

inst_17434:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x40ffffffffffff; valaddr_reg:x3; val_offset:52302*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52302*0 + 3*538*FLEN/8, x4, x1, x2)

inst_17435:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x41ffffffffffff; valaddr_reg:x3; val_offset:52305*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52305*0 + 3*539*FLEN/8, x4, x1, x2)

inst_17436:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x43ffffffffffff; valaddr_reg:x3; val_offset:52308*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52308*0 + 3*540*FLEN/8, x4, x1, x2)

inst_17437:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x47ffffffffffff; valaddr_reg:x3; val_offset:52311*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52311*0 + 3*541*FLEN/8, x4, x1, x2)

inst_17438:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x48000000000000; valaddr_reg:x3; val_offset:52314*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52314*0 + 3*542*FLEN/8, x4, x1, x2)

inst_17439:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4c000000000000; valaddr_reg:x3; val_offset:52317*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52317*0 + 3*543*FLEN/8, x4, x1, x2)

inst_17440:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4e000000000000; valaddr_reg:x3; val_offset:52320*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52320*0 + 3*544*FLEN/8, x4, x1, x2)

inst_17441:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4f000000000000; valaddr_reg:x3; val_offset:52323*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52323*0 + 3*545*FLEN/8, x4, x1, x2)

inst_17442:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4f800000000000; valaddr_reg:x3; val_offset:52326*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52326*0 + 3*546*FLEN/8, x4, x1, x2)

inst_17443:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4fc00000000000; valaddr_reg:x3; val_offset:52329*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52329*0 + 3*547*FLEN/8, x4, x1, x2)

inst_17444:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4fe00000000000; valaddr_reg:x3; val_offset:52332*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52332*0 + 3*548*FLEN/8, x4, x1, x2)

inst_17445:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4ff00000000000; valaddr_reg:x3; val_offset:52335*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52335*0 + 3*549*FLEN/8, x4, x1, x2)

inst_17446:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4ff80000000000; valaddr_reg:x3; val_offset:52338*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52338*0 + 3*550*FLEN/8, x4, x1, x2)

inst_17447:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4ffc0000000000; valaddr_reg:x3; val_offset:52341*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52341*0 + 3*551*FLEN/8, x4, x1, x2)

inst_17448:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4ffe0000000000; valaddr_reg:x3; val_offset:52344*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52344*0 + 3*552*FLEN/8, x4, x1, x2)

inst_17449:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4fff0000000000; valaddr_reg:x3; val_offset:52347*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52347*0 + 3*553*FLEN/8, x4, x1, x2)

inst_17450:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4fff8000000000; valaddr_reg:x3; val_offset:52350*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52350*0 + 3*554*FLEN/8, x4, x1, x2)

inst_17451:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4fffc000000000; valaddr_reg:x3; val_offset:52353*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52353*0 + 3*555*FLEN/8, x4, x1, x2)

inst_17452:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4fffe000000000; valaddr_reg:x3; val_offset:52356*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52356*0 + 3*556*FLEN/8, x4, x1, x2)

inst_17453:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4ffff000000000; valaddr_reg:x3; val_offset:52359*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52359*0 + 3*557*FLEN/8, x4, x1, x2)

inst_17454:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4ffff800000000; valaddr_reg:x3; val_offset:52362*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52362*0 + 3*558*FLEN/8, x4, x1, x2)

inst_17455:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4ffffc00000000; valaddr_reg:x3; val_offset:52365*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52365*0 + 3*559*FLEN/8, x4, x1, x2)

inst_17456:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4ffffe00000000; valaddr_reg:x3; val_offset:52368*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52368*0 + 3*560*FLEN/8, x4, x1, x2)

inst_17457:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4fffff00000000; valaddr_reg:x3; val_offset:52371*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52371*0 + 3*561*FLEN/8, x4, x1, x2)

inst_17458:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4fffff80000000; valaddr_reg:x3; val_offset:52374*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52374*0 + 3*562*FLEN/8, x4, x1, x2)

inst_17459:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4fffffc0000000; valaddr_reg:x3; val_offset:52377*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52377*0 + 3*563*FLEN/8, x4, x1, x2)

inst_17460:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4fffffe0000000; valaddr_reg:x3; val_offset:52380*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52380*0 + 3*564*FLEN/8, x4, x1, x2)

inst_17461:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4ffffff0000000; valaddr_reg:x3; val_offset:52383*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52383*0 + 3*565*FLEN/8, x4, x1, x2)

inst_17462:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4ffffff8000000; valaddr_reg:x3; val_offset:52386*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52386*0 + 3*566*FLEN/8, x4, x1, x2)

inst_17463:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4ffffffc000000; valaddr_reg:x3; val_offset:52389*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52389*0 + 3*567*FLEN/8, x4, x1, x2)

inst_17464:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4ffffffe000000; valaddr_reg:x3; val_offset:52392*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52392*0 + 3*568*FLEN/8, x4, x1, x2)

inst_17465:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4fffffff000000; valaddr_reg:x3; val_offset:52395*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52395*0 + 3*569*FLEN/8, x4, x1, x2)

inst_17466:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4fffffff800000; valaddr_reg:x3; val_offset:52398*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52398*0 + 3*570*FLEN/8, x4, x1, x2)

inst_17467:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4fffffffc00000; valaddr_reg:x3; val_offset:52401*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52401*0 + 3*571*FLEN/8, x4, x1, x2)

inst_17468:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4fffffffe00000; valaddr_reg:x3; val_offset:52404*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52404*0 + 3*572*FLEN/8, x4, x1, x2)

inst_17469:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4ffffffff00000; valaddr_reg:x3; val_offset:52407*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52407*0 + 3*573*FLEN/8, x4, x1, x2)

inst_17470:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4ffffffff80000; valaddr_reg:x3; val_offset:52410*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52410*0 + 3*574*FLEN/8, x4, x1, x2)

inst_17471:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4ffffffffc0000; valaddr_reg:x3; val_offset:52413*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52413*0 + 3*575*FLEN/8, x4, x1, x2)

inst_17472:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4ffffffffe0000; valaddr_reg:x3; val_offset:52416*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52416*0 + 3*576*FLEN/8, x4, x1, x2)

inst_17473:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4fffffffff0000; valaddr_reg:x3; val_offset:52419*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52419*0 + 3*577*FLEN/8, x4, x1, x2)

inst_17474:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4fffffffff8000; valaddr_reg:x3; val_offset:52422*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52422*0 + 3*578*FLEN/8, x4, x1, x2)

inst_17475:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4fffffffffc000; valaddr_reg:x3; val_offset:52425*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52425*0 + 3*579*FLEN/8, x4, x1, x2)

inst_17476:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4fffffffffe000; valaddr_reg:x3; val_offset:52428*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52428*0 + 3*580*FLEN/8, x4, x1, x2)

inst_17477:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4ffffffffff000; valaddr_reg:x3; val_offset:52431*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52431*0 + 3*581*FLEN/8, x4, x1, x2)

inst_17478:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4ffffffffff800; valaddr_reg:x3; val_offset:52434*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52434*0 + 3*582*FLEN/8, x4, x1, x2)

inst_17479:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4ffffffffffc00; valaddr_reg:x3; val_offset:52437*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52437*0 + 3*583*FLEN/8, x4, x1, x2)

inst_17480:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4ffffffffffe00; valaddr_reg:x3; val_offset:52440*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52440*0 + 3*584*FLEN/8, x4, x1, x2)

inst_17481:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4fffffffffff00; valaddr_reg:x3; val_offset:52443*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52443*0 + 3*585*FLEN/8, x4, x1, x2)

inst_17482:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4fffffffffff80; valaddr_reg:x3; val_offset:52446*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52446*0 + 3*586*FLEN/8, x4, x1, x2)

inst_17483:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4fffffffffffc0; valaddr_reg:x3; val_offset:52449*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52449*0 + 3*587*FLEN/8, x4, x1, x2)

inst_17484:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4fffffffffffe0; valaddr_reg:x3; val_offset:52452*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52452*0 + 3*588*FLEN/8, x4, x1, x2)

inst_17485:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4ffffffffffff0; valaddr_reg:x3; val_offset:52455*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52455*0 + 3*589*FLEN/8, x4, x1, x2)

inst_17486:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4ffffffffffff8; valaddr_reg:x3; val_offset:52458*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52458*0 + 3*590*FLEN/8, x4, x1, x2)

inst_17487:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4ffffffffffffc; valaddr_reg:x3; val_offset:52461*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52461*0 + 3*591*FLEN/8, x4, x1, x2)

inst_17488:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4ffffffffffffe; valaddr_reg:x3; val_offset:52464*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52464*0 + 3*592*FLEN/8, x4, x1, x2)

inst_17489:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2e14db862f78b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82e14db862f78b; op2val:0x0;
op3val:0x4fffffffffffff; valaddr_reg:x3; val_offset:52467*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52467*0 + 3*593*FLEN/8, x4, x1, x2)

inst_17490:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:52470*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52470*0 + 3*594*FLEN/8, x4, x1, x2)

inst_17491:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:52473*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52473*0 + 3*595*FLEN/8, x4, x1, x2)

inst_17492:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:52476*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52476*0 + 3*596*FLEN/8, x4, x1, x2)

inst_17493:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:52479*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52479*0 + 3*597*FLEN/8, x4, x1, x2)

inst_17494:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:52482*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52482*0 + 3*598*FLEN/8, x4, x1, x2)

inst_17495:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:52485*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52485*0 + 3*599*FLEN/8, x4, x1, x2)

inst_17496:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:52488*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52488*0 + 3*600*FLEN/8, x4, x1, x2)

inst_17497:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:52491*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52491*0 + 3*601*FLEN/8, x4, x1, x2)

inst_17498:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:52494*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52494*0 + 3*602*FLEN/8, x4, x1, x2)

inst_17499:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:52497*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52497*0 + 3*603*FLEN/8, x4, x1, x2)

inst_17500:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:52500*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52500*0 + 3*604*FLEN/8, x4, x1, x2)

inst_17501:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:52503*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52503*0 + 3*605*FLEN/8, x4, x1, x2)

inst_17502:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:52506*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52506*0 + 3*606*FLEN/8, x4, x1, x2)

inst_17503:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:52509*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52509*0 + 3*607*FLEN/8, x4, x1, x2)

inst_17504:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:52512*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52512*0 + 3*608*FLEN/8, x4, x1, x2)

inst_17505:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:52515*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52515*0 + 3*609*FLEN/8, x4, x1, x2)

inst_17506:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:52518*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52518*0 + 3*610*FLEN/8, x4, x1, x2)

inst_17507:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:52521*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52521*0 + 3*611*FLEN/8, x4, x1, x2)

inst_17508:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:52524*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52524*0 + 3*612*FLEN/8, x4, x1, x2)

inst_17509:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:52527*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52527*0 + 3*613*FLEN/8, x4, x1, x2)

inst_17510:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:52530*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52530*0 + 3*614*FLEN/8, x4, x1, x2)

inst_17511:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:52533*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52533*0 + 3*615*FLEN/8, x4, x1, x2)

inst_17512:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x20000000000000; valaddr_reg:x3; val_offset:52536*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52536*0 + 3*616*FLEN/8, x4, x1, x2)

inst_17513:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x20000000000001; valaddr_reg:x3; val_offset:52539*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52539*0 + 3*617*FLEN/8, x4, x1, x2)

inst_17514:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x20000000000003; valaddr_reg:x3; val_offset:52542*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52542*0 + 3*618*FLEN/8, x4, x1, x2)

inst_17515:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x20000000000007; valaddr_reg:x3; val_offset:52545*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52545*0 + 3*619*FLEN/8, x4, x1, x2)

inst_17516:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2000000000000f; valaddr_reg:x3; val_offset:52548*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52548*0 + 3*620*FLEN/8, x4, x1, x2)

inst_17517:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2000000000001f; valaddr_reg:x3; val_offset:52551*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52551*0 + 3*621*FLEN/8, x4, x1, x2)

inst_17518:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2000000000003f; valaddr_reg:x3; val_offset:52554*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52554*0 + 3*622*FLEN/8, x4, x1, x2)

inst_17519:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2000000000007f; valaddr_reg:x3; val_offset:52557*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52557*0 + 3*623*FLEN/8, x4, x1, x2)

inst_17520:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x200000000000ff; valaddr_reg:x3; val_offset:52560*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52560*0 + 3*624*FLEN/8, x4, x1, x2)

inst_17521:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x200000000001ff; valaddr_reg:x3; val_offset:52563*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52563*0 + 3*625*FLEN/8, x4, x1, x2)

inst_17522:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x200000000003ff; valaddr_reg:x3; val_offset:52566*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52566*0 + 3*626*FLEN/8, x4, x1, x2)

inst_17523:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x200000000007ff; valaddr_reg:x3; val_offset:52569*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52569*0 + 3*627*FLEN/8, x4, x1, x2)

inst_17524:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x20000000000fff; valaddr_reg:x3; val_offset:52572*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52572*0 + 3*628*FLEN/8, x4, x1, x2)

inst_17525:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x20000000001fff; valaddr_reg:x3; val_offset:52575*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52575*0 + 3*629*FLEN/8, x4, x1, x2)

inst_17526:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x20000000003fff; valaddr_reg:x3; val_offset:52578*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52578*0 + 3*630*FLEN/8, x4, x1, x2)

inst_17527:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x20000000007fff; valaddr_reg:x3; val_offset:52581*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52581*0 + 3*631*FLEN/8, x4, x1, x2)

inst_17528:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2000000000ffff; valaddr_reg:x3; val_offset:52584*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52584*0 + 3*632*FLEN/8, x4, x1, x2)

inst_17529:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2000000001ffff; valaddr_reg:x3; val_offset:52587*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52587*0 + 3*633*FLEN/8, x4, x1, x2)

inst_17530:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2000000003ffff; valaddr_reg:x3; val_offset:52590*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52590*0 + 3*634*FLEN/8, x4, x1, x2)

inst_17531:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2000000007ffff; valaddr_reg:x3; val_offset:52593*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52593*0 + 3*635*FLEN/8, x4, x1, x2)

inst_17532:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x200000000fffff; valaddr_reg:x3; val_offset:52596*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52596*0 + 3*636*FLEN/8, x4, x1, x2)

inst_17533:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x200000001fffff; valaddr_reg:x3; val_offset:52599*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52599*0 + 3*637*FLEN/8, x4, x1, x2)

inst_17534:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x200000003fffff; valaddr_reg:x3; val_offset:52602*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52602*0 + 3*638*FLEN/8, x4, x1, x2)

inst_17535:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x200000007fffff; valaddr_reg:x3; val_offset:52605*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52605*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_17536:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x20000000ffffff; valaddr_reg:x3; val_offset:52608*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52608*0 + 3*640*FLEN/8, x4, x1, x2)

inst_17537:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x20000001ffffff; valaddr_reg:x3; val_offset:52611*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52611*0 + 3*641*FLEN/8, x4, x1, x2)

inst_17538:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x20000003ffffff; valaddr_reg:x3; val_offset:52614*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52614*0 + 3*642*FLEN/8, x4, x1, x2)

inst_17539:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x20000007ffffff; valaddr_reg:x3; val_offset:52617*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52617*0 + 3*643*FLEN/8, x4, x1, x2)

inst_17540:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2000000fffffff; valaddr_reg:x3; val_offset:52620*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52620*0 + 3*644*FLEN/8, x4, x1, x2)

inst_17541:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2000001fffffff; valaddr_reg:x3; val_offset:52623*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52623*0 + 3*645*FLEN/8, x4, x1, x2)

inst_17542:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2000003fffffff; valaddr_reg:x3; val_offset:52626*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52626*0 + 3*646*FLEN/8, x4, x1, x2)

inst_17543:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2000007fffffff; valaddr_reg:x3; val_offset:52629*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52629*0 + 3*647*FLEN/8, x4, x1, x2)

inst_17544:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x200000ffffffff; valaddr_reg:x3; val_offset:52632*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52632*0 + 3*648*FLEN/8, x4, x1, x2)

inst_17545:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x200001ffffffff; valaddr_reg:x3; val_offset:52635*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52635*0 + 3*649*FLEN/8, x4, x1, x2)

inst_17546:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x200003ffffffff; valaddr_reg:x3; val_offset:52638*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52638*0 + 3*650*FLEN/8, x4, x1, x2)

inst_17547:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x200007ffffffff; valaddr_reg:x3; val_offset:52641*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52641*0 + 3*651*FLEN/8, x4, x1, x2)

inst_17548:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x20000fffffffff; valaddr_reg:x3; val_offset:52644*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52644*0 + 3*652*FLEN/8, x4, x1, x2)

inst_17549:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x20001fffffffff; valaddr_reg:x3; val_offset:52647*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52647*0 + 3*653*FLEN/8, x4, x1, x2)

inst_17550:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x20003fffffffff; valaddr_reg:x3; val_offset:52650*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52650*0 + 3*654*FLEN/8, x4, x1, x2)

inst_17551:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x20007fffffffff; valaddr_reg:x3; val_offset:52653*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52653*0 + 3*655*FLEN/8, x4, x1, x2)

inst_17552:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2000ffffffffff; valaddr_reg:x3; val_offset:52656*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52656*0 + 3*656*FLEN/8, x4, x1, x2)

inst_17553:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2001ffffffffff; valaddr_reg:x3; val_offset:52659*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52659*0 + 3*657*FLEN/8, x4, x1, x2)

inst_17554:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2003ffffffffff; valaddr_reg:x3; val_offset:52662*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52662*0 + 3*658*FLEN/8, x4, x1, x2)

inst_17555:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2007ffffffffff; valaddr_reg:x3; val_offset:52665*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52665*0 + 3*659*FLEN/8, x4, x1, x2)

inst_17556:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x200fffffffffff; valaddr_reg:x3; val_offset:52668*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52668*0 + 3*660*FLEN/8, x4, x1, x2)

inst_17557:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x201fffffffffff; valaddr_reg:x3; val_offset:52671*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52671*0 + 3*661*FLEN/8, x4, x1, x2)

inst_17558:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x203fffffffffff; valaddr_reg:x3; val_offset:52674*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52674*0 + 3*662*FLEN/8, x4, x1, x2)

inst_17559:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x207fffffffffff; valaddr_reg:x3; val_offset:52677*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52677*0 + 3*663*FLEN/8, x4, x1, x2)

inst_17560:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x20ffffffffffff; valaddr_reg:x3; val_offset:52680*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52680*0 + 3*664*FLEN/8, x4, x1, x2)

inst_17561:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x21ffffffffffff; valaddr_reg:x3; val_offset:52683*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52683*0 + 3*665*FLEN/8, x4, x1, x2)

inst_17562:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x23ffffffffffff; valaddr_reg:x3; val_offset:52686*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52686*0 + 3*666*FLEN/8, x4, x1, x2)

inst_17563:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x27ffffffffffff; valaddr_reg:x3; val_offset:52689*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52689*0 + 3*667*FLEN/8, x4, x1, x2)

inst_17564:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x28000000000000; valaddr_reg:x3; val_offset:52692*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52692*0 + 3*668*FLEN/8, x4, x1, x2)

inst_17565:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2c000000000000; valaddr_reg:x3; val_offset:52695*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52695*0 + 3*669*FLEN/8, x4, x1, x2)

inst_17566:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2e000000000000; valaddr_reg:x3; val_offset:52698*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52698*0 + 3*670*FLEN/8, x4, x1, x2)

inst_17567:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2f000000000000; valaddr_reg:x3; val_offset:52701*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52701*0 + 3*671*FLEN/8, x4, x1, x2)

inst_17568:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2f800000000000; valaddr_reg:x3; val_offset:52704*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52704*0 + 3*672*FLEN/8, x4, x1, x2)

inst_17569:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2fc00000000000; valaddr_reg:x3; val_offset:52707*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52707*0 + 3*673*FLEN/8, x4, x1, x2)

inst_17570:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2fe00000000000; valaddr_reg:x3; val_offset:52710*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52710*0 + 3*674*FLEN/8, x4, x1, x2)

inst_17571:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2ff00000000000; valaddr_reg:x3; val_offset:52713*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52713*0 + 3*675*FLEN/8, x4, x1, x2)

inst_17572:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2ff80000000000; valaddr_reg:x3; val_offset:52716*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52716*0 + 3*676*FLEN/8, x4, x1, x2)

inst_17573:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2ffc0000000000; valaddr_reg:x3; val_offset:52719*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52719*0 + 3*677*FLEN/8, x4, x1, x2)

inst_17574:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2ffe0000000000; valaddr_reg:x3; val_offset:52722*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52722*0 + 3*678*FLEN/8, x4, x1, x2)

inst_17575:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2fff0000000000; valaddr_reg:x3; val_offset:52725*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52725*0 + 3*679*FLEN/8, x4, x1, x2)

inst_17576:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2fff8000000000; valaddr_reg:x3; val_offset:52728*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52728*0 + 3*680*FLEN/8, x4, x1, x2)

inst_17577:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2fffc000000000; valaddr_reg:x3; val_offset:52731*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52731*0 + 3*681*FLEN/8, x4, x1, x2)

inst_17578:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2fffe000000000; valaddr_reg:x3; val_offset:52734*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52734*0 + 3*682*FLEN/8, x4, x1, x2)

inst_17579:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2ffff000000000; valaddr_reg:x3; val_offset:52737*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52737*0 + 3*683*FLEN/8, x4, x1, x2)

inst_17580:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2ffff800000000; valaddr_reg:x3; val_offset:52740*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52740*0 + 3*684*FLEN/8, x4, x1, x2)

inst_17581:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2ffffc00000000; valaddr_reg:x3; val_offset:52743*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52743*0 + 3*685*FLEN/8, x4, x1, x2)

inst_17582:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2ffffe00000000; valaddr_reg:x3; val_offset:52746*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52746*0 + 3*686*FLEN/8, x4, x1, x2)

inst_17583:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2fffff00000000; valaddr_reg:x3; val_offset:52749*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52749*0 + 3*687*FLEN/8, x4, x1, x2)

inst_17584:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2fffff80000000; valaddr_reg:x3; val_offset:52752*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52752*0 + 3*688*FLEN/8, x4, x1, x2)

inst_17585:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2fffffc0000000; valaddr_reg:x3; val_offset:52755*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52755*0 + 3*689*FLEN/8, x4, x1, x2)

inst_17586:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2fffffe0000000; valaddr_reg:x3; val_offset:52758*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52758*0 + 3*690*FLEN/8, x4, x1, x2)

inst_17587:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2ffffff0000000; valaddr_reg:x3; val_offset:52761*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52761*0 + 3*691*FLEN/8, x4, x1, x2)

inst_17588:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2ffffff8000000; valaddr_reg:x3; val_offset:52764*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52764*0 + 3*692*FLEN/8, x4, x1, x2)

inst_17589:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2ffffffc000000; valaddr_reg:x3; val_offset:52767*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52767*0 + 3*693*FLEN/8, x4, x1, x2)

inst_17590:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2ffffffe000000; valaddr_reg:x3; val_offset:52770*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52770*0 + 3*694*FLEN/8, x4, x1, x2)

inst_17591:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2fffffff000000; valaddr_reg:x3; val_offset:52773*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52773*0 + 3*695*FLEN/8, x4, x1, x2)

inst_17592:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2fffffff800000; valaddr_reg:x3; val_offset:52776*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52776*0 + 3*696*FLEN/8, x4, x1, x2)

inst_17593:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2fffffffc00000; valaddr_reg:x3; val_offset:52779*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52779*0 + 3*697*FLEN/8, x4, x1, x2)

inst_17594:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2fffffffe00000; valaddr_reg:x3; val_offset:52782*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52782*0 + 3*698*FLEN/8, x4, x1, x2)

inst_17595:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2ffffffff00000; valaddr_reg:x3; val_offset:52785*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52785*0 + 3*699*FLEN/8, x4, x1, x2)

inst_17596:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2ffffffff80000; valaddr_reg:x3; val_offset:52788*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52788*0 + 3*700*FLEN/8, x4, x1, x2)

inst_17597:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2ffffffffc0000; valaddr_reg:x3; val_offset:52791*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52791*0 + 3*701*FLEN/8, x4, x1, x2)

inst_17598:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2ffffffffe0000; valaddr_reg:x3; val_offset:52794*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52794*0 + 3*702*FLEN/8, x4, x1, x2)

inst_17599:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2fffffffff0000; valaddr_reg:x3; val_offset:52797*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52797*0 + 3*703*FLEN/8, x4, x1, x2)

inst_17600:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2fffffffff8000; valaddr_reg:x3; val_offset:52800*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52800*0 + 3*704*FLEN/8, x4, x1, x2)

inst_17601:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2fffffffffc000; valaddr_reg:x3; val_offset:52803*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52803*0 + 3*705*FLEN/8, x4, x1, x2)

inst_17602:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2fffffffffe000; valaddr_reg:x3; val_offset:52806*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52806*0 + 3*706*FLEN/8, x4, x1, x2)

inst_17603:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2ffffffffff000; valaddr_reg:x3; val_offset:52809*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52809*0 + 3*707*FLEN/8, x4, x1, x2)

inst_17604:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2ffffffffff800; valaddr_reg:x3; val_offset:52812*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52812*0 + 3*708*FLEN/8, x4, x1, x2)

inst_17605:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2ffffffffffc00; valaddr_reg:x3; val_offset:52815*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52815*0 + 3*709*FLEN/8, x4, x1, x2)

inst_17606:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2ffffffffffe00; valaddr_reg:x3; val_offset:52818*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52818*0 + 3*710*FLEN/8, x4, x1, x2)

inst_17607:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2fffffffffff00; valaddr_reg:x3; val_offset:52821*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52821*0 + 3*711*FLEN/8, x4, x1, x2)

inst_17608:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2fffffffffff80; valaddr_reg:x3; val_offset:52824*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52824*0 + 3*712*FLEN/8, x4, x1, x2)

inst_17609:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2fffffffffffc0; valaddr_reg:x3; val_offset:52827*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52827*0 + 3*713*FLEN/8, x4, x1, x2)

inst_17610:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2fffffffffffe0; valaddr_reg:x3; val_offset:52830*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52830*0 + 3*714*FLEN/8, x4, x1, x2)

inst_17611:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2ffffffffffff0; valaddr_reg:x3; val_offset:52833*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52833*0 + 3*715*FLEN/8, x4, x1, x2)

inst_17612:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2ffffffffffff8; valaddr_reg:x3; val_offset:52836*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52836*0 + 3*716*FLEN/8, x4, x1, x2)

inst_17613:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2ffffffffffffc; valaddr_reg:x3; val_offset:52839*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52839*0 + 3*717*FLEN/8, x4, x1, x2)

inst_17614:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2ffffffffffffe; valaddr_reg:x3; val_offset:52842*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52842*0 + 3*718*FLEN/8, x4, x1, x2)

inst_17615:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2f24bc7281b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82f24bc7281b87; op2val:0x0;
op3val:0x2fffffffffffff; valaddr_reg:x3; val_offset:52845*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52845*0 + 3*719*FLEN/8, x4, x1, x2)

inst_17616:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2fdaf9dfde227 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xaf5cf4d904dfc and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82fdaf9dfde227; op2val:0x9feaf5cf4d904dfc;
op3val:0xbd30000000000000; valaddr_reg:x3; val_offset:52848*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52848*0 + 3*720*FLEN/8, x4, x1, x2)

inst_17617:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2fdaf9dfde227 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xaf5cf4d904dfc and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82fdaf9dfde227; op2val:0x9feaf5cf4d904dfc;
op3val:0xbd30000000000001; valaddr_reg:x3; val_offset:52851*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52851*0 + 3*721*FLEN/8, x4, x1, x2)

inst_17618:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2fdaf9dfde227 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xaf5cf4d904dfc and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82fdaf9dfde227; op2val:0x9feaf5cf4d904dfc;
op3val:0xbd30000000000003; valaddr_reg:x3; val_offset:52854*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52854*0 + 3*722*FLEN/8, x4, x1, x2)

inst_17619:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2fdaf9dfde227 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xaf5cf4d904dfc and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82fdaf9dfde227; op2val:0x9feaf5cf4d904dfc;
op3val:0xbd30000000000007; valaddr_reg:x3; val_offset:52857*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52857*0 + 3*723*FLEN/8, x4, x1, x2)

inst_17620:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2fdaf9dfde227 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xaf5cf4d904dfc and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82fdaf9dfde227; op2val:0x9feaf5cf4d904dfc;
op3val:0xbd3000000000000f; valaddr_reg:x3; val_offset:52860*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52860*0 + 3*724*FLEN/8, x4, x1, x2)

inst_17621:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2fdaf9dfde227 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xaf5cf4d904dfc and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82fdaf9dfde227; op2val:0x9feaf5cf4d904dfc;
op3val:0xbd3000000000001f; valaddr_reg:x3; val_offset:52863*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52863*0 + 3*725*FLEN/8, x4, x1, x2)

inst_17622:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2fdaf9dfde227 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xaf5cf4d904dfc and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82fdaf9dfde227; op2val:0x9feaf5cf4d904dfc;
op3val:0xbd3000000000003f; valaddr_reg:x3; val_offset:52866*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52866*0 + 3*726*FLEN/8, x4, x1, x2)

inst_17623:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2fdaf9dfde227 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xaf5cf4d904dfc and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82fdaf9dfde227; op2val:0x9feaf5cf4d904dfc;
op3val:0xbd3000000000007f; valaddr_reg:x3; val_offset:52869*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52869*0 + 3*727*FLEN/8, x4, x1, x2)

inst_17624:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2fdaf9dfde227 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xaf5cf4d904dfc and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82fdaf9dfde227; op2val:0x9feaf5cf4d904dfc;
op3val:0xbd300000000000ff; valaddr_reg:x3; val_offset:52872*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52872*0 + 3*728*FLEN/8, x4, x1, x2)

inst_17625:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2fdaf9dfde227 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xaf5cf4d904dfc and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82fdaf9dfde227; op2val:0x9feaf5cf4d904dfc;
op3val:0xbd300000000001ff; valaddr_reg:x3; val_offset:52875*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52875*0 + 3*729*FLEN/8, x4, x1, x2)

inst_17626:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2fdaf9dfde227 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xaf5cf4d904dfc and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82fdaf9dfde227; op2val:0x9feaf5cf4d904dfc;
op3val:0xbd300000000003ff; valaddr_reg:x3; val_offset:52878*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52878*0 + 3*730*FLEN/8, x4, x1, x2)

inst_17627:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2fdaf9dfde227 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xaf5cf4d904dfc and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82fdaf9dfde227; op2val:0x9feaf5cf4d904dfc;
op3val:0xbd300000000007ff; valaddr_reg:x3; val_offset:52881*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52881*0 + 3*731*FLEN/8, x4, x1, x2)

inst_17628:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2fdaf9dfde227 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xaf5cf4d904dfc and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82fdaf9dfde227; op2val:0x9feaf5cf4d904dfc;
op3val:0xbd30000000000fff; valaddr_reg:x3; val_offset:52884*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52884*0 + 3*732*FLEN/8, x4, x1, x2)

inst_17629:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2fdaf9dfde227 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xaf5cf4d904dfc and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82fdaf9dfde227; op2val:0x9feaf5cf4d904dfc;
op3val:0xbd30000000001fff; valaddr_reg:x3; val_offset:52887*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52887*0 + 3*733*FLEN/8, x4, x1, x2)

inst_17630:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2fdaf9dfde227 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xaf5cf4d904dfc and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82fdaf9dfde227; op2val:0x9feaf5cf4d904dfc;
op3val:0xbd30000000003fff; valaddr_reg:x3; val_offset:52890*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52890*0 + 3*734*FLEN/8, x4, x1, x2)

inst_17631:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2fdaf9dfde227 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xaf5cf4d904dfc and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82fdaf9dfde227; op2val:0x9feaf5cf4d904dfc;
op3val:0xbd30000000007fff; valaddr_reg:x3; val_offset:52893*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52893*0 + 3*735*FLEN/8, x4, x1, x2)

inst_17632:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2fdaf9dfde227 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xaf5cf4d904dfc and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82fdaf9dfde227; op2val:0x9feaf5cf4d904dfc;
op3val:0xbd3000000000ffff; valaddr_reg:x3; val_offset:52896*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52896*0 + 3*736*FLEN/8, x4, x1, x2)

inst_17633:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2fdaf9dfde227 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xaf5cf4d904dfc and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82fdaf9dfde227; op2val:0x9feaf5cf4d904dfc;
op3val:0xbd3000000001ffff; valaddr_reg:x3; val_offset:52899*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52899*0 + 3*737*FLEN/8, x4, x1, x2)

inst_17634:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2fdaf9dfde227 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xaf5cf4d904dfc and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82fdaf9dfde227; op2val:0x9feaf5cf4d904dfc;
op3val:0xbd3000000003ffff; valaddr_reg:x3; val_offset:52902*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52902*0 + 3*738*FLEN/8, x4, x1, x2)

inst_17635:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2fdaf9dfde227 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xaf5cf4d904dfc and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82fdaf9dfde227; op2val:0x9feaf5cf4d904dfc;
op3val:0xbd3000000007ffff; valaddr_reg:x3; val_offset:52905*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52905*0 + 3*739*FLEN/8, x4, x1, x2)

inst_17636:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2fdaf9dfde227 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xaf5cf4d904dfc and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82fdaf9dfde227; op2val:0x9feaf5cf4d904dfc;
op3val:0xbd300000000fffff; valaddr_reg:x3; val_offset:52908*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52908*0 + 3*740*FLEN/8, x4, x1, x2)

inst_17637:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2fdaf9dfde227 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xaf5cf4d904dfc and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82fdaf9dfde227; op2val:0x9feaf5cf4d904dfc;
op3val:0xbd300000001fffff; valaddr_reg:x3; val_offset:52911*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52911*0 + 3*741*FLEN/8, x4, x1, x2)

inst_17638:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2fdaf9dfde227 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xaf5cf4d904dfc and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82fdaf9dfde227; op2val:0x9feaf5cf4d904dfc;
op3val:0xbd300000003fffff; valaddr_reg:x3; val_offset:52914*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52914*0 + 3*742*FLEN/8, x4, x1, x2)

inst_17639:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2fdaf9dfde227 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xaf5cf4d904dfc and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82fdaf9dfde227; op2val:0x9feaf5cf4d904dfc;
op3val:0xbd300000007fffff; valaddr_reg:x3; val_offset:52917*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52917*0 + 3*743*FLEN/8, x4, x1, x2)

inst_17640:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2fdaf9dfde227 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xaf5cf4d904dfc and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82fdaf9dfde227; op2val:0x9feaf5cf4d904dfc;
op3val:0xbd30000000ffffff; valaddr_reg:x3; val_offset:52920*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52920*0 + 3*744*FLEN/8, x4, x1, x2)

inst_17641:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2fdaf9dfde227 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xaf5cf4d904dfc and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82fdaf9dfde227; op2val:0x9feaf5cf4d904dfc;
op3val:0xbd30000001ffffff; valaddr_reg:x3; val_offset:52923*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52923*0 + 3*745*FLEN/8, x4, x1, x2)

inst_17642:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2fdaf9dfde227 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xaf5cf4d904dfc and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82fdaf9dfde227; op2val:0x9feaf5cf4d904dfc;
op3val:0xbd30000003ffffff; valaddr_reg:x3; val_offset:52926*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52926*0 + 3*746*FLEN/8, x4, x1, x2)

inst_17643:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2fdaf9dfde227 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xaf5cf4d904dfc and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82fdaf9dfde227; op2val:0x9feaf5cf4d904dfc;
op3val:0xbd30000007ffffff; valaddr_reg:x3; val_offset:52929*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52929*0 + 3*747*FLEN/8, x4, x1, x2)

inst_17644:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2fdaf9dfde227 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xaf5cf4d904dfc and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82fdaf9dfde227; op2val:0x9feaf5cf4d904dfc;
op3val:0xbd3000000fffffff; valaddr_reg:x3; val_offset:52932*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52932*0 + 3*748*FLEN/8, x4, x1, x2)

inst_17645:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2fdaf9dfde227 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xaf5cf4d904dfc and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82fdaf9dfde227; op2val:0x9feaf5cf4d904dfc;
op3val:0xbd3000001fffffff; valaddr_reg:x3; val_offset:52935*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52935*0 + 3*749*FLEN/8, x4, x1, x2)

inst_17646:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2fdaf9dfde227 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xaf5cf4d904dfc and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82fdaf9dfde227; op2val:0x9feaf5cf4d904dfc;
op3val:0xbd3000003fffffff; valaddr_reg:x3; val_offset:52938*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52938*0 + 3*750*FLEN/8, x4, x1, x2)

inst_17647:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2fdaf9dfde227 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xaf5cf4d904dfc and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82fdaf9dfde227; op2val:0x9feaf5cf4d904dfc;
op3val:0xbd3000007fffffff; valaddr_reg:x3; val_offset:52941*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52941*0 + 3*751*FLEN/8, x4, x1, x2)

inst_17648:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2fdaf9dfde227 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xaf5cf4d904dfc and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82fdaf9dfde227; op2val:0x9feaf5cf4d904dfc;
op3val:0xbd300000ffffffff; valaddr_reg:x3; val_offset:52944*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52944*0 + 3*752*FLEN/8, x4, x1, x2)

inst_17649:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2fdaf9dfde227 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xaf5cf4d904dfc and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82fdaf9dfde227; op2val:0x9feaf5cf4d904dfc;
op3val:0xbd300001ffffffff; valaddr_reg:x3; val_offset:52947*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52947*0 + 3*753*FLEN/8, x4, x1, x2)

inst_17650:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2fdaf9dfde227 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xaf5cf4d904dfc and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82fdaf9dfde227; op2val:0x9feaf5cf4d904dfc;
op3val:0xbd300003ffffffff; valaddr_reg:x3; val_offset:52950*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52950*0 + 3*754*FLEN/8, x4, x1, x2)

inst_17651:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2fdaf9dfde227 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xaf5cf4d904dfc and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82fdaf9dfde227; op2val:0x9feaf5cf4d904dfc;
op3val:0xbd300007ffffffff; valaddr_reg:x3; val_offset:52953*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52953*0 + 3*755*FLEN/8, x4, x1, x2)

inst_17652:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2fdaf9dfde227 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xaf5cf4d904dfc and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82fdaf9dfde227; op2val:0x9feaf5cf4d904dfc;
op3val:0xbd30000fffffffff; valaddr_reg:x3; val_offset:52956*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52956*0 + 3*756*FLEN/8, x4, x1, x2)

inst_17653:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2fdaf9dfde227 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xaf5cf4d904dfc and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82fdaf9dfde227; op2val:0x9feaf5cf4d904dfc;
op3val:0xbd30001fffffffff; valaddr_reg:x3; val_offset:52959*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52959*0 + 3*757*FLEN/8, x4, x1, x2)

inst_17654:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2fdaf9dfde227 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xaf5cf4d904dfc and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82fdaf9dfde227; op2val:0x9feaf5cf4d904dfc;
op3val:0xbd30003fffffffff; valaddr_reg:x3; val_offset:52962*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52962*0 + 3*758*FLEN/8, x4, x1, x2)

inst_17655:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2fdaf9dfde227 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xaf5cf4d904dfc and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82fdaf9dfde227; op2val:0x9feaf5cf4d904dfc;
op3val:0xbd30007fffffffff; valaddr_reg:x3; val_offset:52965*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52965*0 + 3*759*FLEN/8, x4, x1, x2)

inst_17656:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2fdaf9dfde227 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xaf5cf4d904dfc and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82fdaf9dfde227; op2val:0x9feaf5cf4d904dfc;
op3val:0xbd3000ffffffffff; valaddr_reg:x3; val_offset:52968*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52968*0 + 3*760*FLEN/8, x4, x1, x2)

inst_17657:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2fdaf9dfde227 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xaf5cf4d904dfc and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82fdaf9dfde227; op2val:0x9feaf5cf4d904dfc;
op3val:0xbd3001ffffffffff; valaddr_reg:x3; val_offset:52971*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52971*0 + 3*761*FLEN/8, x4, x1, x2)

inst_17658:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2fdaf9dfde227 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xaf5cf4d904dfc and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82fdaf9dfde227; op2val:0x9feaf5cf4d904dfc;
op3val:0xbd3003ffffffffff; valaddr_reg:x3; val_offset:52974*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52974*0 + 3*762*FLEN/8, x4, x1, x2)

inst_17659:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2fdaf9dfde227 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xaf5cf4d904dfc and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82fdaf9dfde227; op2val:0x9feaf5cf4d904dfc;
op3val:0xbd3007ffffffffff; valaddr_reg:x3; val_offset:52977*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52977*0 + 3*763*FLEN/8, x4, x1, x2)

inst_17660:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2fdaf9dfde227 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xaf5cf4d904dfc and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82fdaf9dfde227; op2val:0x9feaf5cf4d904dfc;
op3val:0xbd300fffffffffff; valaddr_reg:x3; val_offset:52980*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52980*0 + 3*764*FLEN/8, x4, x1, x2)

inst_17661:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2fdaf9dfde227 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xaf5cf4d904dfc and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82fdaf9dfde227; op2val:0x9feaf5cf4d904dfc;
op3val:0xbd301fffffffffff; valaddr_reg:x3; val_offset:52983*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52983*0 + 3*765*FLEN/8, x4, x1, x2)

inst_17662:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2fdaf9dfde227 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xaf5cf4d904dfc and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82fdaf9dfde227; op2val:0x9feaf5cf4d904dfc;
op3val:0xbd303fffffffffff; valaddr_reg:x3; val_offset:52986*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52986*0 + 3*766*FLEN/8, x4, x1, x2)

inst_17663:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2fdaf9dfde227 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xaf5cf4d904dfc and fs3 == 1 and fe3 == 0x3d3 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82fdaf9dfde227; op2val:0x9feaf5cf4d904dfc;
op3val:0xbd307fffffffffff; valaddr_reg:x3; val_offset:52989*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52989*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486429695,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486446079,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486478847,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486544383,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486675455,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486937599,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182487461887,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182488510463,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182490607615,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182494801919,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182503190527,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182519967743,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182553522175,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182620631039,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182754848767,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669183023284223,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669183560155135,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669184633896959,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669186781380607,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669191076347903,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669199666282495,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669216846151679,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669251205890047,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669319925366783,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669457364320255,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669732242227199,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211670281998041087,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211671381509668863,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211673580532924415,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211677978579435519,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211686774672457727,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211704366858502143,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211739551230590975,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211809919974768639,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211950657463123967,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(212232132439834623,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(212795082393255935,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(213920982300098559,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(213920982300098560,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(215046882206941184,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(215609832160362496,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(215891307137073152,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216032044625428480,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216102413369606144,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216137597741694976,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216155189927739392,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216163986020761600,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216168384067272704,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216170583090528256,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216171682602156032,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172232357969920,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172507235876864,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172644674830336,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172713394307072,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172747754045440,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172764933914624,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172773523849216,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172777818816512,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172779966300160,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172781040041984,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172781576912896,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172781845348352,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172781979566080,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782046674944,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782080229376,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782097006592,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782105395200,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782109589504,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782111686656,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782112735232,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113259520,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113521664,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113652736,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113718272,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113751040,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113767424,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113775616,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113779712,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113781760,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113782784,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783296,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783552,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783680,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783744,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783776,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783792,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783800,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783804,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783806,64,FLEN)
NAN_BOXED(6882130532589228723,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783807,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13519806081366228992,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13519806081366228993,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13519806081366228995,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13519806081366228999,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13519806081366229007,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13519806081366229023,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13519806081366229055,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13519806081366229119,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13519806081366229247,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13519806081366229503,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13519806081366230015,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13519806081366231039,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13519806081366233087,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13519806081366237183,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13519806081366245375,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13519806081366261759,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13519806081366294527,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13519806081366360063,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13519806081366491135,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13519806081366753279,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13519806081367277567,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13519806081368326143,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13519806081370423295,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13519806081374617599,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13519806081383006207,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13519806081399783423,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13519806081433337855,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13519806081500446719,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13519806081634664447,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13519806081903099903,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13519806082439970815,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13519806083513712639,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13519806085661196287,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13519806089956163583,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13519806098546098175,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13519806115725967359,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13519806150085705727,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13519806218805182463,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13519806356244135935,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13519806631122042879,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13519807180877856767,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13519808280389484543,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13519810479412740095,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13519814877459251199,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13519823673552273407,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13519841265738317823,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13519876450110406655,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13519946818854584319,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13520087556342939647,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13520369031319650303,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13520931981273071615,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13522057881179914239,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13522057881179914240,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13523183781086756864,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13523746731040178176,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13524028206016888832,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13524168943505244160,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13524239312249421824,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13524274496621510656,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13524292088807555072,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13524300884900577280,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13524305282947088384,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13524307481970343936,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13524308581481971712,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13524309131237785600,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13524309406115692544,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13524309543554646016,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13524309612274122752,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13524309646633861120,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13524309663813730304,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13524309672403664896,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13524309676698632192,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13524309678846115840,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13524309679919857664,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13524309680456728576,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13524309680725164032,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13524309680859381760,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13524309680926490624,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13524309680960045056,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13524309680976822272,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13524309680985210880,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13524309680989405184,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13524309680991502336,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13524309680992550912,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13524309680993075200,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13524309680993337344,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13524309680993468416,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13524309680993533952,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13524309680993566720,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13524309680993583104,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13524309680993591296,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13524309680993595392,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13524309680993597440,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13524309680993598464,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13524309680993598976,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13524309680993599232,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13524309680993599360,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13524309680993599424,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13524309680993599456,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13524309680993599472,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13524309680993599480,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13524309680993599484,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13524309680993599486,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13524309680993599487,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6882269607200854059,64,FLEN)
NAN_BOXED(11523397211770633272,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595648,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595649,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595651,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595655,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595663,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595679,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595711,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595775,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595903,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949596159,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949596671,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949597695,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949599743,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949603839,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949612031,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949628415,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949661183,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949726719,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949857791,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021950119935,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021950644223,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021951692799,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021953789951,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021957984255,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021966372863,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021983150079,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516022016704511,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516022083813375,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516022218031103,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516022486466559,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516023023337471,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516024097079295,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516026244562943,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516030539530239,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516039129464831,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516056309334015,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516090669072383,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516159388549119,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516296827502591,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516571705409535,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403517121461223423,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403518220972851199,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403520419996106751,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403524818042617855,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403533614135640063,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403551206321684479,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403586390693773311,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403656759437950975,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403797496926306303,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9404078971903016959,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9404641921856438271,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9405767821763280895,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9405767821763280896,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9406893721670123520,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9407456671623544832,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9407738146600255488,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9407878884088610816,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9407949252832788480,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9407984437204877312,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408002029390921728,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408010825483943936,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408015223530455040,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408017422553710592,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408018522065338368,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019071821152256,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019346699059200,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019484138012672,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019552857489408,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019587217227776,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019604397096960,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019612987031552,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019617281998848,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019619429482496,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019620503224320,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621040095232,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621308530688,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621442748416,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621509857280,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621543411712,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621560188928,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621568577536,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621572771840,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621574868992,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621575917568,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576441856,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576704000,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576835072,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576900608,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576933376,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576949760,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576957952,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576962048,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576964096,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576965120,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576965632,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576965888,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966016,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966080,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966112,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966128,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966136,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966140,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966142,64,FLEN)
NAN_BOXED(6882269751283771075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966143,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298432,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298433,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298435,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298439,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298447,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298463,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298495,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298559,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298687,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298943,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665299455,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665300479,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665302527,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665306623,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665314815,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665331199,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665363967,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665429503,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665560575,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665822719,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193666347007,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193667395583,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193669492735,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193673687039,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193682075647,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193698852863,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193732407295,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193799516159,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193933733887,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561194202169343,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561194739040255,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561195812782079,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561197960265727,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561202255233023,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561210845167615,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561228025036799,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561262384775167,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561331104251903,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561468543205375,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561743421112319,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76562293176926207,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76563392688553983,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76565591711809535,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76569989758320639,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76578785851342847,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76596378037387263,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76631562409476095,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76701931153653759,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76842668642009087,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(77124143618719743,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(77687093572141055,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(78812993478983679,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(78812993478983680,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(79938893385826304,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(80501843339247616,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(80783318315958272,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(80924055804313600,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(80994424548491264,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81029608920580096,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81047201106624512,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81055997199646720,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81060395246157824,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81062594269413376,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81063693781041152,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064243536855040,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064518414761984,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064655853715456,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064724573192192,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064758932930560,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064776112799744,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064784702734336,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064788997701632,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064791145185280,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064792218927104,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064792755798016,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793024233472,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793158451200,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793225560064,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793259114496,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793275891712,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793284280320,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793288474624,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793290571776,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793291620352,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292144640,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292406784,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292537856,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292603392,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292636160,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292652544,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292660736,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292664832,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292666880,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292667904,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668416,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668672,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668800,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668864,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668896,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668912,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668920,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668924,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668926,64,FLEN)
NAN_BOXED(6882291473471397195,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668927,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481984,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481985,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481987,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481991,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481999,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509482015,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509482047,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509482111,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509482239,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509482495,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509483007,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509484031,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509486079,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509490175,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509498367,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509514751,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509547519,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509613055,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509744127,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398510006271,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398510530559,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398511579135,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398513676287,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398517870591,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398526259199,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398543036415,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398576590847,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398643699711,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398777917439,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014399046352895,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014399583223807,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014400656965631,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014402804449279,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014407099416575,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014415689351167,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014432869220351,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014467228958719,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014535948435455,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014673387388927,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014948265295871,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18015498021109759,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18016597532737535,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18018796555993087,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18023194602504191,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18031990695526399,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18049582881570815,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18084767253659647,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18155135997837311,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18295873486192639,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18577348462903295,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(19140298416324607,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(20266198323167231,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(20266198323167232,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(21392098230009856,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(21955048183431168,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22236523160141824,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22377260648497152,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22447629392674816,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22482813764763648,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22500405950808064,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22509202043830272,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22513600090341376,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22515799113596928,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22516898625224704,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517448381038592,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517723258945536,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517860697899008,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517929417375744,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517963777114112,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517980956983296,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517989546917888,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517993841885184,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517995989368832,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517997063110656,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517997599981568,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517997868417024,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998002634752,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998069743616,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998103298048,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998120075264,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998128463872,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998132658176,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998134755328,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998135803904,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136328192,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136590336,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136721408,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136786944,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136819712,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136836096,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136844288,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136848384,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136850432,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136851456,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136851968,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852224,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852352,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852416,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852448,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852464,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852472,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852476,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852478,64,FLEN)
NAN_BOXED(6882310904497764235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852479,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740992,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740993,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740995,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740999,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254741007,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254741023,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254741055,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254741119,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254741247,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254741503,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254742015,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254743039,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254745087,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254749183,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254757375,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254773759,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254806527,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254872063,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199255003135,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199255265279,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199255789567,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199256838143,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199258935295,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199263129599,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199271518207,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199288295423,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199321849855,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199388958719,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199523176447,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199791611903,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007200328482815,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007201402224639,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007203549708287,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007207844675583,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007216434610175,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007233614479359,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007267974217727,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007336693694463,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007474132647935,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007749010554879,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9008298766368767,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9009398277996543,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9011597301252095,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9015995347763199,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9024791440785407,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9042383626829823,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9077567998918655,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9147936743096319,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9288674231451647,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9570149208162303,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(10133099161583615,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(11258999068426239,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(11258999068426240,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(12384898975268864,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(12947848928690176,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13229323905400832,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13370061393756160,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13440430137933824,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13475614510022656,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13493206696067072,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13502002789089280,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13506400835600384,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13508599858855936,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13509699370483712,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510249126297600,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510524004204544,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510661443158016,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510730162634752,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510764522373120,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510781702242304,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510790292176896,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510794587144192,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510796734627840,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510797808369664,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798345240576,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798613676032,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798747893760,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798815002624,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798848557056,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798865334272,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798873722880,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798877917184,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798880014336,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798881062912,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798881587200,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798881849344,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798881980416,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882045952,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882078720,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882095104,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882103296,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882107392,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882109440,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882110464,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882110976,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111232,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111360,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111424,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111456,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111472,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111480,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111484,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111486,64,FLEN)
NAN_BOXED(6882329587853302663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111487,64,FLEN)
NAN_BOXED(6882342111287304743,64,FLEN)
NAN_BOXED(11523292867289173500,64,FLEN)
NAN_BOXED(13632396072050491392,64,FLEN)
NAN_BOXED(6882342111287304743,64,FLEN)
NAN_BOXED(11523292867289173500,64,FLEN)
NAN_BOXED(13632396072050491393,64,FLEN)
NAN_BOXED(6882342111287304743,64,FLEN)
NAN_BOXED(11523292867289173500,64,FLEN)
NAN_BOXED(13632396072050491395,64,FLEN)
NAN_BOXED(6882342111287304743,64,FLEN)
NAN_BOXED(11523292867289173500,64,FLEN)
NAN_BOXED(13632396072050491399,64,FLEN)
NAN_BOXED(6882342111287304743,64,FLEN)
NAN_BOXED(11523292867289173500,64,FLEN)
NAN_BOXED(13632396072050491407,64,FLEN)
NAN_BOXED(6882342111287304743,64,FLEN)
NAN_BOXED(11523292867289173500,64,FLEN)
NAN_BOXED(13632396072050491423,64,FLEN)
NAN_BOXED(6882342111287304743,64,FLEN)
NAN_BOXED(11523292867289173500,64,FLEN)
NAN_BOXED(13632396072050491455,64,FLEN)
NAN_BOXED(6882342111287304743,64,FLEN)
NAN_BOXED(11523292867289173500,64,FLEN)
NAN_BOXED(13632396072050491519,64,FLEN)
NAN_BOXED(6882342111287304743,64,FLEN)
NAN_BOXED(11523292867289173500,64,FLEN)
NAN_BOXED(13632396072050491647,64,FLEN)
NAN_BOXED(6882342111287304743,64,FLEN)
NAN_BOXED(11523292867289173500,64,FLEN)
NAN_BOXED(13632396072050491903,64,FLEN)
NAN_BOXED(6882342111287304743,64,FLEN)
NAN_BOXED(11523292867289173500,64,FLEN)
NAN_BOXED(13632396072050492415,64,FLEN)
NAN_BOXED(6882342111287304743,64,FLEN)
NAN_BOXED(11523292867289173500,64,FLEN)
NAN_BOXED(13632396072050493439,64,FLEN)
NAN_BOXED(6882342111287304743,64,FLEN)
NAN_BOXED(11523292867289173500,64,FLEN)
NAN_BOXED(13632396072050495487,64,FLEN)
NAN_BOXED(6882342111287304743,64,FLEN)
NAN_BOXED(11523292867289173500,64,FLEN)
NAN_BOXED(13632396072050499583,64,FLEN)
NAN_BOXED(6882342111287304743,64,FLEN)
NAN_BOXED(11523292867289173500,64,FLEN)
NAN_BOXED(13632396072050507775,64,FLEN)
NAN_BOXED(6882342111287304743,64,FLEN)
NAN_BOXED(11523292867289173500,64,FLEN)
NAN_BOXED(13632396072050524159,64,FLEN)
NAN_BOXED(6882342111287304743,64,FLEN)
NAN_BOXED(11523292867289173500,64,FLEN)
NAN_BOXED(13632396072050556927,64,FLEN)
NAN_BOXED(6882342111287304743,64,FLEN)
NAN_BOXED(11523292867289173500,64,FLEN)
NAN_BOXED(13632396072050622463,64,FLEN)
NAN_BOXED(6882342111287304743,64,FLEN)
NAN_BOXED(11523292867289173500,64,FLEN)
NAN_BOXED(13632396072050753535,64,FLEN)
NAN_BOXED(6882342111287304743,64,FLEN)
NAN_BOXED(11523292867289173500,64,FLEN)
NAN_BOXED(13632396072051015679,64,FLEN)
NAN_BOXED(6882342111287304743,64,FLEN)
NAN_BOXED(11523292867289173500,64,FLEN)
NAN_BOXED(13632396072051539967,64,FLEN)
NAN_BOXED(6882342111287304743,64,FLEN)
NAN_BOXED(11523292867289173500,64,FLEN)
NAN_BOXED(13632396072052588543,64,FLEN)
NAN_BOXED(6882342111287304743,64,FLEN)
NAN_BOXED(11523292867289173500,64,FLEN)
NAN_BOXED(13632396072054685695,64,FLEN)
NAN_BOXED(6882342111287304743,64,FLEN)
NAN_BOXED(11523292867289173500,64,FLEN)
NAN_BOXED(13632396072058879999,64,FLEN)
NAN_BOXED(6882342111287304743,64,FLEN)
NAN_BOXED(11523292867289173500,64,FLEN)
NAN_BOXED(13632396072067268607,64,FLEN)
NAN_BOXED(6882342111287304743,64,FLEN)
NAN_BOXED(11523292867289173500,64,FLEN)
NAN_BOXED(13632396072084045823,64,FLEN)
NAN_BOXED(6882342111287304743,64,FLEN)
NAN_BOXED(11523292867289173500,64,FLEN)
NAN_BOXED(13632396072117600255,64,FLEN)
NAN_BOXED(6882342111287304743,64,FLEN)
NAN_BOXED(11523292867289173500,64,FLEN)
NAN_BOXED(13632396072184709119,64,FLEN)
NAN_BOXED(6882342111287304743,64,FLEN)
NAN_BOXED(11523292867289173500,64,FLEN)
NAN_BOXED(13632396072318926847,64,FLEN)
NAN_BOXED(6882342111287304743,64,FLEN)
NAN_BOXED(11523292867289173500,64,FLEN)
NAN_BOXED(13632396072587362303,64,FLEN)
NAN_BOXED(6882342111287304743,64,FLEN)
NAN_BOXED(11523292867289173500,64,FLEN)
NAN_BOXED(13632396073124233215,64,FLEN)
NAN_BOXED(6882342111287304743,64,FLEN)
NAN_BOXED(11523292867289173500,64,FLEN)
NAN_BOXED(13632396074197975039,64,FLEN)
NAN_BOXED(6882342111287304743,64,FLEN)
NAN_BOXED(11523292867289173500,64,FLEN)
NAN_BOXED(13632396076345458687,64,FLEN)
NAN_BOXED(6882342111287304743,64,FLEN)
NAN_BOXED(11523292867289173500,64,FLEN)
NAN_BOXED(13632396080640425983,64,FLEN)
NAN_BOXED(6882342111287304743,64,FLEN)
NAN_BOXED(11523292867289173500,64,FLEN)
NAN_BOXED(13632396089230360575,64,FLEN)
NAN_BOXED(6882342111287304743,64,FLEN)
NAN_BOXED(11523292867289173500,64,FLEN)
NAN_BOXED(13632396106410229759,64,FLEN)
NAN_BOXED(6882342111287304743,64,FLEN)
NAN_BOXED(11523292867289173500,64,FLEN)
NAN_BOXED(13632396140769968127,64,FLEN)
NAN_BOXED(6882342111287304743,64,FLEN)
NAN_BOXED(11523292867289173500,64,FLEN)
NAN_BOXED(13632396209489444863,64,FLEN)
NAN_BOXED(6882342111287304743,64,FLEN)
NAN_BOXED(11523292867289173500,64,FLEN)
NAN_BOXED(13632396346928398335,64,FLEN)
NAN_BOXED(6882342111287304743,64,FLEN)
NAN_BOXED(11523292867289173500,64,FLEN)
NAN_BOXED(13632396621806305279,64,FLEN)
NAN_BOXED(6882342111287304743,64,FLEN)
NAN_BOXED(11523292867289173500,64,FLEN)
NAN_BOXED(13632397171562119167,64,FLEN)
NAN_BOXED(6882342111287304743,64,FLEN)
NAN_BOXED(11523292867289173500,64,FLEN)
NAN_BOXED(13632398271073746943,64,FLEN)
NAN_BOXED(6882342111287304743,64,FLEN)
NAN_BOXED(11523292867289173500,64,FLEN)
NAN_BOXED(13632400470097002495,64,FLEN)
NAN_BOXED(6882342111287304743,64,FLEN)
NAN_BOXED(11523292867289173500,64,FLEN)
NAN_BOXED(13632404868143513599,64,FLEN)
NAN_BOXED(6882342111287304743,64,FLEN)
NAN_BOXED(11523292867289173500,64,FLEN)
NAN_BOXED(13632413664236535807,64,FLEN)
NAN_BOXED(6882342111287304743,64,FLEN)
NAN_BOXED(11523292867289173500,64,FLEN)
NAN_BOXED(13632431256422580223,64,FLEN)
NAN_BOXED(6882342111287304743,64,FLEN)
NAN_BOXED(11523292867289173500,64,FLEN)
NAN_BOXED(13632466440794669055,64,FLEN)
NAN_BOXED(6882342111287304743,64,FLEN)
NAN_BOXED(11523292867289173500,64,FLEN)
NAN_BOXED(13632536809538846719,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
