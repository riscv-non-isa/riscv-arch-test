
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_33024:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x42442f7926fed and fs2 == 0 and fe2 == 0x204 and fm2 == 0x96b82f6d010e6 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f942442f7926fed; op2val:0x20496b82f6d010e6;
op3val:0x3f0ffffffff80000; valaddr_reg:x3; val_offset:99072*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99072*0 + 3*0*FLEN/8, x4, x1, x2)

inst_33025:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x42442f7926fed and fs2 == 0 and fe2 == 0x204 and fm2 == 0x96b82f6d010e6 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f942442f7926fed; op2val:0x20496b82f6d010e6;
op3val:0x3f0ffffffffc0000; valaddr_reg:x3; val_offset:99075*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99075*0 + 3*1*FLEN/8, x4, x1, x2)

inst_33026:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x42442f7926fed and fs2 == 0 and fe2 == 0x204 and fm2 == 0x96b82f6d010e6 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f942442f7926fed; op2val:0x20496b82f6d010e6;
op3val:0x3f0ffffffffe0000; valaddr_reg:x3; val_offset:99078*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99078*0 + 3*2*FLEN/8, x4, x1, x2)

inst_33027:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x42442f7926fed and fs2 == 0 and fe2 == 0x204 and fm2 == 0x96b82f6d010e6 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f942442f7926fed; op2val:0x20496b82f6d010e6;
op3val:0x3f0fffffffff0000; valaddr_reg:x3; val_offset:99081*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99081*0 + 3*3*FLEN/8, x4, x1, x2)

inst_33028:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x42442f7926fed and fs2 == 0 and fe2 == 0x204 and fm2 == 0x96b82f6d010e6 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f942442f7926fed; op2val:0x20496b82f6d010e6;
op3val:0x3f0fffffffff8000; valaddr_reg:x3; val_offset:99084*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99084*0 + 3*4*FLEN/8, x4, x1, x2)

inst_33029:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x42442f7926fed and fs2 == 0 and fe2 == 0x204 and fm2 == 0x96b82f6d010e6 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f942442f7926fed; op2val:0x20496b82f6d010e6;
op3val:0x3f0fffffffffc000; valaddr_reg:x3; val_offset:99087*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99087*0 + 3*5*FLEN/8, x4, x1, x2)

inst_33030:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x42442f7926fed and fs2 == 0 and fe2 == 0x204 and fm2 == 0x96b82f6d010e6 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f942442f7926fed; op2val:0x20496b82f6d010e6;
op3val:0x3f0fffffffffe000; valaddr_reg:x3; val_offset:99090*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99090*0 + 3*6*FLEN/8, x4, x1, x2)

inst_33031:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x42442f7926fed and fs2 == 0 and fe2 == 0x204 and fm2 == 0x96b82f6d010e6 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f942442f7926fed; op2val:0x20496b82f6d010e6;
op3val:0x3f0ffffffffff000; valaddr_reg:x3; val_offset:99093*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99093*0 + 3*7*FLEN/8, x4, x1, x2)

inst_33032:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x42442f7926fed and fs2 == 0 and fe2 == 0x204 and fm2 == 0x96b82f6d010e6 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f942442f7926fed; op2val:0x20496b82f6d010e6;
op3val:0x3f0ffffffffff800; valaddr_reg:x3; val_offset:99096*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99096*0 + 3*8*FLEN/8, x4, x1, x2)

inst_33033:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x42442f7926fed and fs2 == 0 and fe2 == 0x204 and fm2 == 0x96b82f6d010e6 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f942442f7926fed; op2val:0x20496b82f6d010e6;
op3val:0x3f0ffffffffffc00; valaddr_reg:x3; val_offset:99099*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99099*0 + 3*9*FLEN/8, x4, x1, x2)

inst_33034:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x42442f7926fed and fs2 == 0 and fe2 == 0x204 and fm2 == 0x96b82f6d010e6 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f942442f7926fed; op2val:0x20496b82f6d010e6;
op3val:0x3f0ffffffffffe00; valaddr_reg:x3; val_offset:99102*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99102*0 + 3*10*FLEN/8, x4, x1, x2)

inst_33035:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x42442f7926fed and fs2 == 0 and fe2 == 0x204 and fm2 == 0x96b82f6d010e6 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f942442f7926fed; op2val:0x20496b82f6d010e6;
op3val:0x3f0fffffffffff00; valaddr_reg:x3; val_offset:99105*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99105*0 + 3*11*FLEN/8, x4, x1, x2)

inst_33036:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x42442f7926fed and fs2 == 0 and fe2 == 0x204 and fm2 == 0x96b82f6d010e6 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f942442f7926fed; op2val:0x20496b82f6d010e6;
op3val:0x3f0fffffffffff80; valaddr_reg:x3; val_offset:99108*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99108*0 + 3*12*FLEN/8, x4, x1, x2)

inst_33037:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x42442f7926fed and fs2 == 0 and fe2 == 0x204 and fm2 == 0x96b82f6d010e6 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f942442f7926fed; op2val:0x20496b82f6d010e6;
op3val:0x3f0fffffffffffc0; valaddr_reg:x3; val_offset:99111*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99111*0 + 3*13*FLEN/8, x4, x1, x2)

inst_33038:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x42442f7926fed and fs2 == 0 and fe2 == 0x204 and fm2 == 0x96b82f6d010e6 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f942442f7926fed; op2val:0x20496b82f6d010e6;
op3val:0x3f0fffffffffffe0; valaddr_reg:x3; val_offset:99114*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99114*0 + 3*14*FLEN/8, x4, x1, x2)

inst_33039:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x42442f7926fed and fs2 == 0 and fe2 == 0x204 and fm2 == 0x96b82f6d010e6 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f942442f7926fed; op2val:0x20496b82f6d010e6;
op3val:0x3f0ffffffffffff0; valaddr_reg:x3; val_offset:99117*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99117*0 + 3*15*FLEN/8, x4, x1, x2)

inst_33040:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x42442f7926fed and fs2 == 0 and fe2 == 0x204 and fm2 == 0x96b82f6d010e6 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f942442f7926fed; op2val:0x20496b82f6d010e6;
op3val:0x3f0ffffffffffff8; valaddr_reg:x3; val_offset:99120*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99120*0 + 3*16*FLEN/8, x4, x1, x2)

inst_33041:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x42442f7926fed and fs2 == 0 and fe2 == 0x204 and fm2 == 0x96b82f6d010e6 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f942442f7926fed; op2val:0x20496b82f6d010e6;
op3val:0x3f0ffffffffffffc; valaddr_reg:x3; val_offset:99123*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99123*0 + 3*17*FLEN/8, x4, x1, x2)

inst_33042:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x42442f7926fed and fs2 == 0 and fe2 == 0x204 and fm2 == 0x96b82f6d010e6 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f942442f7926fed; op2val:0x20496b82f6d010e6;
op3val:0x3f0ffffffffffffe; valaddr_reg:x3; val_offset:99126*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99126*0 + 3*18*FLEN/8, x4, x1, x2)

inst_33043:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x42442f7926fed and fs2 == 0 and fe2 == 0x204 and fm2 == 0x96b82f6d010e6 and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f942442f7926fed; op2val:0x20496b82f6d010e6;
op3val:0x3f0fffffffffffff; valaddr_reg:x3; val_offset:99129*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99129*0 + 3*19*FLEN/8, x4, x1, x2)

inst_33044:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x42442f7926fed and fs2 == 0 and fe2 == 0x204 and fm2 == 0x96b82f6d010e6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f942442f7926fed; op2val:0x20496b82f6d010e6;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:99132*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99132*0 + 3*20*FLEN/8, x4, x1, x2)

inst_33045:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x42442f7926fed and fs2 == 0 and fe2 == 0x204 and fm2 == 0x96b82f6d010e6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f942442f7926fed; op2val:0x20496b82f6d010e6;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:99135*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99135*0 + 3*21*FLEN/8, x4, x1, x2)

inst_33046:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x42442f7926fed and fs2 == 0 and fe2 == 0x204 and fm2 == 0x96b82f6d010e6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f942442f7926fed; op2val:0x20496b82f6d010e6;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:99138*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99138*0 + 3*22*FLEN/8, x4, x1, x2)

inst_33047:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x42442f7926fed and fs2 == 0 and fe2 == 0x204 and fm2 == 0x96b82f6d010e6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f942442f7926fed; op2val:0x20496b82f6d010e6;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:99141*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99141*0 + 3*23*FLEN/8, x4, x1, x2)

inst_33048:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x42442f7926fed and fs2 == 0 and fe2 == 0x204 and fm2 == 0x96b82f6d010e6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f942442f7926fed; op2val:0x20496b82f6d010e6;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:99144*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99144*0 + 3*24*FLEN/8, x4, x1, x2)

inst_33049:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x42442f7926fed and fs2 == 0 and fe2 == 0x204 and fm2 == 0x96b82f6d010e6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f942442f7926fed; op2val:0x20496b82f6d010e6;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:99147*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99147*0 + 3*25*FLEN/8, x4, x1, x2)

inst_33050:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x42442f7926fed and fs2 == 0 and fe2 == 0x204 and fm2 == 0x96b82f6d010e6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f942442f7926fed; op2val:0x20496b82f6d010e6;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:99150*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99150*0 + 3*26*FLEN/8, x4, x1, x2)

inst_33051:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x42442f7926fed and fs2 == 0 and fe2 == 0x204 and fm2 == 0x96b82f6d010e6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f942442f7926fed; op2val:0x20496b82f6d010e6;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:99153*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99153*0 + 3*27*FLEN/8, x4, x1, x2)

inst_33052:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x42442f7926fed and fs2 == 0 and fe2 == 0x204 and fm2 == 0x96b82f6d010e6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f942442f7926fed; op2val:0x20496b82f6d010e6;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:99156*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99156*0 + 3*28*FLEN/8, x4, x1, x2)

inst_33053:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x42442f7926fed and fs2 == 0 and fe2 == 0x204 and fm2 == 0x96b82f6d010e6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f942442f7926fed; op2val:0x20496b82f6d010e6;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:99159*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99159*0 + 3*29*FLEN/8, x4, x1, x2)

inst_33054:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x42442f7926fed and fs2 == 0 and fe2 == 0x204 and fm2 == 0x96b82f6d010e6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f942442f7926fed; op2val:0x20496b82f6d010e6;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:99162*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99162*0 + 3*30*FLEN/8, x4, x1, x2)

inst_33055:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x42442f7926fed and fs2 == 0 and fe2 == 0x204 and fm2 == 0x96b82f6d010e6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f942442f7926fed; op2val:0x20496b82f6d010e6;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:99165*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99165*0 + 3*31*FLEN/8, x4, x1, x2)

inst_33056:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x42442f7926fed and fs2 == 0 and fe2 == 0x204 and fm2 == 0x96b82f6d010e6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f942442f7926fed; op2val:0x20496b82f6d010e6;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:99168*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99168*0 + 3*32*FLEN/8, x4, x1, x2)

inst_33057:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x42442f7926fed and fs2 == 0 and fe2 == 0x204 and fm2 == 0x96b82f6d010e6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f942442f7926fed; op2val:0x20496b82f6d010e6;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:99171*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99171*0 + 3*33*FLEN/8, x4, x1, x2)

inst_33058:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x42442f7926fed and fs2 == 0 and fe2 == 0x204 and fm2 == 0x96b82f6d010e6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f942442f7926fed; op2val:0x20496b82f6d010e6;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:99174*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99174*0 + 3*34*FLEN/8, x4, x1, x2)

inst_33059:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x42442f7926fed and fs2 == 0 and fe2 == 0x204 and fm2 == 0x96b82f6d010e6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f942442f7926fed; op2val:0x20496b82f6d010e6;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:99177*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99177*0 + 3*35*FLEN/8, x4, x1, x2)

inst_33060:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x42442f7926fed and fs2 == 0 and fe2 == 0x204 and fm2 == 0x96b82f6d010e6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f942442f7926fed; op2val:0x20496b82f6d010e6;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:99180*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99180*0 + 3*36*FLEN/8, x4, x1, x2)

inst_33061:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x42442f7926fed and fs2 == 0 and fe2 == 0x204 and fm2 == 0x96b82f6d010e6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f942442f7926fed; op2val:0x20496b82f6d010e6;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:99183*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99183*0 + 3*37*FLEN/8, x4, x1, x2)

inst_33062:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x42442f7926fed and fs2 == 0 and fe2 == 0x204 and fm2 == 0x96b82f6d010e6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f942442f7926fed; op2val:0x20496b82f6d010e6;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:99186*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99186*0 + 3*38*FLEN/8, x4, x1, x2)

inst_33063:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x42442f7926fed and fs2 == 0 and fe2 == 0x204 and fm2 == 0x96b82f6d010e6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f942442f7926fed; op2val:0x20496b82f6d010e6;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:99189*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99189*0 + 3*39*FLEN/8, x4, x1, x2)

inst_33064:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x42442f7926fed and fs2 == 0 and fe2 == 0x204 and fm2 == 0x96b82f6d010e6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f942442f7926fed; op2val:0x20496b82f6d010e6;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:99192*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99192*0 + 3*40*FLEN/8, x4, x1, x2)

inst_33065:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x42442f7926fed and fs2 == 0 and fe2 == 0x204 and fm2 == 0x96b82f6d010e6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f942442f7926fed; op2val:0x20496b82f6d010e6;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:99195*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99195*0 + 3*41*FLEN/8, x4, x1, x2)

inst_33066:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:99198*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99198*0 + 3*42*FLEN/8, x4, x1, x2)

inst_33067:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:99201*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99201*0 + 3*43*FLEN/8, x4, x1, x2)

inst_33068:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:99204*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99204*0 + 3*44*FLEN/8, x4, x1, x2)

inst_33069:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:99207*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99207*0 + 3*45*FLEN/8, x4, x1, x2)

inst_33070:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:99210*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99210*0 + 3*46*FLEN/8, x4, x1, x2)

inst_33071:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:99213*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99213*0 + 3*47*FLEN/8, x4, x1, x2)

inst_33072:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:99216*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99216*0 + 3*48*FLEN/8, x4, x1, x2)

inst_33073:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:99219*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99219*0 + 3*49*FLEN/8, x4, x1, x2)

inst_33074:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:99222*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99222*0 + 3*50*FLEN/8, x4, x1, x2)

inst_33075:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:99225*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99225*0 + 3*51*FLEN/8, x4, x1, x2)

inst_33076:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:99228*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99228*0 + 3*52*FLEN/8, x4, x1, x2)

inst_33077:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:99231*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99231*0 + 3*53*FLEN/8, x4, x1, x2)

inst_33078:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:99234*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99234*0 + 3*54*FLEN/8, x4, x1, x2)

inst_33079:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:99237*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99237*0 + 3*55*FLEN/8, x4, x1, x2)

inst_33080:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:99240*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99240*0 + 3*56*FLEN/8, x4, x1, x2)

inst_33081:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:99243*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99243*0 + 3*57*FLEN/8, x4, x1, x2)

inst_33082:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:99246*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99246*0 + 3*58*FLEN/8, x4, x1, x2)

inst_33083:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:99249*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99249*0 + 3*59*FLEN/8, x4, x1, x2)

inst_33084:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:99252*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99252*0 + 3*60*FLEN/8, x4, x1, x2)

inst_33085:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:99255*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99255*0 + 3*61*FLEN/8, x4, x1, x2)

inst_33086:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:99258*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99258*0 + 3*62*FLEN/8, x4, x1, x2)

inst_33087:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:99261*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99261*0 + 3*63*FLEN/8, x4, x1, x2)

inst_33088:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83e0000000000000; valaddr_reg:x3; val_offset:99264*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99264*0 + 3*64*FLEN/8, x4, x1, x2)

inst_33089:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83e0000000000001; valaddr_reg:x3; val_offset:99267*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99267*0 + 3*65*FLEN/8, x4, x1, x2)

inst_33090:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83e0000000000003; valaddr_reg:x3; val_offset:99270*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99270*0 + 3*66*FLEN/8, x4, x1, x2)

inst_33091:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83e0000000000007; valaddr_reg:x3; val_offset:99273*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99273*0 + 3*67*FLEN/8, x4, x1, x2)

inst_33092:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83e000000000000f; valaddr_reg:x3; val_offset:99276*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99276*0 + 3*68*FLEN/8, x4, x1, x2)

inst_33093:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83e000000000001f; valaddr_reg:x3; val_offset:99279*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99279*0 + 3*69*FLEN/8, x4, x1, x2)

inst_33094:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83e000000000003f; valaddr_reg:x3; val_offset:99282*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99282*0 + 3*70*FLEN/8, x4, x1, x2)

inst_33095:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83e000000000007f; valaddr_reg:x3; val_offset:99285*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99285*0 + 3*71*FLEN/8, x4, x1, x2)

inst_33096:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83e00000000000ff; valaddr_reg:x3; val_offset:99288*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99288*0 + 3*72*FLEN/8, x4, x1, x2)

inst_33097:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83e00000000001ff; valaddr_reg:x3; val_offset:99291*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99291*0 + 3*73*FLEN/8, x4, x1, x2)

inst_33098:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83e00000000003ff; valaddr_reg:x3; val_offset:99294*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99294*0 + 3*74*FLEN/8, x4, x1, x2)

inst_33099:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83e00000000007ff; valaddr_reg:x3; val_offset:99297*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99297*0 + 3*75*FLEN/8, x4, x1, x2)

inst_33100:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83e0000000000fff; valaddr_reg:x3; val_offset:99300*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99300*0 + 3*76*FLEN/8, x4, x1, x2)

inst_33101:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83e0000000001fff; valaddr_reg:x3; val_offset:99303*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99303*0 + 3*77*FLEN/8, x4, x1, x2)

inst_33102:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83e0000000003fff; valaddr_reg:x3; val_offset:99306*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99306*0 + 3*78*FLEN/8, x4, x1, x2)

inst_33103:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83e0000000007fff; valaddr_reg:x3; val_offset:99309*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99309*0 + 3*79*FLEN/8, x4, x1, x2)

inst_33104:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83e000000000ffff; valaddr_reg:x3; val_offset:99312*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99312*0 + 3*80*FLEN/8, x4, x1, x2)

inst_33105:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83e000000001ffff; valaddr_reg:x3; val_offset:99315*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99315*0 + 3*81*FLEN/8, x4, x1, x2)

inst_33106:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83e000000003ffff; valaddr_reg:x3; val_offset:99318*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99318*0 + 3*82*FLEN/8, x4, x1, x2)

inst_33107:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83e000000007ffff; valaddr_reg:x3; val_offset:99321*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99321*0 + 3*83*FLEN/8, x4, x1, x2)

inst_33108:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83e00000000fffff; valaddr_reg:x3; val_offset:99324*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99324*0 + 3*84*FLEN/8, x4, x1, x2)

inst_33109:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83e00000001fffff; valaddr_reg:x3; val_offset:99327*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99327*0 + 3*85*FLEN/8, x4, x1, x2)

inst_33110:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83e00000003fffff; valaddr_reg:x3; val_offset:99330*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99330*0 + 3*86*FLEN/8, x4, x1, x2)

inst_33111:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83e00000007fffff; valaddr_reg:x3; val_offset:99333*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99333*0 + 3*87*FLEN/8, x4, x1, x2)

inst_33112:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83e0000000ffffff; valaddr_reg:x3; val_offset:99336*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99336*0 + 3*88*FLEN/8, x4, x1, x2)

inst_33113:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83e0000001ffffff; valaddr_reg:x3; val_offset:99339*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99339*0 + 3*89*FLEN/8, x4, x1, x2)

inst_33114:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83e0000003ffffff; valaddr_reg:x3; val_offset:99342*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99342*0 + 3*90*FLEN/8, x4, x1, x2)

inst_33115:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83e0000007ffffff; valaddr_reg:x3; val_offset:99345*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99345*0 + 3*91*FLEN/8, x4, x1, x2)

inst_33116:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83e000000fffffff; valaddr_reg:x3; val_offset:99348*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99348*0 + 3*92*FLEN/8, x4, x1, x2)

inst_33117:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83e000001fffffff; valaddr_reg:x3; val_offset:99351*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99351*0 + 3*93*FLEN/8, x4, x1, x2)

inst_33118:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83e000003fffffff; valaddr_reg:x3; val_offset:99354*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99354*0 + 3*94*FLEN/8, x4, x1, x2)

inst_33119:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83e000007fffffff; valaddr_reg:x3; val_offset:99357*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99357*0 + 3*95*FLEN/8, x4, x1, x2)

inst_33120:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83e00000ffffffff; valaddr_reg:x3; val_offset:99360*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99360*0 + 3*96*FLEN/8, x4, x1, x2)

inst_33121:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83e00001ffffffff; valaddr_reg:x3; val_offset:99363*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99363*0 + 3*97*FLEN/8, x4, x1, x2)

inst_33122:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83e00003ffffffff; valaddr_reg:x3; val_offset:99366*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99366*0 + 3*98*FLEN/8, x4, x1, x2)

inst_33123:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83e00007ffffffff; valaddr_reg:x3; val_offset:99369*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99369*0 + 3*99*FLEN/8, x4, x1, x2)

inst_33124:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83e0000fffffffff; valaddr_reg:x3; val_offset:99372*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99372*0 + 3*100*FLEN/8, x4, x1, x2)

inst_33125:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83e0001fffffffff; valaddr_reg:x3; val_offset:99375*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99375*0 + 3*101*FLEN/8, x4, x1, x2)

inst_33126:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83e0003fffffffff; valaddr_reg:x3; val_offset:99378*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99378*0 + 3*102*FLEN/8, x4, x1, x2)

inst_33127:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83e0007fffffffff; valaddr_reg:x3; val_offset:99381*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99381*0 + 3*103*FLEN/8, x4, x1, x2)

inst_33128:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83e000ffffffffff; valaddr_reg:x3; val_offset:99384*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99384*0 + 3*104*FLEN/8, x4, x1, x2)

inst_33129:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83e001ffffffffff; valaddr_reg:x3; val_offset:99387*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99387*0 + 3*105*FLEN/8, x4, x1, x2)

inst_33130:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83e003ffffffffff; valaddr_reg:x3; val_offset:99390*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99390*0 + 3*106*FLEN/8, x4, x1, x2)

inst_33131:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83e007ffffffffff; valaddr_reg:x3; val_offset:99393*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99393*0 + 3*107*FLEN/8, x4, x1, x2)

inst_33132:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83e00fffffffffff; valaddr_reg:x3; val_offset:99396*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99396*0 + 3*108*FLEN/8, x4, x1, x2)

inst_33133:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83e01fffffffffff; valaddr_reg:x3; val_offset:99399*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99399*0 + 3*109*FLEN/8, x4, x1, x2)

inst_33134:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83e03fffffffffff; valaddr_reg:x3; val_offset:99402*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99402*0 + 3*110*FLEN/8, x4, x1, x2)

inst_33135:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83e07fffffffffff; valaddr_reg:x3; val_offset:99405*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99405*0 + 3*111*FLEN/8, x4, x1, x2)

inst_33136:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83e0ffffffffffff; valaddr_reg:x3; val_offset:99408*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99408*0 + 3*112*FLEN/8, x4, x1, x2)

inst_33137:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83e1ffffffffffff; valaddr_reg:x3; val_offset:99411*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99411*0 + 3*113*FLEN/8, x4, x1, x2)

inst_33138:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83e3ffffffffffff; valaddr_reg:x3; val_offset:99414*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99414*0 + 3*114*FLEN/8, x4, x1, x2)

inst_33139:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83e7ffffffffffff; valaddr_reg:x3; val_offset:99417*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99417*0 + 3*115*FLEN/8, x4, x1, x2)

inst_33140:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83e8000000000000; valaddr_reg:x3; val_offset:99420*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99420*0 + 3*116*FLEN/8, x4, x1, x2)

inst_33141:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83ec000000000000; valaddr_reg:x3; val_offset:99423*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99423*0 + 3*117*FLEN/8, x4, x1, x2)

inst_33142:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83ee000000000000; valaddr_reg:x3; val_offset:99426*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99426*0 + 3*118*FLEN/8, x4, x1, x2)

inst_33143:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83ef000000000000; valaddr_reg:x3; val_offset:99429*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99429*0 + 3*119*FLEN/8, x4, x1, x2)

inst_33144:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83ef800000000000; valaddr_reg:x3; val_offset:99432*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99432*0 + 3*120*FLEN/8, x4, x1, x2)

inst_33145:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83efc00000000000; valaddr_reg:x3; val_offset:99435*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99435*0 + 3*121*FLEN/8, x4, x1, x2)

inst_33146:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83efe00000000000; valaddr_reg:x3; val_offset:99438*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99438*0 + 3*122*FLEN/8, x4, x1, x2)

inst_33147:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83eff00000000000; valaddr_reg:x3; val_offset:99441*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99441*0 + 3*123*FLEN/8, x4, x1, x2)

inst_33148:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83eff80000000000; valaddr_reg:x3; val_offset:99444*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99444*0 + 3*124*FLEN/8, x4, x1, x2)

inst_33149:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83effc0000000000; valaddr_reg:x3; val_offset:99447*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99447*0 + 3*125*FLEN/8, x4, x1, x2)

inst_33150:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83effe0000000000; valaddr_reg:x3; val_offset:99450*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99450*0 + 3*126*FLEN/8, x4, x1, x2)

inst_33151:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83efff0000000000; valaddr_reg:x3; val_offset:99453*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99453*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_33152:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83efff8000000000; valaddr_reg:x3; val_offset:99456*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99456*0 + 3*128*FLEN/8, x4, x1, x2)

inst_33153:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83efffc000000000; valaddr_reg:x3; val_offset:99459*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99459*0 + 3*129*FLEN/8, x4, x1, x2)

inst_33154:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83efffe000000000; valaddr_reg:x3; val_offset:99462*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99462*0 + 3*130*FLEN/8, x4, x1, x2)

inst_33155:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83effff000000000; valaddr_reg:x3; val_offset:99465*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99465*0 + 3*131*FLEN/8, x4, x1, x2)

inst_33156:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83effff800000000; valaddr_reg:x3; val_offset:99468*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99468*0 + 3*132*FLEN/8, x4, x1, x2)

inst_33157:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83effffc00000000; valaddr_reg:x3; val_offset:99471*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99471*0 + 3*133*FLEN/8, x4, x1, x2)

inst_33158:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83effffe00000000; valaddr_reg:x3; val_offset:99474*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99474*0 + 3*134*FLEN/8, x4, x1, x2)

inst_33159:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83efffff00000000; valaddr_reg:x3; val_offset:99477*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99477*0 + 3*135*FLEN/8, x4, x1, x2)

inst_33160:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83efffff80000000; valaddr_reg:x3; val_offset:99480*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99480*0 + 3*136*FLEN/8, x4, x1, x2)

inst_33161:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83efffffc0000000; valaddr_reg:x3; val_offset:99483*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99483*0 + 3*137*FLEN/8, x4, x1, x2)

inst_33162:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83efffffe0000000; valaddr_reg:x3; val_offset:99486*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99486*0 + 3*138*FLEN/8, x4, x1, x2)

inst_33163:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83effffff0000000; valaddr_reg:x3; val_offset:99489*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99489*0 + 3*139*FLEN/8, x4, x1, x2)

inst_33164:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83effffff8000000; valaddr_reg:x3; val_offset:99492*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99492*0 + 3*140*FLEN/8, x4, x1, x2)

inst_33165:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83effffffc000000; valaddr_reg:x3; val_offset:99495*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99495*0 + 3*141*FLEN/8, x4, x1, x2)

inst_33166:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83effffffe000000; valaddr_reg:x3; val_offset:99498*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99498*0 + 3*142*FLEN/8, x4, x1, x2)

inst_33167:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83efffffff000000; valaddr_reg:x3; val_offset:99501*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99501*0 + 3*143*FLEN/8, x4, x1, x2)

inst_33168:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83efffffff800000; valaddr_reg:x3; val_offset:99504*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99504*0 + 3*144*FLEN/8, x4, x1, x2)

inst_33169:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83efffffffc00000; valaddr_reg:x3; val_offset:99507*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99507*0 + 3*145*FLEN/8, x4, x1, x2)

inst_33170:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83efffffffe00000; valaddr_reg:x3; val_offset:99510*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99510*0 + 3*146*FLEN/8, x4, x1, x2)

inst_33171:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83effffffff00000; valaddr_reg:x3; val_offset:99513*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99513*0 + 3*147*FLEN/8, x4, x1, x2)

inst_33172:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83effffffff80000; valaddr_reg:x3; val_offset:99516*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99516*0 + 3*148*FLEN/8, x4, x1, x2)

inst_33173:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83effffffffc0000; valaddr_reg:x3; val_offset:99519*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99519*0 + 3*149*FLEN/8, x4, x1, x2)

inst_33174:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83effffffffe0000; valaddr_reg:x3; val_offset:99522*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99522*0 + 3*150*FLEN/8, x4, x1, x2)

inst_33175:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83efffffffff0000; valaddr_reg:x3; val_offset:99525*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99525*0 + 3*151*FLEN/8, x4, x1, x2)

inst_33176:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83efffffffff8000; valaddr_reg:x3; val_offset:99528*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99528*0 + 3*152*FLEN/8, x4, x1, x2)

inst_33177:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83efffffffffc000; valaddr_reg:x3; val_offset:99531*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99531*0 + 3*153*FLEN/8, x4, x1, x2)

inst_33178:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83efffffffffe000; valaddr_reg:x3; val_offset:99534*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99534*0 + 3*154*FLEN/8, x4, x1, x2)

inst_33179:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83effffffffff000; valaddr_reg:x3; val_offset:99537*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99537*0 + 3*155*FLEN/8, x4, x1, x2)

inst_33180:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83effffffffff800; valaddr_reg:x3; val_offset:99540*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99540*0 + 3*156*FLEN/8, x4, x1, x2)

inst_33181:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83effffffffffc00; valaddr_reg:x3; val_offset:99543*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99543*0 + 3*157*FLEN/8, x4, x1, x2)

inst_33182:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83effffffffffe00; valaddr_reg:x3; val_offset:99546*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99546*0 + 3*158*FLEN/8, x4, x1, x2)

inst_33183:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83efffffffffff00; valaddr_reg:x3; val_offset:99549*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99549*0 + 3*159*FLEN/8, x4, x1, x2)

inst_33184:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83efffffffffff80; valaddr_reg:x3; val_offset:99552*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99552*0 + 3*160*FLEN/8, x4, x1, x2)

inst_33185:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83efffffffffffc0; valaddr_reg:x3; val_offset:99555*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99555*0 + 3*161*FLEN/8, x4, x1, x2)

inst_33186:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83efffffffffffe0; valaddr_reg:x3; val_offset:99558*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99558*0 + 3*162*FLEN/8, x4, x1, x2)

inst_33187:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83effffffffffff0; valaddr_reg:x3; val_offset:99561*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99561*0 + 3*163*FLEN/8, x4, x1, x2)

inst_33188:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83effffffffffff8; valaddr_reg:x3; val_offset:99564*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99564*0 + 3*164*FLEN/8, x4, x1, x2)

inst_33189:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83effffffffffffc; valaddr_reg:x3; val_offset:99567*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99567*0 + 3*165*FLEN/8, x4, x1, x2)

inst_33190:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83effffffffffffe; valaddr_reg:x3; val_offset:99570*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99570*0 + 3*166*FLEN/8, x4, x1, x2)

inst_33191:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943790a4111099; op2val:0x8000;
op3val:0x83efffffffffffff; valaddr_reg:x3; val_offset:99573*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99573*0 + 3*167*FLEN/8, x4, x1, x2)

inst_33192:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:99576*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99576*0 + 3*168*FLEN/8, x4, x1, x2)

inst_33193:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:99579*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99579*0 + 3*169*FLEN/8, x4, x1, x2)

inst_33194:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:99582*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99582*0 + 3*170*FLEN/8, x4, x1, x2)

inst_33195:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:99585*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99585*0 + 3*171*FLEN/8, x4, x1, x2)

inst_33196:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:99588*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99588*0 + 3*172*FLEN/8, x4, x1, x2)

inst_33197:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:99591*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99591*0 + 3*173*FLEN/8, x4, x1, x2)

inst_33198:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:99594*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99594*0 + 3*174*FLEN/8, x4, x1, x2)

inst_33199:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:99597*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99597*0 + 3*175*FLEN/8, x4, x1, x2)

inst_33200:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:99600*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99600*0 + 3*176*FLEN/8, x4, x1, x2)

inst_33201:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:99603*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99603*0 + 3*177*FLEN/8, x4, x1, x2)

inst_33202:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:99606*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99606*0 + 3*178*FLEN/8, x4, x1, x2)

inst_33203:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:99609*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99609*0 + 3*179*FLEN/8, x4, x1, x2)

inst_33204:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:99612*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99612*0 + 3*180*FLEN/8, x4, x1, x2)

inst_33205:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:99615*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99615*0 + 3*181*FLEN/8, x4, x1, x2)

inst_33206:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:99618*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99618*0 + 3*182*FLEN/8, x4, x1, x2)

inst_33207:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:99621*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99621*0 + 3*183*FLEN/8, x4, x1, x2)

inst_33208:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:99624*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99624*0 + 3*184*FLEN/8, x4, x1, x2)

inst_33209:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:99627*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99627*0 + 3*185*FLEN/8, x4, x1, x2)

inst_33210:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:99630*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99630*0 + 3*186*FLEN/8, x4, x1, x2)

inst_33211:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:99633*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99633*0 + 3*187*FLEN/8, x4, x1, x2)

inst_33212:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:99636*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99636*0 + 3*188*FLEN/8, x4, x1, x2)

inst_33213:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:99639*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99639*0 + 3*189*FLEN/8, x4, x1, x2)

inst_33214:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x50000000000000; valaddr_reg:x3; val_offset:99642*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99642*0 + 3*190*FLEN/8, x4, x1, x2)

inst_33215:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x50000000000001; valaddr_reg:x3; val_offset:99645*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99645*0 + 3*191*FLEN/8, x4, x1, x2)

inst_33216:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x50000000000003; valaddr_reg:x3; val_offset:99648*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99648*0 + 3*192*FLEN/8, x4, x1, x2)

inst_33217:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x50000000000007; valaddr_reg:x3; val_offset:99651*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99651*0 + 3*193*FLEN/8, x4, x1, x2)

inst_33218:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5000000000000f; valaddr_reg:x3; val_offset:99654*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99654*0 + 3*194*FLEN/8, x4, x1, x2)

inst_33219:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5000000000001f; valaddr_reg:x3; val_offset:99657*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99657*0 + 3*195*FLEN/8, x4, x1, x2)

inst_33220:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5000000000003f; valaddr_reg:x3; val_offset:99660*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99660*0 + 3*196*FLEN/8, x4, x1, x2)

inst_33221:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5000000000007f; valaddr_reg:x3; val_offset:99663*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99663*0 + 3*197*FLEN/8, x4, x1, x2)

inst_33222:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x500000000000ff; valaddr_reg:x3; val_offset:99666*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99666*0 + 3*198*FLEN/8, x4, x1, x2)

inst_33223:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x500000000001ff; valaddr_reg:x3; val_offset:99669*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99669*0 + 3*199*FLEN/8, x4, x1, x2)

inst_33224:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x500000000003ff; valaddr_reg:x3; val_offset:99672*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99672*0 + 3*200*FLEN/8, x4, x1, x2)

inst_33225:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x500000000007ff; valaddr_reg:x3; val_offset:99675*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99675*0 + 3*201*FLEN/8, x4, x1, x2)

inst_33226:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x50000000000fff; valaddr_reg:x3; val_offset:99678*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99678*0 + 3*202*FLEN/8, x4, x1, x2)

inst_33227:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x50000000001fff; valaddr_reg:x3; val_offset:99681*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99681*0 + 3*203*FLEN/8, x4, x1, x2)

inst_33228:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x50000000003fff; valaddr_reg:x3; val_offset:99684*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99684*0 + 3*204*FLEN/8, x4, x1, x2)

inst_33229:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x50000000007fff; valaddr_reg:x3; val_offset:99687*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99687*0 + 3*205*FLEN/8, x4, x1, x2)

inst_33230:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5000000000ffff; valaddr_reg:x3; val_offset:99690*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99690*0 + 3*206*FLEN/8, x4, x1, x2)

inst_33231:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5000000001ffff; valaddr_reg:x3; val_offset:99693*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99693*0 + 3*207*FLEN/8, x4, x1, x2)

inst_33232:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5000000003ffff; valaddr_reg:x3; val_offset:99696*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99696*0 + 3*208*FLEN/8, x4, x1, x2)

inst_33233:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5000000007ffff; valaddr_reg:x3; val_offset:99699*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99699*0 + 3*209*FLEN/8, x4, x1, x2)

inst_33234:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x500000000fffff; valaddr_reg:x3; val_offset:99702*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99702*0 + 3*210*FLEN/8, x4, x1, x2)

inst_33235:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x500000001fffff; valaddr_reg:x3; val_offset:99705*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99705*0 + 3*211*FLEN/8, x4, x1, x2)

inst_33236:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x500000003fffff; valaddr_reg:x3; val_offset:99708*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99708*0 + 3*212*FLEN/8, x4, x1, x2)

inst_33237:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x500000007fffff; valaddr_reg:x3; val_offset:99711*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99711*0 + 3*213*FLEN/8, x4, x1, x2)

inst_33238:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x50000000ffffff; valaddr_reg:x3; val_offset:99714*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99714*0 + 3*214*FLEN/8, x4, x1, x2)

inst_33239:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x50000001ffffff; valaddr_reg:x3; val_offset:99717*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99717*0 + 3*215*FLEN/8, x4, x1, x2)

inst_33240:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x50000003ffffff; valaddr_reg:x3; val_offset:99720*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99720*0 + 3*216*FLEN/8, x4, x1, x2)

inst_33241:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x50000007ffffff; valaddr_reg:x3; val_offset:99723*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99723*0 + 3*217*FLEN/8, x4, x1, x2)

inst_33242:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5000000fffffff; valaddr_reg:x3; val_offset:99726*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99726*0 + 3*218*FLEN/8, x4, x1, x2)

inst_33243:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5000001fffffff; valaddr_reg:x3; val_offset:99729*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99729*0 + 3*219*FLEN/8, x4, x1, x2)

inst_33244:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5000003fffffff; valaddr_reg:x3; val_offset:99732*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99732*0 + 3*220*FLEN/8, x4, x1, x2)

inst_33245:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5000007fffffff; valaddr_reg:x3; val_offset:99735*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99735*0 + 3*221*FLEN/8, x4, x1, x2)

inst_33246:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x500000ffffffff; valaddr_reg:x3; val_offset:99738*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99738*0 + 3*222*FLEN/8, x4, x1, x2)

inst_33247:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x500001ffffffff; valaddr_reg:x3; val_offset:99741*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99741*0 + 3*223*FLEN/8, x4, x1, x2)

inst_33248:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x500003ffffffff; valaddr_reg:x3; val_offset:99744*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99744*0 + 3*224*FLEN/8, x4, x1, x2)

inst_33249:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x500007ffffffff; valaddr_reg:x3; val_offset:99747*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99747*0 + 3*225*FLEN/8, x4, x1, x2)

inst_33250:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x50000fffffffff; valaddr_reg:x3; val_offset:99750*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99750*0 + 3*226*FLEN/8, x4, x1, x2)

inst_33251:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x50001fffffffff; valaddr_reg:x3; val_offset:99753*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99753*0 + 3*227*FLEN/8, x4, x1, x2)

inst_33252:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x50003fffffffff; valaddr_reg:x3; val_offset:99756*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99756*0 + 3*228*FLEN/8, x4, x1, x2)

inst_33253:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x50007fffffffff; valaddr_reg:x3; val_offset:99759*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99759*0 + 3*229*FLEN/8, x4, x1, x2)

inst_33254:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5000ffffffffff; valaddr_reg:x3; val_offset:99762*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99762*0 + 3*230*FLEN/8, x4, x1, x2)

inst_33255:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5001ffffffffff; valaddr_reg:x3; val_offset:99765*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99765*0 + 3*231*FLEN/8, x4, x1, x2)

inst_33256:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5003ffffffffff; valaddr_reg:x3; val_offset:99768*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99768*0 + 3*232*FLEN/8, x4, x1, x2)

inst_33257:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5007ffffffffff; valaddr_reg:x3; val_offset:99771*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99771*0 + 3*233*FLEN/8, x4, x1, x2)

inst_33258:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x500fffffffffff; valaddr_reg:x3; val_offset:99774*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99774*0 + 3*234*FLEN/8, x4, x1, x2)

inst_33259:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x501fffffffffff; valaddr_reg:x3; val_offset:99777*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99777*0 + 3*235*FLEN/8, x4, x1, x2)

inst_33260:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x503fffffffffff; valaddr_reg:x3; val_offset:99780*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99780*0 + 3*236*FLEN/8, x4, x1, x2)

inst_33261:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x507fffffffffff; valaddr_reg:x3; val_offset:99783*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99783*0 + 3*237*FLEN/8, x4, x1, x2)

inst_33262:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x50ffffffffffff; valaddr_reg:x3; val_offset:99786*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99786*0 + 3*238*FLEN/8, x4, x1, x2)

inst_33263:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x51ffffffffffff; valaddr_reg:x3; val_offset:99789*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99789*0 + 3*239*FLEN/8, x4, x1, x2)

inst_33264:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x53ffffffffffff; valaddr_reg:x3; val_offset:99792*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99792*0 + 3*240*FLEN/8, x4, x1, x2)

inst_33265:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x57ffffffffffff; valaddr_reg:x3; val_offset:99795*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99795*0 + 3*241*FLEN/8, x4, x1, x2)

inst_33266:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x58000000000000; valaddr_reg:x3; val_offset:99798*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99798*0 + 3*242*FLEN/8, x4, x1, x2)

inst_33267:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5c000000000000; valaddr_reg:x3; val_offset:99801*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99801*0 + 3*243*FLEN/8, x4, x1, x2)

inst_33268:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5e000000000000; valaddr_reg:x3; val_offset:99804*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99804*0 + 3*244*FLEN/8, x4, x1, x2)

inst_33269:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5f000000000000; valaddr_reg:x3; val_offset:99807*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99807*0 + 3*245*FLEN/8, x4, x1, x2)

inst_33270:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5f800000000000; valaddr_reg:x3; val_offset:99810*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99810*0 + 3*246*FLEN/8, x4, x1, x2)

inst_33271:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5fc00000000000; valaddr_reg:x3; val_offset:99813*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99813*0 + 3*247*FLEN/8, x4, x1, x2)

inst_33272:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5fe00000000000; valaddr_reg:x3; val_offset:99816*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99816*0 + 3*248*FLEN/8, x4, x1, x2)

inst_33273:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5ff00000000000; valaddr_reg:x3; val_offset:99819*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99819*0 + 3*249*FLEN/8, x4, x1, x2)

inst_33274:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5ff80000000000; valaddr_reg:x3; val_offset:99822*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99822*0 + 3*250*FLEN/8, x4, x1, x2)

inst_33275:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5ffc0000000000; valaddr_reg:x3; val_offset:99825*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99825*0 + 3*251*FLEN/8, x4, x1, x2)

inst_33276:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5ffe0000000000; valaddr_reg:x3; val_offset:99828*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99828*0 + 3*252*FLEN/8, x4, x1, x2)

inst_33277:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5fff0000000000; valaddr_reg:x3; val_offset:99831*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99831*0 + 3*253*FLEN/8, x4, x1, x2)

inst_33278:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5fff8000000000; valaddr_reg:x3; val_offset:99834*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99834*0 + 3*254*FLEN/8, x4, x1, x2)

inst_33279:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5fffc000000000; valaddr_reg:x3; val_offset:99837*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99837*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_33280:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5fffe000000000; valaddr_reg:x3; val_offset:99840*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99840*0 + 3*256*FLEN/8, x4, x1, x2)

inst_33281:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5ffff000000000; valaddr_reg:x3; val_offset:99843*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99843*0 + 3*257*FLEN/8, x4, x1, x2)

inst_33282:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5ffff800000000; valaddr_reg:x3; val_offset:99846*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99846*0 + 3*258*FLEN/8, x4, x1, x2)

inst_33283:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5ffffc00000000; valaddr_reg:x3; val_offset:99849*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99849*0 + 3*259*FLEN/8, x4, x1, x2)

inst_33284:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5ffffe00000000; valaddr_reg:x3; val_offset:99852*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99852*0 + 3*260*FLEN/8, x4, x1, x2)

inst_33285:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5fffff00000000; valaddr_reg:x3; val_offset:99855*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99855*0 + 3*261*FLEN/8, x4, x1, x2)

inst_33286:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5fffff80000000; valaddr_reg:x3; val_offset:99858*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99858*0 + 3*262*FLEN/8, x4, x1, x2)

inst_33287:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5fffffc0000000; valaddr_reg:x3; val_offset:99861*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99861*0 + 3*263*FLEN/8, x4, x1, x2)

inst_33288:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5fffffe0000000; valaddr_reg:x3; val_offset:99864*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99864*0 + 3*264*FLEN/8, x4, x1, x2)

inst_33289:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5ffffff0000000; valaddr_reg:x3; val_offset:99867*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99867*0 + 3*265*FLEN/8, x4, x1, x2)

inst_33290:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5ffffff8000000; valaddr_reg:x3; val_offset:99870*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99870*0 + 3*266*FLEN/8, x4, x1, x2)

inst_33291:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5ffffffc000000; valaddr_reg:x3; val_offset:99873*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99873*0 + 3*267*FLEN/8, x4, x1, x2)

inst_33292:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5ffffffe000000; valaddr_reg:x3; val_offset:99876*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99876*0 + 3*268*FLEN/8, x4, x1, x2)

inst_33293:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5fffffff000000; valaddr_reg:x3; val_offset:99879*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99879*0 + 3*269*FLEN/8, x4, x1, x2)

inst_33294:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5fffffff800000; valaddr_reg:x3; val_offset:99882*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99882*0 + 3*270*FLEN/8, x4, x1, x2)

inst_33295:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5fffffffc00000; valaddr_reg:x3; val_offset:99885*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99885*0 + 3*271*FLEN/8, x4, x1, x2)

inst_33296:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5fffffffe00000; valaddr_reg:x3; val_offset:99888*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99888*0 + 3*272*FLEN/8, x4, x1, x2)

inst_33297:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5ffffffff00000; valaddr_reg:x3; val_offset:99891*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99891*0 + 3*273*FLEN/8, x4, x1, x2)

inst_33298:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5ffffffff80000; valaddr_reg:x3; val_offset:99894*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99894*0 + 3*274*FLEN/8, x4, x1, x2)

inst_33299:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5ffffffffc0000; valaddr_reg:x3; val_offset:99897*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99897*0 + 3*275*FLEN/8, x4, x1, x2)

inst_33300:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5ffffffffe0000; valaddr_reg:x3; val_offset:99900*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99900*0 + 3*276*FLEN/8, x4, x1, x2)

inst_33301:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5fffffffff0000; valaddr_reg:x3; val_offset:99903*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99903*0 + 3*277*FLEN/8, x4, x1, x2)

inst_33302:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5fffffffff8000; valaddr_reg:x3; val_offset:99906*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99906*0 + 3*278*FLEN/8, x4, x1, x2)

inst_33303:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5fffffffffc000; valaddr_reg:x3; val_offset:99909*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99909*0 + 3*279*FLEN/8, x4, x1, x2)

inst_33304:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5fffffffffe000; valaddr_reg:x3; val_offset:99912*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99912*0 + 3*280*FLEN/8, x4, x1, x2)

inst_33305:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5ffffffffff000; valaddr_reg:x3; val_offset:99915*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99915*0 + 3*281*FLEN/8, x4, x1, x2)

inst_33306:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5ffffffffff800; valaddr_reg:x3; val_offset:99918*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99918*0 + 3*282*FLEN/8, x4, x1, x2)

inst_33307:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5ffffffffffc00; valaddr_reg:x3; val_offset:99921*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99921*0 + 3*283*FLEN/8, x4, x1, x2)

inst_33308:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5ffffffffffe00; valaddr_reg:x3; val_offset:99924*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99924*0 + 3*284*FLEN/8, x4, x1, x2)

inst_33309:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5fffffffffff00; valaddr_reg:x3; val_offset:99927*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99927*0 + 3*285*FLEN/8, x4, x1, x2)

inst_33310:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5fffffffffff80; valaddr_reg:x3; val_offset:99930*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99930*0 + 3*286*FLEN/8, x4, x1, x2)

inst_33311:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5fffffffffffc0; valaddr_reg:x3; val_offset:99933*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99933*0 + 3*287*FLEN/8, x4, x1, x2)

inst_33312:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5fffffffffffe0; valaddr_reg:x3; val_offset:99936*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99936*0 + 3*288*FLEN/8, x4, x1, x2)

inst_33313:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5ffffffffffff0; valaddr_reg:x3; val_offset:99939*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99939*0 + 3*289*FLEN/8, x4, x1, x2)

inst_33314:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5ffffffffffff8; valaddr_reg:x3; val_offset:99942*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99942*0 + 3*290*FLEN/8, x4, x1, x2)

inst_33315:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5ffffffffffffc; valaddr_reg:x3; val_offset:99945*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99945*0 + 3*291*FLEN/8, x4, x1, x2)

inst_33316:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5ffffffffffffe; valaddr_reg:x3; val_offset:99948*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99948*0 + 3*292*FLEN/8, x4, x1, x2)

inst_33317:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43a84c908a615 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943a84c908a615; op2val:0x0;
op3val:0x5fffffffffffff; valaddr_reg:x3; val_offset:99951*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99951*0 + 3*293*FLEN/8, x4, x1, x2)

inst_33318:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:99954*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99954*0 + 3*294*FLEN/8, x4, x1, x2)

inst_33319:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:99957*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99957*0 + 3*295*FLEN/8, x4, x1, x2)

inst_33320:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:99960*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99960*0 + 3*296*FLEN/8, x4, x1, x2)

inst_33321:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:99963*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99963*0 + 3*297*FLEN/8, x4, x1, x2)

inst_33322:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:99966*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99966*0 + 3*298*FLEN/8, x4, x1, x2)

inst_33323:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:99969*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99969*0 + 3*299*FLEN/8, x4, x1, x2)

inst_33324:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:99972*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99972*0 + 3*300*FLEN/8, x4, x1, x2)

inst_33325:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:99975*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99975*0 + 3*301*FLEN/8, x4, x1, x2)

inst_33326:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:99978*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99978*0 + 3*302*FLEN/8, x4, x1, x2)

inst_33327:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:99981*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99981*0 + 3*303*FLEN/8, x4, x1, x2)

inst_33328:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:99984*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99984*0 + 3*304*FLEN/8, x4, x1, x2)

inst_33329:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:99987*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99987*0 + 3*305*FLEN/8, x4, x1, x2)

inst_33330:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:99990*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99990*0 + 3*306*FLEN/8, x4, x1, x2)

inst_33331:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:99993*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99993*0 + 3*307*FLEN/8, x4, x1, x2)

inst_33332:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:99996*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99996*0 + 3*308*FLEN/8, x4, x1, x2)

inst_33333:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:99999*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99999*0 + 3*309*FLEN/8, x4, x1, x2)

inst_33334:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:100002*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100002*0 + 3*310*FLEN/8, x4, x1, x2)

inst_33335:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:100005*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100005*0 + 3*311*FLEN/8, x4, x1, x2)

inst_33336:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:100008*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100008*0 + 3*312*FLEN/8, x4, x1, x2)

inst_33337:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:100011*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100011*0 + 3*313*FLEN/8, x4, x1, x2)

inst_33338:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:100014*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100014*0 + 3*314*FLEN/8, x4, x1, x2)

inst_33339:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:100017*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100017*0 + 3*315*FLEN/8, x4, x1, x2)

inst_33340:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x180000000000000; valaddr_reg:x3; val_offset:100020*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100020*0 + 3*316*FLEN/8, x4, x1, x2)

inst_33341:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x180000000000001; valaddr_reg:x3; val_offset:100023*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100023*0 + 3*317*FLEN/8, x4, x1, x2)

inst_33342:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x180000000000003; valaddr_reg:x3; val_offset:100026*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100026*0 + 3*318*FLEN/8, x4, x1, x2)

inst_33343:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x180000000000007; valaddr_reg:x3; val_offset:100029*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100029*0 + 3*319*FLEN/8, x4, x1, x2)

inst_33344:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18000000000000f; valaddr_reg:x3; val_offset:100032*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100032*0 + 3*320*FLEN/8, x4, x1, x2)

inst_33345:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18000000000001f; valaddr_reg:x3; val_offset:100035*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100035*0 + 3*321*FLEN/8, x4, x1, x2)

inst_33346:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18000000000003f; valaddr_reg:x3; val_offset:100038*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100038*0 + 3*322*FLEN/8, x4, x1, x2)

inst_33347:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18000000000007f; valaddr_reg:x3; val_offset:100041*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100041*0 + 3*323*FLEN/8, x4, x1, x2)

inst_33348:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x1800000000000ff; valaddr_reg:x3; val_offset:100044*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100044*0 + 3*324*FLEN/8, x4, x1, x2)

inst_33349:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x1800000000001ff; valaddr_reg:x3; val_offset:100047*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100047*0 + 3*325*FLEN/8, x4, x1, x2)

inst_33350:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x1800000000003ff; valaddr_reg:x3; val_offset:100050*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100050*0 + 3*326*FLEN/8, x4, x1, x2)

inst_33351:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x1800000000007ff; valaddr_reg:x3; val_offset:100053*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100053*0 + 3*327*FLEN/8, x4, x1, x2)

inst_33352:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x180000000000fff; valaddr_reg:x3; val_offset:100056*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100056*0 + 3*328*FLEN/8, x4, x1, x2)

inst_33353:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x180000000001fff; valaddr_reg:x3; val_offset:100059*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100059*0 + 3*329*FLEN/8, x4, x1, x2)

inst_33354:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x180000000003fff; valaddr_reg:x3; val_offset:100062*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100062*0 + 3*330*FLEN/8, x4, x1, x2)

inst_33355:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x180000000007fff; valaddr_reg:x3; val_offset:100065*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100065*0 + 3*331*FLEN/8, x4, x1, x2)

inst_33356:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18000000000ffff; valaddr_reg:x3; val_offset:100068*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100068*0 + 3*332*FLEN/8, x4, x1, x2)

inst_33357:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18000000001ffff; valaddr_reg:x3; val_offset:100071*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100071*0 + 3*333*FLEN/8, x4, x1, x2)

inst_33358:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18000000003ffff; valaddr_reg:x3; val_offset:100074*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100074*0 + 3*334*FLEN/8, x4, x1, x2)

inst_33359:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18000000007ffff; valaddr_reg:x3; val_offset:100077*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100077*0 + 3*335*FLEN/8, x4, x1, x2)

inst_33360:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x1800000000fffff; valaddr_reg:x3; val_offset:100080*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100080*0 + 3*336*FLEN/8, x4, x1, x2)

inst_33361:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x1800000001fffff; valaddr_reg:x3; val_offset:100083*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100083*0 + 3*337*FLEN/8, x4, x1, x2)

inst_33362:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x1800000003fffff; valaddr_reg:x3; val_offset:100086*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100086*0 + 3*338*FLEN/8, x4, x1, x2)

inst_33363:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x1800000007fffff; valaddr_reg:x3; val_offset:100089*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100089*0 + 3*339*FLEN/8, x4, x1, x2)

inst_33364:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x180000000ffffff; valaddr_reg:x3; val_offset:100092*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100092*0 + 3*340*FLEN/8, x4, x1, x2)

inst_33365:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x180000001ffffff; valaddr_reg:x3; val_offset:100095*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100095*0 + 3*341*FLEN/8, x4, x1, x2)

inst_33366:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x180000003ffffff; valaddr_reg:x3; val_offset:100098*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100098*0 + 3*342*FLEN/8, x4, x1, x2)

inst_33367:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x180000007ffffff; valaddr_reg:x3; val_offset:100101*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100101*0 + 3*343*FLEN/8, x4, x1, x2)

inst_33368:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18000000fffffff; valaddr_reg:x3; val_offset:100104*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100104*0 + 3*344*FLEN/8, x4, x1, x2)

inst_33369:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18000001fffffff; valaddr_reg:x3; val_offset:100107*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100107*0 + 3*345*FLEN/8, x4, x1, x2)

inst_33370:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18000003fffffff; valaddr_reg:x3; val_offset:100110*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100110*0 + 3*346*FLEN/8, x4, x1, x2)

inst_33371:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18000007fffffff; valaddr_reg:x3; val_offset:100113*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100113*0 + 3*347*FLEN/8, x4, x1, x2)

inst_33372:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x1800000ffffffff; valaddr_reg:x3; val_offset:100116*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100116*0 + 3*348*FLEN/8, x4, x1, x2)

inst_33373:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x1800001ffffffff; valaddr_reg:x3; val_offset:100119*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100119*0 + 3*349*FLEN/8, x4, x1, x2)

inst_33374:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x1800003ffffffff; valaddr_reg:x3; val_offset:100122*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100122*0 + 3*350*FLEN/8, x4, x1, x2)

inst_33375:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x1800007ffffffff; valaddr_reg:x3; val_offset:100125*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100125*0 + 3*351*FLEN/8, x4, x1, x2)

inst_33376:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x180000fffffffff; valaddr_reg:x3; val_offset:100128*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100128*0 + 3*352*FLEN/8, x4, x1, x2)

inst_33377:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x180001fffffffff; valaddr_reg:x3; val_offset:100131*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100131*0 + 3*353*FLEN/8, x4, x1, x2)

inst_33378:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x180003fffffffff; valaddr_reg:x3; val_offset:100134*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100134*0 + 3*354*FLEN/8, x4, x1, x2)

inst_33379:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x180007fffffffff; valaddr_reg:x3; val_offset:100137*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100137*0 + 3*355*FLEN/8, x4, x1, x2)

inst_33380:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18000ffffffffff; valaddr_reg:x3; val_offset:100140*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100140*0 + 3*356*FLEN/8, x4, x1, x2)

inst_33381:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18001ffffffffff; valaddr_reg:x3; val_offset:100143*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100143*0 + 3*357*FLEN/8, x4, x1, x2)

inst_33382:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18003ffffffffff; valaddr_reg:x3; val_offset:100146*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100146*0 + 3*358*FLEN/8, x4, x1, x2)

inst_33383:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18007ffffffffff; valaddr_reg:x3; val_offset:100149*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100149*0 + 3*359*FLEN/8, x4, x1, x2)

inst_33384:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x1800fffffffffff; valaddr_reg:x3; val_offset:100152*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100152*0 + 3*360*FLEN/8, x4, x1, x2)

inst_33385:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x1801fffffffffff; valaddr_reg:x3; val_offset:100155*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100155*0 + 3*361*FLEN/8, x4, x1, x2)

inst_33386:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x1803fffffffffff; valaddr_reg:x3; val_offset:100158*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100158*0 + 3*362*FLEN/8, x4, x1, x2)

inst_33387:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x1807fffffffffff; valaddr_reg:x3; val_offset:100161*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100161*0 + 3*363*FLEN/8, x4, x1, x2)

inst_33388:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x180ffffffffffff; valaddr_reg:x3; val_offset:100164*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100164*0 + 3*364*FLEN/8, x4, x1, x2)

inst_33389:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x181ffffffffffff; valaddr_reg:x3; val_offset:100167*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100167*0 + 3*365*FLEN/8, x4, x1, x2)

inst_33390:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x183ffffffffffff; valaddr_reg:x3; val_offset:100170*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100170*0 + 3*366*FLEN/8, x4, x1, x2)

inst_33391:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x187ffffffffffff; valaddr_reg:x3; val_offset:100173*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100173*0 + 3*367*FLEN/8, x4, x1, x2)

inst_33392:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x188000000000000; valaddr_reg:x3; val_offset:100176*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100176*0 + 3*368*FLEN/8, x4, x1, x2)

inst_33393:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18c000000000000; valaddr_reg:x3; val_offset:100179*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100179*0 + 3*369*FLEN/8, x4, x1, x2)

inst_33394:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18e000000000000; valaddr_reg:x3; val_offset:100182*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100182*0 + 3*370*FLEN/8, x4, x1, x2)

inst_33395:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18f000000000000; valaddr_reg:x3; val_offset:100185*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100185*0 + 3*371*FLEN/8, x4, x1, x2)

inst_33396:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18f800000000000; valaddr_reg:x3; val_offset:100188*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100188*0 + 3*372*FLEN/8, x4, x1, x2)

inst_33397:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18fc00000000000; valaddr_reg:x3; val_offset:100191*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100191*0 + 3*373*FLEN/8, x4, x1, x2)

inst_33398:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18fe00000000000; valaddr_reg:x3; val_offset:100194*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100194*0 + 3*374*FLEN/8, x4, x1, x2)

inst_33399:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18ff00000000000; valaddr_reg:x3; val_offset:100197*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100197*0 + 3*375*FLEN/8, x4, x1, x2)

inst_33400:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18ff80000000000; valaddr_reg:x3; val_offset:100200*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100200*0 + 3*376*FLEN/8, x4, x1, x2)

inst_33401:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18ffc0000000000; valaddr_reg:x3; val_offset:100203*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100203*0 + 3*377*FLEN/8, x4, x1, x2)

inst_33402:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18ffe0000000000; valaddr_reg:x3; val_offset:100206*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100206*0 + 3*378*FLEN/8, x4, x1, x2)

inst_33403:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18fff0000000000; valaddr_reg:x3; val_offset:100209*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100209*0 + 3*379*FLEN/8, x4, x1, x2)

inst_33404:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18fff8000000000; valaddr_reg:x3; val_offset:100212*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100212*0 + 3*380*FLEN/8, x4, x1, x2)

inst_33405:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18fffc000000000; valaddr_reg:x3; val_offset:100215*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100215*0 + 3*381*FLEN/8, x4, x1, x2)

inst_33406:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18fffe000000000; valaddr_reg:x3; val_offset:100218*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100218*0 + 3*382*FLEN/8, x4, x1, x2)

inst_33407:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18ffff000000000; valaddr_reg:x3; val_offset:100221*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100221*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_33408:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18ffff800000000; valaddr_reg:x3; val_offset:100224*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100224*0 + 3*384*FLEN/8, x4, x1, x2)

inst_33409:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18ffffc00000000; valaddr_reg:x3; val_offset:100227*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100227*0 + 3*385*FLEN/8, x4, x1, x2)

inst_33410:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18ffffe00000000; valaddr_reg:x3; val_offset:100230*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100230*0 + 3*386*FLEN/8, x4, x1, x2)

inst_33411:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18fffff00000000; valaddr_reg:x3; val_offset:100233*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100233*0 + 3*387*FLEN/8, x4, x1, x2)

inst_33412:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18fffff80000000; valaddr_reg:x3; val_offset:100236*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100236*0 + 3*388*FLEN/8, x4, x1, x2)

inst_33413:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18fffffc0000000; valaddr_reg:x3; val_offset:100239*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100239*0 + 3*389*FLEN/8, x4, x1, x2)

inst_33414:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18fffffe0000000; valaddr_reg:x3; val_offset:100242*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100242*0 + 3*390*FLEN/8, x4, x1, x2)

inst_33415:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18ffffff0000000; valaddr_reg:x3; val_offset:100245*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100245*0 + 3*391*FLEN/8, x4, x1, x2)

inst_33416:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18ffffff8000000; valaddr_reg:x3; val_offset:100248*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100248*0 + 3*392*FLEN/8, x4, x1, x2)

inst_33417:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18ffffffc000000; valaddr_reg:x3; val_offset:100251*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100251*0 + 3*393*FLEN/8, x4, x1, x2)

inst_33418:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18ffffffe000000; valaddr_reg:x3; val_offset:100254*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100254*0 + 3*394*FLEN/8, x4, x1, x2)

inst_33419:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18fffffff000000; valaddr_reg:x3; val_offset:100257*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100257*0 + 3*395*FLEN/8, x4, x1, x2)

inst_33420:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18fffffff800000; valaddr_reg:x3; val_offset:100260*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100260*0 + 3*396*FLEN/8, x4, x1, x2)

inst_33421:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18fffffffc00000; valaddr_reg:x3; val_offset:100263*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100263*0 + 3*397*FLEN/8, x4, x1, x2)

inst_33422:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18fffffffe00000; valaddr_reg:x3; val_offset:100266*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100266*0 + 3*398*FLEN/8, x4, x1, x2)

inst_33423:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18ffffffff00000; valaddr_reg:x3; val_offset:100269*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100269*0 + 3*399*FLEN/8, x4, x1, x2)

inst_33424:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18ffffffff80000; valaddr_reg:x3; val_offset:100272*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100272*0 + 3*400*FLEN/8, x4, x1, x2)

inst_33425:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18ffffffffc0000; valaddr_reg:x3; val_offset:100275*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100275*0 + 3*401*FLEN/8, x4, x1, x2)

inst_33426:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18ffffffffe0000; valaddr_reg:x3; val_offset:100278*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100278*0 + 3*402*FLEN/8, x4, x1, x2)

inst_33427:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18fffffffff0000; valaddr_reg:x3; val_offset:100281*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100281*0 + 3*403*FLEN/8, x4, x1, x2)

inst_33428:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18fffffffff8000; valaddr_reg:x3; val_offset:100284*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100284*0 + 3*404*FLEN/8, x4, x1, x2)

inst_33429:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18fffffffffc000; valaddr_reg:x3; val_offset:100287*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100287*0 + 3*405*FLEN/8, x4, x1, x2)

inst_33430:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18fffffffffe000; valaddr_reg:x3; val_offset:100290*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100290*0 + 3*406*FLEN/8, x4, x1, x2)

inst_33431:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18ffffffffff000; valaddr_reg:x3; val_offset:100293*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100293*0 + 3*407*FLEN/8, x4, x1, x2)

inst_33432:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18ffffffffff800; valaddr_reg:x3; val_offset:100296*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100296*0 + 3*408*FLEN/8, x4, x1, x2)

inst_33433:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18ffffffffffc00; valaddr_reg:x3; val_offset:100299*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100299*0 + 3*409*FLEN/8, x4, x1, x2)

inst_33434:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18ffffffffffe00; valaddr_reg:x3; val_offset:100302*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100302*0 + 3*410*FLEN/8, x4, x1, x2)

inst_33435:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18fffffffffff00; valaddr_reg:x3; val_offset:100305*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100305*0 + 3*411*FLEN/8, x4, x1, x2)

inst_33436:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18fffffffffff80; valaddr_reg:x3; val_offset:100308*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100308*0 + 3*412*FLEN/8, x4, x1, x2)

inst_33437:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18fffffffffffc0; valaddr_reg:x3; val_offset:100311*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100311*0 + 3*413*FLEN/8, x4, x1, x2)

inst_33438:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18fffffffffffe0; valaddr_reg:x3; val_offset:100314*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100314*0 + 3*414*FLEN/8, x4, x1, x2)

inst_33439:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18ffffffffffff0; valaddr_reg:x3; val_offset:100317*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100317*0 + 3*415*FLEN/8, x4, x1, x2)

inst_33440:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18ffffffffffff8; valaddr_reg:x3; val_offset:100320*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100320*0 + 3*416*FLEN/8, x4, x1, x2)

inst_33441:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18ffffffffffffc; valaddr_reg:x3; val_offset:100323*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100323*0 + 3*417*FLEN/8, x4, x1, x2)

inst_33442:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18ffffffffffffe; valaddr_reg:x3; val_offset:100326*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100326*0 + 3*418*FLEN/8, x4, x1, x2)

inst_33443:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43c9114e318b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f943c9114e318b3; op2val:0x0;
op3val:0x18fffffffffffff; valaddr_reg:x3; val_offset:100329*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100329*0 + 3*419*FLEN/8, x4, x1, x2)

inst_33444:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000008000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x8000; valaddr_reg:x3; val_offset:100332*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100332*0 + 3*420*FLEN/8, x4, x1, x2)

inst_33445:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:100335*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100335*0 + 3*421*FLEN/8, x4, x1, x2)

inst_33446:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:100338*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100338*0 + 3*422*FLEN/8, x4, x1, x2)

inst_33447:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:100341*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100341*0 + 3*423*FLEN/8, x4, x1, x2)

inst_33448:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:100344*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100344*0 + 3*424*FLEN/8, x4, x1, x2)

inst_33449:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:100347*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100347*0 + 3*425*FLEN/8, x4, x1, x2)

inst_33450:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:100350*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100350*0 + 3*426*FLEN/8, x4, x1, x2)

inst_33451:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800000000000007f; valaddr_reg:x3; val_offset:100353*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100353*0 + 3*427*FLEN/8, x4, x1, x2)

inst_33452:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x80000000000000ff; valaddr_reg:x3; val_offset:100356*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100356*0 + 3*428*FLEN/8, x4, x1, x2)

inst_33453:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x80000000000001ff; valaddr_reg:x3; val_offset:100359*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100359*0 + 3*429*FLEN/8, x4, x1, x2)

inst_33454:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x80000000000003ff; valaddr_reg:x3; val_offset:100362*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100362*0 + 3*430*FLEN/8, x4, x1, x2)

inst_33455:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x80000000000007ff; valaddr_reg:x3; val_offset:100365*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100365*0 + 3*431*FLEN/8, x4, x1, x2)

inst_33456:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x8000000000000fff; valaddr_reg:x3; val_offset:100368*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100368*0 + 3*432*FLEN/8, x4, x1, x2)

inst_33457:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x8000000000001fff; valaddr_reg:x3; val_offset:100371*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100371*0 + 3*433*FLEN/8, x4, x1, x2)

inst_33458:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x8000000000003fff; valaddr_reg:x3; val_offset:100374*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100374*0 + 3*434*FLEN/8, x4, x1, x2)

inst_33459:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x8000000000007fff; valaddr_reg:x3; val_offset:100377*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100377*0 + 3*435*FLEN/8, x4, x1, x2)

inst_33460:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800000000000ffff; valaddr_reg:x3; val_offset:100380*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100380*0 + 3*436*FLEN/8, x4, x1, x2)

inst_33461:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800000000001ffff; valaddr_reg:x3; val_offset:100383*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100383*0 + 3*437*FLEN/8, x4, x1, x2)

inst_33462:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800000000003ffff; valaddr_reg:x3; val_offset:100386*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100386*0 + 3*438*FLEN/8, x4, x1, x2)

inst_33463:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800000000007ffff; valaddr_reg:x3; val_offset:100389*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100389*0 + 3*439*FLEN/8, x4, x1, x2)

inst_33464:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x80000000000fffff; valaddr_reg:x3; val_offset:100392*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100392*0 + 3*440*FLEN/8, x4, x1, x2)

inst_33465:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x80000000001fffff; valaddr_reg:x3; val_offset:100395*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100395*0 + 3*441*FLEN/8, x4, x1, x2)

inst_33466:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x80000000003fffff; valaddr_reg:x3; val_offset:100398*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100398*0 + 3*442*FLEN/8, x4, x1, x2)

inst_33467:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x80000000007fffff; valaddr_reg:x3; val_offset:100401*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100401*0 + 3*443*FLEN/8, x4, x1, x2)

inst_33468:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x8000000000ffffff; valaddr_reg:x3; val_offset:100404*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100404*0 + 3*444*FLEN/8, x4, x1, x2)

inst_33469:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x8000000001ffffff; valaddr_reg:x3; val_offset:100407*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100407*0 + 3*445*FLEN/8, x4, x1, x2)

inst_33470:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x8000000003ffffff; valaddr_reg:x3; val_offset:100410*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100410*0 + 3*446*FLEN/8, x4, x1, x2)

inst_33471:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x8000000007ffffff; valaddr_reg:x3; val_offset:100413*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100413*0 + 3*447*FLEN/8, x4, x1, x2)

inst_33472:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800000000fffffff; valaddr_reg:x3; val_offset:100416*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100416*0 + 3*448*FLEN/8, x4, x1, x2)

inst_33473:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800000001fffffff; valaddr_reg:x3; val_offset:100419*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100419*0 + 3*449*FLEN/8, x4, x1, x2)

inst_33474:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800000003fffffff; valaddr_reg:x3; val_offset:100422*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100422*0 + 3*450*FLEN/8, x4, x1, x2)

inst_33475:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800000007fffffff; valaddr_reg:x3; val_offset:100425*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100425*0 + 3*451*FLEN/8, x4, x1, x2)

inst_33476:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x80000000ffffffff; valaddr_reg:x3; val_offset:100428*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100428*0 + 3*452*FLEN/8, x4, x1, x2)

inst_33477:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x80000001ffffffff; valaddr_reg:x3; val_offset:100431*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100431*0 + 3*453*FLEN/8, x4, x1, x2)

inst_33478:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x80000003ffffffff; valaddr_reg:x3; val_offset:100434*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100434*0 + 3*454*FLEN/8, x4, x1, x2)

inst_33479:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x80000007ffffffff; valaddr_reg:x3; val_offset:100437*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100437*0 + 3*455*FLEN/8, x4, x1, x2)

inst_33480:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x8000000fffffffff; valaddr_reg:x3; val_offset:100440*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100440*0 + 3*456*FLEN/8, x4, x1, x2)

inst_33481:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x8000001fffffffff; valaddr_reg:x3; val_offset:100443*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100443*0 + 3*457*FLEN/8, x4, x1, x2)

inst_33482:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x8000003fffffffff; valaddr_reg:x3; val_offset:100446*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100446*0 + 3*458*FLEN/8, x4, x1, x2)

inst_33483:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x8000007fffffffff; valaddr_reg:x3; val_offset:100449*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100449*0 + 3*459*FLEN/8, x4, x1, x2)

inst_33484:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800000ffffffffff; valaddr_reg:x3; val_offset:100452*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100452*0 + 3*460*FLEN/8, x4, x1, x2)

inst_33485:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800001ffffffffff; valaddr_reg:x3; val_offset:100455*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100455*0 + 3*461*FLEN/8, x4, x1, x2)

inst_33486:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800003ffffffffff; valaddr_reg:x3; val_offset:100458*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100458*0 + 3*462*FLEN/8, x4, x1, x2)

inst_33487:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800007ffffffffff; valaddr_reg:x3; val_offset:100461*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100461*0 + 3*463*FLEN/8, x4, x1, x2)

inst_33488:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x80000fffffffffff; valaddr_reg:x3; val_offset:100464*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100464*0 + 3*464*FLEN/8, x4, x1, x2)

inst_33489:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x80001fffffffffff; valaddr_reg:x3; val_offset:100467*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100467*0 + 3*465*FLEN/8, x4, x1, x2)

inst_33490:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x80003fffffffffff; valaddr_reg:x3; val_offset:100470*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100470*0 + 3*466*FLEN/8, x4, x1, x2)

inst_33491:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x80007fffffffffff; valaddr_reg:x3; val_offset:100473*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100473*0 + 3*467*FLEN/8, x4, x1, x2)

inst_33492:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x8000ffffffffffff; valaddr_reg:x3; val_offset:100476*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100476*0 + 3*468*FLEN/8, x4, x1, x2)

inst_33493:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x8001ffffffffffff; valaddr_reg:x3; val_offset:100479*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100479*0 + 3*469*FLEN/8, x4, x1, x2)

inst_33494:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:100482*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100482*0 + 3*470*FLEN/8, x4, x1, x2)

inst_33495:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x8003ffffffffffff; valaddr_reg:x3; val_offset:100485*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100485*0 + 3*471*FLEN/8, x4, x1, x2)

inst_33496:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:100488*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100488*0 + 3*472*FLEN/8, x4, x1, x2)

inst_33497:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:100491*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100491*0 + 3*473*FLEN/8, x4, x1, x2)

inst_33498:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:100494*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100494*0 + 3*474*FLEN/8, x4, x1, x2)

inst_33499:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:100497*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100497*0 + 3*475*FLEN/8, x4, x1, x2)

inst_33500:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x8007ffffffffffff; valaddr_reg:x3; val_offset:100500*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100500*0 + 3*476*FLEN/8, x4, x1, x2)

inst_33501:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x8008000000000000; valaddr_reg:x3; val_offset:100503*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100503*0 + 3*477*FLEN/8, x4, x1, x2)

inst_33502:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:100506*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100506*0 + 3*478*FLEN/8, x4, x1, x2)

inst_33503:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:100509*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100509*0 + 3*479*FLEN/8, x4, x1, x2)

inst_33504:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:100512*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100512*0 + 3*480*FLEN/8, x4, x1, x2)

inst_33505:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800c000000000000; valaddr_reg:x3; val_offset:100515*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100515*0 + 3*481*FLEN/8, x4, x1, x2)

inst_33506:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:100518*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100518*0 + 3*482*FLEN/8, x4, x1, x2)

inst_33507:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:100521*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100521*0 + 3*483*FLEN/8, x4, x1, x2)

inst_33508:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800e000000000000; valaddr_reg:x3; val_offset:100524*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100524*0 + 3*484*FLEN/8, x4, x1, x2)

inst_33509:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800f000000000000; valaddr_reg:x3; val_offset:100527*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100527*0 + 3*485*FLEN/8, x4, x1, x2)

inst_33510:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800f800000000000; valaddr_reg:x3; val_offset:100530*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100530*0 + 3*486*FLEN/8, x4, x1, x2)

inst_33511:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800fc00000000000; valaddr_reg:x3; val_offset:100533*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100533*0 + 3*487*FLEN/8, x4, x1, x2)

inst_33512:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800fe00000000000; valaddr_reg:x3; val_offset:100536*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100536*0 + 3*488*FLEN/8, x4, x1, x2)

inst_33513:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800ff00000000000; valaddr_reg:x3; val_offset:100539*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100539*0 + 3*489*FLEN/8, x4, x1, x2)

inst_33514:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800ff80000000000; valaddr_reg:x3; val_offset:100542*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100542*0 + 3*490*FLEN/8, x4, x1, x2)

inst_33515:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800ffc0000000000; valaddr_reg:x3; val_offset:100545*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100545*0 + 3*491*FLEN/8, x4, x1, x2)

inst_33516:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800ffe0000000000; valaddr_reg:x3; val_offset:100548*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100548*0 + 3*492*FLEN/8, x4, x1, x2)

inst_33517:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800fff0000000000; valaddr_reg:x3; val_offset:100551*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100551*0 + 3*493*FLEN/8, x4, x1, x2)

inst_33518:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800fff8000000000; valaddr_reg:x3; val_offset:100554*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100554*0 + 3*494*FLEN/8, x4, x1, x2)

inst_33519:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800fffc000000000; valaddr_reg:x3; val_offset:100557*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100557*0 + 3*495*FLEN/8, x4, x1, x2)

inst_33520:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800fffe000000000; valaddr_reg:x3; val_offset:100560*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100560*0 + 3*496*FLEN/8, x4, x1, x2)

inst_33521:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800ffff000000000; valaddr_reg:x3; val_offset:100563*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100563*0 + 3*497*FLEN/8, x4, x1, x2)

inst_33522:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800ffff800000000; valaddr_reg:x3; val_offset:100566*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100566*0 + 3*498*FLEN/8, x4, x1, x2)

inst_33523:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800ffffc00000000; valaddr_reg:x3; val_offset:100569*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100569*0 + 3*499*FLEN/8, x4, x1, x2)

inst_33524:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800ffffe00000000; valaddr_reg:x3; val_offset:100572*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100572*0 + 3*500*FLEN/8, x4, x1, x2)

inst_33525:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800fffff00000000; valaddr_reg:x3; val_offset:100575*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100575*0 + 3*501*FLEN/8, x4, x1, x2)

inst_33526:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800fffff80000000; valaddr_reg:x3; val_offset:100578*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100578*0 + 3*502*FLEN/8, x4, x1, x2)

inst_33527:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800fffffc0000000; valaddr_reg:x3; val_offset:100581*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100581*0 + 3*503*FLEN/8, x4, x1, x2)

inst_33528:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800fffffe0000000; valaddr_reg:x3; val_offset:100584*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100584*0 + 3*504*FLEN/8, x4, x1, x2)

inst_33529:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800ffffff0000000; valaddr_reg:x3; val_offset:100587*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100587*0 + 3*505*FLEN/8, x4, x1, x2)

inst_33530:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800ffffff8000000; valaddr_reg:x3; val_offset:100590*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100590*0 + 3*506*FLEN/8, x4, x1, x2)

inst_33531:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800ffffffc000000; valaddr_reg:x3; val_offset:100593*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100593*0 + 3*507*FLEN/8, x4, x1, x2)

inst_33532:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800ffffffe000000; valaddr_reg:x3; val_offset:100596*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100596*0 + 3*508*FLEN/8, x4, x1, x2)

inst_33533:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800fffffff000000; valaddr_reg:x3; val_offset:100599*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100599*0 + 3*509*FLEN/8, x4, x1, x2)

inst_33534:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800fffffff800000; valaddr_reg:x3; val_offset:100602*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100602*0 + 3*510*FLEN/8, x4, x1, x2)

inst_33535:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800fffffffc00000; valaddr_reg:x3; val_offset:100605*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100605*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_33536:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800fffffffe00000; valaddr_reg:x3; val_offset:100608*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100608*0 + 3*512*FLEN/8, x4, x1, x2)

inst_33537:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800ffffffff00000; valaddr_reg:x3; val_offset:100611*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100611*0 + 3*513*FLEN/8, x4, x1, x2)

inst_33538:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800ffffffff80000; valaddr_reg:x3; val_offset:100614*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100614*0 + 3*514*FLEN/8, x4, x1, x2)

inst_33539:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800ffffffffc0000; valaddr_reg:x3; val_offset:100617*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100617*0 + 3*515*FLEN/8, x4, x1, x2)

inst_33540:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800ffffffffe0000; valaddr_reg:x3; val_offset:100620*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100620*0 + 3*516*FLEN/8, x4, x1, x2)

inst_33541:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800fffffffff0000; valaddr_reg:x3; val_offset:100623*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100623*0 + 3*517*FLEN/8, x4, x1, x2)

inst_33542:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800fffffffff8000; valaddr_reg:x3; val_offset:100626*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100626*0 + 3*518*FLEN/8, x4, x1, x2)

inst_33543:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800fffffffffc000; valaddr_reg:x3; val_offset:100629*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100629*0 + 3*519*FLEN/8, x4, x1, x2)

inst_33544:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800fffffffffe000; valaddr_reg:x3; val_offset:100632*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100632*0 + 3*520*FLEN/8, x4, x1, x2)

inst_33545:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800ffffffffff000; valaddr_reg:x3; val_offset:100635*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100635*0 + 3*521*FLEN/8, x4, x1, x2)

inst_33546:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800ffffffffff800; valaddr_reg:x3; val_offset:100638*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100638*0 + 3*522*FLEN/8, x4, x1, x2)

inst_33547:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800ffffffffffc00; valaddr_reg:x3; val_offset:100641*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100641*0 + 3*523*FLEN/8, x4, x1, x2)

inst_33548:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800ffffffffffe00; valaddr_reg:x3; val_offset:100644*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100644*0 + 3*524*FLEN/8, x4, x1, x2)

inst_33549:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800fffffffffff00; valaddr_reg:x3; val_offset:100647*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100647*0 + 3*525*FLEN/8, x4, x1, x2)

inst_33550:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800fffffffffff80; valaddr_reg:x3; val_offset:100650*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100650*0 + 3*526*FLEN/8, x4, x1, x2)

inst_33551:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:100653*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100653*0 + 3*527*FLEN/8, x4, x1, x2)

inst_33552:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:100656*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100656*0 + 3*528*FLEN/8, x4, x1, x2)

inst_33553:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:100659*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100659*0 + 3*529*FLEN/8, x4, x1, x2)

inst_33554:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:100662*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100662*0 + 3*530*FLEN/8, x4, x1, x2)

inst_33555:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:100665*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100665*0 + 3*531*FLEN/8, x4, x1, x2)

inst_33556:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:100668*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100668*0 + 3*532*FLEN/8, x4, x1, x2)

inst_33557:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x44a7edc9aeee9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f944a7edc9aeee9; op2val:0x8000;
op3val:0x800fffffffffffff; valaddr_reg:x3; val_offset:100671*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100671*0 + 3*533*FLEN/8, x4, x1, x2)

inst_33558:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:100674*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100674*0 + 3*534*FLEN/8, x4, x1, x2)

inst_33559:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:100677*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100677*0 + 3*535*FLEN/8, x4, x1, x2)

inst_33560:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:100680*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100680*0 + 3*536*FLEN/8, x4, x1, x2)

inst_33561:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:100683*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100683*0 + 3*537*FLEN/8, x4, x1, x2)

inst_33562:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:100686*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100686*0 + 3*538*FLEN/8, x4, x1, x2)

inst_33563:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:100689*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100689*0 + 3*539*FLEN/8, x4, x1, x2)

inst_33564:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:100692*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100692*0 + 3*540*FLEN/8, x4, x1, x2)

inst_33565:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:100695*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100695*0 + 3*541*FLEN/8, x4, x1, x2)

inst_33566:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:100698*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100698*0 + 3*542*FLEN/8, x4, x1, x2)

inst_33567:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:100701*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100701*0 + 3*543*FLEN/8, x4, x1, x2)

inst_33568:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:100704*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100704*0 + 3*544*FLEN/8, x4, x1, x2)

inst_33569:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:100707*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100707*0 + 3*545*FLEN/8, x4, x1, x2)

inst_33570:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:100710*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100710*0 + 3*546*FLEN/8, x4, x1, x2)

inst_33571:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:100713*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100713*0 + 3*547*FLEN/8, x4, x1, x2)

inst_33572:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:100716*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100716*0 + 3*548*FLEN/8, x4, x1, x2)

inst_33573:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:100719*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100719*0 + 3*549*FLEN/8, x4, x1, x2)

inst_33574:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:100722*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100722*0 + 3*550*FLEN/8, x4, x1, x2)

inst_33575:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:100725*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100725*0 + 3*551*FLEN/8, x4, x1, x2)

inst_33576:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:100728*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100728*0 + 3*552*FLEN/8, x4, x1, x2)

inst_33577:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:100731*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100731*0 + 3*553*FLEN/8, x4, x1, x2)

inst_33578:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:100734*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100734*0 + 3*554*FLEN/8, x4, x1, x2)

inst_33579:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:100737*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100737*0 + 3*555*FLEN/8, x4, x1, x2)

inst_33580:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x8240000000000000; valaddr_reg:x3; val_offset:100740*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100740*0 + 3*556*FLEN/8, x4, x1, x2)

inst_33581:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x8240000000000001; valaddr_reg:x3; val_offset:100743*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100743*0 + 3*557*FLEN/8, x4, x1, x2)

inst_33582:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x8240000000000003; valaddr_reg:x3; val_offset:100746*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100746*0 + 3*558*FLEN/8, x4, x1, x2)

inst_33583:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x8240000000000007; valaddr_reg:x3; val_offset:100749*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100749*0 + 3*559*FLEN/8, x4, x1, x2)

inst_33584:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824000000000000f; valaddr_reg:x3; val_offset:100752*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100752*0 + 3*560*FLEN/8, x4, x1, x2)

inst_33585:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824000000000001f; valaddr_reg:x3; val_offset:100755*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100755*0 + 3*561*FLEN/8, x4, x1, x2)

inst_33586:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824000000000003f; valaddr_reg:x3; val_offset:100758*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100758*0 + 3*562*FLEN/8, x4, x1, x2)

inst_33587:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824000000000007f; valaddr_reg:x3; val_offset:100761*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100761*0 + 3*563*FLEN/8, x4, x1, x2)

inst_33588:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x82400000000000ff; valaddr_reg:x3; val_offset:100764*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100764*0 + 3*564*FLEN/8, x4, x1, x2)

inst_33589:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x82400000000001ff; valaddr_reg:x3; val_offset:100767*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100767*0 + 3*565*FLEN/8, x4, x1, x2)

inst_33590:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x82400000000003ff; valaddr_reg:x3; val_offset:100770*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100770*0 + 3*566*FLEN/8, x4, x1, x2)

inst_33591:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x82400000000007ff; valaddr_reg:x3; val_offset:100773*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100773*0 + 3*567*FLEN/8, x4, x1, x2)

inst_33592:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x8240000000000fff; valaddr_reg:x3; val_offset:100776*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100776*0 + 3*568*FLEN/8, x4, x1, x2)

inst_33593:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x8240000000001fff; valaddr_reg:x3; val_offset:100779*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100779*0 + 3*569*FLEN/8, x4, x1, x2)

inst_33594:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x8240000000003fff; valaddr_reg:x3; val_offset:100782*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100782*0 + 3*570*FLEN/8, x4, x1, x2)

inst_33595:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x8240000000007fff; valaddr_reg:x3; val_offset:100785*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100785*0 + 3*571*FLEN/8, x4, x1, x2)

inst_33596:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824000000000ffff; valaddr_reg:x3; val_offset:100788*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100788*0 + 3*572*FLEN/8, x4, x1, x2)

inst_33597:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824000000001ffff; valaddr_reg:x3; val_offset:100791*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100791*0 + 3*573*FLEN/8, x4, x1, x2)

inst_33598:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824000000003ffff; valaddr_reg:x3; val_offset:100794*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100794*0 + 3*574*FLEN/8, x4, x1, x2)

inst_33599:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824000000007ffff; valaddr_reg:x3; val_offset:100797*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100797*0 + 3*575*FLEN/8, x4, x1, x2)

inst_33600:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x82400000000fffff; valaddr_reg:x3; val_offset:100800*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100800*0 + 3*576*FLEN/8, x4, x1, x2)

inst_33601:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x82400000001fffff; valaddr_reg:x3; val_offset:100803*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100803*0 + 3*577*FLEN/8, x4, x1, x2)

inst_33602:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x82400000003fffff; valaddr_reg:x3; val_offset:100806*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100806*0 + 3*578*FLEN/8, x4, x1, x2)

inst_33603:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x82400000007fffff; valaddr_reg:x3; val_offset:100809*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100809*0 + 3*579*FLEN/8, x4, x1, x2)

inst_33604:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x8240000000ffffff; valaddr_reg:x3; val_offset:100812*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100812*0 + 3*580*FLEN/8, x4, x1, x2)

inst_33605:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x8240000001ffffff; valaddr_reg:x3; val_offset:100815*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100815*0 + 3*581*FLEN/8, x4, x1, x2)

inst_33606:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x8240000003ffffff; valaddr_reg:x3; val_offset:100818*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100818*0 + 3*582*FLEN/8, x4, x1, x2)

inst_33607:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x8240000007ffffff; valaddr_reg:x3; val_offset:100821*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100821*0 + 3*583*FLEN/8, x4, x1, x2)

inst_33608:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824000000fffffff; valaddr_reg:x3; val_offset:100824*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100824*0 + 3*584*FLEN/8, x4, x1, x2)

inst_33609:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824000001fffffff; valaddr_reg:x3; val_offset:100827*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100827*0 + 3*585*FLEN/8, x4, x1, x2)

inst_33610:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824000003fffffff; valaddr_reg:x3; val_offset:100830*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100830*0 + 3*586*FLEN/8, x4, x1, x2)

inst_33611:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824000007fffffff; valaddr_reg:x3; val_offset:100833*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100833*0 + 3*587*FLEN/8, x4, x1, x2)

inst_33612:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x82400000ffffffff; valaddr_reg:x3; val_offset:100836*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100836*0 + 3*588*FLEN/8, x4, x1, x2)

inst_33613:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x82400001ffffffff; valaddr_reg:x3; val_offset:100839*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100839*0 + 3*589*FLEN/8, x4, x1, x2)

inst_33614:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x82400003ffffffff; valaddr_reg:x3; val_offset:100842*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100842*0 + 3*590*FLEN/8, x4, x1, x2)

inst_33615:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x82400007ffffffff; valaddr_reg:x3; val_offset:100845*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100845*0 + 3*591*FLEN/8, x4, x1, x2)

inst_33616:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x8240000fffffffff; valaddr_reg:x3; val_offset:100848*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100848*0 + 3*592*FLEN/8, x4, x1, x2)

inst_33617:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x8240001fffffffff; valaddr_reg:x3; val_offset:100851*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100851*0 + 3*593*FLEN/8, x4, x1, x2)

inst_33618:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x8240003fffffffff; valaddr_reg:x3; val_offset:100854*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100854*0 + 3*594*FLEN/8, x4, x1, x2)

inst_33619:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x8240007fffffffff; valaddr_reg:x3; val_offset:100857*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100857*0 + 3*595*FLEN/8, x4, x1, x2)

inst_33620:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824000ffffffffff; valaddr_reg:x3; val_offset:100860*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100860*0 + 3*596*FLEN/8, x4, x1, x2)

inst_33621:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824001ffffffffff; valaddr_reg:x3; val_offset:100863*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100863*0 + 3*597*FLEN/8, x4, x1, x2)

inst_33622:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824003ffffffffff; valaddr_reg:x3; val_offset:100866*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100866*0 + 3*598*FLEN/8, x4, x1, x2)

inst_33623:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824007ffffffffff; valaddr_reg:x3; val_offset:100869*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100869*0 + 3*599*FLEN/8, x4, x1, x2)

inst_33624:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x82400fffffffffff; valaddr_reg:x3; val_offset:100872*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100872*0 + 3*600*FLEN/8, x4, x1, x2)

inst_33625:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x82401fffffffffff; valaddr_reg:x3; val_offset:100875*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100875*0 + 3*601*FLEN/8, x4, x1, x2)

inst_33626:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x82403fffffffffff; valaddr_reg:x3; val_offset:100878*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100878*0 + 3*602*FLEN/8, x4, x1, x2)

inst_33627:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x82407fffffffffff; valaddr_reg:x3; val_offset:100881*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100881*0 + 3*603*FLEN/8, x4, x1, x2)

inst_33628:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x8240ffffffffffff; valaddr_reg:x3; val_offset:100884*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100884*0 + 3*604*FLEN/8, x4, x1, x2)

inst_33629:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x8241ffffffffffff; valaddr_reg:x3; val_offset:100887*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100887*0 + 3*605*FLEN/8, x4, x1, x2)

inst_33630:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x8243ffffffffffff; valaddr_reg:x3; val_offset:100890*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100890*0 + 3*606*FLEN/8, x4, x1, x2)

inst_33631:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x8247ffffffffffff; valaddr_reg:x3; val_offset:100893*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100893*0 + 3*607*FLEN/8, x4, x1, x2)

inst_33632:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x8248000000000000; valaddr_reg:x3; val_offset:100896*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100896*0 + 3*608*FLEN/8, x4, x1, x2)

inst_33633:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824c000000000000; valaddr_reg:x3; val_offset:100899*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100899*0 + 3*609*FLEN/8, x4, x1, x2)

inst_33634:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824e000000000000; valaddr_reg:x3; val_offset:100902*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100902*0 + 3*610*FLEN/8, x4, x1, x2)

inst_33635:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824f000000000000; valaddr_reg:x3; val_offset:100905*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100905*0 + 3*611*FLEN/8, x4, x1, x2)

inst_33636:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824f800000000000; valaddr_reg:x3; val_offset:100908*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100908*0 + 3*612*FLEN/8, x4, x1, x2)

inst_33637:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824fc00000000000; valaddr_reg:x3; val_offset:100911*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100911*0 + 3*613*FLEN/8, x4, x1, x2)

inst_33638:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824fe00000000000; valaddr_reg:x3; val_offset:100914*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100914*0 + 3*614*FLEN/8, x4, x1, x2)

inst_33639:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824ff00000000000; valaddr_reg:x3; val_offset:100917*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100917*0 + 3*615*FLEN/8, x4, x1, x2)

inst_33640:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824ff80000000000; valaddr_reg:x3; val_offset:100920*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100920*0 + 3*616*FLEN/8, x4, x1, x2)

inst_33641:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824ffc0000000000; valaddr_reg:x3; val_offset:100923*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100923*0 + 3*617*FLEN/8, x4, x1, x2)

inst_33642:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824ffe0000000000; valaddr_reg:x3; val_offset:100926*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100926*0 + 3*618*FLEN/8, x4, x1, x2)

inst_33643:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824fff0000000000; valaddr_reg:x3; val_offset:100929*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100929*0 + 3*619*FLEN/8, x4, x1, x2)

inst_33644:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824fff8000000000; valaddr_reg:x3; val_offset:100932*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100932*0 + 3*620*FLEN/8, x4, x1, x2)

inst_33645:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824fffc000000000; valaddr_reg:x3; val_offset:100935*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100935*0 + 3*621*FLEN/8, x4, x1, x2)

inst_33646:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824fffe000000000; valaddr_reg:x3; val_offset:100938*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100938*0 + 3*622*FLEN/8, x4, x1, x2)

inst_33647:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824ffff000000000; valaddr_reg:x3; val_offset:100941*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100941*0 + 3*623*FLEN/8, x4, x1, x2)

inst_33648:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824ffff800000000; valaddr_reg:x3; val_offset:100944*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100944*0 + 3*624*FLEN/8, x4, x1, x2)

inst_33649:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824ffffc00000000; valaddr_reg:x3; val_offset:100947*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100947*0 + 3*625*FLEN/8, x4, x1, x2)

inst_33650:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824ffffe00000000; valaddr_reg:x3; val_offset:100950*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100950*0 + 3*626*FLEN/8, x4, x1, x2)

inst_33651:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824fffff00000000; valaddr_reg:x3; val_offset:100953*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100953*0 + 3*627*FLEN/8, x4, x1, x2)

inst_33652:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824fffff80000000; valaddr_reg:x3; val_offset:100956*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100956*0 + 3*628*FLEN/8, x4, x1, x2)

inst_33653:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824fffffc0000000; valaddr_reg:x3; val_offset:100959*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100959*0 + 3*629*FLEN/8, x4, x1, x2)

inst_33654:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824fffffe0000000; valaddr_reg:x3; val_offset:100962*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100962*0 + 3*630*FLEN/8, x4, x1, x2)

inst_33655:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824ffffff0000000; valaddr_reg:x3; val_offset:100965*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100965*0 + 3*631*FLEN/8, x4, x1, x2)

inst_33656:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824ffffff8000000; valaddr_reg:x3; val_offset:100968*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100968*0 + 3*632*FLEN/8, x4, x1, x2)

inst_33657:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824ffffffc000000; valaddr_reg:x3; val_offset:100971*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100971*0 + 3*633*FLEN/8, x4, x1, x2)

inst_33658:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824ffffffe000000; valaddr_reg:x3; val_offset:100974*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100974*0 + 3*634*FLEN/8, x4, x1, x2)

inst_33659:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824fffffff000000; valaddr_reg:x3; val_offset:100977*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100977*0 + 3*635*FLEN/8, x4, x1, x2)

inst_33660:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824fffffff800000; valaddr_reg:x3; val_offset:100980*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100980*0 + 3*636*FLEN/8, x4, x1, x2)

inst_33661:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824fffffffc00000; valaddr_reg:x3; val_offset:100983*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100983*0 + 3*637*FLEN/8, x4, x1, x2)

inst_33662:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824fffffffe00000; valaddr_reg:x3; val_offset:100986*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100986*0 + 3*638*FLEN/8, x4, x1, x2)

inst_33663:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824ffffffff00000; valaddr_reg:x3; val_offset:100989*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100989*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_33664:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824ffffffff80000; valaddr_reg:x3; val_offset:100992*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100992*0 + 3*640*FLEN/8, x4, x1, x2)

inst_33665:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824ffffffffc0000; valaddr_reg:x3; val_offset:100995*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100995*0 + 3*641*FLEN/8, x4, x1, x2)

inst_33666:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824ffffffffe0000; valaddr_reg:x3; val_offset:100998*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 100998*0 + 3*642*FLEN/8, x4, x1, x2)

inst_33667:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824fffffffff0000; valaddr_reg:x3; val_offset:101001*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101001*0 + 3*643*FLEN/8, x4, x1, x2)

inst_33668:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824fffffffff8000; valaddr_reg:x3; val_offset:101004*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101004*0 + 3*644*FLEN/8, x4, x1, x2)

inst_33669:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824fffffffffc000; valaddr_reg:x3; val_offset:101007*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101007*0 + 3*645*FLEN/8, x4, x1, x2)

inst_33670:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824fffffffffe000; valaddr_reg:x3; val_offset:101010*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101010*0 + 3*646*FLEN/8, x4, x1, x2)

inst_33671:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824ffffffffff000; valaddr_reg:x3; val_offset:101013*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101013*0 + 3*647*FLEN/8, x4, x1, x2)

inst_33672:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824ffffffffff800; valaddr_reg:x3; val_offset:101016*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101016*0 + 3*648*FLEN/8, x4, x1, x2)

inst_33673:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824ffffffffffc00; valaddr_reg:x3; val_offset:101019*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101019*0 + 3*649*FLEN/8, x4, x1, x2)

inst_33674:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824ffffffffffe00; valaddr_reg:x3; val_offset:101022*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101022*0 + 3*650*FLEN/8, x4, x1, x2)

inst_33675:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824fffffffffff00; valaddr_reg:x3; val_offset:101025*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101025*0 + 3*651*FLEN/8, x4, x1, x2)

inst_33676:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824fffffffffff80; valaddr_reg:x3; val_offset:101028*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101028*0 + 3*652*FLEN/8, x4, x1, x2)

inst_33677:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824fffffffffffc0; valaddr_reg:x3; val_offset:101031*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101031*0 + 3*653*FLEN/8, x4, x1, x2)

inst_33678:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824fffffffffffe0; valaddr_reg:x3; val_offset:101034*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101034*0 + 3*654*FLEN/8, x4, x1, x2)

inst_33679:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824ffffffffffff0; valaddr_reg:x3; val_offset:101037*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101037*0 + 3*655*FLEN/8, x4, x1, x2)

inst_33680:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824ffffffffffff8; valaddr_reg:x3; val_offset:101040*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101040*0 + 3*656*FLEN/8, x4, x1, x2)

inst_33681:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824ffffffffffffc; valaddr_reg:x3; val_offset:101043*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101043*0 + 3*657*FLEN/8, x4, x1, x2)

inst_33682:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824ffffffffffffe; valaddr_reg:x3; val_offset:101046*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101046*0 + 3*658*FLEN/8, x4, x1, x2)

inst_33683:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x45e0c0bf1170b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f945e0c0bf1170b; op2val:0x8000;
op3val:0x824fffffffffffff; valaddr_reg:x3; val_offset:101049*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101049*0 + 3*659*FLEN/8, x4, x1, x2)

inst_33684:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:101052*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101052*0 + 3*660*FLEN/8, x4, x1, x2)

inst_33685:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:101055*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101055*0 + 3*661*FLEN/8, x4, x1, x2)

inst_33686:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:101058*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101058*0 + 3*662*FLEN/8, x4, x1, x2)

inst_33687:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:101061*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101061*0 + 3*663*FLEN/8, x4, x1, x2)

inst_33688:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:101064*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101064*0 + 3*664*FLEN/8, x4, x1, x2)

inst_33689:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:101067*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101067*0 + 3*665*FLEN/8, x4, x1, x2)

inst_33690:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:101070*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101070*0 + 3*666*FLEN/8, x4, x1, x2)

inst_33691:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:101073*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101073*0 + 3*667*FLEN/8, x4, x1, x2)

inst_33692:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:101076*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101076*0 + 3*668*FLEN/8, x4, x1, x2)

inst_33693:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:101079*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101079*0 + 3*669*FLEN/8, x4, x1, x2)

inst_33694:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:101082*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101082*0 + 3*670*FLEN/8, x4, x1, x2)

inst_33695:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:101085*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101085*0 + 3*671*FLEN/8, x4, x1, x2)

inst_33696:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:101088*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101088*0 + 3*672*FLEN/8, x4, x1, x2)

inst_33697:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:101091*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101091*0 + 3*673*FLEN/8, x4, x1, x2)

inst_33698:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:101094*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101094*0 + 3*674*FLEN/8, x4, x1, x2)

inst_33699:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:101097*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101097*0 + 3*675*FLEN/8, x4, x1, x2)

inst_33700:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:101100*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101100*0 + 3*676*FLEN/8, x4, x1, x2)

inst_33701:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:101103*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101103*0 + 3*677*FLEN/8, x4, x1, x2)

inst_33702:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:101106*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101106*0 + 3*678*FLEN/8, x4, x1, x2)

inst_33703:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:101109*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101109*0 + 3*679*FLEN/8, x4, x1, x2)

inst_33704:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:101112*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101112*0 + 3*680*FLEN/8, x4, x1, x2)

inst_33705:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:101115*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101115*0 + 3*681*FLEN/8, x4, x1, x2)

inst_33706:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3a0000000000000; valaddr_reg:x3; val_offset:101118*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101118*0 + 3*682*FLEN/8, x4, x1, x2)

inst_33707:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3a0000000000001; valaddr_reg:x3; val_offset:101121*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101121*0 + 3*683*FLEN/8, x4, x1, x2)

inst_33708:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3a0000000000003; valaddr_reg:x3; val_offset:101124*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101124*0 + 3*684*FLEN/8, x4, x1, x2)

inst_33709:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3a0000000000007; valaddr_reg:x3; val_offset:101127*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101127*0 + 3*685*FLEN/8, x4, x1, x2)

inst_33710:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3a000000000000f; valaddr_reg:x3; val_offset:101130*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101130*0 + 3*686*FLEN/8, x4, x1, x2)

inst_33711:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3a000000000001f; valaddr_reg:x3; val_offset:101133*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101133*0 + 3*687*FLEN/8, x4, x1, x2)

inst_33712:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3a000000000003f; valaddr_reg:x3; val_offset:101136*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101136*0 + 3*688*FLEN/8, x4, x1, x2)

inst_33713:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3a000000000007f; valaddr_reg:x3; val_offset:101139*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101139*0 + 3*689*FLEN/8, x4, x1, x2)

inst_33714:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3a00000000000ff; valaddr_reg:x3; val_offset:101142*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101142*0 + 3*690*FLEN/8, x4, x1, x2)

inst_33715:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3a00000000001ff; valaddr_reg:x3; val_offset:101145*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101145*0 + 3*691*FLEN/8, x4, x1, x2)

inst_33716:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3a00000000003ff; valaddr_reg:x3; val_offset:101148*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101148*0 + 3*692*FLEN/8, x4, x1, x2)

inst_33717:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3a00000000007ff; valaddr_reg:x3; val_offset:101151*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101151*0 + 3*693*FLEN/8, x4, x1, x2)

inst_33718:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3a0000000000fff; valaddr_reg:x3; val_offset:101154*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101154*0 + 3*694*FLEN/8, x4, x1, x2)

inst_33719:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3a0000000001fff; valaddr_reg:x3; val_offset:101157*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101157*0 + 3*695*FLEN/8, x4, x1, x2)

inst_33720:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3a0000000003fff; valaddr_reg:x3; val_offset:101160*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101160*0 + 3*696*FLEN/8, x4, x1, x2)

inst_33721:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3a0000000007fff; valaddr_reg:x3; val_offset:101163*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101163*0 + 3*697*FLEN/8, x4, x1, x2)

inst_33722:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3a000000000ffff; valaddr_reg:x3; val_offset:101166*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101166*0 + 3*698*FLEN/8, x4, x1, x2)

inst_33723:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3a000000001ffff; valaddr_reg:x3; val_offset:101169*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101169*0 + 3*699*FLEN/8, x4, x1, x2)

inst_33724:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3a000000003ffff; valaddr_reg:x3; val_offset:101172*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101172*0 + 3*700*FLEN/8, x4, x1, x2)

inst_33725:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3a000000007ffff; valaddr_reg:x3; val_offset:101175*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101175*0 + 3*701*FLEN/8, x4, x1, x2)

inst_33726:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3a00000000fffff; valaddr_reg:x3; val_offset:101178*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101178*0 + 3*702*FLEN/8, x4, x1, x2)

inst_33727:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3a00000001fffff; valaddr_reg:x3; val_offset:101181*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101181*0 + 3*703*FLEN/8, x4, x1, x2)

inst_33728:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3a00000003fffff; valaddr_reg:x3; val_offset:101184*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101184*0 + 3*704*FLEN/8, x4, x1, x2)

inst_33729:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3a00000007fffff; valaddr_reg:x3; val_offset:101187*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101187*0 + 3*705*FLEN/8, x4, x1, x2)

inst_33730:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3a0000000ffffff; valaddr_reg:x3; val_offset:101190*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101190*0 + 3*706*FLEN/8, x4, x1, x2)

inst_33731:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3a0000001ffffff; valaddr_reg:x3; val_offset:101193*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101193*0 + 3*707*FLEN/8, x4, x1, x2)

inst_33732:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3a0000003ffffff; valaddr_reg:x3; val_offset:101196*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101196*0 + 3*708*FLEN/8, x4, x1, x2)

inst_33733:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3a0000007ffffff; valaddr_reg:x3; val_offset:101199*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101199*0 + 3*709*FLEN/8, x4, x1, x2)

inst_33734:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3a000000fffffff; valaddr_reg:x3; val_offset:101202*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101202*0 + 3*710*FLEN/8, x4, x1, x2)

inst_33735:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3a000001fffffff; valaddr_reg:x3; val_offset:101205*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101205*0 + 3*711*FLEN/8, x4, x1, x2)

inst_33736:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3a000003fffffff; valaddr_reg:x3; val_offset:101208*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101208*0 + 3*712*FLEN/8, x4, x1, x2)

inst_33737:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3a000007fffffff; valaddr_reg:x3; val_offset:101211*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101211*0 + 3*713*FLEN/8, x4, x1, x2)

inst_33738:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3a00000ffffffff; valaddr_reg:x3; val_offset:101214*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101214*0 + 3*714*FLEN/8, x4, x1, x2)

inst_33739:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3a00001ffffffff; valaddr_reg:x3; val_offset:101217*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101217*0 + 3*715*FLEN/8, x4, x1, x2)

inst_33740:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3a00003ffffffff; valaddr_reg:x3; val_offset:101220*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101220*0 + 3*716*FLEN/8, x4, x1, x2)

inst_33741:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3a00007ffffffff; valaddr_reg:x3; val_offset:101223*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101223*0 + 3*717*FLEN/8, x4, x1, x2)

inst_33742:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3a0000fffffffff; valaddr_reg:x3; val_offset:101226*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101226*0 + 3*718*FLEN/8, x4, x1, x2)

inst_33743:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3a0001fffffffff; valaddr_reg:x3; val_offset:101229*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101229*0 + 3*719*FLEN/8, x4, x1, x2)

inst_33744:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3a0003fffffffff; valaddr_reg:x3; val_offset:101232*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101232*0 + 3*720*FLEN/8, x4, x1, x2)

inst_33745:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3a0007fffffffff; valaddr_reg:x3; val_offset:101235*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101235*0 + 3*721*FLEN/8, x4, x1, x2)

inst_33746:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3a000ffffffffff; valaddr_reg:x3; val_offset:101238*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101238*0 + 3*722*FLEN/8, x4, x1, x2)

inst_33747:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3a001ffffffffff; valaddr_reg:x3; val_offset:101241*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101241*0 + 3*723*FLEN/8, x4, x1, x2)

inst_33748:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3a003ffffffffff; valaddr_reg:x3; val_offset:101244*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101244*0 + 3*724*FLEN/8, x4, x1, x2)

inst_33749:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3a007ffffffffff; valaddr_reg:x3; val_offset:101247*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101247*0 + 3*725*FLEN/8, x4, x1, x2)

inst_33750:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3a00fffffffffff; valaddr_reg:x3; val_offset:101250*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101250*0 + 3*726*FLEN/8, x4, x1, x2)

inst_33751:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3a01fffffffffff; valaddr_reg:x3; val_offset:101253*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101253*0 + 3*727*FLEN/8, x4, x1, x2)

inst_33752:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3a03fffffffffff; valaddr_reg:x3; val_offset:101256*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101256*0 + 3*728*FLEN/8, x4, x1, x2)

inst_33753:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3a07fffffffffff; valaddr_reg:x3; val_offset:101259*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101259*0 + 3*729*FLEN/8, x4, x1, x2)

inst_33754:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3a0ffffffffffff; valaddr_reg:x3; val_offset:101262*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101262*0 + 3*730*FLEN/8, x4, x1, x2)

inst_33755:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3a1ffffffffffff; valaddr_reg:x3; val_offset:101265*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101265*0 + 3*731*FLEN/8, x4, x1, x2)

inst_33756:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3a3ffffffffffff; valaddr_reg:x3; val_offset:101268*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101268*0 + 3*732*FLEN/8, x4, x1, x2)

inst_33757:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3a7ffffffffffff; valaddr_reg:x3; val_offset:101271*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101271*0 + 3*733*FLEN/8, x4, x1, x2)

inst_33758:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3a8000000000000; valaddr_reg:x3; val_offset:101274*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101274*0 + 3*734*FLEN/8, x4, x1, x2)

inst_33759:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3ac000000000000; valaddr_reg:x3; val_offset:101277*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101277*0 + 3*735*FLEN/8, x4, x1, x2)

inst_33760:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3ae000000000000; valaddr_reg:x3; val_offset:101280*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101280*0 + 3*736*FLEN/8, x4, x1, x2)

inst_33761:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3af000000000000; valaddr_reg:x3; val_offset:101283*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101283*0 + 3*737*FLEN/8, x4, x1, x2)

inst_33762:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3af800000000000; valaddr_reg:x3; val_offset:101286*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101286*0 + 3*738*FLEN/8, x4, x1, x2)

inst_33763:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3afc00000000000; valaddr_reg:x3; val_offset:101289*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101289*0 + 3*739*FLEN/8, x4, x1, x2)

inst_33764:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3afe00000000000; valaddr_reg:x3; val_offset:101292*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101292*0 + 3*740*FLEN/8, x4, x1, x2)

inst_33765:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3aff00000000000; valaddr_reg:x3; val_offset:101295*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101295*0 + 3*741*FLEN/8, x4, x1, x2)

inst_33766:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3aff80000000000; valaddr_reg:x3; val_offset:101298*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101298*0 + 3*742*FLEN/8, x4, x1, x2)

inst_33767:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3affc0000000000; valaddr_reg:x3; val_offset:101301*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101301*0 + 3*743*FLEN/8, x4, x1, x2)

inst_33768:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3affe0000000000; valaddr_reg:x3; val_offset:101304*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101304*0 + 3*744*FLEN/8, x4, x1, x2)

inst_33769:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3afff0000000000; valaddr_reg:x3; val_offset:101307*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101307*0 + 3*745*FLEN/8, x4, x1, x2)

inst_33770:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3afff8000000000; valaddr_reg:x3; val_offset:101310*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101310*0 + 3*746*FLEN/8, x4, x1, x2)

inst_33771:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3afffc000000000; valaddr_reg:x3; val_offset:101313*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101313*0 + 3*747*FLEN/8, x4, x1, x2)

inst_33772:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3afffe000000000; valaddr_reg:x3; val_offset:101316*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101316*0 + 3*748*FLEN/8, x4, x1, x2)

inst_33773:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3affff000000000; valaddr_reg:x3; val_offset:101319*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101319*0 + 3*749*FLEN/8, x4, x1, x2)

inst_33774:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3affff800000000; valaddr_reg:x3; val_offset:101322*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101322*0 + 3*750*FLEN/8, x4, x1, x2)

inst_33775:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3affffc00000000; valaddr_reg:x3; val_offset:101325*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101325*0 + 3*751*FLEN/8, x4, x1, x2)

inst_33776:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3affffe00000000; valaddr_reg:x3; val_offset:101328*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101328*0 + 3*752*FLEN/8, x4, x1, x2)

inst_33777:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3afffff00000000; valaddr_reg:x3; val_offset:101331*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101331*0 + 3*753*FLEN/8, x4, x1, x2)

inst_33778:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3afffff80000000; valaddr_reg:x3; val_offset:101334*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101334*0 + 3*754*FLEN/8, x4, x1, x2)

inst_33779:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3afffffc0000000; valaddr_reg:x3; val_offset:101337*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101337*0 + 3*755*FLEN/8, x4, x1, x2)

inst_33780:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3afffffe0000000; valaddr_reg:x3; val_offset:101340*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101340*0 + 3*756*FLEN/8, x4, x1, x2)

inst_33781:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3affffff0000000; valaddr_reg:x3; val_offset:101343*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101343*0 + 3*757*FLEN/8, x4, x1, x2)

inst_33782:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3affffff8000000; valaddr_reg:x3; val_offset:101346*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101346*0 + 3*758*FLEN/8, x4, x1, x2)

inst_33783:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3affffffc000000; valaddr_reg:x3; val_offset:101349*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101349*0 + 3*759*FLEN/8, x4, x1, x2)

inst_33784:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3affffffe000000; valaddr_reg:x3; val_offset:101352*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101352*0 + 3*760*FLEN/8, x4, x1, x2)

inst_33785:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3afffffff000000; valaddr_reg:x3; val_offset:101355*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101355*0 + 3*761*FLEN/8, x4, x1, x2)

inst_33786:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3afffffff800000; valaddr_reg:x3; val_offset:101358*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101358*0 + 3*762*FLEN/8, x4, x1, x2)

inst_33787:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3afffffffc00000; valaddr_reg:x3; val_offset:101361*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101361*0 + 3*763*FLEN/8, x4, x1, x2)

inst_33788:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3afffffffe00000; valaddr_reg:x3; val_offset:101364*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101364*0 + 3*764*FLEN/8, x4, x1, x2)

inst_33789:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3affffffff00000; valaddr_reg:x3; val_offset:101367*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101367*0 + 3*765*FLEN/8, x4, x1, x2)

inst_33790:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3affffffff80000; valaddr_reg:x3; val_offset:101370*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101370*0 + 3*766*FLEN/8, x4, x1, x2)

inst_33791:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46afd7a955bc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f946afd7a955bc7; op2val:0x0;
op3val:0x3affffffffc0000; valaddr_reg:x3; val_offset:101373*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101373*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6887169600196341741,64,FLEN)
NAN_BOXED(2326508892744323302,64,FLEN)
NAN_BOXED(4544132024016306176,64,FLEN)
NAN_BOXED(6887169600196341741,64,FLEN)
NAN_BOXED(2326508892744323302,64,FLEN)
NAN_BOXED(4544132024016568320,64,FLEN)
NAN_BOXED(6887169600196341741,64,FLEN)
NAN_BOXED(2326508892744323302,64,FLEN)
NAN_BOXED(4544132024016699392,64,FLEN)
NAN_BOXED(6887169600196341741,64,FLEN)
NAN_BOXED(2326508892744323302,64,FLEN)
NAN_BOXED(4544132024016764928,64,FLEN)
NAN_BOXED(6887169600196341741,64,FLEN)
NAN_BOXED(2326508892744323302,64,FLEN)
NAN_BOXED(4544132024016797696,64,FLEN)
NAN_BOXED(6887169600196341741,64,FLEN)
NAN_BOXED(2326508892744323302,64,FLEN)
NAN_BOXED(4544132024016814080,64,FLEN)
NAN_BOXED(6887169600196341741,64,FLEN)
NAN_BOXED(2326508892744323302,64,FLEN)
NAN_BOXED(4544132024016822272,64,FLEN)
NAN_BOXED(6887169600196341741,64,FLEN)
NAN_BOXED(2326508892744323302,64,FLEN)
NAN_BOXED(4544132024016826368,64,FLEN)
NAN_BOXED(6887169600196341741,64,FLEN)
NAN_BOXED(2326508892744323302,64,FLEN)
NAN_BOXED(4544132024016828416,64,FLEN)
NAN_BOXED(6887169600196341741,64,FLEN)
NAN_BOXED(2326508892744323302,64,FLEN)
NAN_BOXED(4544132024016829440,64,FLEN)
NAN_BOXED(6887169600196341741,64,FLEN)
NAN_BOXED(2326508892744323302,64,FLEN)
NAN_BOXED(4544132024016829952,64,FLEN)
NAN_BOXED(6887169600196341741,64,FLEN)
NAN_BOXED(2326508892744323302,64,FLEN)
NAN_BOXED(4544132024016830208,64,FLEN)
NAN_BOXED(6887169600196341741,64,FLEN)
NAN_BOXED(2326508892744323302,64,FLEN)
NAN_BOXED(4544132024016830336,64,FLEN)
NAN_BOXED(6887169600196341741,64,FLEN)
NAN_BOXED(2326508892744323302,64,FLEN)
NAN_BOXED(4544132024016830400,64,FLEN)
NAN_BOXED(6887169600196341741,64,FLEN)
NAN_BOXED(2326508892744323302,64,FLEN)
NAN_BOXED(4544132024016830432,64,FLEN)
NAN_BOXED(6887169600196341741,64,FLEN)
NAN_BOXED(2326508892744323302,64,FLEN)
NAN_BOXED(4544132024016830448,64,FLEN)
NAN_BOXED(6887169600196341741,64,FLEN)
NAN_BOXED(2326508892744323302,64,FLEN)
NAN_BOXED(4544132024016830456,64,FLEN)
NAN_BOXED(6887169600196341741,64,FLEN)
NAN_BOXED(2326508892744323302,64,FLEN)
NAN_BOXED(4544132024016830460,64,FLEN)
NAN_BOXED(6887169600196341741,64,FLEN)
NAN_BOXED(2326508892744323302,64,FLEN)
NAN_BOXED(4544132024016830462,64,FLEN)
NAN_BOXED(6887169600196341741,64,FLEN)
NAN_BOXED(2326508892744323302,64,FLEN)
NAN_BOXED(4544132024016830463,64,FLEN)
NAN_BOXED(6887169600196341741,64,FLEN)
NAN_BOXED(2326508892744323302,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6887169600196341741,64,FLEN)
NAN_BOXED(2326508892744323302,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6887169600196341741,64,FLEN)
NAN_BOXED(2326508892744323302,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6887169600196341741,64,FLEN)
NAN_BOXED(2326508892744323302,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6887169600196341741,64,FLEN)
NAN_BOXED(2326508892744323302,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6887169600196341741,64,FLEN)
NAN_BOXED(2326508892744323302,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6887169600196341741,64,FLEN)
NAN_BOXED(2326508892744323302,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6887169600196341741,64,FLEN)
NAN_BOXED(2326508892744323302,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6887169600196341741,64,FLEN)
NAN_BOXED(2326508892744323302,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6887169600196341741,64,FLEN)
NAN_BOXED(2326508892744323302,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6887169600196341741,64,FLEN)
NAN_BOXED(2326508892744323302,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6887169600196341741,64,FLEN)
NAN_BOXED(2326508892744323302,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6887169600196341741,64,FLEN)
NAN_BOXED(2326508892744323302,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6887169600196341741,64,FLEN)
NAN_BOXED(2326508892744323302,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6887169600196341741,64,FLEN)
NAN_BOXED(2326508892744323302,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6887169600196341741,64,FLEN)
NAN_BOXED(2326508892744323302,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6887169600196341741,64,FLEN)
NAN_BOXED(2326508892744323302,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6887169600196341741,64,FLEN)
NAN_BOXED(2326508892744323302,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6887169600196341741,64,FLEN)
NAN_BOXED(2326508892744323302,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6887169600196341741,64,FLEN)
NAN_BOXED(2326508892744323302,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6887169600196341741,64,FLEN)
NAN_BOXED(2326508892744323302,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6887169600196341741,64,FLEN)
NAN_BOXED(2326508892744323302,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746560,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746561,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746563,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746567,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746575,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746591,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746623,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746687,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746815,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751747071,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751747583,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751748607,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751750655,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751754751,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751762943,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751779327,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751812095,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751877631,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213752008703,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213752270847,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213752795135,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213753843711,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213755940863,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213760135167,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213768523775,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213785300991,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213818855423,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213885964287,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595214020182015,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595214288617471,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595214825488383,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595215899230207,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595218046713855,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595222341681151,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595230931615743,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595248111484927,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595282471223295,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595351190700031,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595488629653503,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595763507560447,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502596313263374335,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502597412775002111,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502599611798257663,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502604009844768767,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502612805937790975,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502630398123835391,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502665582495924223,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502735951240101887,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502876688728457215,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9503158163705167871,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9503721113658589183,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9504847013565431807,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9504847013565431808,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9505972913472274432,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9506535863425695744,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9506817338402406400,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9506958075890761728,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507028444634939392,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507063629007028224,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507081221193072640,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507090017286094848,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507094415332605952,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507096614355861504,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507097713867489280,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098263623303168,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098538501210112,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098675940163584,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098744659640320,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098779019378688,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098796199247872,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098804789182464,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098809084149760,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098811231633408,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098812305375232,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098812842246144,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813110681600,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813244899328,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813312008192,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813345562624,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813362339840,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813370728448,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813374922752,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813377019904,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813378068480,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813378592768,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813378854912,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813378985984,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379051520,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379084288,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379100672,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379108864,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379112960,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379115008,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379116032,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379116544,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379116800,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379116928,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379116992,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117024,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117040,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117048,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117052,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117054,64,FLEN)
NAN_BOXED(6887190824523731097,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117055,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852480,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852481,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852483,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852487,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852495,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852511,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852543,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852607,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852735,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852991,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136853503,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136854527,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136856575,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136860671,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136868863,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136885247,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136918015,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136983551,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998137114623,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998137376767,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998137901055,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998138949631,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998141046783,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998145241087,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998153629695,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998170406911,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998203961343,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998271070207,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998405287935,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998673723391,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517999210594303,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22518000284336127,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22518002431819775,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22518006726787071,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22518015316721663,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22518032496590847,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22518066856329215,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22518135575805951,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22518273014759423,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22518547892666367,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22519097648480255,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22520197160108031,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22522396183363583,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22526794229874687,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22535590322896895,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22553182508941311,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22588366881030143,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22658735625207807,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22799473113563135,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(23080948090273791,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(23643898043695103,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(24769797950537727,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(24769797950537728,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(25895697857380352,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(26458647810801664,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(26740122787512320,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(26880860275867648,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(26951229020045312,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(26986413392134144,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27004005578178560,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27012801671200768,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27017199717711872,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27019398740967424,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27020498252595200,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021048008409088,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021322886316032,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021460325269504,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021529044746240,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021563404484608,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021580584353792,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021589174288384,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021593469255680,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021595616739328,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021596690481152,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597227352064,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597495787520,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597630005248,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597697114112,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597730668544,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597747445760,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597755834368,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597760028672,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597762125824,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597763174400,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597763698688,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597763960832,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764091904,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764157440,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764190208,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764206592,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764214784,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764218880,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764220928,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764221952,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222464,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222720,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222848,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222912,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222944,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222960,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222968,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222972,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222974,64,FLEN)
NAN_BOXED(6887194072139212309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222975,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891904,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891905,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891907,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891911,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891919,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891935,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891967,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056892031,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056892159,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056892415,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056892927,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056893951,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056895999,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056900095,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056908287,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056924671,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056957439,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391057022975,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391057154047,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391057416191,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391057940479,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391058989055,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391061086207,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391065280511,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391073669119,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391090446335,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391124000767,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391191109631,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391325327359,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391593762815,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086392130633727,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086393204375551,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086395351859199,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086399646826495,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086408236761087,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086425416630271,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086459776368639,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086528495845375,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086665934798847,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086940812705791,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108087490568519679,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108088590080147455,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108090789103403007,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108095187149914111,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108103983242936319,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108121575428980735,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108156759801069567,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108227128545247231,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108367866033602559,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108649341010313215,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(109212290963734527,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(110338190870577151,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(110338190870577152,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(111464090777419776,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112027040730841088,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112308515707551744,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112449253195907072,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112519621940084736,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112554806312173568,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112572398498217984,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112581194591240192,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112585592637751296,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112587791661006848,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112588891172634624,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589440928448512,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589715806355456,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589853245308928,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589921964785664,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589956324524032,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589973504393216,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589982094327808,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589986389295104,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589988536778752,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589989610520576,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990147391488,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990415826944,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990550044672,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990617153536,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990650707968,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990667485184,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990675873792,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990680068096,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990682165248,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990683213824,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990683738112,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684000256,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684131328,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684196864,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684229632,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684246016,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684254208,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684258304,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684260352,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684261376,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684261888,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262144,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262272,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262336,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262368,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262384,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262392,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262396,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262398,64,FLEN)
NAN_BOXED(6887196323974682803,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262399,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775935,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854776063,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854776319,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854776831,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854777855,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854779903,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854783999,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854792191,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854808575,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854841343,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854906879,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036855037951,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036855300095,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036855824383,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036856872959,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036858970111,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036863164415,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036871553023,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036888330239,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036921884671,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036988993535,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372037123211263,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372037391646719,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372037928517631,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372039002259455,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372041149743103,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372045444710399,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372054034644991,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372071214514175,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372105574252543,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372174293729279,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372311732682751,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372586610589695,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223373136366403583,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223374235878031359,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223376434901286911,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223380832947798015,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223389629040820223,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223407221226864639,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223442405598953471,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223512774343131135,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223653511831486463,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223934986808197119,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224497936761618431,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225623836668461055,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225623836668461056,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226749736575303680,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227312686528724992,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227594161505435648,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227734898993790976,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227805267737968640,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227840452110057472,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227858044296101888,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227866840389124096,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227871238435635200,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227873437458890752,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227874536970518528,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875086726332416,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875361604239360,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875499043192832,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875567762669568,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875602122407936,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875619302277120,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875627892211712,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875632187179008,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875634334662656,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875635408404480,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875635945275392,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636213710848,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636347928576,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636415037440,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636448591872,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636465369088,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636473757696,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636477952000,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636480049152,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636481097728,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636481622016,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636481884160,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482015232,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482080768,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482113536,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482129920,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482138112,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482142208,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482144256,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482145280,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482145792,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146048,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146176,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6887211638883806953,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146303,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113664,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113665,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113667,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113671,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113679,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113695,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113727,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113791,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113919,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440114175,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440114687,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440115711,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440117759,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440121855,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440130047,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440146431,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440179199,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440244735,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440375807,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440637951,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623441162239,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623442210815,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623444307967,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623448502271,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623456890879,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623473668095,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623507222527,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623574331391,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623708549119,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623976984575,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501624513855487,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501625587597311,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501627735080959,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501632030048255,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501640619982847,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501657799852031,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501692159590399,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501760879067135,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501898318020607,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385502173195927551,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385502722951741439,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385503822463369215,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385506021486624767,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385510419533135871,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385519215626158079,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385536807812202495,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385571992184291327,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385642360928468991,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385783098416824319,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9386064573393534975,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9386627523346956287,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9387753423253798911,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9387753423253798912,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9388879323160641536,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9389442273114062848,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9389723748090773504,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9389864485579128832,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9389934854323306496,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9389970038695395328,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9389987630881439744,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9389996426974461952,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390000825020973056,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390003024044228608,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390004123555856384,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390004673311670272,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390004948189577216,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005085628530688,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005154348007424,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005188707745792,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005205887614976,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005214477549568,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005218772516864,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005220920000512,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005221993742336,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005222530613248,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005222799048704,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005222933266432,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223000375296,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223033929728,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223050706944,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223059095552,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223063289856,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223065387008,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223066435584,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223066959872,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067222016,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067353088,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067418624,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067451392,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067467776,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067475968,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067480064,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067482112,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067483136,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067483648,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067483904,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484032,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484096,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484128,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484144,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484152,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484156,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484158,64,FLEN)
NAN_BOXED(6887233135989298955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484159,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488768,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488769,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488771,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488775,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488783,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488799,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488831,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488895,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387489023,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387489279,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387489791,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387490815,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387492863,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387496959,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387505151,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387521535,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387554303,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387619839,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387750911,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778388013055,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778388537343,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778389585919,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778391683071,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778395877375,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778404265983,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778421043199,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778454597631,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778521706495,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778655924223,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778924359679,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208779461230591,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208780534972415,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208782682456063,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208786977423359,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208795567357951,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208812747227135,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208847106965503,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208915826442239,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261209053265395711,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261209328143302655,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261209877899116543,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261210977410744319,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261213176433999871,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261217574480510975,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261226370573533183,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261243962759577599,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261279147131666431,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261349515875844095,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261490253364199423,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261771728340910079,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(262334678294331391,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(263460578201174015,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(263460578201174016,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(264586478108016640,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265149428061437952,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265430903038148608,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265571640526503936,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265642009270681600,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265677193642770432,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265694785828814848,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265703581921837056,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265707979968348160,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265710178991603712,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265711278503231488,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265711828259045376,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712103136952320,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712240575905792,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712309295382528,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712343655120896,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712360834990080,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712369424924672,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712373719891968,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712375867375616,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712376941117440,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712377477988352,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712377746423808,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712377880641536,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712377947750400,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712377981304832,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712377998082048,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378006470656,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378010664960,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378012762112,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378013810688,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014334976,64,FLEN)
NAN_BOXED(6887247367072209863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014597120,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
