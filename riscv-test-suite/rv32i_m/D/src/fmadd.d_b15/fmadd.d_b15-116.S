
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_88320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x330000003ffffff; valaddr_reg:x3; val_offset:264960*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264960*0 + 3*0*FLEN/8, x4, x1, x2)

inst_88321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x330000007ffffff; valaddr_reg:x3; val_offset:264963*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264963*0 + 3*1*FLEN/8, x4, x1, x2)

inst_88322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33000000fffffff; valaddr_reg:x3; val_offset:264966*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264966*0 + 3*2*FLEN/8, x4, x1, x2)

inst_88323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33000001fffffff; valaddr_reg:x3; val_offset:264969*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264969*0 + 3*3*FLEN/8, x4, x1, x2)

inst_88324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33000003fffffff; valaddr_reg:x3; val_offset:264972*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264972*0 + 3*4*FLEN/8, x4, x1, x2)

inst_88325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33000007fffffff; valaddr_reg:x3; val_offset:264975*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264975*0 + 3*5*FLEN/8, x4, x1, x2)

inst_88326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x3300000ffffffff; valaddr_reg:x3; val_offset:264978*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264978*0 + 3*6*FLEN/8, x4, x1, x2)

inst_88327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x3300001ffffffff; valaddr_reg:x3; val_offset:264981*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264981*0 + 3*7*FLEN/8, x4, x1, x2)

inst_88328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x3300003ffffffff; valaddr_reg:x3; val_offset:264984*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264984*0 + 3*8*FLEN/8, x4, x1, x2)

inst_88329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x3300007ffffffff; valaddr_reg:x3; val_offset:264987*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264987*0 + 3*9*FLEN/8, x4, x1, x2)

inst_88330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x330000fffffffff; valaddr_reg:x3; val_offset:264990*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264990*0 + 3*10*FLEN/8, x4, x1, x2)

inst_88331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x330001fffffffff; valaddr_reg:x3; val_offset:264993*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264993*0 + 3*11*FLEN/8, x4, x1, x2)

inst_88332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x330003fffffffff; valaddr_reg:x3; val_offset:264996*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264996*0 + 3*12*FLEN/8, x4, x1, x2)

inst_88333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x330007fffffffff; valaddr_reg:x3; val_offset:264999*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264999*0 + 3*13*FLEN/8, x4, x1, x2)

inst_88334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33000ffffffffff; valaddr_reg:x3; val_offset:265002*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265002*0 + 3*14*FLEN/8, x4, x1, x2)

inst_88335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33001ffffffffff; valaddr_reg:x3; val_offset:265005*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265005*0 + 3*15*FLEN/8, x4, x1, x2)

inst_88336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33003ffffffffff; valaddr_reg:x3; val_offset:265008*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265008*0 + 3*16*FLEN/8, x4, x1, x2)

inst_88337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33007ffffffffff; valaddr_reg:x3; val_offset:265011*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265011*0 + 3*17*FLEN/8, x4, x1, x2)

inst_88338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x3300fffffffffff; valaddr_reg:x3; val_offset:265014*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265014*0 + 3*18*FLEN/8, x4, x1, x2)

inst_88339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x3301fffffffffff; valaddr_reg:x3; val_offset:265017*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265017*0 + 3*19*FLEN/8, x4, x1, x2)

inst_88340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x3303fffffffffff; valaddr_reg:x3; val_offset:265020*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265020*0 + 3*20*FLEN/8, x4, x1, x2)

inst_88341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x3307fffffffffff; valaddr_reg:x3; val_offset:265023*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265023*0 + 3*21*FLEN/8, x4, x1, x2)

inst_88342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x330ffffffffffff; valaddr_reg:x3; val_offset:265026*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265026*0 + 3*22*FLEN/8, x4, x1, x2)

inst_88343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x331ffffffffffff; valaddr_reg:x3; val_offset:265029*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265029*0 + 3*23*FLEN/8, x4, x1, x2)

inst_88344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x333ffffffffffff; valaddr_reg:x3; val_offset:265032*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265032*0 + 3*24*FLEN/8, x4, x1, x2)

inst_88345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x337ffffffffffff; valaddr_reg:x3; val_offset:265035*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265035*0 + 3*25*FLEN/8, x4, x1, x2)

inst_88346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x338000000000000; valaddr_reg:x3; val_offset:265038*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265038*0 + 3*26*FLEN/8, x4, x1, x2)

inst_88347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33c000000000000; valaddr_reg:x3; val_offset:265041*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265041*0 + 3*27*FLEN/8, x4, x1, x2)

inst_88348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33e000000000000; valaddr_reg:x3; val_offset:265044*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265044*0 + 3*28*FLEN/8, x4, x1, x2)

inst_88349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33f000000000000; valaddr_reg:x3; val_offset:265047*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265047*0 + 3*29*FLEN/8, x4, x1, x2)

inst_88350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33f800000000000; valaddr_reg:x3; val_offset:265050*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265050*0 + 3*30*FLEN/8, x4, x1, x2)

inst_88351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33fc00000000000; valaddr_reg:x3; val_offset:265053*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265053*0 + 3*31*FLEN/8, x4, x1, x2)

inst_88352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33fe00000000000; valaddr_reg:x3; val_offset:265056*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265056*0 + 3*32*FLEN/8, x4, x1, x2)

inst_88353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33ff00000000000; valaddr_reg:x3; val_offset:265059*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265059*0 + 3*33*FLEN/8, x4, x1, x2)

inst_88354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33ff80000000000; valaddr_reg:x3; val_offset:265062*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265062*0 + 3*34*FLEN/8, x4, x1, x2)

inst_88355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33ffc0000000000; valaddr_reg:x3; val_offset:265065*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265065*0 + 3*35*FLEN/8, x4, x1, x2)

inst_88356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33ffe0000000000; valaddr_reg:x3; val_offset:265068*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265068*0 + 3*36*FLEN/8, x4, x1, x2)

inst_88357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33fff0000000000; valaddr_reg:x3; val_offset:265071*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265071*0 + 3*37*FLEN/8, x4, x1, x2)

inst_88358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33fff8000000000; valaddr_reg:x3; val_offset:265074*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265074*0 + 3*38*FLEN/8, x4, x1, x2)

inst_88359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33fffc000000000; valaddr_reg:x3; val_offset:265077*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265077*0 + 3*39*FLEN/8, x4, x1, x2)

inst_88360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33fffe000000000; valaddr_reg:x3; val_offset:265080*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265080*0 + 3*40*FLEN/8, x4, x1, x2)

inst_88361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33ffff000000000; valaddr_reg:x3; val_offset:265083*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265083*0 + 3*41*FLEN/8, x4, x1, x2)

inst_88362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33ffff800000000; valaddr_reg:x3; val_offset:265086*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265086*0 + 3*42*FLEN/8, x4, x1, x2)

inst_88363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33ffffc00000000; valaddr_reg:x3; val_offset:265089*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265089*0 + 3*43*FLEN/8, x4, x1, x2)

inst_88364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33ffffe00000000; valaddr_reg:x3; val_offset:265092*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265092*0 + 3*44*FLEN/8, x4, x1, x2)

inst_88365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33fffff00000000; valaddr_reg:x3; val_offset:265095*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265095*0 + 3*45*FLEN/8, x4, x1, x2)

inst_88366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33fffff80000000; valaddr_reg:x3; val_offset:265098*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265098*0 + 3*46*FLEN/8, x4, x1, x2)

inst_88367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33fffffc0000000; valaddr_reg:x3; val_offset:265101*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265101*0 + 3*47*FLEN/8, x4, x1, x2)

inst_88368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33fffffe0000000; valaddr_reg:x3; val_offset:265104*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265104*0 + 3*48*FLEN/8, x4, x1, x2)

inst_88369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33ffffff0000000; valaddr_reg:x3; val_offset:265107*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265107*0 + 3*49*FLEN/8, x4, x1, x2)

inst_88370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33ffffff8000000; valaddr_reg:x3; val_offset:265110*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265110*0 + 3*50*FLEN/8, x4, x1, x2)

inst_88371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33ffffffc000000; valaddr_reg:x3; val_offset:265113*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265113*0 + 3*51*FLEN/8, x4, x1, x2)

inst_88372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33ffffffe000000; valaddr_reg:x3; val_offset:265116*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265116*0 + 3*52*FLEN/8, x4, x1, x2)

inst_88373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33fffffff000000; valaddr_reg:x3; val_offset:265119*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265119*0 + 3*53*FLEN/8, x4, x1, x2)

inst_88374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33fffffff800000; valaddr_reg:x3; val_offset:265122*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265122*0 + 3*54*FLEN/8, x4, x1, x2)

inst_88375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33fffffffc00000; valaddr_reg:x3; val_offset:265125*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265125*0 + 3*55*FLEN/8, x4, x1, x2)

inst_88376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33fffffffe00000; valaddr_reg:x3; val_offset:265128*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265128*0 + 3*56*FLEN/8, x4, x1, x2)

inst_88377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33ffffffff00000; valaddr_reg:x3; val_offset:265131*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265131*0 + 3*57*FLEN/8, x4, x1, x2)

inst_88378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33ffffffff80000; valaddr_reg:x3; val_offset:265134*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265134*0 + 3*58*FLEN/8, x4, x1, x2)

inst_88379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33ffffffffc0000; valaddr_reg:x3; val_offset:265137*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265137*0 + 3*59*FLEN/8, x4, x1, x2)

inst_88380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33ffffffffe0000; valaddr_reg:x3; val_offset:265140*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265140*0 + 3*60*FLEN/8, x4, x1, x2)

inst_88381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33fffffffff0000; valaddr_reg:x3; val_offset:265143*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265143*0 + 3*61*FLEN/8, x4, x1, x2)

inst_88382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33fffffffff8000; valaddr_reg:x3; val_offset:265146*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265146*0 + 3*62*FLEN/8, x4, x1, x2)

inst_88383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33fffffffffc000; valaddr_reg:x3; val_offset:265149*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265149*0 + 3*63*FLEN/8, x4, x1, x2)

inst_88384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33fffffffffe000; valaddr_reg:x3; val_offset:265152*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265152*0 + 3*64*FLEN/8, x4, x1, x2)

inst_88385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33ffffffffff000; valaddr_reg:x3; val_offset:265155*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265155*0 + 3*65*FLEN/8, x4, x1, x2)

inst_88386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33ffffffffff800; valaddr_reg:x3; val_offset:265158*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265158*0 + 3*66*FLEN/8, x4, x1, x2)

inst_88387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33ffffffffffc00; valaddr_reg:x3; val_offset:265161*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265161*0 + 3*67*FLEN/8, x4, x1, x2)

inst_88388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33ffffffffffe00; valaddr_reg:x3; val_offset:265164*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265164*0 + 3*68*FLEN/8, x4, x1, x2)

inst_88389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33fffffffffff00; valaddr_reg:x3; val_offset:265167*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265167*0 + 3*69*FLEN/8, x4, x1, x2)

inst_88390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33fffffffffff80; valaddr_reg:x3; val_offset:265170*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265170*0 + 3*70*FLEN/8, x4, x1, x2)

inst_88391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33fffffffffffc0; valaddr_reg:x3; val_offset:265173*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265173*0 + 3*71*FLEN/8, x4, x1, x2)

inst_88392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33fffffffffffe0; valaddr_reg:x3; val_offset:265176*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265176*0 + 3*72*FLEN/8, x4, x1, x2)

inst_88393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33ffffffffffff0; valaddr_reg:x3; val_offset:265179*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265179*0 + 3*73*FLEN/8, x4, x1, x2)

inst_88394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33ffffffffffff8; valaddr_reg:x3; val_offset:265182*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265182*0 + 3*74*FLEN/8, x4, x1, x2)

inst_88395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33ffffffffffffc; valaddr_reg:x3; val_offset:265185*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265185*0 + 3*75*FLEN/8, x4, x1, x2)

inst_88396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33ffffffffffffe; valaddr_reg:x3; val_offset:265188*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265188*0 + 3*76*FLEN/8, x4, x1, x2)

inst_88397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc00b70e082196 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac00b70e082196; op2val:0x0;
op3val:0x33fffffffffffff; valaddr_reg:x3; val_offset:265191*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265191*0 + 3*77*FLEN/8, x4, x1, x2)

inst_88398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000008000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x8000; valaddr_reg:x3; val_offset:265194*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265194*0 + 3*78*FLEN/8, x4, x1, x2)

inst_88399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:265197*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265197*0 + 3*79*FLEN/8, x4, x1, x2)

inst_88400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:265200*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265200*0 + 3*80*FLEN/8, x4, x1, x2)

inst_88401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:265203*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265203*0 + 3*81*FLEN/8, x4, x1, x2)

inst_88402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:265206*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265206*0 + 3*82*FLEN/8, x4, x1, x2)

inst_88403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:265209*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265209*0 + 3*83*FLEN/8, x4, x1, x2)

inst_88404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:265212*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265212*0 + 3*84*FLEN/8, x4, x1, x2)

inst_88405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800000000000007f; valaddr_reg:x3; val_offset:265215*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265215*0 + 3*85*FLEN/8, x4, x1, x2)

inst_88406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x80000000000000ff; valaddr_reg:x3; val_offset:265218*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265218*0 + 3*86*FLEN/8, x4, x1, x2)

inst_88407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x80000000000001ff; valaddr_reg:x3; val_offset:265221*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265221*0 + 3*87*FLEN/8, x4, x1, x2)

inst_88408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x80000000000003ff; valaddr_reg:x3; val_offset:265224*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265224*0 + 3*88*FLEN/8, x4, x1, x2)

inst_88409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x80000000000007ff; valaddr_reg:x3; val_offset:265227*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265227*0 + 3*89*FLEN/8, x4, x1, x2)

inst_88410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x8000000000000fff; valaddr_reg:x3; val_offset:265230*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265230*0 + 3*90*FLEN/8, x4, x1, x2)

inst_88411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x8000000000001fff; valaddr_reg:x3; val_offset:265233*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265233*0 + 3*91*FLEN/8, x4, x1, x2)

inst_88412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x8000000000003fff; valaddr_reg:x3; val_offset:265236*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265236*0 + 3*92*FLEN/8, x4, x1, x2)

inst_88413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x8000000000007fff; valaddr_reg:x3; val_offset:265239*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265239*0 + 3*93*FLEN/8, x4, x1, x2)

inst_88414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800000000000ffff; valaddr_reg:x3; val_offset:265242*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265242*0 + 3*94*FLEN/8, x4, x1, x2)

inst_88415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800000000001ffff; valaddr_reg:x3; val_offset:265245*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265245*0 + 3*95*FLEN/8, x4, x1, x2)

inst_88416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800000000003ffff; valaddr_reg:x3; val_offset:265248*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265248*0 + 3*96*FLEN/8, x4, x1, x2)

inst_88417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800000000007ffff; valaddr_reg:x3; val_offset:265251*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265251*0 + 3*97*FLEN/8, x4, x1, x2)

inst_88418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x80000000000fffff; valaddr_reg:x3; val_offset:265254*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265254*0 + 3*98*FLEN/8, x4, x1, x2)

inst_88419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x80000000001fffff; valaddr_reg:x3; val_offset:265257*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265257*0 + 3*99*FLEN/8, x4, x1, x2)

inst_88420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x80000000003fffff; valaddr_reg:x3; val_offset:265260*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265260*0 + 3*100*FLEN/8, x4, x1, x2)

inst_88421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x80000000007fffff; valaddr_reg:x3; val_offset:265263*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265263*0 + 3*101*FLEN/8, x4, x1, x2)

inst_88422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x8000000000ffffff; valaddr_reg:x3; val_offset:265266*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265266*0 + 3*102*FLEN/8, x4, x1, x2)

inst_88423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x8000000001ffffff; valaddr_reg:x3; val_offset:265269*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265269*0 + 3*103*FLEN/8, x4, x1, x2)

inst_88424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x8000000003ffffff; valaddr_reg:x3; val_offset:265272*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265272*0 + 3*104*FLEN/8, x4, x1, x2)

inst_88425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x8000000007ffffff; valaddr_reg:x3; val_offset:265275*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265275*0 + 3*105*FLEN/8, x4, x1, x2)

inst_88426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800000000fffffff; valaddr_reg:x3; val_offset:265278*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265278*0 + 3*106*FLEN/8, x4, x1, x2)

inst_88427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800000001fffffff; valaddr_reg:x3; val_offset:265281*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265281*0 + 3*107*FLEN/8, x4, x1, x2)

inst_88428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800000003fffffff; valaddr_reg:x3; val_offset:265284*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265284*0 + 3*108*FLEN/8, x4, x1, x2)

inst_88429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800000007fffffff; valaddr_reg:x3; val_offset:265287*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265287*0 + 3*109*FLEN/8, x4, x1, x2)

inst_88430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x80000000ffffffff; valaddr_reg:x3; val_offset:265290*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265290*0 + 3*110*FLEN/8, x4, x1, x2)

inst_88431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x80000001ffffffff; valaddr_reg:x3; val_offset:265293*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265293*0 + 3*111*FLEN/8, x4, x1, x2)

inst_88432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x80000003ffffffff; valaddr_reg:x3; val_offset:265296*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265296*0 + 3*112*FLEN/8, x4, x1, x2)

inst_88433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x80000007ffffffff; valaddr_reg:x3; val_offset:265299*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265299*0 + 3*113*FLEN/8, x4, x1, x2)

inst_88434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x8000000fffffffff; valaddr_reg:x3; val_offset:265302*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265302*0 + 3*114*FLEN/8, x4, x1, x2)

inst_88435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x8000001fffffffff; valaddr_reg:x3; val_offset:265305*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265305*0 + 3*115*FLEN/8, x4, x1, x2)

inst_88436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x8000003fffffffff; valaddr_reg:x3; val_offset:265308*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265308*0 + 3*116*FLEN/8, x4, x1, x2)

inst_88437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x8000007fffffffff; valaddr_reg:x3; val_offset:265311*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265311*0 + 3*117*FLEN/8, x4, x1, x2)

inst_88438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800000ffffffffff; valaddr_reg:x3; val_offset:265314*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265314*0 + 3*118*FLEN/8, x4, x1, x2)

inst_88439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800001ffffffffff; valaddr_reg:x3; val_offset:265317*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265317*0 + 3*119*FLEN/8, x4, x1, x2)

inst_88440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800003ffffffffff; valaddr_reg:x3; val_offset:265320*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265320*0 + 3*120*FLEN/8, x4, x1, x2)

inst_88441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800007ffffffffff; valaddr_reg:x3; val_offset:265323*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265323*0 + 3*121*FLEN/8, x4, x1, x2)

inst_88442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x80000fffffffffff; valaddr_reg:x3; val_offset:265326*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265326*0 + 3*122*FLEN/8, x4, x1, x2)

inst_88443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x80001fffffffffff; valaddr_reg:x3; val_offset:265329*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265329*0 + 3*123*FLEN/8, x4, x1, x2)

inst_88444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x80003fffffffffff; valaddr_reg:x3; val_offset:265332*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265332*0 + 3*124*FLEN/8, x4, x1, x2)

inst_88445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x80007fffffffffff; valaddr_reg:x3; val_offset:265335*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265335*0 + 3*125*FLEN/8, x4, x1, x2)

inst_88446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x8000ffffffffffff; valaddr_reg:x3; val_offset:265338*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265338*0 + 3*126*FLEN/8, x4, x1, x2)

inst_88447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x8001ffffffffffff; valaddr_reg:x3; val_offset:265341*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265341*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_88448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:265344*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265344*0 + 3*128*FLEN/8, x4, x1, x2)

inst_88449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x8003ffffffffffff; valaddr_reg:x3; val_offset:265347*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265347*0 + 3*129*FLEN/8, x4, x1, x2)

inst_88450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:265350*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265350*0 + 3*130*FLEN/8, x4, x1, x2)

inst_88451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:265353*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265353*0 + 3*131*FLEN/8, x4, x1, x2)

inst_88452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:265356*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265356*0 + 3*132*FLEN/8, x4, x1, x2)

inst_88453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:265359*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265359*0 + 3*133*FLEN/8, x4, x1, x2)

inst_88454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x8007ffffffffffff; valaddr_reg:x3; val_offset:265362*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265362*0 + 3*134*FLEN/8, x4, x1, x2)

inst_88455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x8008000000000000; valaddr_reg:x3; val_offset:265365*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265365*0 + 3*135*FLEN/8, x4, x1, x2)

inst_88456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:265368*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265368*0 + 3*136*FLEN/8, x4, x1, x2)

inst_88457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:265371*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265371*0 + 3*137*FLEN/8, x4, x1, x2)

inst_88458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:265374*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265374*0 + 3*138*FLEN/8, x4, x1, x2)

inst_88459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800c000000000000; valaddr_reg:x3; val_offset:265377*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265377*0 + 3*139*FLEN/8, x4, x1, x2)

inst_88460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:265380*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265380*0 + 3*140*FLEN/8, x4, x1, x2)

inst_88461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:265383*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265383*0 + 3*141*FLEN/8, x4, x1, x2)

inst_88462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800e000000000000; valaddr_reg:x3; val_offset:265386*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265386*0 + 3*142*FLEN/8, x4, x1, x2)

inst_88463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800f000000000000; valaddr_reg:x3; val_offset:265389*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265389*0 + 3*143*FLEN/8, x4, x1, x2)

inst_88464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800f800000000000; valaddr_reg:x3; val_offset:265392*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265392*0 + 3*144*FLEN/8, x4, x1, x2)

inst_88465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800fc00000000000; valaddr_reg:x3; val_offset:265395*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265395*0 + 3*145*FLEN/8, x4, x1, x2)

inst_88466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800fe00000000000; valaddr_reg:x3; val_offset:265398*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265398*0 + 3*146*FLEN/8, x4, x1, x2)

inst_88467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800ff00000000000; valaddr_reg:x3; val_offset:265401*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265401*0 + 3*147*FLEN/8, x4, x1, x2)

inst_88468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800ff80000000000; valaddr_reg:x3; val_offset:265404*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265404*0 + 3*148*FLEN/8, x4, x1, x2)

inst_88469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800ffc0000000000; valaddr_reg:x3; val_offset:265407*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265407*0 + 3*149*FLEN/8, x4, x1, x2)

inst_88470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800ffe0000000000; valaddr_reg:x3; val_offset:265410*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265410*0 + 3*150*FLEN/8, x4, x1, x2)

inst_88471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800fff0000000000; valaddr_reg:x3; val_offset:265413*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265413*0 + 3*151*FLEN/8, x4, x1, x2)

inst_88472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800fff8000000000; valaddr_reg:x3; val_offset:265416*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265416*0 + 3*152*FLEN/8, x4, x1, x2)

inst_88473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800fffc000000000; valaddr_reg:x3; val_offset:265419*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265419*0 + 3*153*FLEN/8, x4, x1, x2)

inst_88474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800fffe000000000; valaddr_reg:x3; val_offset:265422*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265422*0 + 3*154*FLEN/8, x4, x1, x2)

inst_88475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800ffff000000000; valaddr_reg:x3; val_offset:265425*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265425*0 + 3*155*FLEN/8, x4, x1, x2)

inst_88476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800ffff800000000; valaddr_reg:x3; val_offset:265428*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265428*0 + 3*156*FLEN/8, x4, x1, x2)

inst_88477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800ffffc00000000; valaddr_reg:x3; val_offset:265431*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265431*0 + 3*157*FLEN/8, x4, x1, x2)

inst_88478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800ffffe00000000; valaddr_reg:x3; val_offset:265434*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265434*0 + 3*158*FLEN/8, x4, x1, x2)

inst_88479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800fffff00000000; valaddr_reg:x3; val_offset:265437*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265437*0 + 3*159*FLEN/8, x4, x1, x2)

inst_88480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800fffff80000000; valaddr_reg:x3; val_offset:265440*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265440*0 + 3*160*FLEN/8, x4, x1, x2)

inst_88481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800fffffc0000000; valaddr_reg:x3; val_offset:265443*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265443*0 + 3*161*FLEN/8, x4, x1, x2)

inst_88482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800fffffe0000000; valaddr_reg:x3; val_offset:265446*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265446*0 + 3*162*FLEN/8, x4, x1, x2)

inst_88483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800ffffff0000000; valaddr_reg:x3; val_offset:265449*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265449*0 + 3*163*FLEN/8, x4, x1, x2)

inst_88484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800ffffff8000000; valaddr_reg:x3; val_offset:265452*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265452*0 + 3*164*FLEN/8, x4, x1, x2)

inst_88485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800ffffffc000000; valaddr_reg:x3; val_offset:265455*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265455*0 + 3*165*FLEN/8, x4, x1, x2)

inst_88486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800ffffffe000000; valaddr_reg:x3; val_offset:265458*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265458*0 + 3*166*FLEN/8, x4, x1, x2)

inst_88487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800fffffff000000; valaddr_reg:x3; val_offset:265461*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265461*0 + 3*167*FLEN/8, x4, x1, x2)

inst_88488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800fffffff800000; valaddr_reg:x3; val_offset:265464*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265464*0 + 3*168*FLEN/8, x4, x1, x2)

inst_88489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800fffffffc00000; valaddr_reg:x3; val_offset:265467*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265467*0 + 3*169*FLEN/8, x4, x1, x2)

inst_88490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800fffffffe00000; valaddr_reg:x3; val_offset:265470*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265470*0 + 3*170*FLEN/8, x4, x1, x2)

inst_88491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800ffffffff00000; valaddr_reg:x3; val_offset:265473*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265473*0 + 3*171*FLEN/8, x4, x1, x2)

inst_88492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800ffffffff80000; valaddr_reg:x3; val_offset:265476*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265476*0 + 3*172*FLEN/8, x4, x1, x2)

inst_88493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800ffffffffc0000; valaddr_reg:x3; val_offset:265479*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265479*0 + 3*173*FLEN/8, x4, x1, x2)

inst_88494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800ffffffffe0000; valaddr_reg:x3; val_offset:265482*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265482*0 + 3*174*FLEN/8, x4, x1, x2)

inst_88495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800fffffffff0000; valaddr_reg:x3; val_offset:265485*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265485*0 + 3*175*FLEN/8, x4, x1, x2)

inst_88496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800fffffffff8000; valaddr_reg:x3; val_offset:265488*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265488*0 + 3*176*FLEN/8, x4, x1, x2)

inst_88497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800fffffffffc000; valaddr_reg:x3; val_offset:265491*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265491*0 + 3*177*FLEN/8, x4, x1, x2)

inst_88498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800fffffffffe000; valaddr_reg:x3; val_offset:265494*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265494*0 + 3*178*FLEN/8, x4, x1, x2)

inst_88499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800ffffffffff000; valaddr_reg:x3; val_offset:265497*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265497*0 + 3*179*FLEN/8, x4, x1, x2)

inst_88500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800ffffffffff800; valaddr_reg:x3; val_offset:265500*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265500*0 + 3*180*FLEN/8, x4, x1, x2)

inst_88501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800ffffffffffc00; valaddr_reg:x3; val_offset:265503*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265503*0 + 3*181*FLEN/8, x4, x1, x2)

inst_88502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800ffffffffffe00; valaddr_reg:x3; val_offset:265506*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265506*0 + 3*182*FLEN/8, x4, x1, x2)

inst_88503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800fffffffffff00; valaddr_reg:x3; val_offset:265509*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265509*0 + 3*183*FLEN/8, x4, x1, x2)

inst_88504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800fffffffffff80; valaddr_reg:x3; val_offset:265512*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265512*0 + 3*184*FLEN/8, x4, x1, x2)

inst_88505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:265515*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265515*0 + 3*185*FLEN/8, x4, x1, x2)

inst_88506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:265518*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265518*0 + 3*186*FLEN/8, x4, x1, x2)

inst_88507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:265521*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265521*0 + 3*187*FLEN/8, x4, x1, x2)

inst_88508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:265524*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265524*0 + 3*188*FLEN/8, x4, x1, x2)

inst_88509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:265527*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265527*0 + 3*189*FLEN/8, x4, x1, x2)

inst_88510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:265530*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265530*0 + 3*190*FLEN/8, x4, x1, x2)

inst_88511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc072fccdd29b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac072fccdd29b2; op2val:0x8000;
op3val:0x800fffffffffffff; valaddr_reg:x3; val_offset:265533*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265533*0 + 3*191*FLEN/8, x4, x1, x2)

inst_88512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:265536*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265536*0 + 3*192*FLEN/8, x4, x1, x2)

inst_88513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:265539*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265539*0 + 3*193*FLEN/8, x4, x1, x2)

inst_88514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:265542*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265542*0 + 3*194*FLEN/8, x4, x1, x2)

inst_88515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:265545*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265545*0 + 3*195*FLEN/8, x4, x1, x2)

inst_88516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:265548*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265548*0 + 3*196*FLEN/8, x4, x1, x2)

inst_88517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:265551*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265551*0 + 3*197*FLEN/8, x4, x1, x2)

inst_88518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:265554*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265554*0 + 3*198*FLEN/8, x4, x1, x2)

inst_88519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:265557*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265557*0 + 3*199*FLEN/8, x4, x1, x2)

inst_88520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:265560*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265560*0 + 3*200*FLEN/8, x4, x1, x2)

inst_88521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:265563*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265563*0 + 3*201*FLEN/8, x4, x1, x2)

inst_88522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:265566*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265566*0 + 3*202*FLEN/8, x4, x1, x2)

inst_88523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:265569*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265569*0 + 3*203*FLEN/8, x4, x1, x2)

inst_88524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:265572*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265572*0 + 3*204*FLEN/8, x4, x1, x2)

inst_88525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:265575*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265575*0 + 3*205*FLEN/8, x4, x1, x2)

inst_88526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:265578*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265578*0 + 3*206*FLEN/8, x4, x1, x2)

inst_88527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:265581*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265581*0 + 3*207*FLEN/8, x4, x1, x2)

inst_88528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:265584*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265584*0 + 3*208*FLEN/8, x4, x1, x2)

inst_88529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:265587*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265587*0 + 3*209*FLEN/8, x4, x1, x2)

inst_88530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:265590*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265590*0 + 3*210*FLEN/8, x4, x1, x2)

inst_88531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:265593*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265593*0 + 3*211*FLEN/8, x4, x1, x2)

inst_88532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:265596*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265596*0 + 3*212*FLEN/8, x4, x1, x2)

inst_88533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:265599*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265599*0 + 3*213*FLEN/8, x4, x1, x2)

inst_88534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x8070000000000000; valaddr_reg:x3; val_offset:265602*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265602*0 + 3*214*FLEN/8, x4, x1, x2)

inst_88535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x8070000000000001; valaddr_reg:x3; val_offset:265605*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265605*0 + 3*215*FLEN/8, x4, x1, x2)

inst_88536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x8070000000000003; valaddr_reg:x3; val_offset:265608*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265608*0 + 3*216*FLEN/8, x4, x1, x2)

inst_88537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x8070000000000007; valaddr_reg:x3; val_offset:265611*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265611*0 + 3*217*FLEN/8, x4, x1, x2)

inst_88538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807000000000000f; valaddr_reg:x3; val_offset:265614*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265614*0 + 3*218*FLEN/8, x4, x1, x2)

inst_88539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807000000000001f; valaddr_reg:x3; val_offset:265617*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265617*0 + 3*219*FLEN/8, x4, x1, x2)

inst_88540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807000000000003f; valaddr_reg:x3; val_offset:265620*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265620*0 + 3*220*FLEN/8, x4, x1, x2)

inst_88541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807000000000007f; valaddr_reg:x3; val_offset:265623*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265623*0 + 3*221*FLEN/8, x4, x1, x2)

inst_88542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x80700000000000ff; valaddr_reg:x3; val_offset:265626*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265626*0 + 3*222*FLEN/8, x4, x1, x2)

inst_88543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x80700000000001ff; valaddr_reg:x3; val_offset:265629*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265629*0 + 3*223*FLEN/8, x4, x1, x2)

inst_88544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x80700000000003ff; valaddr_reg:x3; val_offset:265632*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265632*0 + 3*224*FLEN/8, x4, x1, x2)

inst_88545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x80700000000007ff; valaddr_reg:x3; val_offset:265635*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265635*0 + 3*225*FLEN/8, x4, x1, x2)

inst_88546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x8070000000000fff; valaddr_reg:x3; val_offset:265638*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265638*0 + 3*226*FLEN/8, x4, x1, x2)

inst_88547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x8070000000001fff; valaddr_reg:x3; val_offset:265641*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265641*0 + 3*227*FLEN/8, x4, x1, x2)

inst_88548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x8070000000003fff; valaddr_reg:x3; val_offset:265644*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265644*0 + 3*228*FLEN/8, x4, x1, x2)

inst_88549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x8070000000007fff; valaddr_reg:x3; val_offset:265647*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265647*0 + 3*229*FLEN/8, x4, x1, x2)

inst_88550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807000000000ffff; valaddr_reg:x3; val_offset:265650*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265650*0 + 3*230*FLEN/8, x4, x1, x2)

inst_88551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807000000001ffff; valaddr_reg:x3; val_offset:265653*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265653*0 + 3*231*FLEN/8, x4, x1, x2)

inst_88552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807000000003ffff; valaddr_reg:x3; val_offset:265656*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265656*0 + 3*232*FLEN/8, x4, x1, x2)

inst_88553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807000000007ffff; valaddr_reg:x3; val_offset:265659*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265659*0 + 3*233*FLEN/8, x4, x1, x2)

inst_88554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x80700000000fffff; valaddr_reg:x3; val_offset:265662*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265662*0 + 3*234*FLEN/8, x4, x1, x2)

inst_88555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x80700000001fffff; valaddr_reg:x3; val_offset:265665*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265665*0 + 3*235*FLEN/8, x4, x1, x2)

inst_88556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x80700000003fffff; valaddr_reg:x3; val_offset:265668*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265668*0 + 3*236*FLEN/8, x4, x1, x2)

inst_88557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x80700000007fffff; valaddr_reg:x3; val_offset:265671*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265671*0 + 3*237*FLEN/8, x4, x1, x2)

inst_88558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x8070000000ffffff; valaddr_reg:x3; val_offset:265674*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265674*0 + 3*238*FLEN/8, x4, x1, x2)

inst_88559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x8070000001ffffff; valaddr_reg:x3; val_offset:265677*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265677*0 + 3*239*FLEN/8, x4, x1, x2)

inst_88560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x8070000003ffffff; valaddr_reg:x3; val_offset:265680*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265680*0 + 3*240*FLEN/8, x4, x1, x2)

inst_88561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x8070000007ffffff; valaddr_reg:x3; val_offset:265683*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265683*0 + 3*241*FLEN/8, x4, x1, x2)

inst_88562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807000000fffffff; valaddr_reg:x3; val_offset:265686*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265686*0 + 3*242*FLEN/8, x4, x1, x2)

inst_88563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807000001fffffff; valaddr_reg:x3; val_offset:265689*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265689*0 + 3*243*FLEN/8, x4, x1, x2)

inst_88564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807000003fffffff; valaddr_reg:x3; val_offset:265692*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265692*0 + 3*244*FLEN/8, x4, x1, x2)

inst_88565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807000007fffffff; valaddr_reg:x3; val_offset:265695*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265695*0 + 3*245*FLEN/8, x4, x1, x2)

inst_88566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x80700000ffffffff; valaddr_reg:x3; val_offset:265698*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265698*0 + 3*246*FLEN/8, x4, x1, x2)

inst_88567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x80700001ffffffff; valaddr_reg:x3; val_offset:265701*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265701*0 + 3*247*FLEN/8, x4, x1, x2)

inst_88568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x80700003ffffffff; valaddr_reg:x3; val_offset:265704*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265704*0 + 3*248*FLEN/8, x4, x1, x2)

inst_88569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x80700007ffffffff; valaddr_reg:x3; val_offset:265707*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265707*0 + 3*249*FLEN/8, x4, x1, x2)

inst_88570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x8070000fffffffff; valaddr_reg:x3; val_offset:265710*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265710*0 + 3*250*FLEN/8, x4, x1, x2)

inst_88571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x8070001fffffffff; valaddr_reg:x3; val_offset:265713*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265713*0 + 3*251*FLEN/8, x4, x1, x2)

inst_88572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x8070003fffffffff; valaddr_reg:x3; val_offset:265716*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265716*0 + 3*252*FLEN/8, x4, x1, x2)

inst_88573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x8070007fffffffff; valaddr_reg:x3; val_offset:265719*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265719*0 + 3*253*FLEN/8, x4, x1, x2)

inst_88574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807000ffffffffff; valaddr_reg:x3; val_offset:265722*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265722*0 + 3*254*FLEN/8, x4, x1, x2)

inst_88575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807001ffffffffff; valaddr_reg:x3; val_offset:265725*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265725*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_88576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807003ffffffffff; valaddr_reg:x3; val_offset:265728*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265728*0 + 3*256*FLEN/8, x4, x1, x2)

inst_88577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807007ffffffffff; valaddr_reg:x3; val_offset:265731*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265731*0 + 3*257*FLEN/8, x4, x1, x2)

inst_88578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x80700fffffffffff; valaddr_reg:x3; val_offset:265734*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265734*0 + 3*258*FLEN/8, x4, x1, x2)

inst_88579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x80701fffffffffff; valaddr_reg:x3; val_offset:265737*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265737*0 + 3*259*FLEN/8, x4, x1, x2)

inst_88580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x80703fffffffffff; valaddr_reg:x3; val_offset:265740*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265740*0 + 3*260*FLEN/8, x4, x1, x2)

inst_88581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x80707fffffffffff; valaddr_reg:x3; val_offset:265743*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265743*0 + 3*261*FLEN/8, x4, x1, x2)

inst_88582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x8070ffffffffffff; valaddr_reg:x3; val_offset:265746*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265746*0 + 3*262*FLEN/8, x4, x1, x2)

inst_88583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x8071ffffffffffff; valaddr_reg:x3; val_offset:265749*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265749*0 + 3*263*FLEN/8, x4, x1, x2)

inst_88584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x8073ffffffffffff; valaddr_reg:x3; val_offset:265752*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265752*0 + 3*264*FLEN/8, x4, x1, x2)

inst_88585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x8077ffffffffffff; valaddr_reg:x3; val_offset:265755*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265755*0 + 3*265*FLEN/8, x4, x1, x2)

inst_88586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x8078000000000000; valaddr_reg:x3; val_offset:265758*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265758*0 + 3*266*FLEN/8, x4, x1, x2)

inst_88587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807c000000000000; valaddr_reg:x3; val_offset:265761*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265761*0 + 3*267*FLEN/8, x4, x1, x2)

inst_88588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807e000000000000; valaddr_reg:x3; val_offset:265764*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265764*0 + 3*268*FLEN/8, x4, x1, x2)

inst_88589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807f000000000000; valaddr_reg:x3; val_offset:265767*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265767*0 + 3*269*FLEN/8, x4, x1, x2)

inst_88590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807f800000000000; valaddr_reg:x3; val_offset:265770*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265770*0 + 3*270*FLEN/8, x4, x1, x2)

inst_88591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807fc00000000000; valaddr_reg:x3; val_offset:265773*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265773*0 + 3*271*FLEN/8, x4, x1, x2)

inst_88592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807fe00000000000; valaddr_reg:x3; val_offset:265776*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265776*0 + 3*272*FLEN/8, x4, x1, x2)

inst_88593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807ff00000000000; valaddr_reg:x3; val_offset:265779*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265779*0 + 3*273*FLEN/8, x4, x1, x2)

inst_88594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807ff80000000000; valaddr_reg:x3; val_offset:265782*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265782*0 + 3*274*FLEN/8, x4, x1, x2)

inst_88595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807ffc0000000000; valaddr_reg:x3; val_offset:265785*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265785*0 + 3*275*FLEN/8, x4, x1, x2)

inst_88596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807ffe0000000000; valaddr_reg:x3; val_offset:265788*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265788*0 + 3*276*FLEN/8, x4, x1, x2)

inst_88597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807fff0000000000; valaddr_reg:x3; val_offset:265791*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265791*0 + 3*277*FLEN/8, x4, x1, x2)

inst_88598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807fff8000000000; valaddr_reg:x3; val_offset:265794*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265794*0 + 3*278*FLEN/8, x4, x1, x2)

inst_88599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807fffc000000000; valaddr_reg:x3; val_offset:265797*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265797*0 + 3*279*FLEN/8, x4, x1, x2)

inst_88600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807fffe000000000; valaddr_reg:x3; val_offset:265800*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265800*0 + 3*280*FLEN/8, x4, x1, x2)

inst_88601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807ffff000000000; valaddr_reg:x3; val_offset:265803*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265803*0 + 3*281*FLEN/8, x4, x1, x2)

inst_88602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807ffff800000000; valaddr_reg:x3; val_offset:265806*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265806*0 + 3*282*FLEN/8, x4, x1, x2)

inst_88603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807ffffc00000000; valaddr_reg:x3; val_offset:265809*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265809*0 + 3*283*FLEN/8, x4, x1, x2)

inst_88604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807ffffe00000000; valaddr_reg:x3; val_offset:265812*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265812*0 + 3*284*FLEN/8, x4, x1, x2)

inst_88605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807fffff00000000; valaddr_reg:x3; val_offset:265815*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265815*0 + 3*285*FLEN/8, x4, x1, x2)

inst_88606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807fffff80000000; valaddr_reg:x3; val_offset:265818*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265818*0 + 3*286*FLEN/8, x4, x1, x2)

inst_88607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807fffffc0000000; valaddr_reg:x3; val_offset:265821*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265821*0 + 3*287*FLEN/8, x4, x1, x2)

inst_88608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807fffffe0000000; valaddr_reg:x3; val_offset:265824*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265824*0 + 3*288*FLEN/8, x4, x1, x2)

inst_88609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807ffffff0000000; valaddr_reg:x3; val_offset:265827*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265827*0 + 3*289*FLEN/8, x4, x1, x2)

inst_88610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807ffffff8000000; valaddr_reg:x3; val_offset:265830*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265830*0 + 3*290*FLEN/8, x4, x1, x2)

inst_88611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807ffffffc000000; valaddr_reg:x3; val_offset:265833*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265833*0 + 3*291*FLEN/8, x4, x1, x2)

inst_88612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807ffffffe000000; valaddr_reg:x3; val_offset:265836*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265836*0 + 3*292*FLEN/8, x4, x1, x2)

inst_88613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807fffffff000000; valaddr_reg:x3; val_offset:265839*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265839*0 + 3*293*FLEN/8, x4, x1, x2)

inst_88614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807fffffff800000; valaddr_reg:x3; val_offset:265842*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265842*0 + 3*294*FLEN/8, x4, x1, x2)

inst_88615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807fffffffc00000; valaddr_reg:x3; val_offset:265845*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265845*0 + 3*295*FLEN/8, x4, x1, x2)

inst_88616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807fffffffe00000; valaddr_reg:x3; val_offset:265848*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265848*0 + 3*296*FLEN/8, x4, x1, x2)

inst_88617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807ffffffff00000; valaddr_reg:x3; val_offset:265851*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265851*0 + 3*297*FLEN/8, x4, x1, x2)

inst_88618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807ffffffff80000; valaddr_reg:x3; val_offset:265854*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265854*0 + 3*298*FLEN/8, x4, x1, x2)

inst_88619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807ffffffffc0000; valaddr_reg:x3; val_offset:265857*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265857*0 + 3*299*FLEN/8, x4, x1, x2)

inst_88620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807ffffffffe0000; valaddr_reg:x3; val_offset:265860*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265860*0 + 3*300*FLEN/8, x4, x1, x2)

inst_88621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807fffffffff0000; valaddr_reg:x3; val_offset:265863*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265863*0 + 3*301*FLEN/8, x4, x1, x2)

inst_88622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807fffffffff8000; valaddr_reg:x3; val_offset:265866*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265866*0 + 3*302*FLEN/8, x4, x1, x2)

inst_88623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807fffffffffc000; valaddr_reg:x3; val_offset:265869*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265869*0 + 3*303*FLEN/8, x4, x1, x2)

inst_88624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807fffffffffe000; valaddr_reg:x3; val_offset:265872*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265872*0 + 3*304*FLEN/8, x4, x1, x2)

inst_88625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807ffffffffff000; valaddr_reg:x3; val_offset:265875*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265875*0 + 3*305*FLEN/8, x4, x1, x2)

inst_88626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807ffffffffff800; valaddr_reg:x3; val_offset:265878*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265878*0 + 3*306*FLEN/8, x4, x1, x2)

inst_88627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807ffffffffffc00; valaddr_reg:x3; val_offset:265881*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265881*0 + 3*307*FLEN/8, x4, x1, x2)

inst_88628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807ffffffffffe00; valaddr_reg:x3; val_offset:265884*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265884*0 + 3*308*FLEN/8, x4, x1, x2)

inst_88629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807fffffffffff00; valaddr_reg:x3; val_offset:265887*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265887*0 + 3*309*FLEN/8, x4, x1, x2)

inst_88630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807fffffffffff80; valaddr_reg:x3; val_offset:265890*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265890*0 + 3*310*FLEN/8, x4, x1, x2)

inst_88631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807fffffffffffc0; valaddr_reg:x3; val_offset:265893*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265893*0 + 3*311*FLEN/8, x4, x1, x2)

inst_88632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807fffffffffffe0; valaddr_reg:x3; val_offset:265896*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265896*0 + 3*312*FLEN/8, x4, x1, x2)

inst_88633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807ffffffffffff0; valaddr_reg:x3; val_offset:265899*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265899*0 + 3*313*FLEN/8, x4, x1, x2)

inst_88634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807ffffffffffff8; valaddr_reg:x3; val_offset:265902*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265902*0 + 3*314*FLEN/8, x4, x1, x2)

inst_88635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807ffffffffffffc; valaddr_reg:x3; val_offset:265905*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265905*0 + 3*315*FLEN/8, x4, x1, x2)

inst_88636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807ffffffffffffe; valaddr_reg:x3; val_offset:265908*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265908*0 + 3*316*FLEN/8, x4, x1, x2)

inst_88637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac0e80bc9923b7; op2val:0x8000;
op3val:0x807fffffffffffff; valaddr_reg:x3; val_offset:265911*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265911*0 + 3*317*FLEN/8, x4, x1, x2)

inst_88638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc40000000000000; valaddr_reg:x3; val_offset:265914*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265914*0 + 3*318*FLEN/8, x4, x1, x2)

inst_88639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc40000000000001; valaddr_reg:x3; val_offset:265917*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265917*0 + 3*319*FLEN/8, x4, x1, x2)

inst_88640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc40000000000003; valaddr_reg:x3; val_offset:265920*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265920*0 + 3*320*FLEN/8, x4, x1, x2)

inst_88641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc40000000000007; valaddr_reg:x3; val_offset:265923*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265923*0 + 3*321*FLEN/8, x4, x1, x2)

inst_88642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4000000000000f; valaddr_reg:x3; val_offset:265926*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265926*0 + 3*322*FLEN/8, x4, x1, x2)

inst_88643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4000000000001f; valaddr_reg:x3; val_offset:265929*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265929*0 + 3*323*FLEN/8, x4, x1, x2)

inst_88644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4000000000003f; valaddr_reg:x3; val_offset:265932*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265932*0 + 3*324*FLEN/8, x4, x1, x2)

inst_88645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4000000000007f; valaddr_reg:x3; val_offset:265935*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265935*0 + 3*325*FLEN/8, x4, x1, x2)

inst_88646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc400000000000ff; valaddr_reg:x3; val_offset:265938*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265938*0 + 3*326*FLEN/8, x4, x1, x2)

inst_88647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc400000000001ff; valaddr_reg:x3; val_offset:265941*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265941*0 + 3*327*FLEN/8, x4, x1, x2)

inst_88648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc400000000003ff; valaddr_reg:x3; val_offset:265944*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265944*0 + 3*328*FLEN/8, x4, x1, x2)

inst_88649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc400000000007ff; valaddr_reg:x3; val_offset:265947*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265947*0 + 3*329*FLEN/8, x4, x1, x2)

inst_88650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc40000000000fff; valaddr_reg:x3; val_offset:265950*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265950*0 + 3*330*FLEN/8, x4, x1, x2)

inst_88651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc40000000001fff; valaddr_reg:x3; val_offset:265953*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265953*0 + 3*331*FLEN/8, x4, x1, x2)

inst_88652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc40000000003fff; valaddr_reg:x3; val_offset:265956*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265956*0 + 3*332*FLEN/8, x4, x1, x2)

inst_88653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc40000000007fff; valaddr_reg:x3; val_offset:265959*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265959*0 + 3*333*FLEN/8, x4, x1, x2)

inst_88654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4000000000ffff; valaddr_reg:x3; val_offset:265962*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265962*0 + 3*334*FLEN/8, x4, x1, x2)

inst_88655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4000000001ffff; valaddr_reg:x3; val_offset:265965*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265965*0 + 3*335*FLEN/8, x4, x1, x2)

inst_88656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4000000003ffff; valaddr_reg:x3; val_offset:265968*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265968*0 + 3*336*FLEN/8, x4, x1, x2)

inst_88657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4000000007ffff; valaddr_reg:x3; val_offset:265971*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265971*0 + 3*337*FLEN/8, x4, x1, x2)

inst_88658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc400000000fffff; valaddr_reg:x3; val_offset:265974*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265974*0 + 3*338*FLEN/8, x4, x1, x2)

inst_88659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc400000001fffff; valaddr_reg:x3; val_offset:265977*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265977*0 + 3*339*FLEN/8, x4, x1, x2)

inst_88660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc400000003fffff; valaddr_reg:x3; val_offset:265980*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265980*0 + 3*340*FLEN/8, x4, x1, x2)

inst_88661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc400000007fffff; valaddr_reg:x3; val_offset:265983*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265983*0 + 3*341*FLEN/8, x4, x1, x2)

inst_88662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc40000000ffffff; valaddr_reg:x3; val_offset:265986*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265986*0 + 3*342*FLEN/8, x4, x1, x2)

inst_88663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc40000001ffffff; valaddr_reg:x3; val_offset:265989*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265989*0 + 3*343*FLEN/8, x4, x1, x2)

inst_88664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc40000003ffffff; valaddr_reg:x3; val_offset:265992*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265992*0 + 3*344*FLEN/8, x4, x1, x2)

inst_88665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc40000007ffffff; valaddr_reg:x3; val_offset:265995*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265995*0 + 3*345*FLEN/8, x4, x1, x2)

inst_88666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4000000fffffff; valaddr_reg:x3; val_offset:265998*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 265998*0 + 3*346*FLEN/8, x4, x1, x2)

inst_88667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4000001fffffff; valaddr_reg:x3; val_offset:266001*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266001*0 + 3*347*FLEN/8, x4, x1, x2)

inst_88668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4000003fffffff; valaddr_reg:x3; val_offset:266004*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266004*0 + 3*348*FLEN/8, x4, x1, x2)

inst_88669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4000007fffffff; valaddr_reg:x3; val_offset:266007*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266007*0 + 3*349*FLEN/8, x4, x1, x2)

inst_88670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc400000ffffffff; valaddr_reg:x3; val_offset:266010*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266010*0 + 3*350*FLEN/8, x4, x1, x2)

inst_88671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc400001ffffffff; valaddr_reg:x3; val_offset:266013*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266013*0 + 3*351*FLEN/8, x4, x1, x2)

inst_88672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc400003ffffffff; valaddr_reg:x3; val_offset:266016*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266016*0 + 3*352*FLEN/8, x4, x1, x2)

inst_88673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc400007ffffffff; valaddr_reg:x3; val_offset:266019*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266019*0 + 3*353*FLEN/8, x4, x1, x2)

inst_88674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc40000fffffffff; valaddr_reg:x3; val_offset:266022*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266022*0 + 3*354*FLEN/8, x4, x1, x2)

inst_88675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc40001fffffffff; valaddr_reg:x3; val_offset:266025*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266025*0 + 3*355*FLEN/8, x4, x1, x2)

inst_88676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc40003fffffffff; valaddr_reg:x3; val_offset:266028*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266028*0 + 3*356*FLEN/8, x4, x1, x2)

inst_88677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc40007fffffffff; valaddr_reg:x3; val_offset:266031*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266031*0 + 3*357*FLEN/8, x4, x1, x2)

inst_88678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4000ffffffffff; valaddr_reg:x3; val_offset:266034*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266034*0 + 3*358*FLEN/8, x4, x1, x2)

inst_88679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4001ffffffffff; valaddr_reg:x3; val_offset:266037*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266037*0 + 3*359*FLEN/8, x4, x1, x2)

inst_88680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4003ffffffffff; valaddr_reg:x3; val_offset:266040*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266040*0 + 3*360*FLEN/8, x4, x1, x2)

inst_88681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4007ffffffffff; valaddr_reg:x3; val_offset:266043*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266043*0 + 3*361*FLEN/8, x4, x1, x2)

inst_88682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc400fffffffffff; valaddr_reg:x3; val_offset:266046*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266046*0 + 3*362*FLEN/8, x4, x1, x2)

inst_88683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc401fffffffffff; valaddr_reg:x3; val_offset:266049*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266049*0 + 3*363*FLEN/8, x4, x1, x2)

inst_88684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc403fffffffffff; valaddr_reg:x3; val_offset:266052*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266052*0 + 3*364*FLEN/8, x4, x1, x2)

inst_88685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc407fffffffffff; valaddr_reg:x3; val_offset:266055*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266055*0 + 3*365*FLEN/8, x4, x1, x2)

inst_88686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc40ffffffffffff; valaddr_reg:x3; val_offset:266058*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266058*0 + 3*366*FLEN/8, x4, x1, x2)

inst_88687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc41ffffffffffff; valaddr_reg:x3; val_offset:266061*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266061*0 + 3*367*FLEN/8, x4, x1, x2)

inst_88688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc43ffffffffffff; valaddr_reg:x3; val_offset:266064*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266064*0 + 3*368*FLEN/8, x4, x1, x2)

inst_88689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc47ffffffffffff; valaddr_reg:x3; val_offset:266067*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266067*0 + 3*369*FLEN/8, x4, x1, x2)

inst_88690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc48000000000000; valaddr_reg:x3; val_offset:266070*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266070*0 + 3*370*FLEN/8, x4, x1, x2)

inst_88691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4c000000000000; valaddr_reg:x3; val_offset:266073*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266073*0 + 3*371*FLEN/8, x4, x1, x2)

inst_88692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4e000000000000; valaddr_reg:x3; val_offset:266076*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266076*0 + 3*372*FLEN/8, x4, x1, x2)

inst_88693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4f000000000000; valaddr_reg:x3; val_offset:266079*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266079*0 + 3*373*FLEN/8, x4, x1, x2)

inst_88694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4f800000000000; valaddr_reg:x3; val_offset:266082*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266082*0 + 3*374*FLEN/8, x4, x1, x2)

inst_88695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4fc00000000000; valaddr_reg:x3; val_offset:266085*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266085*0 + 3*375*FLEN/8, x4, x1, x2)

inst_88696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4fe00000000000; valaddr_reg:x3; val_offset:266088*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266088*0 + 3*376*FLEN/8, x4, x1, x2)

inst_88697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4ff00000000000; valaddr_reg:x3; val_offset:266091*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266091*0 + 3*377*FLEN/8, x4, x1, x2)

inst_88698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4ff80000000000; valaddr_reg:x3; val_offset:266094*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266094*0 + 3*378*FLEN/8, x4, x1, x2)

inst_88699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4ffc0000000000; valaddr_reg:x3; val_offset:266097*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266097*0 + 3*379*FLEN/8, x4, x1, x2)

inst_88700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4ffe0000000000; valaddr_reg:x3; val_offset:266100*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266100*0 + 3*380*FLEN/8, x4, x1, x2)

inst_88701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4fff0000000000; valaddr_reg:x3; val_offset:266103*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266103*0 + 3*381*FLEN/8, x4, x1, x2)

inst_88702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4fff8000000000; valaddr_reg:x3; val_offset:266106*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266106*0 + 3*382*FLEN/8, x4, x1, x2)

inst_88703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4fffc000000000; valaddr_reg:x3; val_offset:266109*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266109*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_88704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4fffe000000000; valaddr_reg:x3; val_offset:266112*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266112*0 + 3*384*FLEN/8, x4, x1, x2)

inst_88705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4ffff000000000; valaddr_reg:x3; val_offset:266115*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266115*0 + 3*385*FLEN/8, x4, x1, x2)

inst_88706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4ffff800000000; valaddr_reg:x3; val_offset:266118*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266118*0 + 3*386*FLEN/8, x4, x1, x2)

inst_88707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4ffffc00000000; valaddr_reg:x3; val_offset:266121*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266121*0 + 3*387*FLEN/8, x4, x1, x2)

inst_88708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4ffffe00000000; valaddr_reg:x3; val_offset:266124*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266124*0 + 3*388*FLEN/8, x4, x1, x2)

inst_88709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4fffff00000000; valaddr_reg:x3; val_offset:266127*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266127*0 + 3*389*FLEN/8, x4, x1, x2)

inst_88710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4fffff80000000; valaddr_reg:x3; val_offset:266130*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266130*0 + 3*390*FLEN/8, x4, x1, x2)

inst_88711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4fffffc0000000; valaddr_reg:x3; val_offset:266133*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266133*0 + 3*391*FLEN/8, x4, x1, x2)

inst_88712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4fffffe0000000; valaddr_reg:x3; val_offset:266136*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266136*0 + 3*392*FLEN/8, x4, x1, x2)

inst_88713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4ffffff0000000; valaddr_reg:x3; val_offset:266139*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266139*0 + 3*393*FLEN/8, x4, x1, x2)

inst_88714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4ffffff8000000; valaddr_reg:x3; val_offset:266142*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266142*0 + 3*394*FLEN/8, x4, x1, x2)

inst_88715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4ffffffc000000; valaddr_reg:x3; val_offset:266145*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266145*0 + 3*395*FLEN/8, x4, x1, x2)

inst_88716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4ffffffe000000; valaddr_reg:x3; val_offset:266148*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266148*0 + 3*396*FLEN/8, x4, x1, x2)

inst_88717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4fffffff000000; valaddr_reg:x3; val_offset:266151*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266151*0 + 3*397*FLEN/8, x4, x1, x2)

inst_88718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4fffffff800000; valaddr_reg:x3; val_offset:266154*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266154*0 + 3*398*FLEN/8, x4, x1, x2)

inst_88719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4fffffffc00000; valaddr_reg:x3; val_offset:266157*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266157*0 + 3*399*FLEN/8, x4, x1, x2)

inst_88720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4fffffffe00000; valaddr_reg:x3; val_offset:266160*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266160*0 + 3*400*FLEN/8, x4, x1, x2)

inst_88721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4ffffffff00000; valaddr_reg:x3; val_offset:266163*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266163*0 + 3*401*FLEN/8, x4, x1, x2)

inst_88722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4ffffffff80000; valaddr_reg:x3; val_offset:266166*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266166*0 + 3*402*FLEN/8, x4, x1, x2)

inst_88723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4ffffffffc0000; valaddr_reg:x3; val_offset:266169*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266169*0 + 3*403*FLEN/8, x4, x1, x2)

inst_88724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4ffffffffe0000; valaddr_reg:x3; val_offset:266172*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266172*0 + 3*404*FLEN/8, x4, x1, x2)

inst_88725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4fffffffff0000; valaddr_reg:x3; val_offset:266175*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266175*0 + 3*405*FLEN/8, x4, x1, x2)

inst_88726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4fffffffff8000; valaddr_reg:x3; val_offset:266178*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266178*0 + 3*406*FLEN/8, x4, x1, x2)

inst_88727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4fffffffffc000; valaddr_reg:x3; val_offset:266181*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266181*0 + 3*407*FLEN/8, x4, x1, x2)

inst_88728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4fffffffffe000; valaddr_reg:x3; val_offset:266184*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266184*0 + 3*408*FLEN/8, x4, x1, x2)

inst_88729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4ffffffffff000; valaddr_reg:x3; val_offset:266187*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266187*0 + 3*409*FLEN/8, x4, x1, x2)

inst_88730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4ffffffffff800; valaddr_reg:x3; val_offset:266190*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266190*0 + 3*410*FLEN/8, x4, x1, x2)

inst_88731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4ffffffffffc00; valaddr_reg:x3; val_offset:266193*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266193*0 + 3*411*FLEN/8, x4, x1, x2)

inst_88732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4ffffffffffe00; valaddr_reg:x3; val_offset:266196*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266196*0 + 3*412*FLEN/8, x4, x1, x2)

inst_88733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4fffffffffff00; valaddr_reg:x3; val_offset:266199*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266199*0 + 3*413*FLEN/8, x4, x1, x2)

inst_88734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4fffffffffff80; valaddr_reg:x3; val_offset:266202*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266202*0 + 3*414*FLEN/8, x4, x1, x2)

inst_88735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4fffffffffffc0; valaddr_reg:x3; val_offset:266205*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266205*0 + 3*415*FLEN/8, x4, x1, x2)

inst_88736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4fffffffffffe0; valaddr_reg:x3; val_offset:266208*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266208*0 + 3*416*FLEN/8, x4, x1, x2)

inst_88737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4ffffffffffff0; valaddr_reg:x3; val_offset:266211*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266211*0 + 3*417*FLEN/8, x4, x1, x2)

inst_88738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4ffffffffffff8; valaddr_reg:x3; val_offset:266214*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266214*0 + 3*418*FLEN/8, x4, x1, x2)

inst_88739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4ffffffffffffc; valaddr_reg:x3; val_offset:266217*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266217*0 + 3*419*FLEN/8, x4, x1, x2)

inst_88740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4ffffffffffffe; valaddr_reg:x3; val_offset:266220*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266220*0 + 3*420*FLEN/8, x4, x1, x2)

inst_88741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3c4 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbc4fffffffffffff; valaddr_reg:x3; val_offset:266223*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266223*0 + 3*421*FLEN/8, x4, x1, x2)

inst_88742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:266226*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266226*0 + 3*422*FLEN/8, x4, x1, x2)

inst_88743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:266229*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266229*0 + 3*423*FLEN/8, x4, x1, x2)

inst_88744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:266232*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266232*0 + 3*424*FLEN/8, x4, x1, x2)

inst_88745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:266235*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266235*0 + 3*425*FLEN/8, x4, x1, x2)

inst_88746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:266238*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266238*0 + 3*426*FLEN/8, x4, x1, x2)

inst_88747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:266241*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266241*0 + 3*427*FLEN/8, x4, x1, x2)

inst_88748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:266244*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266244*0 + 3*428*FLEN/8, x4, x1, x2)

inst_88749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:266247*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266247*0 + 3*429*FLEN/8, x4, x1, x2)

inst_88750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:266250*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266250*0 + 3*430*FLEN/8, x4, x1, x2)

inst_88751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:266253*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266253*0 + 3*431*FLEN/8, x4, x1, x2)

inst_88752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:266256*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266256*0 + 3*432*FLEN/8, x4, x1, x2)

inst_88753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:266259*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266259*0 + 3*433*FLEN/8, x4, x1, x2)

inst_88754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:266262*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266262*0 + 3*434*FLEN/8, x4, x1, x2)

inst_88755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:266265*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266265*0 + 3*435*FLEN/8, x4, x1, x2)

inst_88756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:266268*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266268*0 + 3*436*FLEN/8, x4, x1, x2)

inst_88757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:266271*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266271*0 + 3*437*FLEN/8, x4, x1, x2)

inst_88758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:266274*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266274*0 + 3*438*FLEN/8, x4, x1, x2)

inst_88759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:266277*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266277*0 + 3*439*FLEN/8, x4, x1, x2)

inst_88760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:266280*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266280*0 + 3*440*FLEN/8, x4, x1, x2)

inst_88761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:266283*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266283*0 + 3*441*FLEN/8, x4, x1, x2)

inst_88762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:266286*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266286*0 + 3*442*FLEN/8, x4, x1, x2)

inst_88763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x23af936369887 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac15c34215bcf5; op2val:0x9fc23af936369887;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:266289*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266289*0 + 3*443*FLEN/8, x4, x1, x2)

inst_88764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:266292*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266292*0 + 3*444*FLEN/8, x4, x1, x2)

inst_88765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:266295*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266295*0 + 3*445*FLEN/8, x4, x1, x2)

inst_88766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:266298*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266298*0 + 3*446*FLEN/8, x4, x1, x2)

inst_88767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:266301*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266301*0 + 3*447*FLEN/8, x4, x1, x2)

inst_88768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:266304*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266304*0 + 3*448*FLEN/8, x4, x1, x2)

inst_88769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:266307*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266307*0 + 3*449*FLEN/8, x4, x1, x2)

inst_88770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:266310*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266310*0 + 3*450*FLEN/8, x4, x1, x2)

inst_88771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:266313*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266313*0 + 3*451*FLEN/8, x4, x1, x2)

inst_88772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:266316*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266316*0 + 3*452*FLEN/8, x4, x1, x2)

inst_88773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:266319*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266319*0 + 3*453*FLEN/8, x4, x1, x2)

inst_88774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:266322*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266322*0 + 3*454*FLEN/8, x4, x1, x2)

inst_88775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:266325*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266325*0 + 3*455*FLEN/8, x4, x1, x2)

inst_88776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:266328*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266328*0 + 3*456*FLEN/8, x4, x1, x2)

inst_88777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:266331*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266331*0 + 3*457*FLEN/8, x4, x1, x2)

inst_88778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:266334*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266334*0 + 3*458*FLEN/8, x4, x1, x2)

inst_88779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:266337*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266337*0 + 3*459*FLEN/8, x4, x1, x2)

inst_88780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:266340*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266340*0 + 3*460*FLEN/8, x4, x1, x2)

inst_88781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:266343*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266343*0 + 3*461*FLEN/8, x4, x1, x2)

inst_88782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:266346*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266346*0 + 3*462*FLEN/8, x4, x1, x2)

inst_88783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:266349*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266349*0 + 3*463*FLEN/8, x4, x1, x2)

inst_88784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:266352*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266352*0 + 3*464*FLEN/8, x4, x1, x2)

inst_88785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:266355*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266355*0 + 3*465*FLEN/8, x4, x1, x2)

inst_88786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1e0000000000000; valaddr_reg:x3; val_offset:266358*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266358*0 + 3*466*FLEN/8, x4, x1, x2)

inst_88787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1e0000000000001; valaddr_reg:x3; val_offset:266361*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266361*0 + 3*467*FLEN/8, x4, x1, x2)

inst_88788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1e0000000000003; valaddr_reg:x3; val_offset:266364*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266364*0 + 3*468*FLEN/8, x4, x1, x2)

inst_88789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1e0000000000007; valaddr_reg:x3; val_offset:266367*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266367*0 + 3*469*FLEN/8, x4, x1, x2)

inst_88790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1e000000000000f; valaddr_reg:x3; val_offset:266370*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266370*0 + 3*470*FLEN/8, x4, x1, x2)

inst_88791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1e000000000001f; valaddr_reg:x3; val_offset:266373*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266373*0 + 3*471*FLEN/8, x4, x1, x2)

inst_88792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1e000000000003f; valaddr_reg:x3; val_offset:266376*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266376*0 + 3*472*FLEN/8, x4, x1, x2)

inst_88793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1e000000000007f; valaddr_reg:x3; val_offset:266379*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266379*0 + 3*473*FLEN/8, x4, x1, x2)

inst_88794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1e00000000000ff; valaddr_reg:x3; val_offset:266382*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266382*0 + 3*474*FLEN/8, x4, x1, x2)

inst_88795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1e00000000001ff; valaddr_reg:x3; val_offset:266385*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266385*0 + 3*475*FLEN/8, x4, x1, x2)

inst_88796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1e00000000003ff; valaddr_reg:x3; val_offset:266388*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266388*0 + 3*476*FLEN/8, x4, x1, x2)

inst_88797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1e00000000007ff; valaddr_reg:x3; val_offset:266391*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266391*0 + 3*477*FLEN/8, x4, x1, x2)

inst_88798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1e0000000000fff; valaddr_reg:x3; val_offset:266394*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266394*0 + 3*478*FLEN/8, x4, x1, x2)

inst_88799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1e0000000001fff; valaddr_reg:x3; val_offset:266397*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266397*0 + 3*479*FLEN/8, x4, x1, x2)

inst_88800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1e0000000003fff; valaddr_reg:x3; val_offset:266400*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266400*0 + 3*480*FLEN/8, x4, x1, x2)

inst_88801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1e0000000007fff; valaddr_reg:x3; val_offset:266403*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266403*0 + 3*481*FLEN/8, x4, x1, x2)

inst_88802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1e000000000ffff; valaddr_reg:x3; val_offset:266406*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266406*0 + 3*482*FLEN/8, x4, x1, x2)

inst_88803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1e000000001ffff; valaddr_reg:x3; val_offset:266409*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266409*0 + 3*483*FLEN/8, x4, x1, x2)

inst_88804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1e000000003ffff; valaddr_reg:x3; val_offset:266412*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266412*0 + 3*484*FLEN/8, x4, x1, x2)

inst_88805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1e000000007ffff; valaddr_reg:x3; val_offset:266415*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266415*0 + 3*485*FLEN/8, x4, x1, x2)

inst_88806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1e00000000fffff; valaddr_reg:x3; val_offset:266418*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266418*0 + 3*486*FLEN/8, x4, x1, x2)

inst_88807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1e00000001fffff; valaddr_reg:x3; val_offset:266421*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266421*0 + 3*487*FLEN/8, x4, x1, x2)

inst_88808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1e00000003fffff; valaddr_reg:x3; val_offset:266424*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266424*0 + 3*488*FLEN/8, x4, x1, x2)

inst_88809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1e00000007fffff; valaddr_reg:x3; val_offset:266427*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266427*0 + 3*489*FLEN/8, x4, x1, x2)

inst_88810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1e0000000ffffff; valaddr_reg:x3; val_offset:266430*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266430*0 + 3*490*FLEN/8, x4, x1, x2)

inst_88811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1e0000001ffffff; valaddr_reg:x3; val_offset:266433*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266433*0 + 3*491*FLEN/8, x4, x1, x2)

inst_88812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1e0000003ffffff; valaddr_reg:x3; val_offset:266436*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266436*0 + 3*492*FLEN/8, x4, x1, x2)

inst_88813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1e0000007ffffff; valaddr_reg:x3; val_offset:266439*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266439*0 + 3*493*FLEN/8, x4, x1, x2)

inst_88814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1e000000fffffff; valaddr_reg:x3; val_offset:266442*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266442*0 + 3*494*FLEN/8, x4, x1, x2)

inst_88815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1e000001fffffff; valaddr_reg:x3; val_offset:266445*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266445*0 + 3*495*FLEN/8, x4, x1, x2)

inst_88816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1e000003fffffff; valaddr_reg:x3; val_offset:266448*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266448*0 + 3*496*FLEN/8, x4, x1, x2)

inst_88817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1e000007fffffff; valaddr_reg:x3; val_offset:266451*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266451*0 + 3*497*FLEN/8, x4, x1, x2)

inst_88818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1e00000ffffffff; valaddr_reg:x3; val_offset:266454*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266454*0 + 3*498*FLEN/8, x4, x1, x2)

inst_88819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1e00001ffffffff; valaddr_reg:x3; val_offset:266457*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266457*0 + 3*499*FLEN/8, x4, x1, x2)

inst_88820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1e00003ffffffff; valaddr_reg:x3; val_offset:266460*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266460*0 + 3*500*FLEN/8, x4, x1, x2)

inst_88821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1e00007ffffffff; valaddr_reg:x3; val_offset:266463*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266463*0 + 3*501*FLEN/8, x4, x1, x2)

inst_88822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1e0000fffffffff; valaddr_reg:x3; val_offset:266466*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266466*0 + 3*502*FLEN/8, x4, x1, x2)

inst_88823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1e0001fffffffff; valaddr_reg:x3; val_offset:266469*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266469*0 + 3*503*FLEN/8, x4, x1, x2)

inst_88824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1e0003fffffffff; valaddr_reg:x3; val_offset:266472*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266472*0 + 3*504*FLEN/8, x4, x1, x2)

inst_88825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1e0007fffffffff; valaddr_reg:x3; val_offset:266475*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266475*0 + 3*505*FLEN/8, x4, x1, x2)

inst_88826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1e000ffffffffff; valaddr_reg:x3; val_offset:266478*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266478*0 + 3*506*FLEN/8, x4, x1, x2)

inst_88827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1e001ffffffffff; valaddr_reg:x3; val_offset:266481*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266481*0 + 3*507*FLEN/8, x4, x1, x2)

inst_88828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1e003ffffffffff; valaddr_reg:x3; val_offset:266484*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266484*0 + 3*508*FLEN/8, x4, x1, x2)

inst_88829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1e007ffffffffff; valaddr_reg:x3; val_offset:266487*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266487*0 + 3*509*FLEN/8, x4, x1, x2)

inst_88830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1e00fffffffffff; valaddr_reg:x3; val_offset:266490*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266490*0 + 3*510*FLEN/8, x4, x1, x2)

inst_88831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1e01fffffffffff; valaddr_reg:x3; val_offset:266493*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266493*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_88832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1e03fffffffffff; valaddr_reg:x3; val_offset:266496*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266496*0 + 3*512*FLEN/8, x4, x1, x2)

inst_88833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1e07fffffffffff; valaddr_reg:x3; val_offset:266499*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266499*0 + 3*513*FLEN/8, x4, x1, x2)

inst_88834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1e0ffffffffffff; valaddr_reg:x3; val_offset:266502*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266502*0 + 3*514*FLEN/8, x4, x1, x2)

inst_88835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1e1ffffffffffff; valaddr_reg:x3; val_offset:266505*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266505*0 + 3*515*FLEN/8, x4, x1, x2)

inst_88836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1e3ffffffffffff; valaddr_reg:x3; val_offset:266508*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266508*0 + 3*516*FLEN/8, x4, x1, x2)

inst_88837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1e7ffffffffffff; valaddr_reg:x3; val_offset:266511*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266511*0 + 3*517*FLEN/8, x4, x1, x2)

inst_88838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1e8000000000000; valaddr_reg:x3; val_offset:266514*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266514*0 + 3*518*FLEN/8, x4, x1, x2)

inst_88839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1ec000000000000; valaddr_reg:x3; val_offset:266517*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266517*0 + 3*519*FLEN/8, x4, x1, x2)

inst_88840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1ee000000000000; valaddr_reg:x3; val_offset:266520*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266520*0 + 3*520*FLEN/8, x4, x1, x2)

inst_88841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1ef000000000000; valaddr_reg:x3; val_offset:266523*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266523*0 + 3*521*FLEN/8, x4, x1, x2)

inst_88842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1ef800000000000; valaddr_reg:x3; val_offset:266526*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266526*0 + 3*522*FLEN/8, x4, x1, x2)

inst_88843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1efc00000000000; valaddr_reg:x3; val_offset:266529*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266529*0 + 3*523*FLEN/8, x4, x1, x2)

inst_88844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1efe00000000000; valaddr_reg:x3; val_offset:266532*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266532*0 + 3*524*FLEN/8, x4, x1, x2)

inst_88845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1eff00000000000; valaddr_reg:x3; val_offset:266535*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266535*0 + 3*525*FLEN/8, x4, x1, x2)

inst_88846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1eff80000000000; valaddr_reg:x3; val_offset:266538*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266538*0 + 3*526*FLEN/8, x4, x1, x2)

inst_88847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1effc0000000000; valaddr_reg:x3; val_offset:266541*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266541*0 + 3*527*FLEN/8, x4, x1, x2)

inst_88848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1effe0000000000; valaddr_reg:x3; val_offset:266544*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266544*0 + 3*528*FLEN/8, x4, x1, x2)

inst_88849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1efff0000000000; valaddr_reg:x3; val_offset:266547*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266547*0 + 3*529*FLEN/8, x4, x1, x2)

inst_88850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1efff8000000000; valaddr_reg:x3; val_offset:266550*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266550*0 + 3*530*FLEN/8, x4, x1, x2)

inst_88851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1efffc000000000; valaddr_reg:x3; val_offset:266553*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266553*0 + 3*531*FLEN/8, x4, x1, x2)

inst_88852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1efffe000000000; valaddr_reg:x3; val_offset:266556*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266556*0 + 3*532*FLEN/8, x4, x1, x2)

inst_88853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1effff000000000; valaddr_reg:x3; val_offset:266559*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266559*0 + 3*533*FLEN/8, x4, x1, x2)

inst_88854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1effff800000000; valaddr_reg:x3; val_offset:266562*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266562*0 + 3*534*FLEN/8, x4, x1, x2)

inst_88855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1effffc00000000; valaddr_reg:x3; val_offset:266565*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266565*0 + 3*535*FLEN/8, x4, x1, x2)

inst_88856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1effffe00000000; valaddr_reg:x3; val_offset:266568*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266568*0 + 3*536*FLEN/8, x4, x1, x2)

inst_88857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1efffff00000000; valaddr_reg:x3; val_offset:266571*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266571*0 + 3*537*FLEN/8, x4, x1, x2)

inst_88858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1efffff80000000; valaddr_reg:x3; val_offset:266574*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266574*0 + 3*538*FLEN/8, x4, x1, x2)

inst_88859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1efffffc0000000; valaddr_reg:x3; val_offset:266577*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266577*0 + 3*539*FLEN/8, x4, x1, x2)

inst_88860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1efffffe0000000; valaddr_reg:x3; val_offset:266580*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266580*0 + 3*540*FLEN/8, x4, x1, x2)

inst_88861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1effffff0000000; valaddr_reg:x3; val_offset:266583*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266583*0 + 3*541*FLEN/8, x4, x1, x2)

inst_88862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1effffff8000000; valaddr_reg:x3; val_offset:266586*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266586*0 + 3*542*FLEN/8, x4, x1, x2)

inst_88863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1effffffc000000; valaddr_reg:x3; val_offset:266589*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266589*0 + 3*543*FLEN/8, x4, x1, x2)

inst_88864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1effffffe000000; valaddr_reg:x3; val_offset:266592*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266592*0 + 3*544*FLEN/8, x4, x1, x2)

inst_88865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1efffffff000000; valaddr_reg:x3; val_offset:266595*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266595*0 + 3*545*FLEN/8, x4, x1, x2)

inst_88866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1efffffff800000; valaddr_reg:x3; val_offset:266598*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266598*0 + 3*546*FLEN/8, x4, x1, x2)

inst_88867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1efffffffc00000; valaddr_reg:x3; val_offset:266601*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266601*0 + 3*547*FLEN/8, x4, x1, x2)

inst_88868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1efffffffe00000; valaddr_reg:x3; val_offset:266604*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266604*0 + 3*548*FLEN/8, x4, x1, x2)

inst_88869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1effffffff00000; valaddr_reg:x3; val_offset:266607*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266607*0 + 3*549*FLEN/8, x4, x1, x2)

inst_88870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1effffffff80000; valaddr_reg:x3; val_offset:266610*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266610*0 + 3*550*FLEN/8, x4, x1, x2)

inst_88871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1effffffffc0000; valaddr_reg:x3; val_offset:266613*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266613*0 + 3*551*FLEN/8, x4, x1, x2)

inst_88872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1effffffffe0000; valaddr_reg:x3; val_offset:266616*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266616*0 + 3*552*FLEN/8, x4, x1, x2)

inst_88873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1efffffffff0000; valaddr_reg:x3; val_offset:266619*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266619*0 + 3*553*FLEN/8, x4, x1, x2)

inst_88874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1efffffffff8000; valaddr_reg:x3; val_offset:266622*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266622*0 + 3*554*FLEN/8, x4, x1, x2)

inst_88875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1efffffffffc000; valaddr_reg:x3; val_offset:266625*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266625*0 + 3*555*FLEN/8, x4, x1, x2)

inst_88876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1efffffffffe000; valaddr_reg:x3; val_offset:266628*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266628*0 + 3*556*FLEN/8, x4, x1, x2)

inst_88877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1effffffffff000; valaddr_reg:x3; val_offset:266631*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266631*0 + 3*557*FLEN/8, x4, x1, x2)

inst_88878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1effffffffff800; valaddr_reg:x3; val_offset:266634*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266634*0 + 3*558*FLEN/8, x4, x1, x2)

inst_88879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1effffffffffc00; valaddr_reg:x3; val_offset:266637*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266637*0 + 3*559*FLEN/8, x4, x1, x2)

inst_88880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1effffffffffe00; valaddr_reg:x3; val_offset:266640*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266640*0 + 3*560*FLEN/8, x4, x1, x2)

inst_88881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1efffffffffff00; valaddr_reg:x3; val_offset:266643*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266643*0 + 3*561*FLEN/8, x4, x1, x2)

inst_88882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1efffffffffff80; valaddr_reg:x3; val_offset:266646*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266646*0 + 3*562*FLEN/8, x4, x1, x2)

inst_88883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1efffffffffffc0; valaddr_reg:x3; val_offset:266649*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266649*0 + 3*563*FLEN/8, x4, x1, x2)

inst_88884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1efffffffffffe0; valaddr_reg:x3; val_offset:266652*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266652*0 + 3*564*FLEN/8, x4, x1, x2)

inst_88885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1effffffffffff0; valaddr_reg:x3; val_offset:266655*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266655*0 + 3*565*FLEN/8, x4, x1, x2)

inst_88886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1effffffffffff8; valaddr_reg:x3; val_offset:266658*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266658*0 + 3*566*FLEN/8, x4, x1, x2)

inst_88887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1effffffffffffc; valaddr_reg:x3; val_offset:266661*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266661*0 + 3*567*FLEN/8, x4, x1, x2)

inst_88888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1effffffffffffe; valaddr_reg:x3; val_offset:266664*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266664*0 + 3*568*FLEN/8, x4, x1, x2)

inst_88889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4123e9698b76 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac4123e9698b76; op2val:0x0;
op3val:0x1efffffffffffff; valaddr_reg:x3; val_offset:266667*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266667*0 + 3*569*FLEN/8, x4, x1, x2)

inst_88890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c00000000000000; valaddr_reg:x3; val_offset:266670*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266670*0 + 3*570*FLEN/8, x4, x1, x2)

inst_88891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c00000000000001; valaddr_reg:x3; val_offset:266673*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266673*0 + 3*571*FLEN/8, x4, x1, x2)

inst_88892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c00000000000003; valaddr_reg:x3; val_offset:266676*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266676*0 + 3*572*FLEN/8, x4, x1, x2)

inst_88893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c00000000000007; valaddr_reg:x3; val_offset:266679*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266679*0 + 3*573*FLEN/8, x4, x1, x2)

inst_88894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0000000000000f; valaddr_reg:x3; val_offset:266682*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266682*0 + 3*574*FLEN/8, x4, x1, x2)

inst_88895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0000000000001f; valaddr_reg:x3; val_offset:266685*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266685*0 + 3*575*FLEN/8, x4, x1, x2)

inst_88896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0000000000003f; valaddr_reg:x3; val_offset:266688*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266688*0 + 3*576*FLEN/8, x4, x1, x2)

inst_88897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0000000000007f; valaddr_reg:x3; val_offset:266691*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266691*0 + 3*577*FLEN/8, x4, x1, x2)

inst_88898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c000000000000ff; valaddr_reg:x3; val_offset:266694*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266694*0 + 3*578*FLEN/8, x4, x1, x2)

inst_88899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c000000000001ff; valaddr_reg:x3; val_offset:266697*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266697*0 + 3*579*FLEN/8, x4, x1, x2)

inst_88900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c000000000003ff; valaddr_reg:x3; val_offset:266700*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266700*0 + 3*580*FLEN/8, x4, x1, x2)

inst_88901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c000000000007ff; valaddr_reg:x3; val_offset:266703*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266703*0 + 3*581*FLEN/8, x4, x1, x2)

inst_88902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c00000000000fff; valaddr_reg:x3; val_offset:266706*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266706*0 + 3*582*FLEN/8, x4, x1, x2)

inst_88903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c00000000001fff; valaddr_reg:x3; val_offset:266709*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266709*0 + 3*583*FLEN/8, x4, x1, x2)

inst_88904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c00000000003fff; valaddr_reg:x3; val_offset:266712*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266712*0 + 3*584*FLEN/8, x4, x1, x2)

inst_88905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c00000000007fff; valaddr_reg:x3; val_offset:266715*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266715*0 + 3*585*FLEN/8, x4, x1, x2)

inst_88906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0000000000ffff; valaddr_reg:x3; val_offset:266718*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266718*0 + 3*586*FLEN/8, x4, x1, x2)

inst_88907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0000000001ffff; valaddr_reg:x3; val_offset:266721*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266721*0 + 3*587*FLEN/8, x4, x1, x2)

inst_88908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0000000003ffff; valaddr_reg:x3; val_offset:266724*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266724*0 + 3*588*FLEN/8, x4, x1, x2)

inst_88909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0000000007ffff; valaddr_reg:x3; val_offset:266727*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266727*0 + 3*589*FLEN/8, x4, x1, x2)

inst_88910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c000000000fffff; valaddr_reg:x3; val_offset:266730*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266730*0 + 3*590*FLEN/8, x4, x1, x2)

inst_88911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c000000001fffff; valaddr_reg:x3; val_offset:266733*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266733*0 + 3*591*FLEN/8, x4, x1, x2)

inst_88912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c000000003fffff; valaddr_reg:x3; val_offset:266736*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266736*0 + 3*592*FLEN/8, x4, x1, x2)

inst_88913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c000000007fffff; valaddr_reg:x3; val_offset:266739*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266739*0 + 3*593*FLEN/8, x4, x1, x2)

inst_88914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c00000000ffffff; valaddr_reg:x3; val_offset:266742*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266742*0 + 3*594*FLEN/8, x4, x1, x2)

inst_88915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c00000001ffffff; valaddr_reg:x3; val_offset:266745*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266745*0 + 3*595*FLEN/8, x4, x1, x2)

inst_88916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c00000003ffffff; valaddr_reg:x3; val_offset:266748*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266748*0 + 3*596*FLEN/8, x4, x1, x2)

inst_88917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c00000007ffffff; valaddr_reg:x3; val_offset:266751*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266751*0 + 3*597*FLEN/8, x4, x1, x2)

inst_88918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0000000fffffff; valaddr_reg:x3; val_offset:266754*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266754*0 + 3*598*FLEN/8, x4, x1, x2)

inst_88919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0000001fffffff; valaddr_reg:x3; val_offset:266757*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266757*0 + 3*599*FLEN/8, x4, x1, x2)

inst_88920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0000003fffffff; valaddr_reg:x3; val_offset:266760*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266760*0 + 3*600*FLEN/8, x4, x1, x2)

inst_88921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0000007fffffff; valaddr_reg:x3; val_offset:266763*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266763*0 + 3*601*FLEN/8, x4, x1, x2)

inst_88922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c000000ffffffff; valaddr_reg:x3; val_offset:266766*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266766*0 + 3*602*FLEN/8, x4, x1, x2)

inst_88923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c000001ffffffff; valaddr_reg:x3; val_offset:266769*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266769*0 + 3*603*FLEN/8, x4, x1, x2)

inst_88924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c000003ffffffff; valaddr_reg:x3; val_offset:266772*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266772*0 + 3*604*FLEN/8, x4, x1, x2)

inst_88925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c000007ffffffff; valaddr_reg:x3; val_offset:266775*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266775*0 + 3*605*FLEN/8, x4, x1, x2)

inst_88926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c00000fffffffff; valaddr_reg:x3; val_offset:266778*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266778*0 + 3*606*FLEN/8, x4, x1, x2)

inst_88927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c00001fffffffff; valaddr_reg:x3; val_offset:266781*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266781*0 + 3*607*FLEN/8, x4, x1, x2)

inst_88928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c00003fffffffff; valaddr_reg:x3; val_offset:266784*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266784*0 + 3*608*FLEN/8, x4, x1, x2)

inst_88929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c00007fffffffff; valaddr_reg:x3; val_offset:266787*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266787*0 + 3*609*FLEN/8, x4, x1, x2)

inst_88930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0000ffffffffff; valaddr_reg:x3; val_offset:266790*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266790*0 + 3*610*FLEN/8, x4, x1, x2)

inst_88931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0001ffffffffff; valaddr_reg:x3; val_offset:266793*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266793*0 + 3*611*FLEN/8, x4, x1, x2)

inst_88932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0003ffffffffff; valaddr_reg:x3; val_offset:266796*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266796*0 + 3*612*FLEN/8, x4, x1, x2)

inst_88933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0007ffffffffff; valaddr_reg:x3; val_offset:266799*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266799*0 + 3*613*FLEN/8, x4, x1, x2)

inst_88934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c000fffffffffff; valaddr_reg:x3; val_offset:266802*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266802*0 + 3*614*FLEN/8, x4, x1, x2)

inst_88935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c001fffffffffff; valaddr_reg:x3; val_offset:266805*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266805*0 + 3*615*FLEN/8, x4, x1, x2)

inst_88936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c003fffffffffff; valaddr_reg:x3; val_offset:266808*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266808*0 + 3*616*FLEN/8, x4, x1, x2)

inst_88937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c007fffffffffff; valaddr_reg:x3; val_offset:266811*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266811*0 + 3*617*FLEN/8, x4, x1, x2)

inst_88938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c00ffffffffffff; valaddr_reg:x3; val_offset:266814*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266814*0 + 3*618*FLEN/8, x4, x1, x2)

inst_88939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c01ffffffffffff; valaddr_reg:x3; val_offset:266817*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266817*0 + 3*619*FLEN/8, x4, x1, x2)

inst_88940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c03ffffffffffff; valaddr_reg:x3; val_offset:266820*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266820*0 + 3*620*FLEN/8, x4, x1, x2)

inst_88941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c07ffffffffffff; valaddr_reg:x3; val_offset:266823*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266823*0 + 3*621*FLEN/8, x4, x1, x2)

inst_88942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c08000000000000; valaddr_reg:x3; val_offset:266826*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266826*0 + 3*622*FLEN/8, x4, x1, x2)

inst_88943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0c000000000000; valaddr_reg:x3; val_offset:266829*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266829*0 + 3*623*FLEN/8, x4, x1, x2)

inst_88944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0e000000000000; valaddr_reg:x3; val_offset:266832*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266832*0 + 3*624*FLEN/8, x4, x1, x2)

inst_88945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0f000000000000; valaddr_reg:x3; val_offset:266835*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266835*0 + 3*625*FLEN/8, x4, x1, x2)

inst_88946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0f800000000000; valaddr_reg:x3; val_offset:266838*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266838*0 + 3*626*FLEN/8, x4, x1, x2)

inst_88947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0fc00000000000; valaddr_reg:x3; val_offset:266841*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266841*0 + 3*627*FLEN/8, x4, x1, x2)

inst_88948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0fe00000000000; valaddr_reg:x3; val_offset:266844*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266844*0 + 3*628*FLEN/8, x4, x1, x2)

inst_88949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0ff00000000000; valaddr_reg:x3; val_offset:266847*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266847*0 + 3*629*FLEN/8, x4, x1, x2)

inst_88950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0ff80000000000; valaddr_reg:x3; val_offset:266850*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266850*0 + 3*630*FLEN/8, x4, x1, x2)

inst_88951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0ffc0000000000; valaddr_reg:x3; val_offset:266853*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266853*0 + 3*631*FLEN/8, x4, x1, x2)

inst_88952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0ffe0000000000; valaddr_reg:x3; val_offset:266856*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266856*0 + 3*632*FLEN/8, x4, x1, x2)

inst_88953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0fff0000000000; valaddr_reg:x3; val_offset:266859*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266859*0 + 3*633*FLEN/8, x4, x1, x2)

inst_88954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0fff8000000000; valaddr_reg:x3; val_offset:266862*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266862*0 + 3*634*FLEN/8, x4, x1, x2)

inst_88955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0fffc000000000; valaddr_reg:x3; val_offset:266865*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266865*0 + 3*635*FLEN/8, x4, x1, x2)

inst_88956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0fffe000000000; valaddr_reg:x3; val_offset:266868*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266868*0 + 3*636*FLEN/8, x4, x1, x2)

inst_88957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0ffff000000000; valaddr_reg:x3; val_offset:266871*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266871*0 + 3*637*FLEN/8, x4, x1, x2)

inst_88958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0ffff800000000; valaddr_reg:x3; val_offset:266874*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266874*0 + 3*638*FLEN/8, x4, x1, x2)

inst_88959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0ffffc00000000; valaddr_reg:x3; val_offset:266877*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266877*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_88960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0ffffe00000000; valaddr_reg:x3; val_offset:266880*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266880*0 + 3*640*FLEN/8, x4, x1, x2)

inst_88961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0fffff00000000; valaddr_reg:x3; val_offset:266883*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266883*0 + 3*641*FLEN/8, x4, x1, x2)

inst_88962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0fffff80000000; valaddr_reg:x3; val_offset:266886*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266886*0 + 3*642*FLEN/8, x4, x1, x2)

inst_88963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0fffffc0000000; valaddr_reg:x3; val_offset:266889*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266889*0 + 3*643*FLEN/8, x4, x1, x2)

inst_88964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0fffffe0000000; valaddr_reg:x3; val_offset:266892*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266892*0 + 3*644*FLEN/8, x4, x1, x2)

inst_88965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0ffffff0000000; valaddr_reg:x3; val_offset:266895*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266895*0 + 3*645*FLEN/8, x4, x1, x2)

inst_88966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0ffffff8000000; valaddr_reg:x3; val_offset:266898*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266898*0 + 3*646*FLEN/8, x4, x1, x2)

inst_88967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0ffffffc000000; valaddr_reg:x3; val_offset:266901*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266901*0 + 3*647*FLEN/8, x4, x1, x2)

inst_88968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0ffffffe000000; valaddr_reg:x3; val_offset:266904*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266904*0 + 3*648*FLEN/8, x4, x1, x2)

inst_88969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0fffffff000000; valaddr_reg:x3; val_offset:266907*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266907*0 + 3*649*FLEN/8, x4, x1, x2)

inst_88970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0fffffff800000; valaddr_reg:x3; val_offset:266910*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266910*0 + 3*650*FLEN/8, x4, x1, x2)

inst_88971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0fffffffc00000; valaddr_reg:x3; val_offset:266913*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266913*0 + 3*651*FLEN/8, x4, x1, x2)

inst_88972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0fffffffe00000; valaddr_reg:x3; val_offset:266916*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266916*0 + 3*652*FLEN/8, x4, x1, x2)

inst_88973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0ffffffff00000; valaddr_reg:x3; val_offset:266919*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266919*0 + 3*653*FLEN/8, x4, x1, x2)

inst_88974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0ffffffff80000; valaddr_reg:x3; val_offset:266922*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266922*0 + 3*654*FLEN/8, x4, x1, x2)

inst_88975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0ffffffffc0000; valaddr_reg:x3; val_offset:266925*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266925*0 + 3*655*FLEN/8, x4, x1, x2)

inst_88976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0ffffffffe0000; valaddr_reg:x3; val_offset:266928*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266928*0 + 3*656*FLEN/8, x4, x1, x2)

inst_88977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0fffffffff0000; valaddr_reg:x3; val_offset:266931*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266931*0 + 3*657*FLEN/8, x4, x1, x2)

inst_88978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0fffffffff8000; valaddr_reg:x3; val_offset:266934*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266934*0 + 3*658*FLEN/8, x4, x1, x2)

inst_88979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0fffffffffc000; valaddr_reg:x3; val_offset:266937*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266937*0 + 3*659*FLEN/8, x4, x1, x2)

inst_88980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0fffffffffe000; valaddr_reg:x3; val_offset:266940*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266940*0 + 3*660*FLEN/8, x4, x1, x2)

inst_88981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0ffffffffff000; valaddr_reg:x3; val_offset:266943*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266943*0 + 3*661*FLEN/8, x4, x1, x2)

inst_88982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0ffffffffff800; valaddr_reg:x3; val_offset:266946*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266946*0 + 3*662*FLEN/8, x4, x1, x2)

inst_88983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0ffffffffffc00; valaddr_reg:x3; val_offset:266949*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266949*0 + 3*663*FLEN/8, x4, x1, x2)

inst_88984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0ffffffffffe00; valaddr_reg:x3; val_offset:266952*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266952*0 + 3*664*FLEN/8, x4, x1, x2)

inst_88985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0fffffffffff00; valaddr_reg:x3; val_offset:266955*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266955*0 + 3*665*FLEN/8, x4, x1, x2)

inst_88986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0fffffffffff80; valaddr_reg:x3; val_offset:266958*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266958*0 + 3*666*FLEN/8, x4, x1, x2)

inst_88987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0fffffffffffc0; valaddr_reg:x3; val_offset:266961*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266961*0 + 3*667*FLEN/8, x4, x1, x2)

inst_88988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0fffffffffffe0; valaddr_reg:x3; val_offset:266964*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266964*0 + 3*668*FLEN/8, x4, x1, x2)

inst_88989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0ffffffffffff0; valaddr_reg:x3; val_offset:266967*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266967*0 + 3*669*FLEN/8, x4, x1, x2)

inst_88990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0ffffffffffff8; valaddr_reg:x3; val_offset:266970*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266970*0 + 3*670*FLEN/8, x4, x1, x2)

inst_88991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0ffffffffffffc; valaddr_reg:x3; val_offset:266973*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266973*0 + 3*671*FLEN/8, x4, x1, x2)

inst_88992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0ffffffffffffe; valaddr_reg:x3; val_offset:266976*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266976*0 + 3*672*FLEN/8, x4, x1, x2)

inst_88993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3c0 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3c0fffffffffffff; valaddr_reg:x3; val_offset:266979*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266979*0 + 3*673*FLEN/8, x4, x1, x2)

inst_88994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:266982*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266982*0 + 3*674*FLEN/8, x4, x1, x2)

inst_88995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:266985*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266985*0 + 3*675*FLEN/8, x4, x1, x2)

inst_88996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:266988*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266988*0 + 3*676*FLEN/8, x4, x1, x2)

inst_88997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:266991*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266991*0 + 3*677*FLEN/8, x4, x1, x2)

inst_88998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:266994*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266994*0 + 3*678*FLEN/8, x4, x1, x2)

inst_88999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:266997*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 266997*0 + 3*679*FLEN/8, x4, x1, x2)

inst_89000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:267000*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267000*0 + 3*680*FLEN/8, x4, x1, x2)

inst_89001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:267003*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267003*0 + 3*681*FLEN/8, x4, x1, x2)

inst_89002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:267006*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267006*0 + 3*682*FLEN/8, x4, x1, x2)

inst_89003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:267009*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267009*0 + 3*683*FLEN/8, x4, x1, x2)

inst_89004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:267012*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267012*0 + 3*684*FLEN/8, x4, x1, x2)

inst_89005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:267015*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267015*0 + 3*685*FLEN/8, x4, x1, x2)

inst_89006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:267018*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267018*0 + 3*686*FLEN/8, x4, x1, x2)

inst_89007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:267021*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267021*0 + 3*687*FLEN/8, x4, x1, x2)

inst_89008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:267024*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267024*0 + 3*688*FLEN/8, x4, x1, x2)

inst_89009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:267027*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267027*0 + 3*689*FLEN/8, x4, x1, x2)

inst_89010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:267030*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267030*0 + 3*690*FLEN/8, x4, x1, x2)

inst_89011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:267033*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267033*0 + 3*691*FLEN/8, x4, x1, x2)

inst_89012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:267036*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267036*0 + 3*692*FLEN/8, x4, x1, x2)

inst_89013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:267039*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267039*0 + 3*693*FLEN/8, x4, x1, x2)

inst_89014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:267042*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267042*0 + 3*694*FLEN/8, x4, x1, x2)

inst_89015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc51793df2f5bf and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2148898ae67a6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac51793df2f5bf; op2val:0x2032148898ae67a6;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:267045*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267045*0 + 3*695*FLEN/8, x4, x1, x2)

inst_89016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:267048*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267048*0 + 3*696*FLEN/8, x4, x1, x2)

inst_89017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:267051*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267051*0 + 3*697*FLEN/8, x4, x1, x2)

inst_89018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:267054*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267054*0 + 3*698*FLEN/8, x4, x1, x2)

inst_89019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:267057*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267057*0 + 3*699*FLEN/8, x4, x1, x2)

inst_89020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:267060*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267060*0 + 3*700*FLEN/8, x4, x1, x2)

inst_89021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:267063*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267063*0 + 3*701*FLEN/8, x4, x1, x2)

inst_89022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:267066*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267066*0 + 3*702*FLEN/8, x4, x1, x2)

inst_89023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:267069*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267069*0 + 3*703*FLEN/8, x4, x1, x2)

inst_89024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:267072*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267072*0 + 3*704*FLEN/8, x4, x1, x2)

inst_89025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:267075*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267075*0 + 3*705*FLEN/8, x4, x1, x2)

inst_89026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:267078*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267078*0 + 3*706*FLEN/8, x4, x1, x2)

inst_89027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:267081*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267081*0 + 3*707*FLEN/8, x4, x1, x2)

inst_89028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:267084*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267084*0 + 3*708*FLEN/8, x4, x1, x2)

inst_89029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:267087*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267087*0 + 3*709*FLEN/8, x4, x1, x2)

inst_89030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:267090*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267090*0 + 3*710*FLEN/8, x4, x1, x2)

inst_89031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:267093*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267093*0 + 3*711*FLEN/8, x4, x1, x2)

inst_89032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:267096*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267096*0 + 3*712*FLEN/8, x4, x1, x2)

inst_89033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:267099*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267099*0 + 3*713*FLEN/8, x4, x1, x2)

inst_89034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:267102*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267102*0 + 3*714*FLEN/8, x4, x1, x2)

inst_89035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:267105*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267105*0 + 3*715*FLEN/8, x4, x1, x2)

inst_89036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:267108*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267108*0 + 3*716*FLEN/8, x4, x1, x2)

inst_89037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:267111*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267111*0 + 3*717*FLEN/8, x4, x1, x2)

inst_89038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x82d0000000000000; valaddr_reg:x3; val_offset:267114*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267114*0 + 3*718*FLEN/8, x4, x1, x2)

inst_89039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x82d0000000000001; valaddr_reg:x3; val_offset:267117*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267117*0 + 3*719*FLEN/8, x4, x1, x2)

inst_89040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x82d0000000000003; valaddr_reg:x3; val_offset:267120*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267120*0 + 3*720*FLEN/8, x4, x1, x2)

inst_89041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x82d0000000000007; valaddr_reg:x3; val_offset:267123*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267123*0 + 3*721*FLEN/8, x4, x1, x2)

inst_89042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x82d000000000000f; valaddr_reg:x3; val_offset:267126*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267126*0 + 3*722*FLEN/8, x4, x1, x2)

inst_89043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x82d000000000001f; valaddr_reg:x3; val_offset:267129*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267129*0 + 3*723*FLEN/8, x4, x1, x2)

inst_89044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x82d000000000003f; valaddr_reg:x3; val_offset:267132*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267132*0 + 3*724*FLEN/8, x4, x1, x2)

inst_89045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x82d000000000007f; valaddr_reg:x3; val_offset:267135*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267135*0 + 3*725*FLEN/8, x4, x1, x2)

inst_89046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x82d00000000000ff; valaddr_reg:x3; val_offset:267138*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267138*0 + 3*726*FLEN/8, x4, x1, x2)

inst_89047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x82d00000000001ff; valaddr_reg:x3; val_offset:267141*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267141*0 + 3*727*FLEN/8, x4, x1, x2)

inst_89048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x82d00000000003ff; valaddr_reg:x3; val_offset:267144*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267144*0 + 3*728*FLEN/8, x4, x1, x2)

inst_89049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x82d00000000007ff; valaddr_reg:x3; val_offset:267147*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267147*0 + 3*729*FLEN/8, x4, x1, x2)

inst_89050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x82d0000000000fff; valaddr_reg:x3; val_offset:267150*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267150*0 + 3*730*FLEN/8, x4, x1, x2)

inst_89051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x82d0000000001fff; valaddr_reg:x3; val_offset:267153*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267153*0 + 3*731*FLEN/8, x4, x1, x2)

inst_89052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x82d0000000003fff; valaddr_reg:x3; val_offset:267156*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267156*0 + 3*732*FLEN/8, x4, x1, x2)

inst_89053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x82d0000000007fff; valaddr_reg:x3; val_offset:267159*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267159*0 + 3*733*FLEN/8, x4, x1, x2)

inst_89054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x82d000000000ffff; valaddr_reg:x3; val_offset:267162*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267162*0 + 3*734*FLEN/8, x4, x1, x2)

inst_89055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x82d000000001ffff; valaddr_reg:x3; val_offset:267165*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267165*0 + 3*735*FLEN/8, x4, x1, x2)

inst_89056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x82d000000003ffff; valaddr_reg:x3; val_offset:267168*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267168*0 + 3*736*FLEN/8, x4, x1, x2)

inst_89057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x82d000000007ffff; valaddr_reg:x3; val_offset:267171*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267171*0 + 3*737*FLEN/8, x4, x1, x2)

inst_89058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x82d00000000fffff; valaddr_reg:x3; val_offset:267174*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267174*0 + 3*738*FLEN/8, x4, x1, x2)

inst_89059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x82d00000001fffff; valaddr_reg:x3; val_offset:267177*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267177*0 + 3*739*FLEN/8, x4, x1, x2)

inst_89060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x82d00000003fffff; valaddr_reg:x3; val_offset:267180*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267180*0 + 3*740*FLEN/8, x4, x1, x2)

inst_89061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x82d00000007fffff; valaddr_reg:x3; val_offset:267183*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267183*0 + 3*741*FLEN/8, x4, x1, x2)

inst_89062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x82d0000000ffffff; valaddr_reg:x3; val_offset:267186*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267186*0 + 3*742*FLEN/8, x4, x1, x2)

inst_89063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x82d0000001ffffff; valaddr_reg:x3; val_offset:267189*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267189*0 + 3*743*FLEN/8, x4, x1, x2)

inst_89064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x82d0000003ffffff; valaddr_reg:x3; val_offset:267192*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267192*0 + 3*744*FLEN/8, x4, x1, x2)

inst_89065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x82d0000007ffffff; valaddr_reg:x3; val_offset:267195*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267195*0 + 3*745*FLEN/8, x4, x1, x2)

inst_89066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x82d000000fffffff; valaddr_reg:x3; val_offset:267198*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267198*0 + 3*746*FLEN/8, x4, x1, x2)

inst_89067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x82d000001fffffff; valaddr_reg:x3; val_offset:267201*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267201*0 + 3*747*FLEN/8, x4, x1, x2)

inst_89068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x82d000003fffffff; valaddr_reg:x3; val_offset:267204*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267204*0 + 3*748*FLEN/8, x4, x1, x2)

inst_89069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x82d000007fffffff; valaddr_reg:x3; val_offset:267207*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267207*0 + 3*749*FLEN/8, x4, x1, x2)

inst_89070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x82d00000ffffffff; valaddr_reg:x3; val_offset:267210*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267210*0 + 3*750*FLEN/8, x4, x1, x2)

inst_89071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x82d00001ffffffff; valaddr_reg:x3; val_offset:267213*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267213*0 + 3*751*FLEN/8, x4, x1, x2)

inst_89072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x82d00003ffffffff; valaddr_reg:x3; val_offset:267216*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267216*0 + 3*752*FLEN/8, x4, x1, x2)

inst_89073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x82d00007ffffffff; valaddr_reg:x3; val_offset:267219*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267219*0 + 3*753*FLEN/8, x4, x1, x2)

inst_89074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x82d0000fffffffff; valaddr_reg:x3; val_offset:267222*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267222*0 + 3*754*FLEN/8, x4, x1, x2)

inst_89075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x82d0001fffffffff; valaddr_reg:x3; val_offset:267225*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267225*0 + 3*755*FLEN/8, x4, x1, x2)

inst_89076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x82d0003fffffffff; valaddr_reg:x3; val_offset:267228*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267228*0 + 3*756*FLEN/8, x4, x1, x2)

inst_89077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x82d0007fffffffff; valaddr_reg:x3; val_offset:267231*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267231*0 + 3*757*FLEN/8, x4, x1, x2)

inst_89078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x82d000ffffffffff; valaddr_reg:x3; val_offset:267234*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267234*0 + 3*758*FLEN/8, x4, x1, x2)

inst_89079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x82d001ffffffffff; valaddr_reg:x3; val_offset:267237*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267237*0 + 3*759*FLEN/8, x4, x1, x2)

inst_89080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x82d003ffffffffff; valaddr_reg:x3; val_offset:267240*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267240*0 + 3*760*FLEN/8, x4, x1, x2)

inst_89081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x82d007ffffffffff; valaddr_reg:x3; val_offset:267243*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267243*0 + 3*761*FLEN/8, x4, x1, x2)

inst_89082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x82d00fffffffffff; valaddr_reg:x3; val_offset:267246*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267246*0 + 3*762*FLEN/8, x4, x1, x2)

inst_89083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x82d01fffffffffff; valaddr_reg:x3; val_offset:267249*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267249*0 + 3*763*FLEN/8, x4, x1, x2)

inst_89084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x82d03fffffffffff; valaddr_reg:x3; val_offset:267252*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267252*0 + 3*764*FLEN/8, x4, x1, x2)

inst_89085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x82d07fffffffffff; valaddr_reg:x3; val_offset:267255*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267255*0 + 3*765*FLEN/8, x4, x1, x2)

inst_89086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x82d0ffffffffffff; valaddr_reg:x3; val_offset:267258*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267258*0 + 3*766*FLEN/8, x4, x1, x2)

inst_89087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc6ef603f8b673 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac6ef603f8b673; op2val:0x8000;
op3val:0x82d1ffffffffffff; valaddr_reg:x3; val_offset:267261*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267261*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683581063004159,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683581130113023,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683581264330751,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683581532766207,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683582069637119,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683583143378943,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683585290862591,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683589585829887,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683598175764479,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683615355633663,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683649715372031,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683718434848767,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683855873802239,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229684130751709183,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229684680507523071,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229685780019150847,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229687979042406399,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229692377088917503,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229701173181939711,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229718765367984127,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229753949740072959,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229824318484250623,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229965055972605951,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(230246530949316607,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(230809480902737919,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(231935380809580543,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(231935380809580544,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(233061280716423168,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(233624230669844480,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(233905705646555136,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234046443134910464,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234116811879088128,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234151996251176960,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234169588437221376,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234178384530243584,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234182782576754688,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234184981600010240,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234186081111638016,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234186630867451904,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234186905745358848,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187043184312320,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187111903789056,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187146263527424,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187163443396608,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187172033331200,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187176328298496,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187178475782144,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187179549523968,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180086394880,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180354830336,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180489048064,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180556156928,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180589711360,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180606488576,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180614877184,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180619071488,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180621168640,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180622217216,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180622741504,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623003648,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623134720,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623200256,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623233024,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623249408,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623257600,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623261696,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623263744,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623264768,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265280,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265536,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265664,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265728,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265760,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265776,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265784,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265788,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265790,64,FLEN)
NAN_BOXED(6893885915811815830,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265791,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775935,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854776063,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854776319,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854776831,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854777855,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854779903,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854783999,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854792191,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854808575,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854841343,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854906879,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036855037951,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036855300095,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036855824383,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036856872959,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036858970111,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036863164415,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036871553023,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036888330239,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036921884671,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036988993535,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372037123211263,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372037391646719,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372037928517631,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372039002259455,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372041149743103,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372045444710399,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372054034644991,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372071214514175,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372105574252543,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372174293729279,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372311732682751,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372586610589695,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223373136366403583,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223374235878031359,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223376434901286911,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223380832947798015,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223389629040820223,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223407221226864639,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223442405598953471,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223512774343131135,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223653511831486463,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223934986808197119,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224497936761618431,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225623836668461055,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225623836668461056,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226749736575303680,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227312686528724992,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227594161505435648,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227734898993790976,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227805267737968640,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227840452110057472,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227858044296101888,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227866840389124096,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227871238435635200,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227873437458890752,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227874536970518528,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875086726332416,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875361604239360,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875499043192832,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875567762669568,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875602122407936,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875619302277120,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875627892211712,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875632187179008,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875634334662656,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875635408404480,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875635945275392,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636213710848,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636347928576,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636415037440,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636448591872,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636465369088,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636473757696,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636477952000,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636480049152,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636481097728,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636481622016,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636481884160,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482015232,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482080768,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482113536,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482129920,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482138112,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482142208,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482144256,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482145280,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482145792,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146048,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146176,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6893893031479290290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146303,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369280,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369281,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369283,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369287,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369295,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369311,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369343,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369407,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369535,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369791,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246370303,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246371327,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246373375,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246377471,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246385663,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246402047,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246434815,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246500351,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246631423,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246893567,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234247417855,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234248466431,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234250563583,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234254757887,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234263146495,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234279923711,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234313478143,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234380587007,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234514804735,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234783240191,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897235320111103,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897236393852927,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897238541336575,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897242836303871,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897251426238463,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897268606107647,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897302965846015,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897371685322751,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897509124276223,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897784002183167,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254898333757997055,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254899433269624831,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254901632292880383,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254906030339391487,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254914826432413695,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254932418618458111,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254967602990546943,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9255037971734724607,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9255178709223079935,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9255460184199790591,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9256023134153211903,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9257149034060054527,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9257149034060054528,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9258274933966897152,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9258837883920318464,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259119358897029120,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259260096385384448,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259330465129562112,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259365649501650944,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259383241687695360,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259392037780717568,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259396435827228672,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259398634850484224,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259399734362112000,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400284117925888,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400558995832832,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400696434786304,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400765154263040,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400799514001408,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400816693870592,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400825283805184,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400829578772480,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400831726256128,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400832799997952,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833336868864,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833605304320,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833739522048,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833806630912,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833840185344,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833856962560,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833865351168,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833869545472,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833871642624,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833872691200,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873215488,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873477632,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873608704,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873674240,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873707008,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873723392,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873731584,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873735680,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873737728,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873738752,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739264,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739520,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739648,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739712,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739744,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739760,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739768,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739772,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739774,64,FLEN)
NAN_BOXED(6893901075680142263,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739775,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13564842077639933952,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13564842077639933953,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13564842077639933955,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13564842077639933959,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13564842077639933967,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13564842077639933983,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13564842077639934015,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13564842077639934079,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13564842077639934207,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13564842077639934463,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13564842077639934975,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13564842077639935999,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13564842077639938047,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13564842077639942143,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13564842077639950335,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13564842077639966719,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13564842077639999487,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13564842077640065023,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13564842077640196095,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13564842077640458239,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13564842077640982527,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13564842077642031103,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13564842077644128255,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13564842077648322559,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13564842077656711167,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13564842077673488383,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13564842077707042815,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13564842077774151679,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13564842077908369407,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13564842078176804863,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13564842078713675775,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13564842079787417599,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13564842081934901247,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13564842086229868543,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13564842094819803135,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13564842111999672319,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13564842146359410687,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13564842215078887423,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13564842352517840895,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13564842627395747839,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13564843177151561727,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13564844276663189503,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13564846475686445055,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13564850873732956159,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13564859669825978367,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13564877262012022783,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13564912446384111615,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13564982815128289279,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13565123552616644607,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13565405027593355263,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13565967977546776575,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13567093877453619199,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13567093877453619200,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13568219777360461824,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13568782727313883136,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13569064202290593792,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13569204939778949120,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13569275308523126784,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13569310492895215616,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13569328085081260032,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13569336881174282240,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13569341279220793344,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13569343478244048896,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13569344577755676672,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13569345127511490560,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13569345402389397504,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13569345539828350976,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13569345608547827712,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13569345642907566080,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13569345660087435264,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13569345668677369856,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13569345672972337152,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13569345675119820800,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13569345676193562624,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13569345676730433536,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13569345676998868992,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13569345677133086720,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13569345677200195584,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13569345677233750016,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13569345677250527232,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13569345677258915840,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13569345677263110144,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13569345677265207296,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13569345677266255872,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13569345677266780160,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13569345677267042304,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13569345677267173376,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13569345677267238912,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13569345677267271680,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13569345677267288064,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13569345677267296256,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13569345677267300352,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13569345677267302400,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13569345677267303424,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13569345677267303936,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13569345677267304192,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13569345677267304320,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13569345677267304384,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13569345677267304416,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13569345677267304432,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13569345677267304440,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13569345677267304444,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13569345677267304446,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13569345677267304447,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6893909057968913653,64,FLEN)
NAN_BOXED(11511828439543224455,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114880,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114881,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114883,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114887,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114895,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114911,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114943,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821115007,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821115135,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821115391,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821115903,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821116927,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821118975,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821123071,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821131263,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821147647,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821180415,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821245951,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821377023,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821639167,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988822163455,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988823212031,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988825309183,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988829503487,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988837892095,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988854669311,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988888223743,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988955332607,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107989089550335,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107989357985791,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107989894856703,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107990968598527,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107993116082175,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107997411049471,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135108006000984063,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135108023180853247,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135108057540591615,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135108126260068351,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135108263699021823,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135108538576928767,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135109088332742655,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135110187844370431,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135112386867625983,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135116784914137087,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135125581007159295,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135143173193203711,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135178357565292543,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135248726309470207,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135389463797825535,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135670938774536191,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(136233888727957503,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(137359788634800127,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(137359788634800128,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(138485688541642752,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139048638495064064,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139330113471774720,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139470850960130048,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139541219704307712,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139576404076396544,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139593996262440960,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139602792355463168,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139607190401974272,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139609389425229824,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139610488936857600,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611038692671488,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611313570578432,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611451009531904,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611519729008640,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611554088747008,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611571268616192,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611579858550784,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611584153518080,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611586301001728,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611587374743552,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611587911614464,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588180049920,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588314267648,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588381376512,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588414930944,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588431708160,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588440096768,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588444291072,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588446388224,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588447436800,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588447961088,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448223232,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448354304,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448419840,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448452608,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448468992,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448477184,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448481280,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448483328,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448484352,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448484864,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485120,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485248,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485312,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485344,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485360,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485368,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485372,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485374,64,FLEN)
NAN_BOXED(6893956752093055862,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485375,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4323455642275676160,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4323455642275676161,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4323455642275676163,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4323455642275676167,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4323455642275676175,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4323455642275676191,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4323455642275676223,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4323455642275676287,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4323455642275676415,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4323455642275676671,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4323455642275677183,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4323455642275678207,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4323455642275680255,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4323455642275684351,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4323455642275692543,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4323455642275708927,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4323455642275741695,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4323455642275807231,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4323455642275938303,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4323455642276200447,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4323455642276724735,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4323455642277773311,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4323455642279870463,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4323455642284064767,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4323455642292453375,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4323455642309230591,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4323455642342785023,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4323455642409893887,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4323455642544111615,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4323455642812547071,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4323455643349417983,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4323455644423159807,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4323455646570643455,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4323455650865610751,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4323455659455545343,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4323455676635414527,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4323455710995152895,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4323455779714629631,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4323455917153583103,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4323456192031490047,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4323456741787303935,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4323457841298931711,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4323460040322187263,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4323464438368698367,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4323473234461720575,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4323490826647764991,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4323526011019853823,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4323596379764031487,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4323737117252386815,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4324018592229097471,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4324581542182518783,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4325707442089361407,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4325707442089361408,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4326833341996204032,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4327396291949625344,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4327677766926336000,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4327818504414691328,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4327888873158868992,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4327924057530957824,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4327941649717002240,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4327950445810024448,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4327954843856535552,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4327957042879791104,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4327958142391418880,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4327958692147232768,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4327958967025139712,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4327959104464093184,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4327959173183569920,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4327959207543308288,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4327959224723177472,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4327959233313112064,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4327959237608079360,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4327959239755563008,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4327959240829304832,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4327959241366175744,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4327959241634611200,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4327959241768828928,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4327959241835937792,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4327959241869492224,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4327959241886269440,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4327959241894658048,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4327959241898852352,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4327959241900949504,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4327959241901998080,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4327959241902522368,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4327959241902784512,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4327959241902915584,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4327959241902981120,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4327959241903013888,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4327959241903030272,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4327959241903038464,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4327959241903042560,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4327959241903044608,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4327959241903045632,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4327959241903046144,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4327959241903046400,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4327959241903046528,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4327959241903046592,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4327959241903046624,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4327959241903046640,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4327959241903046648,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4327959241903046652,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4327959241903046654,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4327959241903046655,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6893974710769612223,64,FLEN)
NAN_BOXED(2319939334958901158,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448128,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448129,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448131,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448135,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448143,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448159,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448191,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448255,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448383,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448639,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086449151,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086450175,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086452223,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086456319,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086464511,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086480895,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086513663,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086579199,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086710271,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086972415,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020087496703,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020088545279,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020090642431,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020094836735,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020103225343,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020120002559,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020153556991,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020220665855,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020354883583,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020623319039,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034021160189951,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034022233931775,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034024381415423,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034028676382719,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034037266317311,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034054446186495,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034088805924863,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034157525401599,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034294964355071,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034569842262015,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426035119598075903,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426036219109703679,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426038418132959231,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426042816179470335,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426051612272492543,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426069204458536959,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426104388830625791,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426174757574803455,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426315495063158783,64,FLEN)
NAN_BOXED(6894007132505028211,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426596970039869439,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
