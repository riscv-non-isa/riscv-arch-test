
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_49920:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xbffffffffe0000; valaddr_reg:x3; val_offset:149760*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149760*0 + 3*0*FLEN/8, x4, x1, x2)

inst_49921:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xbfffffffff0000; valaddr_reg:x3; val_offset:149763*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149763*0 + 3*1*FLEN/8, x4, x1, x2)

inst_49922:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xbfffffffff8000; valaddr_reg:x3; val_offset:149766*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149766*0 + 3*2*FLEN/8, x4, x1, x2)

inst_49923:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xbfffffffffc000; valaddr_reg:x3; val_offset:149769*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149769*0 + 3*3*FLEN/8, x4, x1, x2)

inst_49924:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xbfffffffffe000; valaddr_reg:x3; val_offset:149772*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149772*0 + 3*4*FLEN/8, x4, x1, x2)

inst_49925:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xbffffffffff000; valaddr_reg:x3; val_offset:149775*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149775*0 + 3*5*FLEN/8, x4, x1, x2)

inst_49926:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xbffffffffff800; valaddr_reg:x3; val_offset:149778*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149778*0 + 3*6*FLEN/8, x4, x1, x2)

inst_49927:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xbffffffffffc00; valaddr_reg:x3; val_offset:149781*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149781*0 + 3*7*FLEN/8, x4, x1, x2)

inst_49928:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xbffffffffffe00; valaddr_reg:x3; val_offset:149784*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149784*0 + 3*8*FLEN/8, x4, x1, x2)

inst_49929:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xbfffffffffff00; valaddr_reg:x3; val_offset:149787*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149787*0 + 3*9*FLEN/8, x4, x1, x2)

inst_49930:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xbfffffffffff80; valaddr_reg:x3; val_offset:149790*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149790*0 + 3*10*FLEN/8, x4, x1, x2)

inst_49931:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xbfffffffffffc0; valaddr_reg:x3; val_offset:149793*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149793*0 + 3*11*FLEN/8, x4, x1, x2)

inst_49932:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xbfffffffffffe0; valaddr_reg:x3; val_offset:149796*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149796*0 + 3*12*FLEN/8, x4, x1, x2)

inst_49933:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xbffffffffffff0; valaddr_reg:x3; val_offset:149799*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149799*0 + 3*13*FLEN/8, x4, x1, x2)

inst_49934:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xbffffffffffff8; valaddr_reg:x3; val_offset:149802*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149802*0 + 3*14*FLEN/8, x4, x1, x2)

inst_49935:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xbffffffffffffc; valaddr_reg:x3; val_offset:149805*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149805*0 + 3*15*FLEN/8, x4, x1, x2)

inst_49936:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xbffffffffffffe; valaddr_reg:x3; val_offset:149808*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149808*0 + 3*16*FLEN/8, x4, x1, x2)

inst_49937:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xbfffffffffffff; valaddr_reg:x3; val_offset:149811*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149811*0 + 3*17*FLEN/8, x4, x1, x2)

inst_49938:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a40000000000000; valaddr_reg:x3; val_offset:149814*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149814*0 + 3*18*FLEN/8, x4, x1, x2)

inst_49939:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a40000000000001; valaddr_reg:x3; val_offset:149817*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149817*0 + 3*19*FLEN/8, x4, x1, x2)

inst_49940:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a40000000000003; valaddr_reg:x3; val_offset:149820*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149820*0 + 3*20*FLEN/8, x4, x1, x2)

inst_49941:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a40000000000007; valaddr_reg:x3; val_offset:149823*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149823*0 + 3*21*FLEN/8, x4, x1, x2)

inst_49942:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4000000000000f; valaddr_reg:x3; val_offset:149826*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149826*0 + 3*22*FLEN/8, x4, x1, x2)

inst_49943:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4000000000001f; valaddr_reg:x3; val_offset:149829*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149829*0 + 3*23*FLEN/8, x4, x1, x2)

inst_49944:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4000000000003f; valaddr_reg:x3; val_offset:149832*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149832*0 + 3*24*FLEN/8, x4, x1, x2)

inst_49945:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4000000000007f; valaddr_reg:x3; val_offset:149835*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149835*0 + 3*25*FLEN/8, x4, x1, x2)

inst_49946:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a400000000000ff; valaddr_reg:x3; val_offset:149838*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149838*0 + 3*26*FLEN/8, x4, x1, x2)

inst_49947:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a400000000001ff; valaddr_reg:x3; val_offset:149841*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149841*0 + 3*27*FLEN/8, x4, x1, x2)

inst_49948:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a400000000003ff; valaddr_reg:x3; val_offset:149844*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149844*0 + 3*28*FLEN/8, x4, x1, x2)

inst_49949:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a400000000007ff; valaddr_reg:x3; val_offset:149847*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149847*0 + 3*29*FLEN/8, x4, x1, x2)

inst_49950:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a40000000000fff; valaddr_reg:x3; val_offset:149850*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149850*0 + 3*30*FLEN/8, x4, x1, x2)

inst_49951:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a40000000001fff; valaddr_reg:x3; val_offset:149853*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149853*0 + 3*31*FLEN/8, x4, x1, x2)

inst_49952:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a40000000003fff; valaddr_reg:x3; val_offset:149856*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149856*0 + 3*32*FLEN/8, x4, x1, x2)

inst_49953:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a40000000007fff; valaddr_reg:x3; val_offset:149859*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149859*0 + 3*33*FLEN/8, x4, x1, x2)

inst_49954:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4000000000ffff; valaddr_reg:x3; val_offset:149862*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149862*0 + 3*34*FLEN/8, x4, x1, x2)

inst_49955:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4000000001ffff; valaddr_reg:x3; val_offset:149865*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149865*0 + 3*35*FLEN/8, x4, x1, x2)

inst_49956:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4000000003ffff; valaddr_reg:x3; val_offset:149868*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149868*0 + 3*36*FLEN/8, x4, x1, x2)

inst_49957:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4000000007ffff; valaddr_reg:x3; val_offset:149871*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149871*0 + 3*37*FLEN/8, x4, x1, x2)

inst_49958:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a400000000fffff; valaddr_reg:x3; val_offset:149874*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149874*0 + 3*38*FLEN/8, x4, x1, x2)

inst_49959:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a400000001fffff; valaddr_reg:x3; val_offset:149877*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149877*0 + 3*39*FLEN/8, x4, x1, x2)

inst_49960:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a400000003fffff; valaddr_reg:x3; val_offset:149880*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149880*0 + 3*40*FLEN/8, x4, x1, x2)

inst_49961:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a400000007fffff; valaddr_reg:x3; val_offset:149883*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149883*0 + 3*41*FLEN/8, x4, x1, x2)

inst_49962:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a40000000ffffff; valaddr_reg:x3; val_offset:149886*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149886*0 + 3*42*FLEN/8, x4, x1, x2)

inst_49963:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a40000001ffffff; valaddr_reg:x3; val_offset:149889*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149889*0 + 3*43*FLEN/8, x4, x1, x2)

inst_49964:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a40000003ffffff; valaddr_reg:x3; val_offset:149892*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149892*0 + 3*44*FLEN/8, x4, x1, x2)

inst_49965:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a40000007ffffff; valaddr_reg:x3; val_offset:149895*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149895*0 + 3*45*FLEN/8, x4, x1, x2)

inst_49966:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4000000fffffff; valaddr_reg:x3; val_offset:149898*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149898*0 + 3*46*FLEN/8, x4, x1, x2)

inst_49967:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4000001fffffff; valaddr_reg:x3; val_offset:149901*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149901*0 + 3*47*FLEN/8, x4, x1, x2)

inst_49968:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4000003fffffff; valaddr_reg:x3; val_offset:149904*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149904*0 + 3*48*FLEN/8, x4, x1, x2)

inst_49969:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4000007fffffff; valaddr_reg:x3; val_offset:149907*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149907*0 + 3*49*FLEN/8, x4, x1, x2)

inst_49970:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a400000ffffffff; valaddr_reg:x3; val_offset:149910*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149910*0 + 3*50*FLEN/8, x4, x1, x2)

inst_49971:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a400001ffffffff; valaddr_reg:x3; val_offset:149913*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149913*0 + 3*51*FLEN/8, x4, x1, x2)

inst_49972:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a400003ffffffff; valaddr_reg:x3; val_offset:149916*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149916*0 + 3*52*FLEN/8, x4, x1, x2)

inst_49973:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a400007ffffffff; valaddr_reg:x3; val_offset:149919*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149919*0 + 3*53*FLEN/8, x4, x1, x2)

inst_49974:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a40000fffffffff; valaddr_reg:x3; val_offset:149922*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149922*0 + 3*54*FLEN/8, x4, x1, x2)

inst_49975:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a40001fffffffff; valaddr_reg:x3; val_offset:149925*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149925*0 + 3*55*FLEN/8, x4, x1, x2)

inst_49976:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a40003fffffffff; valaddr_reg:x3; val_offset:149928*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149928*0 + 3*56*FLEN/8, x4, x1, x2)

inst_49977:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a40007fffffffff; valaddr_reg:x3; val_offset:149931*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149931*0 + 3*57*FLEN/8, x4, x1, x2)

inst_49978:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4000ffffffffff; valaddr_reg:x3; val_offset:149934*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149934*0 + 3*58*FLEN/8, x4, x1, x2)

inst_49979:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4001ffffffffff; valaddr_reg:x3; val_offset:149937*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149937*0 + 3*59*FLEN/8, x4, x1, x2)

inst_49980:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4003ffffffffff; valaddr_reg:x3; val_offset:149940*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149940*0 + 3*60*FLEN/8, x4, x1, x2)

inst_49981:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4007ffffffffff; valaddr_reg:x3; val_offset:149943*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149943*0 + 3*61*FLEN/8, x4, x1, x2)

inst_49982:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a400fffffffffff; valaddr_reg:x3; val_offset:149946*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149946*0 + 3*62*FLEN/8, x4, x1, x2)

inst_49983:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a401fffffffffff; valaddr_reg:x3; val_offset:149949*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149949*0 + 3*63*FLEN/8, x4, x1, x2)

inst_49984:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a403fffffffffff; valaddr_reg:x3; val_offset:149952*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149952*0 + 3*64*FLEN/8, x4, x1, x2)

inst_49985:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a407fffffffffff; valaddr_reg:x3; val_offset:149955*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149955*0 + 3*65*FLEN/8, x4, x1, x2)

inst_49986:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a40ffffffffffff; valaddr_reg:x3; val_offset:149958*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149958*0 + 3*66*FLEN/8, x4, x1, x2)

inst_49987:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a41ffffffffffff; valaddr_reg:x3; val_offset:149961*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149961*0 + 3*67*FLEN/8, x4, x1, x2)

inst_49988:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a43ffffffffffff; valaddr_reg:x3; val_offset:149964*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149964*0 + 3*68*FLEN/8, x4, x1, x2)

inst_49989:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a47ffffffffffff; valaddr_reg:x3; val_offset:149967*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149967*0 + 3*69*FLEN/8, x4, x1, x2)

inst_49990:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a48000000000000; valaddr_reg:x3; val_offset:149970*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149970*0 + 3*70*FLEN/8, x4, x1, x2)

inst_49991:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4c000000000000; valaddr_reg:x3; val_offset:149973*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149973*0 + 3*71*FLEN/8, x4, x1, x2)

inst_49992:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4e000000000000; valaddr_reg:x3; val_offset:149976*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149976*0 + 3*72*FLEN/8, x4, x1, x2)

inst_49993:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4f000000000000; valaddr_reg:x3; val_offset:149979*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149979*0 + 3*73*FLEN/8, x4, x1, x2)

inst_49994:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4f800000000000; valaddr_reg:x3; val_offset:149982*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149982*0 + 3*74*FLEN/8, x4, x1, x2)

inst_49995:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4fc00000000000; valaddr_reg:x3; val_offset:149985*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149985*0 + 3*75*FLEN/8, x4, x1, x2)

inst_49996:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4fe00000000000; valaddr_reg:x3; val_offset:149988*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149988*0 + 3*76*FLEN/8, x4, x1, x2)

inst_49997:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4ff00000000000; valaddr_reg:x3; val_offset:149991*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149991*0 + 3*77*FLEN/8, x4, x1, x2)

inst_49998:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4ff80000000000; valaddr_reg:x3; val_offset:149994*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149994*0 + 3*78*FLEN/8, x4, x1, x2)

inst_49999:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4ffc0000000000; valaddr_reg:x3; val_offset:149997*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149997*0 + 3*79*FLEN/8, x4, x1, x2)

inst_50000:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4ffe0000000000; valaddr_reg:x3; val_offset:150000*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150000*0 + 3*80*FLEN/8, x4, x1, x2)

inst_50001:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4fff0000000000; valaddr_reg:x3; val_offset:150003*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150003*0 + 3*81*FLEN/8, x4, x1, x2)

inst_50002:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4fff8000000000; valaddr_reg:x3; val_offset:150006*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150006*0 + 3*82*FLEN/8, x4, x1, x2)

inst_50003:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4fffc000000000; valaddr_reg:x3; val_offset:150009*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150009*0 + 3*83*FLEN/8, x4, x1, x2)

inst_50004:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4fffe000000000; valaddr_reg:x3; val_offset:150012*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150012*0 + 3*84*FLEN/8, x4, x1, x2)

inst_50005:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4ffff000000000; valaddr_reg:x3; val_offset:150015*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150015*0 + 3*85*FLEN/8, x4, x1, x2)

inst_50006:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4ffff800000000; valaddr_reg:x3; val_offset:150018*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150018*0 + 3*86*FLEN/8, x4, x1, x2)

inst_50007:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4ffffc00000000; valaddr_reg:x3; val_offset:150021*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150021*0 + 3*87*FLEN/8, x4, x1, x2)

inst_50008:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4ffffe00000000; valaddr_reg:x3; val_offset:150024*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150024*0 + 3*88*FLEN/8, x4, x1, x2)

inst_50009:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4fffff00000000; valaddr_reg:x3; val_offset:150027*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150027*0 + 3*89*FLEN/8, x4, x1, x2)

inst_50010:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4fffff80000000; valaddr_reg:x3; val_offset:150030*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150030*0 + 3*90*FLEN/8, x4, x1, x2)

inst_50011:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4fffffc0000000; valaddr_reg:x3; val_offset:150033*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150033*0 + 3*91*FLEN/8, x4, x1, x2)

inst_50012:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4fffffe0000000; valaddr_reg:x3; val_offset:150036*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150036*0 + 3*92*FLEN/8, x4, x1, x2)

inst_50013:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4ffffff0000000; valaddr_reg:x3; val_offset:150039*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150039*0 + 3*93*FLEN/8, x4, x1, x2)

inst_50014:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4ffffff8000000; valaddr_reg:x3; val_offset:150042*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150042*0 + 3*94*FLEN/8, x4, x1, x2)

inst_50015:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4ffffffc000000; valaddr_reg:x3; val_offset:150045*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150045*0 + 3*95*FLEN/8, x4, x1, x2)

inst_50016:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4ffffffe000000; valaddr_reg:x3; val_offset:150048*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150048*0 + 3*96*FLEN/8, x4, x1, x2)

inst_50017:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4fffffff000000; valaddr_reg:x3; val_offset:150051*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150051*0 + 3*97*FLEN/8, x4, x1, x2)

inst_50018:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4fffffff800000; valaddr_reg:x3; val_offset:150054*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150054*0 + 3*98*FLEN/8, x4, x1, x2)

inst_50019:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4fffffffc00000; valaddr_reg:x3; val_offset:150057*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150057*0 + 3*99*FLEN/8, x4, x1, x2)

inst_50020:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4fffffffe00000; valaddr_reg:x3; val_offset:150060*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150060*0 + 3*100*FLEN/8, x4, x1, x2)

inst_50021:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4ffffffff00000; valaddr_reg:x3; val_offset:150063*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150063*0 + 3*101*FLEN/8, x4, x1, x2)

inst_50022:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4ffffffff80000; valaddr_reg:x3; val_offset:150066*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150066*0 + 3*102*FLEN/8, x4, x1, x2)

inst_50023:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4ffffffffc0000; valaddr_reg:x3; val_offset:150069*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150069*0 + 3*103*FLEN/8, x4, x1, x2)

inst_50024:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4ffffffffe0000; valaddr_reg:x3; val_offset:150072*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150072*0 + 3*104*FLEN/8, x4, x1, x2)

inst_50025:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4fffffffff0000; valaddr_reg:x3; val_offset:150075*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150075*0 + 3*105*FLEN/8, x4, x1, x2)

inst_50026:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4fffffffff8000; valaddr_reg:x3; val_offset:150078*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150078*0 + 3*106*FLEN/8, x4, x1, x2)

inst_50027:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4fffffffffc000; valaddr_reg:x3; val_offset:150081*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150081*0 + 3*107*FLEN/8, x4, x1, x2)

inst_50028:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4fffffffffe000; valaddr_reg:x3; val_offset:150084*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150084*0 + 3*108*FLEN/8, x4, x1, x2)

inst_50029:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4ffffffffff000; valaddr_reg:x3; val_offset:150087*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150087*0 + 3*109*FLEN/8, x4, x1, x2)

inst_50030:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4ffffffffff800; valaddr_reg:x3; val_offset:150090*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150090*0 + 3*110*FLEN/8, x4, x1, x2)

inst_50031:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4ffffffffffc00; valaddr_reg:x3; val_offset:150093*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150093*0 + 3*111*FLEN/8, x4, x1, x2)

inst_50032:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4ffffffffffe00; valaddr_reg:x3; val_offset:150096*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150096*0 + 3*112*FLEN/8, x4, x1, x2)

inst_50033:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4fffffffffff00; valaddr_reg:x3; val_offset:150099*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150099*0 + 3*113*FLEN/8, x4, x1, x2)

inst_50034:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4fffffffffff80; valaddr_reg:x3; val_offset:150102*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150102*0 + 3*114*FLEN/8, x4, x1, x2)

inst_50035:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4fffffffffffc0; valaddr_reg:x3; val_offset:150105*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150105*0 + 3*115*FLEN/8, x4, x1, x2)

inst_50036:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4fffffffffffe0; valaddr_reg:x3; val_offset:150108*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150108*0 + 3*116*FLEN/8, x4, x1, x2)

inst_50037:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4ffffffffffff0; valaddr_reg:x3; val_offset:150111*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150111*0 + 3*117*FLEN/8, x4, x1, x2)

inst_50038:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4ffffffffffff8; valaddr_reg:x3; val_offset:150114*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150114*0 + 3*118*FLEN/8, x4, x1, x2)

inst_50039:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4ffffffffffffc; valaddr_reg:x3; val_offset:150117*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150117*0 + 3*119*FLEN/8, x4, x1, x2)

inst_50040:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4ffffffffffffe; valaddr_reg:x3; val_offset:150120*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150120*0 + 3*120*FLEN/8, x4, x1, x2)

inst_50041:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3a4fffffffffffff; valaddr_reg:x3; val_offset:150123*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150123*0 + 3*121*FLEN/8, x4, x1, x2)

inst_50042:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:150126*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150126*0 + 3*122*FLEN/8, x4, x1, x2)

inst_50043:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:150129*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150129*0 + 3*123*FLEN/8, x4, x1, x2)

inst_50044:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:150132*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150132*0 + 3*124*FLEN/8, x4, x1, x2)

inst_50045:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:150135*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150135*0 + 3*125*FLEN/8, x4, x1, x2)

inst_50046:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:150138*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150138*0 + 3*126*FLEN/8, x4, x1, x2)

inst_50047:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:150141*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150141*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_50048:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:150144*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150144*0 + 3*128*FLEN/8, x4, x1, x2)

inst_50049:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:150147*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150147*0 + 3*129*FLEN/8, x4, x1, x2)

inst_50050:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:150150*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150150*0 + 3*130*FLEN/8, x4, x1, x2)

inst_50051:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:150153*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150153*0 + 3*131*FLEN/8, x4, x1, x2)

inst_50052:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:150156*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150156*0 + 3*132*FLEN/8, x4, x1, x2)

inst_50053:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:150159*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150159*0 + 3*133*FLEN/8, x4, x1, x2)

inst_50054:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:150162*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150162*0 + 3*134*FLEN/8, x4, x1, x2)

inst_50055:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:150165*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150165*0 + 3*135*FLEN/8, x4, x1, x2)

inst_50056:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:150168*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150168*0 + 3*136*FLEN/8, x4, x1, x2)

inst_50057:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:150171*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150171*0 + 3*137*FLEN/8, x4, x1, x2)

inst_50058:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:150174*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150174*0 + 3*138*FLEN/8, x4, x1, x2)

inst_50059:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:150177*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150177*0 + 3*139*FLEN/8, x4, x1, x2)

inst_50060:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:150180*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150180*0 + 3*140*FLEN/8, x4, x1, x2)

inst_50061:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:150183*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150183*0 + 3*141*FLEN/8, x4, x1, x2)

inst_50062:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:150186*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150186*0 + 3*142*FLEN/8, x4, x1, x2)

inst_50063:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xed64142d15ba1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x09a7ccdc367cf and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ed64142d15ba1; op2val:0x20409a7ccdc367cf;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:150189*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150189*0 + 3*143*FLEN/8, x4, x1, x2)

inst_50064:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf50000000000000; valaddr_reg:x3; val_offset:150192*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150192*0 + 3*144*FLEN/8, x4, x1, x2)

inst_50065:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf50000000000001; valaddr_reg:x3; val_offset:150195*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150195*0 + 3*145*FLEN/8, x4, x1, x2)

inst_50066:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf50000000000003; valaddr_reg:x3; val_offset:150198*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150198*0 + 3*146*FLEN/8, x4, x1, x2)

inst_50067:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf50000000000007; valaddr_reg:x3; val_offset:150201*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150201*0 + 3*147*FLEN/8, x4, x1, x2)

inst_50068:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5000000000000f; valaddr_reg:x3; val_offset:150204*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150204*0 + 3*148*FLEN/8, x4, x1, x2)

inst_50069:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5000000000001f; valaddr_reg:x3; val_offset:150207*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150207*0 + 3*149*FLEN/8, x4, x1, x2)

inst_50070:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5000000000003f; valaddr_reg:x3; val_offset:150210*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150210*0 + 3*150*FLEN/8, x4, x1, x2)

inst_50071:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5000000000007f; valaddr_reg:x3; val_offset:150213*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150213*0 + 3*151*FLEN/8, x4, x1, x2)

inst_50072:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf500000000000ff; valaddr_reg:x3; val_offset:150216*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150216*0 + 3*152*FLEN/8, x4, x1, x2)

inst_50073:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf500000000001ff; valaddr_reg:x3; val_offset:150219*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150219*0 + 3*153*FLEN/8, x4, x1, x2)

inst_50074:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf500000000003ff; valaddr_reg:x3; val_offset:150222*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150222*0 + 3*154*FLEN/8, x4, x1, x2)

inst_50075:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf500000000007ff; valaddr_reg:x3; val_offset:150225*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150225*0 + 3*155*FLEN/8, x4, x1, x2)

inst_50076:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf50000000000fff; valaddr_reg:x3; val_offset:150228*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150228*0 + 3*156*FLEN/8, x4, x1, x2)

inst_50077:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf50000000001fff; valaddr_reg:x3; val_offset:150231*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150231*0 + 3*157*FLEN/8, x4, x1, x2)

inst_50078:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf50000000003fff; valaddr_reg:x3; val_offset:150234*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150234*0 + 3*158*FLEN/8, x4, x1, x2)

inst_50079:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf50000000007fff; valaddr_reg:x3; val_offset:150237*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150237*0 + 3*159*FLEN/8, x4, x1, x2)

inst_50080:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5000000000ffff; valaddr_reg:x3; val_offset:150240*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150240*0 + 3*160*FLEN/8, x4, x1, x2)

inst_50081:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5000000001ffff; valaddr_reg:x3; val_offset:150243*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150243*0 + 3*161*FLEN/8, x4, x1, x2)

inst_50082:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5000000003ffff; valaddr_reg:x3; val_offset:150246*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150246*0 + 3*162*FLEN/8, x4, x1, x2)

inst_50083:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5000000007ffff; valaddr_reg:x3; val_offset:150249*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150249*0 + 3*163*FLEN/8, x4, x1, x2)

inst_50084:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf500000000fffff; valaddr_reg:x3; val_offset:150252*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150252*0 + 3*164*FLEN/8, x4, x1, x2)

inst_50085:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf500000001fffff; valaddr_reg:x3; val_offset:150255*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150255*0 + 3*165*FLEN/8, x4, x1, x2)

inst_50086:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf500000003fffff; valaddr_reg:x3; val_offset:150258*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150258*0 + 3*166*FLEN/8, x4, x1, x2)

inst_50087:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf500000007fffff; valaddr_reg:x3; val_offset:150261*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150261*0 + 3*167*FLEN/8, x4, x1, x2)

inst_50088:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf50000000ffffff; valaddr_reg:x3; val_offset:150264*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150264*0 + 3*168*FLEN/8, x4, x1, x2)

inst_50089:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf50000001ffffff; valaddr_reg:x3; val_offset:150267*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150267*0 + 3*169*FLEN/8, x4, x1, x2)

inst_50090:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf50000003ffffff; valaddr_reg:x3; val_offset:150270*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150270*0 + 3*170*FLEN/8, x4, x1, x2)

inst_50091:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf50000007ffffff; valaddr_reg:x3; val_offset:150273*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150273*0 + 3*171*FLEN/8, x4, x1, x2)

inst_50092:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5000000fffffff; valaddr_reg:x3; val_offset:150276*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150276*0 + 3*172*FLEN/8, x4, x1, x2)

inst_50093:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5000001fffffff; valaddr_reg:x3; val_offset:150279*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150279*0 + 3*173*FLEN/8, x4, x1, x2)

inst_50094:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5000003fffffff; valaddr_reg:x3; val_offset:150282*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150282*0 + 3*174*FLEN/8, x4, x1, x2)

inst_50095:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5000007fffffff; valaddr_reg:x3; val_offset:150285*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150285*0 + 3*175*FLEN/8, x4, x1, x2)

inst_50096:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf500000ffffffff; valaddr_reg:x3; val_offset:150288*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150288*0 + 3*176*FLEN/8, x4, x1, x2)

inst_50097:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf500001ffffffff; valaddr_reg:x3; val_offset:150291*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150291*0 + 3*177*FLEN/8, x4, x1, x2)

inst_50098:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf500003ffffffff; valaddr_reg:x3; val_offset:150294*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150294*0 + 3*178*FLEN/8, x4, x1, x2)

inst_50099:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf500007ffffffff; valaddr_reg:x3; val_offset:150297*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150297*0 + 3*179*FLEN/8, x4, x1, x2)

inst_50100:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf50000fffffffff; valaddr_reg:x3; val_offset:150300*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150300*0 + 3*180*FLEN/8, x4, x1, x2)

inst_50101:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf50001fffffffff; valaddr_reg:x3; val_offset:150303*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150303*0 + 3*181*FLEN/8, x4, x1, x2)

inst_50102:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf50003fffffffff; valaddr_reg:x3; val_offset:150306*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150306*0 + 3*182*FLEN/8, x4, x1, x2)

inst_50103:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf50007fffffffff; valaddr_reg:x3; val_offset:150309*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150309*0 + 3*183*FLEN/8, x4, x1, x2)

inst_50104:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5000ffffffffff; valaddr_reg:x3; val_offset:150312*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150312*0 + 3*184*FLEN/8, x4, x1, x2)

inst_50105:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5001ffffffffff; valaddr_reg:x3; val_offset:150315*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150315*0 + 3*185*FLEN/8, x4, x1, x2)

inst_50106:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5003ffffffffff; valaddr_reg:x3; val_offset:150318*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150318*0 + 3*186*FLEN/8, x4, x1, x2)

inst_50107:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5007ffffffffff; valaddr_reg:x3; val_offset:150321*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150321*0 + 3*187*FLEN/8, x4, x1, x2)

inst_50108:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf500fffffffffff; valaddr_reg:x3; val_offset:150324*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150324*0 + 3*188*FLEN/8, x4, x1, x2)

inst_50109:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf501fffffffffff; valaddr_reg:x3; val_offset:150327*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150327*0 + 3*189*FLEN/8, x4, x1, x2)

inst_50110:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf503fffffffffff; valaddr_reg:x3; val_offset:150330*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150330*0 + 3*190*FLEN/8, x4, x1, x2)

inst_50111:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf507fffffffffff; valaddr_reg:x3; val_offset:150333*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150333*0 + 3*191*FLEN/8, x4, x1, x2)

inst_50112:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf50ffffffffffff; valaddr_reg:x3; val_offset:150336*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150336*0 + 3*192*FLEN/8, x4, x1, x2)

inst_50113:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf51ffffffffffff; valaddr_reg:x3; val_offset:150339*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150339*0 + 3*193*FLEN/8, x4, x1, x2)

inst_50114:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf53ffffffffffff; valaddr_reg:x3; val_offset:150342*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150342*0 + 3*194*FLEN/8, x4, x1, x2)

inst_50115:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf57ffffffffffff; valaddr_reg:x3; val_offset:150345*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150345*0 + 3*195*FLEN/8, x4, x1, x2)

inst_50116:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf58000000000000; valaddr_reg:x3; val_offset:150348*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150348*0 + 3*196*FLEN/8, x4, x1, x2)

inst_50117:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5c000000000000; valaddr_reg:x3; val_offset:150351*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150351*0 + 3*197*FLEN/8, x4, x1, x2)

inst_50118:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5e000000000000; valaddr_reg:x3; val_offset:150354*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150354*0 + 3*198*FLEN/8, x4, x1, x2)

inst_50119:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5f000000000000; valaddr_reg:x3; val_offset:150357*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150357*0 + 3*199*FLEN/8, x4, x1, x2)

inst_50120:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5f800000000000; valaddr_reg:x3; val_offset:150360*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150360*0 + 3*200*FLEN/8, x4, x1, x2)

inst_50121:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5fc00000000000; valaddr_reg:x3; val_offset:150363*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150363*0 + 3*201*FLEN/8, x4, x1, x2)

inst_50122:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5fe00000000000; valaddr_reg:x3; val_offset:150366*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150366*0 + 3*202*FLEN/8, x4, x1, x2)

inst_50123:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5ff00000000000; valaddr_reg:x3; val_offset:150369*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150369*0 + 3*203*FLEN/8, x4, x1, x2)

inst_50124:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5ff80000000000; valaddr_reg:x3; val_offset:150372*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150372*0 + 3*204*FLEN/8, x4, x1, x2)

inst_50125:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5ffc0000000000; valaddr_reg:x3; val_offset:150375*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150375*0 + 3*205*FLEN/8, x4, x1, x2)

inst_50126:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5ffe0000000000; valaddr_reg:x3; val_offset:150378*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150378*0 + 3*206*FLEN/8, x4, x1, x2)

inst_50127:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5fff0000000000; valaddr_reg:x3; val_offset:150381*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150381*0 + 3*207*FLEN/8, x4, x1, x2)

inst_50128:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5fff8000000000; valaddr_reg:x3; val_offset:150384*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150384*0 + 3*208*FLEN/8, x4, x1, x2)

inst_50129:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5fffc000000000; valaddr_reg:x3; val_offset:150387*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150387*0 + 3*209*FLEN/8, x4, x1, x2)

inst_50130:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5fffe000000000; valaddr_reg:x3; val_offset:150390*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150390*0 + 3*210*FLEN/8, x4, x1, x2)

inst_50131:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5ffff000000000; valaddr_reg:x3; val_offset:150393*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150393*0 + 3*211*FLEN/8, x4, x1, x2)

inst_50132:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5ffff800000000; valaddr_reg:x3; val_offset:150396*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150396*0 + 3*212*FLEN/8, x4, x1, x2)

inst_50133:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5ffffc00000000; valaddr_reg:x3; val_offset:150399*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150399*0 + 3*213*FLEN/8, x4, x1, x2)

inst_50134:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5ffffe00000000; valaddr_reg:x3; val_offset:150402*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150402*0 + 3*214*FLEN/8, x4, x1, x2)

inst_50135:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5fffff00000000; valaddr_reg:x3; val_offset:150405*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150405*0 + 3*215*FLEN/8, x4, x1, x2)

inst_50136:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5fffff80000000; valaddr_reg:x3; val_offset:150408*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150408*0 + 3*216*FLEN/8, x4, x1, x2)

inst_50137:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5fffffc0000000; valaddr_reg:x3; val_offset:150411*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150411*0 + 3*217*FLEN/8, x4, x1, x2)

inst_50138:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5fffffe0000000; valaddr_reg:x3; val_offset:150414*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150414*0 + 3*218*FLEN/8, x4, x1, x2)

inst_50139:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5ffffff0000000; valaddr_reg:x3; val_offset:150417*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150417*0 + 3*219*FLEN/8, x4, x1, x2)

inst_50140:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5ffffff8000000; valaddr_reg:x3; val_offset:150420*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150420*0 + 3*220*FLEN/8, x4, x1, x2)

inst_50141:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5ffffffc000000; valaddr_reg:x3; val_offset:150423*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150423*0 + 3*221*FLEN/8, x4, x1, x2)

inst_50142:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5ffffffe000000; valaddr_reg:x3; val_offset:150426*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150426*0 + 3*222*FLEN/8, x4, x1, x2)

inst_50143:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5fffffff000000; valaddr_reg:x3; val_offset:150429*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150429*0 + 3*223*FLEN/8, x4, x1, x2)

inst_50144:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5fffffff800000; valaddr_reg:x3; val_offset:150432*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150432*0 + 3*224*FLEN/8, x4, x1, x2)

inst_50145:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5fffffffc00000; valaddr_reg:x3; val_offset:150435*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150435*0 + 3*225*FLEN/8, x4, x1, x2)

inst_50146:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5fffffffe00000; valaddr_reg:x3; val_offset:150438*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150438*0 + 3*226*FLEN/8, x4, x1, x2)

inst_50147:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5ffffffff00000; valaddr_reg:x3; val_offset:150441*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150441*0 + 3*227*FLEN/8, x4, x1, x2)

inst_50148:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5ffffffff80000; valaddr_reg:x3; val_offset:150444*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150444*0 + 3*228*FLEN/8, x4, x1, x2)

inst_50149:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5ffffffffc0000; valaddr_reg:x3; val_offset:150447*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150447*0 + 3*229*FLEN/8, x4, x1, x2)

inst_50150:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5ffffffffe0000; valaddr_reg:x3; val_offset:150450*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150450*0 + 3*230*FLEN/8, x4, x1, x2)

inst_50151:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5fffffffff0000; valaddr_reg:x3; val_offset:150453*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150453*0 + 3*231*FLEN/8, x4, x1, x2)

inst_50152:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5fffffffff8000; valaddr_reg:x3; val_offset:150456*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150456*0 + 3*232*FLEN/8, x4, x1, x2)

inst_50153:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5fffffffffc000; valaddr_reg:x3; val_offset:150459*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150459*0 + 3*233*FLEN/8, x4, x1, x2)

inst_50154:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5fffffffffe000; valaddr_reg:x3; val_offset:150462*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150462*0 + 3*234*FLEN/8, x4, x1, x2)

inst_50155:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5ffffffffff000; valaddr_reg:x3; val_offset:150465*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150465*0 + 3*235*FLEN/8, x4, x1, x2)

inst_50156:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5ffffffffff800; valaddr_reg:x3; val_offset:150468*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150468*0 + 3*236*FLEN/8, x4, x1, x2)

inst_50157:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5ffffffffffc00; valaddr_reg:x3; val_offset:150471*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150471*0 + 3*237*FLEN/8, x4, x1, x2)

inst_50158:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5ffffffffffe00; valaddr_reg:x3; val_offset:150474*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150474*0 + 3*238*FLEN/8, x4, x1, x2)

inst_50159:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5fffffffffff00; valaddr_reg:x3; val_offset:150477*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150477*0 + 3*239*FLEN/8, x4, x1, x2)

inst_50160:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5fffffffffff80; valaddr_reg:x3; val_offset:150480*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150480*0 + 3*240*FLEN/8, x4, x1, x2)

inst_50161:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5fffffffffffc0; valaddr_reg:x3; val_offset:150483*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150483*0 + 3*241*FLEN/8, x4, x1, x2)

inst_50162:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5fffffffffffe0; valaddr_reg:x3; val_offset:150486*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150486*0 + 3*242*FLEN/8, x4, x1, x2)

inst_50163:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5ffffffffffff0; valaddr_reg:x3; val_offset:150489*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150489*0 + 3*243*FLEN/8, x4, x1, x2)

inst_50164:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5ffffffffffff8; valaddr_reg:x3; val_offset:150492*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150492*0 + 3*244*FLEN/8, x4, x1, x2)

inst_50165:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5ffffffffffffc; valaddr_reg:x3; val_offset:150495*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150495*0 + 3*245*FLEN/8, x4, x1, x2)

inst_50166:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5ffffffffffffe; valaddr_reg:x3; val_offset:150498*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150498*0 + 3*246*FLEN/8, x4, x1, x2)

inst_50167:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf5fffffffffffff; valaddr_reg:x3; val_offset:150501*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150501*0 + 3*247*FLEN/8, x4, x1, x2)

inst_50168:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:150504*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150504*0 + 3*248*FLEN/8, x4, x1, x2)

inst_50169:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:150507*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150507*0 + 3*249*FLEN/8, x4, x1, x2)

inst_50170:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:150510*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150510*0 + 3*250*FLEN/8, x4, x1, x2)

inst_50171:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:150513*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150513*0 + 3*251*FLEN/8, x4, x1, x2)

inst_50172:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:150516*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150516*0 + 3*252*FLEN/8, x4, x1, x2)

inst_50173:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:150519*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150519*0 + 3*253*FLEN/8, x4, x1, x2)

inst_50174:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:150522*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150522*0 + 3*254*FLEN/8, x4, x1, x2)

inst_50175:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:150525*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150525*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_50176:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:150528*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150528*0 + 3*256*FLEN/8, x4, x1, x2)

inst_50177:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:150531*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150531*0 + 3*257*FLEN/8, x4, x1, x2)

inst_50178:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:150534*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150534*0 + 3*258*FLEN/8, x4, x1, x2)

inst_50179:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:150537*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150537*0 + 3*259*FLEN/8, x4, x1, x2)

inst_50180:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:150540*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150540*0 + 3*260*FLEN/8, x4, x1, x2)

inst_50181:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:150543*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150543*0 + 3*261*FLEN/8, x4, x1, x2)

inst_50182:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:150546*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150546*0 + 3*262*FLEN/8, x4, x1, x2)

inst_50183:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:150549*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150549*0 + 3*263*FLEN/8, x4, x1, x2)

inst_50184:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:150552*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150552*0 + 3*264*FLEN/8, x4, x1, x2)

inst_50185:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:150555*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150555*0 + 3*265*FLEN/8, x4, x1, x2)

inst_50186:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:150558*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150558*0 + 3*266*FLEN/8, x4, x1, x2)

inst_50187:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:150561*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150561*0 + 3*267*FLEN/8, x4, x1, x2)

inst_50188:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:150564*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150564*0 + 3*268*FLEN/8, x4, x1, x2)

inst_50189:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xedc9646c3914b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x09714b409ed64 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9edc9646c3914b; op2val:0x9fd09714b409ed64;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:150567*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150567*0 + 3*269*FLEN/8, x4, x1, x2)

inst_50190:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:150570*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150570*0 + 3*270*FLEN/8, x4, x1, x2)

inst_50191:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:150573*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150573*0 + 3*271*FLEN/8, x4, x1, x2)

inst_50192:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:150576*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150576*0 + 3*272*FLEN/8, x4, x1, x2)

inst_50193:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:150579*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150579*0 + 3*273*FLEN/8, x4, x1, x2)

inst_50194:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:150582*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150582*0 + 3*274*FLEN/8, x4, x1, x2)

inst_50195:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:150585*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150585*0 + 3*275*FLEN/8, x4, x1, x2)

inst_50196:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:150588*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150588*0 + 3*276*FLEN/8, x4, x1, x2)

inst_50197:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:150591*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150591*0 + 3*277*FLEN/8, x4, x1, x2)

inst_50198:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:150594*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150594*0 + 3*278*FLEN/8, x4, x1, x2)

inst_50199:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:150597*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150597*0 + 3*279*FLEN/8, x4, x1, x2)

inst_50200:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:150600*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150600*0 + 3*280*FLEN/8, x4, x1, x2)

inst_50201:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:150603*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150603*0 + 3*281*FLEN/8, x4, x1, x2)

inst_50202:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:150606*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150606*0 + 3*282*FLEN/8, x4, x1, x2)

inst_50203:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:150609*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150609*0 + 3*283*FLEN/8, x4, x1, x2)

inst_50204:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:150612*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150612*0 + 3*284*FLEN/8, x4, x1, x2)

inst_50205:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:150615*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150615*0 + 3*285*FLEN/8, x4, x1, x2)

inst_50206:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:150618*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150618*0 + 3*286*FLEN/8, x4, x1, x2)

inst_50207:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:150621*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150621*0 + 3*287*FLEN/8, x4, x1, x2)

inst_50208:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:150624*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150624*0 + 3*288*FLEN/8, x4, x1, x2)

inst_50209:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:150627*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150627*0 + 3*289*FLEN/8, x4, x1, x2)

inst_50210:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:150630*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150630*0 + 3*290*FLEN/8, x4, x1, x2)

inst_50211:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:150633*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150633*0 + 3*291*FLEN/8, x4, x1, x2)

inst_50212:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x20000000000000; valaddr_reg:x3; val_offset:150636*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150636*0 + 3*292*FLEN/8, x4, x1, x2)

inst_50213:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x20000000000001; valaddr_reg:x3; val_offset:150639*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150639*0 + 3*293*FLEN/8, x4, x1, x2)

inst_50214:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x20000000000003; valaddr_reg:x3; val_offset:150642*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150642*0 + 3*294*FLEN/8, x4, x1, x2)

inst_50215:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x20000000000007; valaddr_reg:x3; val_offset:150645*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150645*0 + 3*295*FLEN/8, x4, x1, x2)

inst_50216:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2000000000000f; valaddr_reg:x3; val_offset:150648*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150648*0 + 3*296*FLEN/8, x4, x1, x2)

inst_50217:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2000000000001f; valaddr_reg:x3; val_offset:150651*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150651*0 + 3*297*FLEN/8, x4, x1, x2)

inst_50218:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2000000000003f; valaddr_reg:x3; val_offset:150654*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150654*0 + 3*298*FLEN/8, x4, x1, x2)

inst_50219:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2000000000007f; valaddr_reg:x3; val_offset:150657*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150657*0 + 3*299*FLEN/8, x4, x1, x2)

inst_50220:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x200000000000ff; valaddr_reg:x3; val_offset:150660*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150660*0 + 3*300*FLEN/8, x4, x1, x2)

inst_50221:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x200000000001ff; valaddr_reg:x3; val_offset:150663*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150663*0 + 3*301*FLEN/8, x4, x1, x2)

inst_50222:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x200000000003ff; valaddr_reg:x3; val_offset:150666*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150666*0 + 3*302*FLEN/8, x4, x1, x2)

inst_50223:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x200000000007ff; valaddr_reg:x3; val_offset:150669*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150669*0 + 3*303*FLEN/8, x4, x1, x2)

inst_50224:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x20000000000fff; valaddr_reg:x3; val_offset:150672*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150672*0 + 3*304*FLEN/8, x4, x1, x2)

inst_50225:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x20000000001fff; valaddr_reg:x3; val_offset:150675*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150675*0 + 3*305*FLEN/8, x4, x1, x2)

inst_50226:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x20000000003fff; valaddr_reg:x3; val_offset:150678*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150678*0 + 3*306*FLEN/8, x4, x1, x2)

inst_50227:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x20000000007fff; valaddr_reg:x3; val_offset:150681*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150681*0 + 3*307*FLEN/8, x4, x1, x2)

inst_50228:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2000000000ffff; valaddr_reg:x3; val_offset:150684*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150684*0 + 3*308*FLEN/8, x4, x1, x2)

inst_50229:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2000000001ffff; valaddr_reg:x3; val_offset:150687*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150687*0 + 3*309*FLEN/8, x4, x1, x2)

inst_50230:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2000000003ffff; valaddr_reg:x3; val_offset:150690*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150690*0 + 3*310*FLEN/8, x4, x1, x2)

inst_50231:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2000000007ffff; valaddr_reg:x3; val_offset:150693*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150693*0 + 3*311*FLEN/8, x4, x1, x2)

inst_50232:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x200000000fffff; valaddr_reg:x3; val_offset:150696*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150696*0 + 3*312*FLEN/8, x4, x1, x2)

inst_50233:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x200000001fffff; valaddr_reg:x3; val_offset:150699*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150699*0 + 3*313*FLEN/8, x4, x1, x2)

inst_50234:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x200000003fffff; valaddr_reg:x3; val_offset:150702*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150702*0 + 3*314*FLEN/8, x4, x1, x2)

inst_50235:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x200000007fffff; valaddr_reg:x3; val_offset:150705*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150705*0 + 3*315*FLEN/8, x4, x1, x2)

inst_50236:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x20000000ffffff; valaddr_reg:x3; val_offset:150708*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150708*0 + 3*316*FLEN/8, x4, x1, x2)

inst_50237:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x20000001ffffff; valaddr_reg:x3; val_offset:150711*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150711*0 + 3*317*FLEN/8, x4, x1, x2)

inst_50238:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x20000003ffffff; valaddr_reg:x3; val_offset:150714*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150714*0 + 3*318*FLEN/8, x4, x1, x2)

inst_50239:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x20000007ffffff; valaddr_reg:x3; val_offset:150717*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150717*0 + 3*319*FLEN/8, x4, x1, x2)

inst_50240:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2000000fffffff; valaddr_reg:x3; val_offset:150720*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150720*0 + 3*320*FLEN/8, x4, x1, x2)

inst_50241:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2000001fffffff; valaddr_reg:x3; val_offset:150723*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150723*0 + 3*321*FLEN/8, x4, x1, x2)

inst_50242:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2000003fffffff; valaddr_reg:x3; val_offset:150726*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150726*0 + 3*322*FLEN/8, x4, x1, x2)

inst_50243:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2000007fffffff; valaddr_reg:x3; val_offset:150729*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150729*0 + 3*323*FLEN/8, x4, x1, x2)

inst_50244:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x200000ffffffff; valaddr_reg:x3; val_offset:150732*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150732*0 + 3*324*FLEN/8, x4, x1, x2)

inst_50245:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x200001ffffffff; valaddr_reg:x3; val_offset:150735*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150735*0 + 3*325*FLEN/8, x4, x1, x2)

inst_50246:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x200003ffffffff; valaddr_reg:x3; val_offset:150738*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150738*0 + 3*326*FLEN/8, x4, x1, x2)

inst_50247:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x200007ffffffff; valaddr_reg:x3; val_offset:150741*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150741*0 + 3*327*FLEN/8, x4, x1, x2)

inst_50248:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x20000fffffffff; valaddr_reg:x3; val_offset:150744*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150744*0 + 3*328*FLEN/8, x4, x1, x2)

inst_50249:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x20001fffffffff; valaddr_reg:x3; val_offset:150747*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150747*0 + 3*329*FLEN/8, x4, x1, x2)

inst_50250:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x20003fffffffff; valaddr_reg:x3; val_offset:150750*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150750*0 + 3*330*FLEN/8, x4, x1, x2)

inst_50251:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x20007fffffffff; valaddr_reg:x3; val_offset:150753*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150753*0 + 3*331*FLEN/8, x4, x1, x2)

inst_50252:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2000ffffffffff; valaddr_reg:x3; val_offset:150756*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150756*0 + 3*332*FLEN/8, x4, x1, x2)

inst_50253:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2001ffffffffff; valaddr_reg:x3; val_offset:150759*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150759*0 + 3*333*FLEN/8, x4, x1, x2)

inst_50254:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2003ffffffffff; valaddr_reg:x3; val_offset:150762*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150762*0 + 3*334*FLEN/8, x4, x1, x2)

inst_50255:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2007ffffffffff; valaddr_reg:x3; val_offset:150765*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150765*0 + 3*335*FLEN/8, x4, x1, x2)

inst_50256:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x200fffffffffff; valaddr_reg:x3; val_offset:150768*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150768*0 + 3*336*FLEN/8, x4, x1, x2)

inst_50257:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x201fffffffffff; valaddr_reg:x3; val_offset:150771*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150771*0 + 3*337*FLEN/8, x4, x1, x2)

inst_50258:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x203fffffffffff; valaddr_reg:x3; val_offset:150774*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150774*0 + 3*338*FLEN/8, x4, x1, x2)

inst_50259:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x207fffffffffff; valaddr_reg:x3; val_offset:150777*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150777*0 + 3*339*FLEN/8, x4, x1, x2)

inst_50260:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x20ffffffffffff; valaddr_reg:x3; val_offset:150780*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150780*0 + 3*340*FLEN/8, x4, x1, x2)

inst_50261:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x21ffffffffffff; valaddr_reg:x3; val_offset:150783*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150783*0 + 3*341*FLEN/8, x4, x1, x2)

inst_50262:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x23ffffffffffff; valaddr_reg:x3; val_offset:150786*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150786*0 + 3*342*FLEN/8, x4, x1, x2)

inst_50263:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x27ffffffffffff; valaddr_reg:x3; val_offset:150789*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150789*0 + 3*343*FLEN/8, x4, x1, x2)

inst_50264:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x28000000000000; valaddr_reg:x3; val_offset:150792*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150792*0 + 3*344*FLEN/8, x4, x1, x2)

inst_50265:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2c000000000000; valaddr_reg:x3; val_offset:150795*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150795*0 + 3*345*FLEN/8, x4, x1, x2)

inst_50266:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2e000000000000; valaddr_reg:x3; val_offset:150798*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150798*0 + 3*346*FLEN/8, x4, x1, x2)

inst_50267:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2f000000000000; valaddr_reg:x3; val_offset:150801*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150801*0 + 3*347*FLEN/8, x4, x1, x2)

inst_50268:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2f800000000000; valaddr_reg:x3; val_offset:150804*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150804*0 + 3*348*FLEN/8, x4, x1, x2)

inst_50269:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2fc00000000000; valaddr_reg:x3; val_offset:150807*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150807*0 + 3*349*FLEN/8, x4, x1, x2)

inst_50270:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2fe00000000000; valaddr_reg:x3; val_offset:150810*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150810*0 + 3*350*FLEN/8, x4, x1, x2)

inst_50271:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2ff00000000000; valaddr_reg:x3; val_offset:150813*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150813*0 + 3*351*FLEN/8, x4, x1, x2)

inst_50272:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2ff80000000000; valaddr_reg:x3; val_offset:150816*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150816*0 + 3*352*FLEN/8, x4, x1, x2)

inst_50273:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2ffc0000000000; valaddr_reg:x3; val_offset:150819*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150819*0 + 3*353*FLEN/8, x4, x1, x2)

inst_50274:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2ffe0000000000; valaddr_reg:x3; val_offset:150822*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150822*0 + 3*354*FLEN/8, x4, x1, x2)

inst_50275:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2fff0000000000; valaddr_reg:x3; val_offset:150825*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150825*0 + 3*355*FLEN/8, x4, x1, x2)

inst_50276:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2fff8000000000; valaddr_reg:x3; val_offset:150828*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150828*0 + 3*356*FLEN/8, x4, x1, x2)

inst_50277:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2fffc000000000; valaddr_reg:x3; val_offset:150831*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150831*0 + 3*357*FLEN/8, x4, x1, x2)

inst_50278:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2fffe000000000; valaddr_reg:x3; val_offset:150834*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150834*0 + 3*358*FLEN/8, x4, x1, x2)

inst_50279:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2ffff000000000; valaddr_reg:x3; val_offset:150837*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150837*0 + 3*359*FLEN/8, x4, x1, x2)

inst_50280:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2ffff800000000; valaddr_reg:x3; val_offset:150840*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150840*0 + 3*360*FLEN/8, x4, x1, x2)

inst_50281:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2ffffc00000000; valaddr_reg:x3; val_offset:150843*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150843*0 + 3*361*FLEN/8, x4, x1, x2)

inst_50282:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2ffffe00000000; valaddr_reg:x3; val_offset:150846*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150846*0 + 3*362*FLEN/8, x4, x1, x2)

inst_50283:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2fffff00000000; valaddr_reg:x3; val_offset:150849*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150849*0 + 3*363*FLEN/8, x4, x1, x2)

inst_50284:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2fffff80000000; valaddr_reg:x3; val_offset:150852*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150852*0 + 3*364*FLEN/8, x4, x1, x2)

inst_50285:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2fffffc0000000; valaddr_reg:x3; val_offset:150855*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150855*0 + 3*365*FLEN/8, x4, x1, x2)

inst_50286:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2fffffe0000000; valaddr_reg:x3; val_offset:150858*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150858*0 + 3*366*FLEN/8, x4, x1, x2)

inst_50287:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2ffffff0000000; valaddr_reg:x3; val_offset:150861*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150861*0 + 3*367*FLEN/8, x4, x1, x2)

inst_50288:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2ffffff8000000; valaddr_reg:x3; val_offset:150864*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150864*0 + 3*368*FLEN/8, x4, x1, x2)

inst_50289:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2ffffffc000000; valaddr_reg:x3; val_offset:150867*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150867*0 + 3*369*FLEN/8, x4, x1, x2)

inst_50290:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2ffffffe000000; valaddr_reg:x3; val_offset:150870*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150870*0 + 3*370*FLEN/8, x4, x1, x2)

inst_50291:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2fffffff000000; valaddr_reg:x3; val_offset:150873*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150873*0 + 3*371*FLEN/8, x4, x1, x2)

inst_50292:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2fffffff800000; valaddr_reg:x3; val_offset:150876*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150876*0 + 3*372*FLEN/8, x4, x1, x2)

inst_50293:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2fffffffc00000; valaddr_reg:x3; val_offset:150879*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150879*0 + 3*373*FLEN/8, x4, x1, x2)

inst_50294:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2fffffffe00000; valaddr_reg:x3; val_offset:150882*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150882*0 + 3*374*FLEN/8, x4, x1, x2)

inst_50295:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2ffffffff00000; valaddr_reg:x3; val_offset:150885*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150885*0 + 3*375*FLEN/8, x4, x1, x2)

inst_50296:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2ffffffff80000; valaddr_reg:x3; val_offset:150888*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150888*0 + 3*376*FLEN/8, x4, x1, x2)

inst_50297:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2ffffffffc0000; valaddr_reg:x3; val_offset:150891*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150891*0 + 3*377*FLEN/8, x4, x1, x2)

inst_50298:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2ffffffffe0000; valaddr_reg:x3; val_offset:150894*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150894*0 + 3*378*FLEN/8, x4, x1, x2)

inst_50299:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2fffffffff0000; valaddr_reg:x3; val_offset:150897*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150897*0 + 3*379*FLEN/8, x4, x1, x2)

inst_50300:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2fffffffff8000; valaddr_reg:x3; val_offset:150900*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150900*0 + 3*380*FLEN/8, x4, x1, x2)

inst_50301:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2fffffffffc000; valaddr_reg:x3; val_offset:150903*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150903*0 + 3*381*FLEN/8, x4, x1, x2)

inst_50302:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2fffffffffe000; valaddr_reg:x3; val_offset:150906*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150906*0 + 3*382*FLEN/8, x4, x1, x2)

inst_50303:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2ffffffffff000; valaddr_reg:x3; val_offset:150909*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150909*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_50304:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2ffffffffff800; valaddr_reg:x3; val_offset:150912*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150912*0 + 3*384*FLEN/8, x4, x1, x2)

inst_50305:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2ffffffffffc00; valaddr_reg:x3; val_offset:150915*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150915*0 + 3*385*FLEN/8, x4, x1, x2)

inst_50306:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2ffffffffffe00; valaddr_reg:x3; val_offset:150918*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150918*0 + 3*386*FLEN/8, x4, x1, x2)

inst_50307:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2fffffffffff00; valaddr_reg:x3; val_offset:150921*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150921*0 + 3*387*FLEN/8, x4, x1, x2)

inst_50308:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2fffffffffff80; valaddr_reg:x3; val_offset:150924*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150924*0 + 3*388*FLEN/8, x4, x1, x2)

inst_50309:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2fffffffffffc0; valaddr_reg:x3; val_offset:150927*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150927*0 + 3*389*FLEN/8, x4, x1, x2)

inst_50310:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2fffffffffffe0; valaddr_reg:x3; val_offset:150930*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150930*0 + 3*390*FLEN/8, x4, x1, x2)

inst_50311:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2ffffffffffff0; valaddr_reg:x3; val_offset:150933*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150933*0 + 3*391*FLEN/8, x4, x1, x2)

inst_50312:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2ffffffffffff8; valaddr_reg:x3; val_offset:150936*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150936*0 + 3*392*FLEN/8, x4, x1, x2)

inst_50313:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2ffffffffffffc; valaddr_reg:x3; val_offset:150939*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150939*0 + 3*393*FLEN/8, x4, x1, x2)

inst_50314:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2ffffffffffffe; valaddr_reg:x3; val_offset:150942*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150942*0 + 3*394*FLEN/8, x4, x1, x2)

inst_50315:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf19707b3d4e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f19707b3d4e19; op2val:0x0;
op3val:0x2fffffffffffff; valaddr_reg:x3; val_offset:150945*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150945*0 + 3*395*FLEN/8, x4, x1, x2)

inst_50316:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:150948*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150948*0 + 3*396*FLEN/8, x4, x1, x2)

inst_50317:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:150951*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150951*0 + 3*397*FLEN/8, x4, x1, x2)

inst_50318:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:150954*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150954*0 + 3*398*FLEN/8, x4, x1, x2)

inst_50319:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:150957*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150957*0 + 3*399*FLEN/8, x4, x1, x2)

inst_50320:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:150960*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150960*0 + 3*400*FLEN/8, x4, x1, x2)

inst_50321:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:150963*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150963*0 + 3*401*FLEN/8, x4, x1, x2)

inst_50322:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:150966*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150966*0 + 3*402*FLEN/8, x4, x1, x2)

inst_50323:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:150969*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150969*0 + 3*403*FLEN/8, x4, x1, x2)

inst_50324:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:150972*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150972*0 + 3*404*FLEN/8, x4, x1, x2)

inst_50325:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:150975*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150975*0 + 3*405*FLEN/8, x4, x1, x2)

inst_50326:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:150978*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150978*0 + 3*406*FLEN/8, x4, x1, x2)

inst_50327:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:150981*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150981*0 + 3*407*FLEN/8, x4, x1, x2)

inst_50328:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:150984*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150984*0 + 3*408*FLEN/8, x4, x1, x2)

inst_50329:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:150987*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150987*0 + 3*409*FLEN/8, x4, x1, x2)

inst_50330:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:150990*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150990*0 + 3*410*FLEN/8, x4, x1, x2)

inst_50331:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:150993*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150993*0 + 3*411*FLEN/8, x4, x1, x2)

inst_50332:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:150996*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150996*0 + 3*412*FLEN/8, x4, x1, x2)

inst_50333:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:150999*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150999*0 + 3*413*FLEN/8, x4, x1, x2)

inst_50334:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:151002*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151002*0 + 3*414*FLEN/8, x4, x1, x2)

inst_50335:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:151005*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151005*0 + 3*415*FLEN/8, x4, x1, x2)

inst_50336:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:151008*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151008*0 + 3*416*FLEN/8, x4, x1, x2)

inst_50337:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:151011*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151011*0 + 3*417*FLEN/8, x4, x1, x2)

inst_50338:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81d0000000000000; valaddr_reg:x3; val_offset:151014*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151014*0 + 3*418*FLEN/8, x4, x1, x2)

inst_50339:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81d0000000000001; valaddr_reg:x3; val_offset:151017*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151017*0 + 3*419*FLEN/8, x4, x1, x2)

inst_50340:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81d0000000000003; valaddr_reg:x3; val_offset:151020*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151020*0 + 3*420*FLEN/8, x4, x1, x2)

inst_50341:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81d0000000000007; valaddr_reg:x3; val_offset:151023*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151023*0 + 3*421*FLEN/8, x4, x1, x2)

inst_50342:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81d000000000000f; valaddr_reg:x3; val_offset:151026*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151026*0 + 3*422*FLEN/8, x4, x1, x2)

inst_50343:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81d000000000001f; valaddr_reg:x3; val_offset:151029*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151029*0 + 3*423*FLEN/8, x4, x1, x2)

inst_50344:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81d000000000003f; valaddr_reg:x3; val_offset:151032*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151032*0 + 3*424*FLEN/8, x4, x1, x2)

inst_50345:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81d000000000007f; valaddr_reg:x3; val_offset:151035*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151035*0 + 3*425*FLEN/8, x4, x1, x2)

inst_50346:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81d00000000000ff; valaddr_reg:x3; val_offset:151038*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151038*0 + 3*426*FLEN/8, x4, x1, x2)

inst_50347:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81d00000000001ff; valaddr_reg:x3; val_offset:151041*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151041*0 + 3*427*FLEN/8, x4, x1, x2)

inst_50348:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81d00000000003ff; valaddr_reg:x3; val_offset:151044*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151044*0 + 3*428*FLEN/8, x4, x1, x2)

inst_50349:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81d00000000007ff; valaddr_reg:x3; val_offset:151047*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151047*0 + 3*429*FLEN/8, x4, x1, x2)

inst_50350:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81d0000000000fff; valaddr_reg:x3; val_offset:151050*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151050*0 + 3*430*FLEN/8, x4, x1, x2)

inst_50351:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81d0000000001fff; valaddr_reg:x3; val_offset:151053*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151053*0 + 3*431*FLEN/8, x4, x1, x2)

inst_50352:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81d0000000003fff; valaddr_reg:x3; val_offset:151056*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151056*0 + 3*432*FLEN/8, x4, x1, x2)

inst_50353:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81d0000000007fff; valaddr_reg:x3; val_offset:151059*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151059*0 + 3*433*FLEN/8, x4, x1, x2)

inst_50354:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81d000000000ffff; valaddr_reg:x3; val_offset:151062*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151062*0 + 3*434*FLEN/8, x4, x1, x2)

inst_50355:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81d000000001ffff; valaddr_reg:x3; val_offset:151065*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151065*0 + 3*435*FLEN/8, x4, x1, x2)

inst_50356:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81d000000003ffff; valaddr_reg:x3; val_offset:151068*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151068*0 + 3*436*FLEN/8, x4, x1, x2)

inst_50357:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81d000000007ffff; valaddr_reg:x3; val_offset:151071*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151071*0 + 3*437*FLEN/8, x4, x1, x2)

inst_50358:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81d00000000fffff; valaddr_reg:x3; val_offset:151074*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151074*0 + 3*438*FLEN/8, x4, x1, x2)

inst_50359:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81d00000001fffff; valaddr_reg:x3; val_offset:151077*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151077*0 + 3*439*FLEN/8, x4, x1, x2)

inst_50360:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81d00000003fffff; valaddr_reg:x3; val_offset:151080*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151080*0 + 3*440*FLEN/8, x4, x1, x2)

inst_50361:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81d00000007fffff; valaddr_reg:x3; val_offset:151083*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151083*0 + 3*441*FLEN/8, x4, x1, x2)

inst_50362:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81d0000000ffffff; valaddr_reg:x3; val_offset:151086*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151086*0 + 3*442*FLEN/8, x4, x1, x2)

inst_50363:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81d0000001ffffff; valaddr_reg:x3; val_offset:151089*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151089*0 + 3*443*FLEN/8, x4, x1, x2)

inst_50364:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81d0000003ffffff; valaddr_reg:x3; val_offset:151092*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151092*0 + 3*444*FLEN/8, x4, x1, x2)

inst_50365:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81d0000007ffffff; valaddr_reg:x3; val_offset:151095*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151095*0 + 3*445*FLEN/8, x4, x1, x2)

inst_50366:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81d000000fffffff; valaddr_reg:x3; val_offset:151098*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151098*0 + 3*446*FLEN/8, x4, x1, x2)

inst_50367:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81d000001fffffff; valaddr_reg:x3; val_offset:151101*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151101*0 + 3*447*FLEN/8, x4, x1, x2)

inst_50368:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81d000003fffffff; valaddr_reg:x3; val_offset:151104*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151104*0 + 3*448*FLEN/8, x4, x1, x2)

inst_50369:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81d000007fffffff; valaddr_reg:x3; val_offset:151107*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151107*0 + 3*449*FLEN/8, x4, x1, x2)

inst_50370:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81d00000ffffffff; valaddr_reg:x3; val_offset:151110*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151110*0 + 3*450*FLEN/8, x4, x1, x2)

inst_50371:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81d00001ffffffff; valaddr_reg:x3; val_offset:151113*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151113*0 + 3*451*FLEN/8, x4, x1, x2)

inst_50372:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81d00003ffffffff; valaddr_reg:x3; val_offset:151116*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151116*0 + 3*452*FLEN/8, x4, x1, x2)

inst_50373:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81d00007ffffffff; valaddr_reg:x3; val_offset:151119*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151119*0 + 3*453*FLEN/8, x4, x1, x2)

inst_50374:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81d0000fffffffff; valaddr_reg:x3; val_offset:151122*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151122*0 + 3*454*FLEN/8, x4, x1, x2)

inst_50375:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81d0001fffffffff; valaddr_reg:x3; val_offset:151125*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151125*0 + 3*455*FLEN/8, x4, x1, x2)

inst_50376:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81d0003fffffffff; valaddr_reg:x3; val_offset:151128*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151128*0 + 3*456*FLEN/8, x4, x1, x2)

inst_50377:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81d0007fffffffff; valaddr_reg:x3; val_offset:151131*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151131*0 + 3*457*FLEN/8, x4, x1, x2)

inst_50378:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81d000ffffffffff; valaddr_reg:x3; val_offset:151134*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151134*0 + 3*458*FLEN/8, x4, x1, x2)

inst_50379:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81d001ffffffffff; valaddr_reg:x3; val_offset:151137*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151137*0 + 3*459*FLEN/8, x4, x1, x2)

inst_50380:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81d003ffffffffff; valaddr_reg:x3; val_offset:151140*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151140*0 + 3*460*FLEN/8, x4, x1, x2)

inst_50381:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81d007ffffffffff; valaddr_reg:x3; val_offset:151143*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151143*0 + 3*461*FLEN/8, x4, x1, x2)

inst_50382:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81d00fffffffffff; valaddr_reg:x3; val_offset:151146*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151146*0 + 3*462*FLEN/8, x4, x1, x2)

inst_50383:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81d01fffffffffff; valaddr_reg:x3; val_offset:151149*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151149*0 + 3*463*FLEN/8, x4, x1, x2)

inst_50384:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81d03fffffffffff; valaddr_reg:x3; val_offset:151152*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151152*0 + 3*464*FLEN/8, x4, x1, x2)

inst_50385:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81d07fffffffffff; valaddr_reg:x3; val_offset:151155*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151155*0 + 3*465*FLEN/8, x4, x1, x2)

inst_50386:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81d0ffffffffffff; valaddr_reg:x3; val_offset:151158*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151158*0 + 3*466*FLEN/8, x4, x1, x2)

inst_50387:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81d1ffffffffffff; valaddr_reg:x3; val_offset:151161*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151161*0 + 3*467*FLEN/8, x4, x1, x2)

inst_50388:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81d3ffffffffffff; valaddr_reg:x3; val_offset:151164*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151164*0 + 3*468*FLEN/8, x4, x1, x2)

inst_50389:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81d7ffffffffffff; valaddr_reg:x3; val_offset:151167*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151167*0 + 3*469*FLEN/8, x4, x1, x2)

inst_50390:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81d8000000000000; valaddr_reg:x3; val_offset:151170*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151170*0 + 3*470*FLEN/8, x4, x1, x2)

inst_50391:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81dc000000000000; valaddr_reg:x3; val_offset:151173*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151173*0 + 3*471*FLEN/8, x4, x1, x2)

inst_50392:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81de000000000000; valaddr_reg:x3; val_offset:151176*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151176*0 + 3*472*FLEN/8, x4, x1, x2)

inst_50393:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81df000000000000; valaddr_reg:x3; val_offset:151179*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151179*0 + 3*473*FLEN/8, x4, x1, x2)

inst_50394:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81df800000000000; valaddr_reg:x3; val_offset:151182*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151182*0 + 3*474*FLEN/8, x4, x1, x2)

inst_50395:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81dfc00000000000; valaddr_reg:x3; val_offset:151185*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151185*0 + 3*475*FLEN/8, x4, x1, x2)

inst_50396:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81dfe00000000000; valaddr_reg:x3; val_offset:151188*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151188*0 + 3*476*FLEN/8, x4, x1, x2)

inst_50397:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81dff00000000000; valaddr_reg:x3; val_offset:151191*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151191*0 + 3*477*FLEN/8, x4, x1, x2)

inst_50398:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81dff80000000000; valaddr_reg:x3; val_offset:151194*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151194*0 + 3*478*FLEN/8, x4, x1, x2)

inst_50399:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81dffc0000000000; valaddr_reg:x3; val_offset:151197*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151197*0 + 3*479*FLEN/8, x4, x1, x2)

inst_50400:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81dffe0000000000; valaddr_reg:x3; val_offset:151200*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151200*0 + 3*480*FLEN/8, x4, x1, x2)

inst_50401:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81dfff0000000000; valaddr_reg:x3; val_offset:151203*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151203*0 + 3*481*FLEN/8, x4, x1, x2)

inst_50402:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81dfff8000000000; valaddr_reg:x3; val_offset:151206*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151206*0 + 3*482*FLEN/8, x4, x1, x2)

inst_50403:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81dfffc000000000; valaddr_reg:x3; val_offset:151209*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151209*0 + 3*483*FLEN/8, x4, x1, x2)

inst_50404:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81dfffe000000000; valaddr_reg:x3; val_offset:151212*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151212*0 + 3*484*FLEN/8, x4, x1, x2)

inst_50405:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81dffff000000000; valaddr_reg:x3; val_offset:151215*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151215*0 + 3*485*FLEN/8, x4, x1, x2)

inst_50406:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81dffff800000000; valaddr_reg:x3; val_offset:151218*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151218*0 + 3*486*FLEN/8, x4, x1, x2)

inst_50407:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81dffffc00000000; valaddr_reg:x3; val_offset:151221*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151221*0 + 3*487*FLEN/8, x4, x1, x2)

inst_50408:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81dffffe00000000; valaddr_reg:x3; val_offset:151224*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151224*0 + 3*488*FLEN/8, x4, x1, x2)

inst_50409:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81dfffff00000000; valaddr_reg:x3; val_offset:151227*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151227*0 + 3*489*FLEN/8, x4, x1, x2)

inst_50410:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81dfffff80000000; valaddr_reg:x3; val_offset:151230*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151230*0 + 3*490*FLEN/8, x4, x1, x2)

inst_50411:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81dfffffc0000000; valaddr_reg:x3; val_offset:151233*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151233*0 + 3*491*FLEN/8, x4, x1, x2)

inst_50412:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81dfffffe0000000; valaddr_reg:x3; val_offset:151236*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151236*0 + 3*492*FLEN/8, x4, x1, x2)

inst_50413:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81dffffff0000000; valaddr_reg:x3; val_offset:151239*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151239*0 + 3*493*FLEN/8, x4, x1, x2)

inst_50414:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81dffffff8000000; valaddr_reg:x3; val_offset:151242*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151242*0 + 3*494*FLEN/8, x4, x1, x2)

inst_50415:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81dffffffc000000; valaddr_reg:x3; val_offset:151245*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151245*0 + 3*495*FLEN/8, x4, x1, x2)

inst_50416:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81dffffffe000000; valaddr_reg:x3; val_offset:151248*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151248*0 + 3*496*FLEN/8, x4, x1, x2)

inst_50417:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81dfffffff000000; valaddr_reg:x3; val_offset:151251*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151251*0 + 3*497*FLEN/8, x4, x1, x2)

inst_50418:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81dfffffff800000; valaddr_reg:x3; val_offset:151254*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151254*0 + 3*498*FLEN/8, x4, x1, x2)

inst_50419:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81dfffffffc00000; valaddr_reg:x3; val_offset:151257*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151257*0 + 3*499*FLEN/8, x4, x1, x2)

inst_50420:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81dfffffffe00000; valaddr_reg:x3; val_offset:151260*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151260*0 + 3*500*FLEN/8, x4, x1, x2)

inst_50421:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81dffffffff00000; valaddr_reg:x3; val_offset:151263*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151263*0 + 3*501*FLEN/8, x4, x1, x2)

inst_50422:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81dffffffff80000; valaddr_reg:x3; val_offset:151266*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151266*0 + 3*502*FLEN/8, x4, x1, x2)

inst_50423:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81dffffffffc0000; valaddr_reg:x3; val_offset:151269*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151269*0 + 3*503*FLEN/8, x4, x1, x2)

inst_50424:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81dffffffffe0000; valaddr_reg:x3; val_offset:151272*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151272*0 + 3*504*FLEN/8, x4, x1, x2)

inst_50425:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81dfffffffff0000; valaddr_reg:x3; val_offset:151275*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151275*0 + 3*505*FLEN/8, x4, x1, x2)

inst_50426:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81dfffffffff8000; valaddr_reg:x3; val_offset:151278*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151278*0 + 3*506*FLEN/8, x4, x1, x2)

inst_50427:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81dfffffffffc000; valaddr_reg:x3; val_offset:151281*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151281*0 + 3*507*FLEN/8, x4, x1, x2)

inst_50428:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81dfffffffffe000; valaddr_reg:x3; val_offset:151284*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151284*0 + 3*508*FLEN/8, x4, x1, x2)

inst_50429:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81dffffffffff000; valaddr_reg:x3; val_offset:151287*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151287*0 + 3*509*FLEN/8, x4, x1, x2)

inst_50430:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81dffffffffff800; valaddr_reg:x3; val_offset:151290*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151290*0 + 3*510*FLEN/8, x4, x1, x2)

inst_50431:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81dffffffffffc00; valaddr_reg:x3; val_offset:151293*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151293*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_50432:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81dffffffffffe00; valaddr_reg:x3; val_offset:151296*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151296*0 + 3*512*FLEN/8, x4, x1, x2)

inst_50433:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81dfffffffffff00; valaddr_reg:x3; val_offset:151299*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151299*0 + 3*513*FLEN/8, x4, x1, x2)

inst_50434:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81dfffffffffff80; valaddr_reg:x3; val_offset:151302*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151302*0 + 3*514*FLEN/8, x4, x1, x2)

inst_50435:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81dfffffffffffc0; valaddr_reg:x3; val_offset:151305*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151305*0 + 3*515*FLEN/8, x4, x1, x2)

inst_50436:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81dfffffffffffe0; valaddr_reg:x3; val_offset:151308*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151308*0 + 3*516*FLEN/8, x4, x1, x2)

inst_50437:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81dffffffffffff0; valaddr_reg:x3; val_offset:151311*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151311*0 + 3*517*FLEN/8, x4, x1, x2)

inst_50438:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81dffffffffffff8; valaddr_reg:x3; val_offset:151314*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151314*0 + 3*518*FLEN/8, x4, x1, x2)

inst_50439:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81dffffffffffffc; valaddr_reg:x3; val_offset:151317*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151317*0 + 3*519*FLEN/8, x4, x1, x2)

inst_50440:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81dffffffffffffe; valaddr_reg:x3; val_offset:151320*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151320*0 + 3*520*FLEN/8, x4, x1, x2)

inst_50441:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f21e6dcb25437; op2val:0x8000;
op3val:0x81dfffffffffffff; valaddr_reg:x3; val_offset:151323*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151323*0 + 3*521*FLEN/8, x4, x1, x2)

inst_50442:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba40000000000000; valaddr_reg:x3; val_offset:151326*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151326*0 + 3*522*FLEN/8, x4, x1, x2)

inst_50443:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba40000000000001; valaddr_reg:x3; val_offset:151329*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151329*0 + 3*523*FLEN/8, x4, x1, x2)

inst_50444:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba40000000000003; valaddr_reg:x3; val_offset:151332*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151332*0 + 3*524*FLEN/8, x4, x1, x2)

inst_50445:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba40000000000007; valaddr_reg:x3; val_offset:151335*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151335*0 + 3*525*FLEN/8, x4, x1, x2)

inst_50446:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4000000000000f; valaddr_reg:x3; val_offset:151338*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151338*0 + 3*526*FLEN/8, x4, x1, x2)

inst_50447:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4000000000001f; valaddr_reg:x3; val_offset:151341*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151341*0 + 3*527*FLEN/8, x4, x1, x2)

inst_50448:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4000000000003f; valaddr_reg:x3; val_offset:151344*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151344*0 + 3*528*FLEN/8, x4, x1, x2)

inst_50449:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4000000000007f; valaddr_reg:x3; val_offset:151347*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151347*0 + 3*529*FLEN/8, x4, x1, x2)

inst_50450:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba400000000000ff; valaddr_reg:x3; val_offset:151350*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151350*0 + 3*530*FLEN/8, x4, x1, x2)

inst_50451:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba400000000001ff; valaddr_reg:x3; val_offset:151353*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151353*0 + 3*531*FLEN/8, x4, x1, x2)

inst_50452:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba400000000003ff; valaddr_reg:x3; val_offset:151356*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151356*0 + 3*532*FLEN/8, x4, x1, x2)

inst_50453:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba400000000007ff; valaddr_reg:x3; val_offset:151359*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151359*0 + 3*533*FLEN/8, x4, x1, x2)

inst_50454:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba40000000000fff; valaddr_reg:x3; val_offset:151362*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151362*0 + 3*534*FLEN/8, x4, x1, x2)

inst_50455:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba40000000001fff; valaddr_reg:x3; val_offset:151365*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151365*0 + 3*535*FLEN/8, x4, x1, x2)

inst_50456:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba40000000003fff; valaddr_reg:x3; val_offset:151368*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151368*0 + 3*536*FLEN/8, x4, x1, x2)

inst_50457:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba40000000007fff; valaddr_reg:x3; val_offset:151371*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151371*0 + 3*537*FLEN/8, x4, x1, x2)

inst_50458:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4000000000ffff; valaddr_reg:x3; val_offset:151374*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151374*0 + 3*538*FLEN/8, x4, x1, x2)

inst_50459:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4000000001ffff; valaddr_reg:x3; val_offset:151377*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151377*0 + 3*539*FLEN/8, x4, x1, x2)

inst_50460:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4000000003ffff; valaddr_reg:x3; val_offset:151380*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151380*0 + 3*540*FLEN/8, x4, x1, x2)

inst_50461:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4000000007ffff; valaddr_reg:x3; val_offset:151383*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151383*0 + 3*541*FLEN/8, x4, x1, x2)

inst_50462:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba400000000fffff; valaddr_reg:x3; val_offset:151386*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151386*0 + 3*542*FLEN/8, x4, x1, x2)

inst_50463:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba400000001fffff; valaddr_reg:x3; val_offset:151389*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151389*0 + 3*543*FLEN/8, x4, x1, x2)

inst_50464:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba400000003fffff; valaddr_reg:x3; val_offset:151392*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151392*0 + 3*544*FLEN/8, x4, x1, x2)

inst_50465:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba400000007fffff; valaddr_reg:x3; val_offset:151395*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151395*0 + 3*545*FLEN/8, x4, x1, x2)

inst_50466:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba40000000ffffff; valaddr_reg:x3; val_offset:151398*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151398*0 + 3*546*FLEN/8, x4, x1, x2)

inst_50467:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba40000001ffffff; valaddr_reg:x3; val_offset:151401*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151401*0 + 3*547*FLEN/8, x4, x1, x2)

inst_50468:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba40000003ffffff; valaddr_reg:x3; val_offset:151404*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151404*0 + 3*548*FLEN/8, x4, x1, x2)

inst_50469:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba40000007ffffff; valaddr_reg:x3; val_offset:151407*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151407*0 + 3*549*FLEN/8, x4, x1, x2)

inst_50470:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4000000fffffff; valaddr_reg:x3; val_offset:151410*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151410*0 + 3*550*FLEN/8, x4, x1, x2)

inst_50471:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4000001fffffff; valaddr_reg:x3; val_offset:151413*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151413*0 + 3*551*FLEN/8, x4, x1, x2)

inst_50472:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4000003fffffff; valaddr_reg:x3; val_offset:151416*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151416*0 + 3*552*FLEN/8, x4, x1, x2)

inst_50473:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4000007fffffff; valaddr_reg:x3; val_offset:151419*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151419*0 + 3*553*FLEN/8, x4, x1, x2)

inst_50474:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba400000ffffffff; valaddr_reg:x3; val_offset:151422*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151422*0 + 3*554*FLEN/8, x4, x1, x2)

inst_50475:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba400001ffffffff; valaddr_reg:x3; val_offset:151425*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151425*0 + 3*555*FLEN/8, x4, x1, x2)

inst_50476:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba400003ffffffff; valaddr_reg:x3; val_offset:151428*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151428*0 + 3*556*FLEN/8, x4, x1, x2)

inst_50477:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba400007ffffffff; valaddr_reg:x3; val_offset:151431*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151431*0 + 3*557*FLEN/8, x4, x1, x2)

inst_50478:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba40000fffffffff; valaddr_reg:x3; val_offset:151434*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151434*0 + 3*558*FLEN/8, x4, x1, x2)

inst_50479:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba40001fffffffff; valaddr_reg:x3; val_offset:151437*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151437*0 + 3*559*FLEN/8, x4, x1, x2)

inst_50480:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba40003fffffffff; valaddr_reg:x3; val_offset:151440*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151440*0 + 3*560*FLEN/8, x4, x1, x2)

inst_50481:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba40007fffffffff; valaddr_reg:x3; val_offset:151443*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151443*0 + 3*561*FLEN/8, x4, x1, x2)

inst_50482:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4000ffffffffff; valaddr_reg:x3; val_offset:151446*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151446*0 + 3*562*FLEN/8, x4, x1, x2)

inst_50483:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4001ffffffffff; valaddr_reg:x3; val_offset:151449*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151449*0 + 3*563*FLEN/8, x4, x1, x2)

inst_50484:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4003ffffffffff; valaddr_reg:x3; val_offset:151452*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151452*0 + 3*564*FLEN/8, x4, x1, x2)

inst_50485:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4007ffffffffff; valaddr_reg:x3; val_offset:151455*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151455*0 + 3*565*FLEN/8, x4, x1, x2)

inst_50486:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba400fffffffffff; valaddr_reg:x3; val_offset:151458*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151458*0 + 3*566*FLEN/8, x4, x1, x2)

inst_50487:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba401fffffffffff; valaddr_reg:x3; val_offset:151461*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151461*0 + 3*567*FLEN/8, x4, x1, x2)

inst_50488:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba403fffffffffff; valaddr_reg:x3; val_offset:151464*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151464*0 + 3*568*FLEN/8, x4, x1, x2)

inst_50489:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba407fffffffffff; valaddr_reg:x3; val_offset:151467*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151467*0 + 3*569*FLEN/8, x4, x1, x2)

inst_50490:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba40ffffffffffff; valaddr_reg:x3; val_offset:151470*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151470*0 + 3*570*FLEN/8, x4, x1, x2)

inst_50491:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba41ffffffffffff; valaddr_reg:x3; val_offset:151473*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151473*0 + 3*571*FLEN/8, x4, x1, x2)

inst_50492:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba43ffffffffffff; valaddr_reg:x3; val_offset:151476*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151476*0 + 3*572*FLEN/8, x4, x1, x2)

inst_50493:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba47ffffffffffff; valaddr_reg:x3; val_offset:151479*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151479*0 + 3*573*FLEN/8, x4, x1, x2)

inst_50494:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba48000000000000; valaddr_reg:x3; val_offset:151482*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151482*0 + 3*574*FLEN/8, x4, x1, x2)

inst_50495:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4c000000000000; valaddr_reg:x3; val_offset:151485*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151485*0 + 3*575*FLEN/8, x4, x1, x2)

inst_50496:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4e000000000000; valaddr_reg:x3; val_offset:151488*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151488*0 + 3*576*FLEN/8, x4, x1, x2)

inst_50497:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4f000000000000; valaddr_reg:x3; val_offset:151491*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151491*0 + 3*577*FLEN/8, x4, x1, x2)

inst_50498:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4f800000000000; valaddr_reg:x3; val_offset:151494*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151494*0 + 3*578*FLEN/8, x4, x1, x2)

inst_50499:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4fc00000000000; valaddr_reg:x3; val_offset:151497*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151497*0 + 3*579*FLEN/8, x4, x1, x2)

inst_50500:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4fe00000000000; valaddr_reg:x3; val_offset:151500*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151500*0 + 3*580*FLEN/8, x4, x1, x2)

inst_50501:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4ff00000000000; valaddr_reg:x3; val_offset:151503*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151503*0 + 3*581*FLEN/8, x4, x1, x2)

inst_50502:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4ff80000000000; valaddr_reg:x3; val_offset:151506*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151506*0 + 3*582*FLEN/8, x4, x1, x2)

inst_50503:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4ffc0000000000; valaddr_reg:x3; val_offset:151509*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151509*0 + 3*583*FLEN/8, x4, x1, x2)

inst_50504:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4ffe0000000000; valaddr_reg:x3; val_offset:151512*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151512*0 + 3*584*FLEN/8, x4, x1, x2)

inst_50505:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4fff0000000000; valaddr_reg:x3; val_offset:151515*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151515*0 + 3*585*FLEN/8, x4, x1, x2)

inst_50506:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4fff8000000000; valaddr_reg:x3; val_offset:151518*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151518*0 + 3*586*FLEN/8, x4, x1, x2)

inst_50507:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4fffc000000000; valaddr_reg:x3; val_offset:151521*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151521*0 + 3*587*FLEN/8, x4, x1, x2)

inst_50508:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4fffe000000000; valaddr_reg:x3; val_offset:151524*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151524*0 + 3*588*FLEN/8, x4, x1, x2)

inst_50509:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4ffff000000000; valaddr_reg:x3; val_offset:151527*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151527*0 + 3*589*FLEN/8, x4, x1, x2)

inst_50510:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4ffff800000000; valaddr_reg:x3; val_offset:151530*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151530*0 + 3*590*FLEN/8, x4, x1, x2)

inst_50511:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4ffffc00000000; valaddr_reg:x3; val_offset:151533*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151533*0 + 3*591*FLEN/8, x4, x1, x2)

inst_50512:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4ffffe00000000; valaddr_reg:x3; val_offset:151536*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151536*0 + 3*592*FLEN/8, x4, x1, x2)

inst_50513:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4fffff00000000; valaddr_reg:x3; val_offset:151539*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151539*0 + 3*593*FLEN/8, x4, x1, x2)

inst_50514:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4fffff80000000; valaddr_reg:x3; val_offset:151542*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151542*0 + 3*594*FLEN/8, x4, x1, x2)

inst_50515:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4fffffc0000000; valaddr_reg:x3; val_offset:151545*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151545*0 + 3*595*FLEN/8, x4, x1, x2)

inst_50516:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4fffffe0000000; valaddr_reg:x3; val_offset:151548*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151548*0 + 3*596*FLEN/8, x4, x1, x2)

inst_50517:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4ffffff0000000; valaddr_reg:x3; val_offset:151551*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151551*0 + 3*597*FLEN/8, x4, x1, x2)

inst_50518:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4ffffff8000000; valaddr_reg:x3; val_offset:151554*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151554*0 + 3*598*FLEN/8, x4, x1, x2)

inst_50519:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4ffffffc000000; valaddr_reg:x3; val_offset:151557*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151557*0 + 3*599*FLEN/8, x4, x1, x2)

inst_50520:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4ffffffe000000; valaddr_reg:x3; val_offset:151560*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151560*0 + 3*600*FLEN/8, x4, x1, x2)

inst_50521:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4fffffff000000; valaddr_reg:x3; val_offset:151563*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151563*0 + 3*601*FLEN/8, x4, x1, x2)

inst_50522:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4fffffff800000; valaddr_reg:x3; val_offset:151566*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151566*0 + 3*602*FLEN/8, x4, x1, x2)

inst_50523:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4fffffffc00000; valaddr_reg:x3; val_offset:151569*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151569*0 + 3*603*FLEN/8, x4, x1, x2)

inst_50524:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4fffffffe00000; valaddr_reg:x3; val_offset:151572*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151572*0 + 3*604*FLEN/8, x4, x1, x2)

inst_50525:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4ffffffff00000; valaddr_reg:x3; val_offset:151575*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151575*0 + 3*605*FLEN/8, x4, x1, x2)

inst_50526:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4ffffffff80000; valaddr_reg:x3; val_offset:151578*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151578*0 + 3*606*FLEN/8, x4, x1, x2)

inst_50527:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4ffffffffc0000; valaddr_reg:x3; val_offset:151581*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151581*0 + 3*607*FLEN/8, x4, x1, x2)

inst_50528:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4ffffffffe0000; valaddr_reg:x3; val_offset:151584*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151584*0 + 3*608*FLEN/8, x4, x1, x2)

inst_50529:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4fffffffff0000; valaddr_reg:x3; val_offset:151587*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151587*0 + 3*609*FLEN/8, x4, x1, x2)

inst_50530:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4fffffffff8000; valaddr_reg:x3; val_offset:151590*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151590*0 + 3*610*FLEN/8, x4, x1, x2)

inst_50531:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4fffffffffc000; valaddr_reg:x3; val_offset:151593*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151593*0 + 3*611*FLEN/8, x4, x1, x2)

inst_50532:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4fffffffffe000; valaddr_reg:x3; val_offset:151596*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151596*0 + 3*612*FLEN/8, x4, x1, x2)

inst_50533:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4ffffffffff000; valaddr_reg:x3; val_offset:151599*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151599*0 + 3*613*FLEN/8, x4, x1, x2)

inst_50534:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4ffffffffff800; valaddr_reg:x3; val_offset:151602*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151602*0 + 3*614*FLEN/8, x4, x1, x2)

inst_50535:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4ffffffffffc00; valaddr_reg:x3; val_offset:151605*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151605*0 + 3*615*FLEN/8, x4, x1, x2)

inst_50536:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4ffffffffffe00; valaddr_reg:x3; val_offset:151608*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151608*0 + 3*616*FLEN/8, x4, x1, x2)

inst_50537:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4fffffffffff00; valaddr_reg:x3; val_offset:151611*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151611*0 + 3*617*FLEN/8, x4, x1, x2)

inst_50538:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4fffffffffff80; valaddr_reg:x3; val_offset:151614*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151614*0 + 3*618*FLEN/8, x4, x1, x2)

inst_50539:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4fffffffffffc0; valaddr_reg:x3; val_offset:151617*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151617*0 + 3*619*FLEN/8, x4, x1, x2)

inst_50540:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4fffffffffffe0; valaddr_reg:x3; val_offset:151620*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151620*0 + 3*620*FLEN/8, x4, x1, x2)

inst_50541:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4ffffffffffff0; valaddr_reg:x3; val_offset:151623*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151623*0 + 3*621*FLEN/8, x4, x1, x2)

inst_50542:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4ffffffffffff8; valaddr_reg:x3; val_offset:151626*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151626*0 + 3*622*FLEN/8, x4, x1, x2)

inst_50543:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4ffffffffffffc; valaddr_reg:x3; val_offset:151629*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151629*0 + 3*623*FLEN/8, x4, x1, x2)

inst_50544:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4ffffffffffffe; valaddr_reg:x3; val_offset:151632*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151632*0 + 3*624*FLEN/8, x4, x1, x2)

inst_50545:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xba4fffffffffffff; valaddr_reg:x3; val_offset:151635*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151635*0 + 3*625*FLEN/8, x4, x1, x2)

inst_50546:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:151638*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151638*0 + 3*626*FLEN/8, x4, x1, x2)

inst_50547:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:151641*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151641*0 + 3*627*FLEN/8, x4, x1, x2)

inst_50548:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:151644*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151644*0 + 3*628*FLEN/8, x4, x1, x2)

inst_50549:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:151647*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151647*0 + 3*629*FLEN/8, x4, x1, x2)

inst_50550:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:151650*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151650*0 + 3*630*FLEN/8, x4, x1, x2)

inst_50551:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:151653*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151653*0 + 3*631*FLEN/8, x4, x1, x2)

inst_50552:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:151656*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151656*0 + 3*632*FLEN/8, x4, x1, x2)

inst_50553:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:151659*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151659*0 + 3*633*FLEN/8, x4, x1, x2)

inst_50554:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:151662*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151662*0 + 3*634*FLEN/8, x4, x1, x2)

inst_50555:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:151665*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151665*0 + 3*635*FLEN/8, x4, x1, x2)

inst_50556:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:151668*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151668*0 + 3*636*FLEN/8, x4, x1, x2)

inst_50557:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:151671*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151671*0 + 3*637*FLEN/8, x4, x1, x2)

inst_50558:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:151674*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151674*0 + 3*638*FLEN/8, x4, x1, x2)

inst_50559:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:151677*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151677*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_50560:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:151680*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151680*0 + 3*640*FLEN/8, x4, x1, x2)

inst_50561:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:151683*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151683*0 + 3*641*FLEN/8, x4, x1, x2)

inst_50562:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:151686*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151686*0 + 3*642*FLEN/8, x4, x1, x2)

inst_50563:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:151689*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151689*0 + 3*643*FLEN/8, x4, x1, x2)

inst_50564:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:151692*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151692*0 + 3*644*FLEN/8, x4, x1, x2)

inst_50565:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:151695*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151695*0 + 3*645*FLEN/8, x4, x1, x2)

inst_50566:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:151698*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151698*0 + 3*646*FLEN/8, x4, x1, x2)

inst_50567:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x05f680bf8b625 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4587ce4e6a55; op2val:0x9fd05f680bf8b625;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:151701*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151701*0 + 3*647*FLEN/8, x4, x1, x2)

inst_50568:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:151704*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151704*0 + 3*648*FLEN/8, x4, x1, x2)

inst_50569:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:151707*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151707*0 + 3*649*FLEN/8, x4, x1, x2)

inst_50570:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:151710*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151710*0 + 3*650*FLEN/8, x4, x1, x2)

inst_50571:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:151713*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151713*0 + 3*651*FLEN/8, x4, x1, x2)

inst_50572:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:151716*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151716*0 + 3*652*FLEN/8, x4, x1, x2)

inst_50573:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:151719*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151719*0 + 3*653*FLEN/8, x4, x1, x2)

inst_50574:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:151722*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151722*0 + 3*654*FLEN/8, x4, x1, x2)

inst_50575:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:151725*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151725*0 + 3*655*FLEN/8, x4, x1, x2)

inst_50576:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:151728*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151728*0 + 3*656*FLEN/8, x4, x1, x2)

inst_50577:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:151731*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151731*0 + 3*657*FLEN/8, x4, x1, x2)

inst_50578:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:151734*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151734*0 + 3*658*FLEN/8, x4, x1, x2)

inst_50579:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:151737*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151737*0 + 3*659*FLEN/8, x4, x1, x2)

inst_50580:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:151740*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151740*0 + 3*660*FLEN/8, x4, x1, x2)

inst_50581:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:151743*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151743*0 + 3*661*FLEN/8, x4, x1, x2)

inst_50582:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:151746*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151746*0 + 3*662*FLEN/8, x4, x1, x2)

inst_50583:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:151749*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151749*0 + 3*663*FLEN/8, x4, x1, x2)

inst_50584:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:151752*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151752*0 + 3*664*FLEN/8, x4, x1, x2)

inst_50585:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:151755*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151755*0 + 3*665*FLEN/8, x4, x1, x2)

inst_50586:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:151758*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151758*0 + 3*666*FLEN/8, x4, x1, x2)

inst_50587:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:151761*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151761*0 + 3*667*FLEN/8, x4, x1, x2)

inst_50588:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:151764*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151764*0 + 3*668*FLEN/8, x4, x1, x2)

inst_50589:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:151767*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151767*0 + 3*669*FLEN/8, x4, x1, x2)

inst_50590:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x350000000000000; valaddr_reg:x3; val_offset:151770*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151770*0 + 3*670*FLEN/8, x4, x1, x2)

inst_50591:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x350000000000001; valaddr_reg:x3; val_offset:151773*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151773*0 + 3*671*FLEN/8, x4, x1, x2)

inst_50592:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x350000000000003; valaddr_reg:x3; val_offset:151776*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151776*0 + 3*672*FLEN/8, x4, x1, x2)

inst_50593:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x350000000000007; valaddr_reg:x3; val_offset:151779*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151779*0 + 3*673*FLEN/8, x4, x1, x2)

inst_50594:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35000000000000f; valaddr_reg:x3; val_offset:151782*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151782*0 + 3*674*FLEN/8, x4, x1, x2)

inst_50595:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35000000000001f; valaddr_reg:x3; val_offset:151785*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151785*0 + 3*675*FLEN/8, x4, x1, x2)

inst_50596:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35000000000003f; valaddr_reg:x3; val_offset:151788*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151788*0 + 3*676*FLEN/8, x4, x1, x2)

inst_50597:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35000000000007f; valaddr_reg:x3; val_offset:151791*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151791*0 + 3*677*FLEN/8, x4, x1, x2)

inst_50598:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x3500000000000ff; valaddr_reg:x3; val_offset:151794*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151794*0 + 3*678*FLEN/8, x4, x1, x2)

inst_50599:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x3500000000001ff; valaddr_reg:x3; val_offset:151797*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151797*0 + 3*679*FLEN/8, x4, x1, x2)

inst_50600:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x3500000000003ff; valaddr_reg:x3; val_offset:151800*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151800*0 + 3*680*FLEN/8, x4, x1, x2)

inst_50601:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x3500000000007ff; valaddr_reg:x3; val_offset:151803*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151803*0 + 3*681*FLEN/8, x4, x1, x2)

inst_50602:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x350000000000fff; valaddr_reg:x3; val_offset:151806*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151806*0 + 3*682*FLEN/8, x4, x1, x2)

inst_50603:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x350000000001fff; valaddr_reg:x3; val_offset:151809*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151809*0 + 3*683*FLEN/8, x4, x1, x2)

inst_50604:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x350000000003fff; valaddr_reg:x3; val_offset:151812*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151812*0 + 3*684*FLEN/8, x4, x1, x2)

inst_50605:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x350000000007fff; valaddr_reg:x3; val_offset:151815*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151815*0 + 3*685*FLEN/8, x4, x1, x2)

inst_50606:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35000000000ffff; valaddr_reg:x3; val_offset:151818*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151818*0 + 3*686*FLEN/8, x4, x1, x2)

inst_50607:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35000000001ffff; valaddr_reg:x3; val_offset:151821*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151821*0 + 3*687*FLEN/8, x4, x1, x2)

inst_50608:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35000000003ffff; valaddr_reg:x3; val_offset:151824*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151824*0 + 3*688*FLEN/8, x4, x1, x2)

inst_50609:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35000000007ffff; valaddr_reg:x3; val_offset:151827*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151827*0 + 3*689*FLEN/8, x4, x1, x2)

inst_50610:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x3500000000fffff; valaddr_reg:x3; val_offset:151830*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151830*0 + 3*690*FLEN/8, x4, x1, x2)

inst_50611:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x3500000001fffff; valaddr_reg:x3; val_offset:151833*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151833*0 + 3*691*FLEN/8, x4, x1, x2)

inst_50612:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x3500000003fffff; valaddr_reg:x3; val_offset:151836*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151836*0 + 3*692*FLEN/8, x4, x1, x2)

inst_50613:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x3500000007fffff; valaddr_reg:x3; val_offset:151839*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151839*0 + 3*693*FLEN/8, x4, x1, x2)

inst_50614:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x350000000ffffff; valaddr_reg:x3; val_offset:151842*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151842*0 + 3*694*FLEN/8, x4, x1, x2)

inst_50615:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x350000001ffffff; valaddr_reg:x3; val_offset:151845*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151845*0 + 3*695*FLEN/8, x4, x1, x2)

inst_50616:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x350000003ffffff; valaddr_reg:x3; val_offset:151848*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151848*0 + 3*696*FLEN/8, x4, x1, x2)

inst_50617:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x350000007ffffff; valaddr_reg:x3; val_offset:151851*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151851*0 + 3*697*FLEN/8, x4, x1, x2)

inst_50618:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35000000fffffff; valaddr_reg:x3; val_offset:151854*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151854*0 + 3*698*FLEN/8, x4, x1, x2)

inst_50619:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35000001fffffff; valaddr_reg:x3; val_offset:151857*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151857*0 + 3*699*FLEN/8, x4, x1, x2)

inst_50620:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35000003fffffff; valaddr_reg:x3; val_offset:151860*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151860*0 + 3*700*FLEN/8, x4, x1, x2)

inst_50621:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35000007fffffff; valaddr_reg:x3; val_offset:151863*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151863*0 + 3*701*FLEN/8, x4, x1, x2)

inst_50622:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x3500000ffffffff; valaddr_reg:x3; val_offset:151866*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151866*0 + 3*702*FLEN/8, x4, x1, x2)

inst_50623:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x3500001ffffffff; valaddr_reg:x3; val_offset:151869*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151869*0 + 3*703*FLEN/8, x4, x1, x2)

inst_50624:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x3500003ffffffff; valaddr_reg:x3; val_offset:151872*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151872*0 + 3*704*FLEN/8, x4, x1, x2)

inst_50625:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x3500007ffffffff; valaddr_reg:x3; val_offset:151875*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151875*0 + 3*705*FLEN/8, x4, x1, x2)

inst_50626:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x350000fffffffff; valaddr_reg:x3; val_offset:151878*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151878*0 + 3*706*FLEN/8, x4, x1, x2)

inst_50627:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x350001fffffffff; valaddr_reg:x3; val_offset:151881*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151881*0 + 3*707*FLEN/8, x4, x1, x2)

inst_50628:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x350003fffffffff; valaddr_reg:x3; val_offset:151884*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151884*0 + 3*708*FLEN/8, x4, x1, x2)

inst_50629:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x350007fffffffff; valaddr_reg:x3; val_offset:151887*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151887*0 + 3*709*FLEN/8, x4, x1, x2)

inst_50630:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35000ffffffffff; valaddr_reg:x3; val_offset:151890*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151890*0 + 3*710*FLEN/8, x4, x1, x2)

inst_50631:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35001ffffffffff; valaddr_reg:x3; val_offset:151893*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151893*0 + 3*711*FLEN/8, x4, x1, x2)

inst_50632:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35003ffffffffff; valaddr_reg:x3; val_offset:151896*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151896*0 + 3*712*FLEN/8, x4, x1, x2)

inst_50633:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35007ffffffffff; valaddr_reg:x3; val_offset:151899*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151899*0 + 3*713*FLEN/8, x4, x1, x2)

inst_50634:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x3500fffffffffff; valaddr_reg:x3; val_offset:151902*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151902*0 + 3*714*FLEN/8, x4, x1, x2)

inst_50635:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x3501fffffffffff; valaddr_reg:x3; val_offset:151905*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151905*0 + 3*715*FLEN/8, x4, x1, x2)

inst_50636:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x3503fffffffffff; valaddr_reg:x3; val_offset:151908*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151908*0 + 3*716*FLEN/8, x4, x1, x2)

inst_50637:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x3507fffffffffff; valaddr_reg:x3; val_offset:151911*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151911*0 + 3*717*FLEN/8, x4, x1, x2)

inst_50638:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x350ffffffffffff; valaddr_reg:x3; val_offset:151914*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151914*0 + 3*718*FLEN/8, x4, x1, x2)

inst_50639:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x351ffffffffffff; valaddr_reg:x3; val_offset:151917*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151917*0 + 3*719*FLEN/8, x4, x1, x2)

inst_50640:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x353ffffffffffff; valaddr_reg:x3; val_offset:151920*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151920*0 + 3*720*FLEN/8, x4, x1, x2)

inst_50641:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x357ffffffffffff; valaddr_reg:x3; val_offset:151923*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151923*0 + 3*721*FLEN/8, x4, x1, x2)

inst_50642:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x358000000000000; valaddr_reg:x3; val_offset:151926*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151926*0 + 3*722*FLEN/8, x4, x1, x2)

inst_50643:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35c000000000000; valaddr_reg:x3; val_offset:151929*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151929*0 + 3*723*FLEN/8, x4, x1, x2)

inst_50644:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35e000000000000; valaddr_reg:x3; val_offset:151932*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151932*0 + 3*724*FLEN/8, x4, x1, x2)

inst_50645:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35f000000000000; valaddr_reg:x3; val_offset:151935*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151935*0 + 3*725*FLEN/8, x4, x1, x2)

inst_50646:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35f800000000000; valaddr_reg:x3; val_offset:151938*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151938*0 + 3*726*FLEN/8, x4, x1, x2)

inst_50647:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35fc00000000000; valaddr_reg:x3; val_offset:151941*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151941*0 + 3*727*FLEN/8, x4, x1, x2)

inst_50648:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35fe00000000000; valaddr_reg:x3; val_offset:151944*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151944*0 + 3*728*FLEN/8, x4, x1, x2)

inst_50649:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35ff00000000000; valaddr_reg:x3; val_offset:151947*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151947*0 + 3*729*FLEN/8, x4, x1, x2)

inst_50650:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35ff80000000000; valaddr_reg:x3; val_offset:151950*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151950*0 + 3*730*FLEN/8, x4, x1, x2)

inst_50651:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35ffc0000000000; valaddr_reg:x3; val_offset:151953*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151953*0 + 3*731*FLEN/8, x4, x1, x2)

inst_50652:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35ffe0000000000; valaddr_reg:x3; val_offset:151956*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151956*0 + 3*732*FLEN/8, x4, x1, x2)

inst_50653:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35fff0000000000; valaddr_reg:x3; val_offset:151959*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151959*0 + 3*733*FLEN/8, x4, x1, x2)

inst_50654:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35fff8000000000; valaddr_reg:x3; val_offset:151962*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151962*0 + 3*734*FLEN/8, x4, x1, x2)

inst_50655:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35fffc000000000; valaddr_reg:x3; val_offset:151965*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151965*0 + 3*735*FLEN/8, x4, x1, x2)

inst_50656:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35fffe000000000; valaddr_reg:x3; val_offset:151968*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151968*0 + 3*736*FLEN/8, x4, x1, x2)

inst_50657:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35ffff000000000; valaddr_reg:x3; val_offset:151971*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151971*0 + 3*737*FLEN/8, x4, x1, x2)

inst_50658:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35ffff800000000; valaddr_reg:x3; val_offset:151974*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151974*0 + 3*738*FLEN/8, x4, x1, x2)

inst_50659:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35ffffc00000000; valaddr_reg:x3; val_offset:151977*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151977*0 + 3*739*FLEN/8, x4, x1, x2)

inst_50660:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35ffffe00000000; valaddr_reg:x3; val_offset:151980*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151980*0 + 3*740*FLEN/8, x4, x1, x2)

inst_50661:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35fffff00000000; valaddr_reg:x3; val_offset:151983*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151983*0 + 3*741*FLEN/8, x4, x1, x2)

inst_50662:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35fffff80000000; valaddr_reg:x3; val_offset:151986*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151986*0 + 3*742*FLEN/8, x4, x1, x2)

inst_50663:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35fffffc0000000; valaddr_reg:x3; val_offset:151989*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151989*0 + 3*743*FLEN/8, x4, x1, x2)

inst_50664:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35fffffe0000000; valaddr_reg:x3; val_offset:151992*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151992*0 + 3*744*FLEN/8, x4, x1, x2)

inst_50665:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35ffffff0000000; valaddr_reg:x3; val_offset:151995*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151995*0 + 3*745*FLEN/8, x4, x1, x2)

inst_50666:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35ffffff8000000; valaddr_reg:x3; val_offset:151998*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151998*0 + 3*746*FLEN/8, x4, x1, x2)

inst_50667:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35ffffffc000000; valaddr_reg:x3; val_offset:152001*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152001*0 + 3*747*FLEN/8, x4, x1, x2)

inst_50668:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35ffffffe000000; valaddr_reg:x3; val_offset:152004*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152004*0 + 3*748*FLEN/8, x4, x1, x2)

inst_50669:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35fffffff000000; valaddr_reg:x3; val_offset:152007*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152007*0 + 3*749*FLEN/8, x4, x1, x2)

inst_50670:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35fffffff800000; valaddr_reg:x3; val_offset:152010*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152010*0 + 3*750*FLEN/8, x4, x1, x2)

inst_50671:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35fffffffc00000; valaddr_reg:x3; val_offset:152013*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152013*0 + 3*751*FLEN/8, x4, x1, x2)

inst_50672:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35fffffffe00000; valaddr_reg:x3; val_offset:152016*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152016*0 + 3*752*FLEN/8, x4, x1, x2)

inst_50673:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35ffffffff00000; valaddr_reg:x3; val_offset:152019*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152019*0 + 3*753*FLEN/8, x4, x1, x2)

inst_50674:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35ffffffff80000; valaddr_reg:x3; val_offset:152022*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152022*0 + 3*754*FLEN/8, x4, x1, x2)

inst_50675:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35ffffffffc0000; valaddr_reg:x3; val_offset:152025*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152025*0 + 3*755*FLEN/8, x4, x1, x2)

inst_50676:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35ffffffffe0000; valaddr_reg:x3; val_offset:152028*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152028*0 + 3*756*FLEN/8, x4, x1, x2)

inst_50677:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35fffffffff0000; valaddr_reg:x3; val_offset:152031*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152031*0 + 3*757*FLEN/8, x4, x1, x2)

inst_50678:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35fffffffff8000; valaddr_reg:x3; val_offset:152034*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152034*0 + 3*758*FLEN/8, x4, x1, x2)

inst_50679:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35fffffffffc000; valaddr_reg:x3; val_offset:152037*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152037*0 + 3*759*FLEN/8, x4, x1, x2)

inst_50680:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35fffffffffe000; valaddr_reg:x3; val_offset:152040*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152040*0 + 3*760*FLEN/8, x4, x1, x2)

inst_50681:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35ffffffffff000; valaddr_reg:x3; val_offset:152043*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152043*0 + 3*761*FLEN/8, x4, x1, x2)

inst_50682:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35ffffffffff800; valaddr_reg:x3; val_offset:152046*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152046*0 + 3*762*FLEN/8, x4, x1, x2)

inst_50683:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35ffffffffffc00; valaddr_reg:x3; val_offset:152049*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152049*0 + 3*763*FLEN/8, x4, x1, x2)

inst_50684:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35ffffffffffe00; valaddr_reg:x3; val_offset:152052*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152052*0 + 3*764*FLEN/8, x4, x1, x2)

inst_50685:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35fffffffffff00; valaddr_reg:x3; val_offset:152055*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152055*0 + 3*765*FLEN/8, x4, x1, x2)

inst_50686:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35fffffffffff80; valaddr_reg:x3; val_offset:152058*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152058*0 + 3*766*FLEN/8, x4, x1, x2)

inst_50687:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf507980df59b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f507980df59b7; op2val:0x0;
op3val:0x35fffffffffffc0; valaddr_reg:x3; val_offset:152061*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152061*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528314880,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528380416,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528413184,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528429568,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528437760,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528441856,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528443904,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528444928,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445440,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445696,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445824,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445888,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445920,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445936,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445944,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445948,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445950,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445951,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4197354852709302272,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4197354852709302273,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4197354852709302275,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4197354852709302279,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4197354852709302287,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4197354852709302303,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4197354852709302335,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4197354852709302399,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4197354852709302527,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4197354852709302783,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4197354852709303295,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4197354852709304319,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4197354852709306367,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4197354852709310463,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4197354852709318655,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4197354852709335039,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4197354852709367807,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4197354852709433343,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4197354852709564415,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4197354852709826559,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4197354852710350847,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4197354852711399423,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4197354852713496575,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4197354852717690879,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4197354852726079487,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4197354852742856703,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4197354852776411135,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4197354852843519999,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4197354852977737727,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4197354853246173183,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4197354853783044095,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4197354854856785919,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4197354857004269567,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4197354861299236863,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4197354869889171455,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4197354887069040639,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4197354921428779007,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4197354990148255743,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4197355127587209215,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4197355402465116159,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4197355952220930047,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4197357051732557823,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4197359250755813375,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4197363648802324479,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4197372444895346687,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4197390037081391103,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4197425221453479935,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4197495590197657599,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4197636327686012927,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4197917802662723583,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4198480752616144895,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4199606652522987519,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4199606652522987520,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4200732552429830144,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4201295502383251456,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4201576977359962112,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4201717714848317440,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4201788083592495104,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4201823267964583936,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4201840860150628352,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4201849656243650560,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4201854054290161664,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4201856253313417216,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4201857352825044992,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4201857902580858880,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4201858177458765824,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4201858314897719296,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4201858383617196032,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4201858417976934400,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4201858435156803584,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4201858443746738176,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4201858448041705472,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4201858450189189120,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4201858451262930944,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4201858451799801856,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4201858452068237312,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4201858452202455040,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4201858452269563904,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4201858452303118336,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4201858452319895552,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4201858452328284160,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4201858452332478464,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4201858452334575616,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4201858452335624192,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4201858452336148480,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4201858452336410624,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4201858452336541696,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4201858452336607232,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4201858452336640000,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4201858452336656384,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4201858452336664576,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4201858452336668672,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4201858452336670720,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4201858452336671744,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4201858452336672256,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4201858452336672512,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4201858452336672640,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4201858452336672704,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4201858452336672736,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4201858452336672752,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4201858452336672760,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4201858452336672764,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4201858452336672766,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4201858452336672767,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6890180055705672609,64,FLEN)
NAN_BOXED(2324027268541933519,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13785518459381088256,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13785518459381088257,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13785518459381088259,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13785518459381088263,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13785518459381088271,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13785518459381088287,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13785518459381088319,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13785518459381088383,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13785518459381088511,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13785518459381088767,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13785518459381089279,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13785518459381090303,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13785518459381092351,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13785518459381096447,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13785518459381104639,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13785518459381121023,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13785518459381153791,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13785518459381219327,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13785518459381350399,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13785518459381612543,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13785518459382136831,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13785518459383185407,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13785518459385282559,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13785518459389476863,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13785518459397865471,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13785518459414642687,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13785518459448197119,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13785518459515305983,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13785518459649523711,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13785518459917959167,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13785518460454830079,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13785518461528571903,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13785518463676055551,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13785518467971022847,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13785518476560957439,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13785518493740826623,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13785518528100564991,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13785518596820041727,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13785518734258995199,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13785519009136902143,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13785519558892716031,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13785520658404343807,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13785522857427599359,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13785527255474110463,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13785536051567132671,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13785553643753177087,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13785588828125265919,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13785659196869443583,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13785799934357798911,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13786081409334509567,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13786644359287930879,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13787770259194773503,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13787770259194773504,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13788896159101616128,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13789459109055037440,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13789740584031748096,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13789881321520103424,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13789951690264281088,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13789986874636369920,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13790004466822414336,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13790013262915436544,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13790017660961947648,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13790019859985203200,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13790020959496830976,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13790021509252644864,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13790021784130551808,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13790021921569505280,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13790021990288982016,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13790022024648720384,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13790022041828589568,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13790022050418524160,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13790022054713491456,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13790022056860975104,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13790022057934716928,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13790022058471587840,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13790022058740023296,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13790022058874241024,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13790022058941349888,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13790022058974904320,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13790022058991681536,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13790022059000070144,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13790022059004264448,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13790022059006361600,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13790022059007410176,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13790022059007934464,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13790022059008196608,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13790022059008327680,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13790022059008393216,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13790022059008425984,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13790022059008442368,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13790022059008450560,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13790022059008454656,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13790022059008456704,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13790022059008457728,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13790022059008458240,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13790022059008458496,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13790022059008458624,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13790022059008458688,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13790022059008458720,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13790022059008458736,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13790022059008458744,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13790022059008458748,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13790022059008458750,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13790022059008458751,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6890187017913864523,64,FLEN)
NAN_BOXED(11515870362362047844,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740992,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740993,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740995,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740999,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254741007,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254741023,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254741055,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254741119,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254741247,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254741503,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254742015,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254743039,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254745087,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254749183,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254757375,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254773759,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254806527,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254872063,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199255003135,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199255265279,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199255789567,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199256838143,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199258935295,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199263129599,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199271518207,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199288295423,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199321849855,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199388958719,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199523176447,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199791611903,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007200328482815,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007201402224639,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007203549708287,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007207844675583,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007216434610175,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007233614479359,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007267974217727,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007336693694463,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007474132647935,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007749010554879,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9008298766368767,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9009398277996543,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9011597301252095,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9015995347763199,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9024791440785407,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9042383626829823,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9077567998918655,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9147936743096319,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9288674231451647,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9570149208162303,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(10133099161583615,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(11258999068426239,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(11258999068426240,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(12384898975268864,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(12947848928690176,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13229323905400832,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13370061393756160,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13440430137933824,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13475614510022656,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13493206696067072,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13502002789089280,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13506400835600384,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13508599858855936,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13509699370483712,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510249126297600,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510524004204544,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510661443158016,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510730162634752,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510764522373120,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510781702242304,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510790292176896,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510794587144192,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510796734627840,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510797808369664,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798345240576,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798613676032,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798747893760,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798815002624,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798848557056,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798865334272,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798873722880,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798877917184,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798880014336,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798881062912,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798881587200,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798881849344,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798881980416,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882045952,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882078720,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882095104,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882103296,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882107392,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882109440,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882110464,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882110976,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111232,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111360,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111424,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111456,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111472,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111480,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111484,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111486,64,FLEN)
NAN_BOXED(6890253925794795033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111487,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520192,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520193,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520195,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520199,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520207,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520223,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520255,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520319,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520447,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520703,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048521215,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048522239,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048524287,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048528383,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048536575,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048552959,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048585727,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048651263,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048782335,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426049044479,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426049568767,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426050617343,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426052714495,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426056908799,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426065297407,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426082074623,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426115629055,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426182737919,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426316955647,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426585391103,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976427122262015,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976428196003839,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976430343487487,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976434638454783,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976443228389375,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976460408258559,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976494767996927,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976563487473663,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976700926427135,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976975804334079,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353977525560147967,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353978625071775743,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353980824095031295,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353985222141542399,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353994018234564607,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9354011610420609023,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9354046794792697855,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9354117163536875519,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9354257901025230847,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9354539376001941503,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9355102325955362815,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9356228225862205439,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9356228225862205440,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9357354125769048064,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9357917075722469376,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358198550699180032,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358339288187535360,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358409656931713024,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358444841303801856,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358462433489846272,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358471229582868480,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358475627629379584,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358477826652635136,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358478926164262912,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358479475920076800,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358479750797983744,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358479888236937216,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358479956956413952,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358479991316152320,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480008496021504,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480017085956096,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480021380923392,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480023528407040,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480024602148864,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025139019776,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025407455232,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025541672960,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025608781824,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025642336256,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025659113472,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025667502080,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025671696384,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025673793536,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025674842112,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675366400,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675628544,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675759616,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675825152,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675857920,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675874304,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675882496,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675886592,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675888640,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675889664,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890176,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890432,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890560,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890624,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890656,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890672,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890680,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890684,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890686,64,FLEN)
NAN_BOXED(6890263230329017399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890687,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13420726889564078080,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13420726889564078081,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13420726889564078083,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13420726889564078087,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13420726889564078095,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13420726889564078111,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13420726889564078143,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13420726889564078207,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13420726889564078335,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13420726889564078591,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13420726889564079103,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13420726889564080127,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13420726889564082175,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13420726889564086271,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13420726889564094463,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13420726889564110847,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13420726889564143615,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13420726889564209151,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13420726889564340223,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13420726889564602367,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13420726889565126655,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13420726889566175231,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13420726889568272383,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13420726889572466687,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13420726889580855295,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13420726889597632511,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13420726889631186943,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13420726889698295807,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13420726889832513535,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13420726890100948991,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13420726890637819903,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13420726891711561727,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13420726893859045375,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13420726898154012671,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13420726906743947263,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13420726923923816447,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13420726958283554815,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13420727027003031551,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13420727164441985023,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13420727439319891967,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13420727989075705855,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13420729088587333631,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13420731287610589183,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13420735685657100287,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13420744481750122495,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13420762073936166911,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13420797258308255743,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13420867627052433407,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13421008364540788735,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13421289839517499391,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13421852789470920703,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13422978689377763327,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13422978689377763328,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13424104589284605952,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13424667539238027264,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13424949014214737920,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13425089751703093248,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13425160120447270912,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13425195304819359744,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13425212897005404160,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13425221693098426368,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13425226091144937472,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13425228290168193024,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13425229389679820800,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13425229939435634688,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13425230214313541632,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13425230351752495104,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13425230420471971840,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13425230454831710208,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13425230472011579392,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13425230480601513984,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13425230484896481280,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13425230487043964928,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13425230488117706752,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13425230488654577664,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13425230488923013120,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13425230489057230848,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13425230489124339712,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13425230489157894144,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13425230489174671360,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13425230489183059968,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13425230489187254272,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13425230489189351424,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13425230489190400000,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13425230489190924288,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13425230489191186432,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13425230489191317504,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13425230489191383040,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13425230489191415808,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13425230489191432192,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13425230489191440384,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13425230489191444480,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13425230489191446528,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13425230489191447552,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13425230489191448064,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13425230489191448320,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13425230489191448448,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13425230489191448512,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13425230489191448544,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13425230489191448560,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13425230489191448568,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13425230489191448572,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13425230489191448574,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13425230489191448575,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6890302404484295253,64,FLEN)
NAN_BOXED(11515809147668444709,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636288,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636289,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636291,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636295,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636303,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636319,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636351,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636415,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636543,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636799,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250637311,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250638335,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250640383,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250644479,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250652671,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250669055,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250701823,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250767359,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250898431,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780251160575,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780251684863,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780252733439,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780254830591,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780259024895,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780267413503,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780284190719,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780317745151,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780384854015,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780519071743,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780787507199,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690781324378111,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690782398119935,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690784545603583,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690788840570879,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690797430505471,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690814610374655,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690848970113023,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690917689589759,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238691055128543231,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238691330006450175,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238691879762264063,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238692979273891839,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238695178297147391,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238699576343658495,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238708372436680703,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238725964622725119,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238761148994813951,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238831517738991615,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238972255227346943,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(239253730204057599,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(239816680157478911,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(240942580064321535,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(240942580064321536,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(242068479971164160,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(242631429924585472,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(242912904901296128,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243053642389651456,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243124011133829120,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243159195505917952,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243176787691962368,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243185583784984576,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243189981831495680,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243192180854751232,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243193280366379008,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243193830122192896,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194105000099840,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194242439053312,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194311158530048,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194345518268416,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194362698137600,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194371288072192,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194375583039488,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194377730523136,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194378804264960,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379341135872,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379609571328,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379743789056,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379810897920,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379844452352,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379861229568,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379869618176,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379873812480,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379875909632,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379876958208,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379877482496,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379877744640,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379877875712,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379877941248,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379877974016,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379877990400,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379877998592,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878002688,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878004736,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878005760,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006272,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006528,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006656,64,FLEN)
NAN_BOXED(6890314437683534263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006720,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
