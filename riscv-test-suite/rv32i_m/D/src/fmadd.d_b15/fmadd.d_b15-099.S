
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_75264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x8350000000003fff; valaddr_reg:x3; val_offset:225792*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225792*0 + 3*0*FLEN/8, x4, x1, x2)

inst_75265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x8350000000007fff; valaddr_reg:x3; val_offset:225795*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225795*0 + 3*1*FLEN/8, x4, x1, x2)

inst_75266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835000000000ffff; valaddr_reg:x3; val_offset:225798*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225798*0 + 3*2*FLEN/8, x4, x1, x2)

inst_75267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835000000001ffff; valaddr_reg:x3; val_offset:225801*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225801*0 + 3*3*FLEN/8, x4, x1, x2)

inst_75268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835000000003ffff; valaddr_reg:x3; val_offset:225804*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225804*0 + 3*4*FLEN/8, x4, x1, x2)

inst_75269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835000000007ffff; valaddr_reg:x3; val_offset:225807*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225807*0 + 3*5*FLEN/8, x4, x1, x2)

inst_75270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x83500000000fffff; valaddr_reg:x3; val_offset:225810*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225810*0 + 3*6*FLEN/8, x4, x1, x2)

inst_75271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x83500000001fffff; valaddr_reg:x3; val_offset:225813*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225813*0 + 3*7*FLEN/8, x4, x1, x2)

inst_75272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x83500000003fffff; valaddr_reg:x3; val_offset:225816*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225816*0 + 3*8*FLEN/8, x4, x1, x2)

inst_75273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x83500000007fffff; valaddr_reg:x3; val_offset:225819*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225819*0 + 3*9*FLEN/8, x4, x1, x2)

inst_75274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x8350000000ffffff; valaddr_reg:x3; val_offset:225822*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225822*0 + 3*10*FLEN/8, x4, x1, x2)

inst_75275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x8350000001ffffff; valaddr_reg:x3; val_offset:225825*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225825*0 + 3*11*FLEN/8, x4, x1, x2)

inst_75276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x8350000003ffffff; valaddr_reg:x3; val_offset:225828*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225828*0 + 3*12*FLEN/8, x4, x1, x2)

inst_75277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x8350000007ffffff; valaddr_reg:x3; val_offset:225831*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225831*0 + 3*13*FLEN/8, x4, x1, x2)

inst_75278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835000000fffffff; valaddr_reg:x3; val_offset:225834*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225834*0 + 3*14*FLEN/8, x4, x1, x2)

inst_75279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835000001fffffff; valaddr_reg:x3; val_offset:225837*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225837*0 + 3*15*FLEN/8, x4, x1, x2)

inst_75280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835000003fffffff; valaddr_reg:x3; val_offset:225840*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225840*0 + 3*16*FLEN/8, x4, x1, x2)

inst_75281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835000007fffffff; valaddr_reg:x3; val_offset:225843*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225843*0 + 3*17*FLEN/8, x4, x1, x2)

inst_75282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x83500000ffffffff; valaddr_reg:x3; val_offset:225846*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225846*0 + 3*18*FLEN/8, x4, x1, x2)

inst_75283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x83500001ffffffff; valaddr_reg:x3; val_offset:225849*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225849*0 + 3*19*FLEN/8, x4, x1, x2)

inst_75284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x83500003ffffffff; valaddr_reg:x3; val_offset:225852*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225852*0 + 3*20*FLEN/8, x4, x1, x2)

inst_75285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x83500007ffffffff; valaddr_reg:x3; val_offset:225855*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225855*0 + 3*21*FLEN/8, x4, x1, x2)

inst_75286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x8350000fffffffff; valaddr_reg:x3; val_offset:225858*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225858*0 + 3*22*FLEN/8, x4, x1, x2)

inst_75287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x8350001fffffffff; valaddr_reg:x3; val_offset:225861*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225861*0 + 3*23*FLEN/8, x4, x1, x2)

inst_75288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x8350003fffffffff; valaddr_reg:x3; val_offset:225864*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225864*0 + 3*24*FLEN/8, x4, x1, x2)

inst_75289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x8350007fffffffff; valaddr_reg:x3; val_offset:225867*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225867*0 + 3*25*FLEN/8, x4, x1, x2)

inst_75290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835000ffffffffff; valaddr_reg:x3; val_offset:225870*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225870*0 + 3*26*FLEN/8, x4, x1, x2)

inst_75291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835001ffffffffff; valaddr_reg:x3; val_offset:225873*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225873*0 + 3*27*FLEN/8, x4, x1, x2)

inst_75292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835003ffffffffff; valaddr_reg:x3; val_offset:225876*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225876*0 + 3*28*FLEN/8, x4, x1, x2)

inst_75293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835007ffffffffff; valaddr_reg:x3; val_offset:225879*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225879*0 + 3*29*FLEN/8, x4, x1, x2)

inst_75294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x83500fffffffffff; valaddr_reg:x3; val_offset:225882*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225882*0 + 3*30*FLEN/8, x4, x1, x2)

inst_75295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x83501fffffffffff; valaddr_reg:x3; val_offset:225885*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225885*0 + 3*31*FLEN/8, x4, x1, x2)

inst_75296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x83503fffffffffff; valaddr_reg:x3; val_offset:225888*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225888*0 + 3*32*FLEN/8, x4, x1, x2)

inst_75297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x83507fffffffffff; valaddr_reg:x3; val_offset:225891*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225891*0 + 3*33*FLEN/8, x4, x1, x2)

inst_75298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x8350ffffffffffff; valaddr_reg:x3; val_offset:225894*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225894*0 + 3*34*FLEN/8, x4, x1, x2)

inst_75299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x8351ffffffffffff; valaddr_reg:x3; val_offset:225897*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225897*0 + 3*35*FLEN/8, x4, x1, x2)

inst_75300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x8353ffffffffffff; valaddr_reg:x3; val_offset:225900*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225900*0 + 3*36*FLEN/8, x4, x1, x2)

inst_75301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x8357ffffffffffff; valaddr_reg:x3; val_offset:225903*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225903*0 + 3*37*FLEN/8, x4, x1, x2)

inst_75302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x8358000000000000; valaddr_reg:x3; val_offset:225906*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225906*0 + 3*38*FLEN/8, x4, x1, x2)

inst_75303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835c000000000000; valaddr_reg:x3; val_offset:225909*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225909*0 + 3*39*FLEN/8, x4, x1, x2)

inst_75304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835e000000000000; valaddr_reg:x3; val_offset:225912*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225912*0 + 3*40*FLEN/8, x4, x1, x2)

inst_75305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835f000000000000; valaddr_reg:x3; val_offset:225915*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225915*0 + 3*41*FLEN/8, x4, x1, x2)

inst_75306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835f800000000000; valaddr_reg:x3; val_offset:225918*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225918*0 + 3*42*FLEN/8, x4, x1, x2)

inst_75307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835fc00000000000; valaddr_reg:x3; val_offset:225921*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225921*0 + 3*43*FLEN/8, x4, x1, x2)

inst_75308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835fe00000000000; valaddr_reg:x3; val_offset:225924*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225924*0 + 3*44*FLEN/8, x4, x1, x2)

inst_75309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835ff00000000000; valaddr_reg:x3; val_offset:225927*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225927*0 + 3*45*FLEN/8, x4, x1, x2)

inst_75310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835ff80000000000; valaddr_reg:x3; val_offset:225930*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225930*0 + 3*46*FLEN/8, x4, x1, x2)

inst_75311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835ffc0000000000; valaddr_reg:x3; val_offset:225933*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225933*0 + 3*47*FLEN/8, x4, x1, x2)

inst_75312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835ffe0000000000; valaddr_reg:x3; val_offset:225936*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225936*0 + 3*48*FLEN/8, x4, x1, x2)

inst_75313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835fff0000000000; valaddr_reg:x3; val_offset:225939*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225939*0 + 3*49*FLEN/8, x4, x1, x2)

inst_75314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835fff8000000000; valaddr_reg:x3; val_offset:225942*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225942*0 + 3*50*FLEN/8, x4, x1, x2)

inst_75315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835fffc000000000; valaddr_reg:x3; val_offset:225945*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225945*0 + 3*51*FLEN/8, x4, x1, x2)

inst_75316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835fffe000000000; valaddr_reg:x3; val_offset:225948*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225948*0 + 3*52*FLEN/8, x4, x1, x2)

inst_75317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835ffff000000000; valaddr_reg:x3; val_offset:225951*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225951*0 + 3*53*FLEN/8, x4, x1, x2)

inst_75318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835ffff800000000; valaddr_reg:x3; val_offset:225954*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225954*0 + 3*54*FLEN/8, x4, x1, x2)

inst_75319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835ffffc00000000; valaddr_reg:x3; val_offset:225957*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225957*0 + 3*55*FLEN/8, x4, x1, x2)

inst_75320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835ffffe00000000; valaddr_reg:x3; val_offset:225960*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225960*0 + 3*56*FLEN/8, x4, x1, x2)

inst_75321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835fffff00000000; valaddr_reg:x3; val_offset:225963*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225963*0 + 3*57*FLEN/8, x4, x1, x2)

inst_75322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835fffff80000000; valaddr_reg:x3; val_offset:225966*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225966*0 + 3*58*FLEN/8, x4, x1, x2)

inst_75323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835fffffc0000000; valaddr_reg:x3; val_offset:225969*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225969*0 + 3*59*FLEN/8, x4, x1, x2)

inst_75324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835fffffe0000000; valaddr_reg:x3; val_offset:225972*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225972*0 + 3*60*FLEN/8, x4, x1, x2)

inst_75325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835ffffff0000000; valaddr_reg:x3; val_offset:225975*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225975*0 + 3*61*FLEN/8, x4, x1, x2)

inst_75326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835ffffff8000000; valaddr_reg:x3; val_offset:225978*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225978*0 + 3*62*FLEN/8, x4, x1, x2)

inst_75327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835ffffffc000000; valaddr_reg:x3; val_offset:225981*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225981*0 + 3*63*FLEN/8, x4, x1, x2)

inst_75328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835ffffffe000000; valaddr_reg:x3; val_offset:225984*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225984*0 + 3*64*FLEN/8, x4, x1, x2)

inst_75329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835fffffff000000; valaddr_reg:x3; val_offset:225987*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225987*0 + 3*65*FLEN/8, x4, x1, x2)

inst_75330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835fffffff800000; valaddr_reg:x3; val_offset:225990*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225990*0 + 3*66*FLEN/8, x4, x1, x2)

inst_75331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835fffffffc00000; valaddr_reg:x3; val_offset:225993*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225993*0 + 3*67*FLEN/8, x4, x1, x2)

inst_75332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835fffffffe00000; valaddr_reg:x3; val_offset:225996*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225996*0 + 3*68*FLEN/8, x4, x1, x2)

inst_75333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835ffffffff00000; valaddr_reg:x3; val_offset:225999*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225999*0 + 3*69*FLEN/8, x4, x1, x2)

inst_75334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835ffffffff80000; valaddr_reg:x3; val_offset:226002*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226002*0 + 3*70*FLEN/8, x4, x1, x2)

inst_75335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835ffffffffc0000; valaddr_reg:x3; val_offset:226005*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226005*0 + 3*71*FLEN/8, x4, x1, x2)

inst_75336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835ffffffffe0000; valaddr_reg:x3; val_offset:226008*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226008*0 + 3*72*FLEN/8, x4, x1, x2)

inst_75337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835fffffffff0000; valaddr_reg:x3; val_offset:226011*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226011*0 + 3*73*FLEN/8, x4, x1, x2)

inst_75338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835fffffffff8000; valaddr_reg:x3; val_offset:226014*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226014*0 + 3*74*FLEN/8, x4, x1, x2)

inst_75339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835fffffffffc000; valaddr_reg:x3; val_offset:226017*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226017*0 + 3*75*FLEN/8, x4, x1, x2)

inst_75340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835fffffffffe000; valaddr_reg:x3; val_offset:226020*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226020*0 + 3*76*FLEN/8, x4, x1, x2)

inst_75341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835ffffffffff000; valaddr_reg:x3; val_offset:226023*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226023*0 + 3*77*FLEN/8, x4, x1, x2)

inst_75342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835ffffffffff800; valaddr_reg:x3; val_offset:226026*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226026*0 + 3*78*FLEN/8, x4, x1, x2)

inst_75343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835ffffffffffc00; valaddr_reg:x3; val_offset:226029*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226029*0 + 3*79*FLEN/8, x4, x1, x2)

inst_75344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835ffffffffffe00; valaddr_reg:x3; val_offset:226032*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226032*0 + 3*80*FLEN/8, x4, x1, x2)

inst_75345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835fffffffffff00; valaddr_reg:x3; val_offset:226035*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226035*0 + 3*81*FLEN/8, x4, x1, x2)

inst_75346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835fffffffffff80; valaddr_reg:x3; val_offset:226038*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226038*0 + 3*82*FLEN/8, x4, x1, x2)

inst_75347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835fffffffffffc0; valaddr_reg:x3; val_offset:226041*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226041*0 + 3*83*FLEN/8, x4, x1, x2)

inst_75348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835fffffffffffe0; valaddr_reg:x3; val_offset:226044*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226044*0 + 3*84*FLEN/8, x4, x1, x2)

inst_75349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835ffffffffffff0; valaddr_reg:x3; val_offset:226047*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226047*0 + 3*85*FLEN/8, x4, x1, x2)

inst_75350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835ffffffffffff8; valaddr_reg:x3; val_offset:226050*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226050*0 + 3*86*FLEN/8, x4, x1, x2)

inst_75351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835ffffffffffffc; valaddr_reg:x3; val_offset:226053*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226053*0 + 3*87*FLEN/8, x4, x1, x2)

inst_75352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835ffffffffffffe; valaddr_reg:x3; val_offset:226056*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226056*0 + 3*88*FLEN/8, x4, x1, x2)

inst_75353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7bdd24624606d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7bdd24624606d; op2val:0x8000;
op3val:0x835fffffffffffff; valaddr_reg:x3; val_offset:226059*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226059*0 + 3*89*FLEN/8, x4, x1, x2)

inst_75354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:226062*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226062*0 + 3*90*FLEN/8, x4, x1, x2)

inst_75355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:226065*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226065*0 + 3*91*FLEN/8, x4, x1, x2)

inst_75356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:226068*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226068*0 + 3*92*FLEN/8, x4, x1, x2)

inst_75357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:226071*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226071*0 + 3*93*FLEN/8, x4, x1, x2)

inst_75358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:226074*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226074*0 + 3*94*FLEN/8, x4, x1, x2)

inst_75359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:226077*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226077*0 + 3*95*FLEN/8, x4, x1, x2)

inst_75360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:226080*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226080*0 + 3*96*FLEN/8, x4, x1, x2)

inst_75361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:226083*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226083*0 + 3*97*FLEN/8, x4, x1, x2)

inst_75362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:226086*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226086*0 + 3*98*FLEN/8, x4, x1, x2)

inst_75363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:226089*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226089*0 + 3*99*FLEN/8, x4, x1, x2)

inst_75364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:226092*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226092*0 + 3*100*FLEN/8, x4, x1, x2)

inst_75365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:226095*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226095*0 + 3*101*FLEN/8, x4, x1, x2)

inst_75366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:226098*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226098*0 + 3*102*FLEN/8, x4, x1, x2)

inst_75367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:226101*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226101*0 + 3*103*FLEN/8, x4, x1, x2)

inst_75368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:226104*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226104*0 + 3*104*FLEN/8, x4, x1, x2)

inst_75369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:226107*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226107*0 + 3*105*FLEN/8, x4, x1, x2)

inst_75370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:226110*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226110*0 + 3*106*FLEN/8, x4, x1, x2)

inst_75371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:226113*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226113*0 + 3*107*FLEN/8, x4, x1, x2)

inst_75372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:226116*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226116*0 + 3*108*FLEN/8, x4, x1, x2)

inst_75373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:226119*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226119*0 + 3*109*FLEN/8, x4, x1, x2)

inst_75374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:226122*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226122*0 + 3*110*FLEN/8, x4, x1, x2)

inst_75375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:226125*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226125*0 + 3*111*FLEN/8, x4, x1, x2)

inst_75376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x8330000000000000; valaddr_reg:x3; val_offset:226128*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226128*0 + 3*112*FLEN/8, x4, x1, x2)

inst_75377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x8330000000000001; valaddr_reg:x3; val_offset:226131*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226131*0 + 3*113*FLEN/8, x4, x1, x2)

inst_75378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x8330000000000003; valaddr_reg:x3; val_offset:226134*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226134*0 + 3*114*FLEN/8, x4, x1, x2)

inst_75379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x8330000000000007; valaddr_reg:x3; val_offset:226137*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226137*0 + 3*115*FLEN/8, x4, x1, x2)

inst_75380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833000000000000f; valaddr_reg:x3; val_offset:226140*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226140*0 + 3*116*FLEN/8, x4, x1, x2)

inst_75381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833000000000001f; valaddr_reg:x3; val_offset:226143*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226143*0 + 3*117*FLEN/8, x4, x1, x2)

inst_75382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833000000000003f; valaddr_reg:x3; val_offset:226146*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226146*0 + 3*118*FLEN/8, x4, x1, x2)

inst_75383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833000000000007f; valaddr_reg:x3; val_offset:226149*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226149*0 + 3*119*FLEN/8, x4, x1, x2)

inst_75384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x83300000000000ff; valaddr_reg:x3; val_offset:226152*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226152*0 + 3*120*FLEN/8, x4, x1, x2)

inst_75385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x83300000000001ff; valaddr_reg:x3; val_offset:226155*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226155*0 + 3*121*FLEN/8, x4, x1, x2)

inst_75386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x83300000000003ff; valaddr_reg:x3; val_offset:226158*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226158*0 + 3*122*FLEN/8, x4, x1, x2)

inst_75387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x83300000000007ff; valaddr_reg:x3; val_offset:226161*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226161*0 + 3*123*FLEN/8, x4, x1, x2)

inst_75388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x8330000000000fff; valaddr_reg:x3; val_offset:226164*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226164*0 + 3*124*FLEN/8, x4, x1, x2)

inst_75389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x8330000000001fff; valaddr_reg:x3; val_offset:226167*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226167*0 + 3*125*FLEN/8, x4, x1, x2)

inst_75390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x8330000000003fff; valaddr_reg:x3; val_offset:226170*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226170*0 + 3*126*FLEN/8, x4, x1, x2)

inst_75391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x8330000000007fff; valaddr_reg:x3; val_offset:226173*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226173*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_75392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833000000000ffff; valaddr_reg:x3; val_offset:226176*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226176*0 + 3*128*FLEN/8, x4, x1, x2)

inst_75393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833000000001ffff; valaddr_reg:x3; val_offset:226179*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226179*0 + 3*129*FLEN/8, x4, x1, x2)

inst_75394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833000000003ffff; valaddr_reg:x3; val_offset:226182*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226182*0 + 3*130*FLEN/8, x4, x1, x2)

inst_75395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833000000007ffff; valaddr_reg:x3; val_offset:226185*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226185*0 + 3*131*FLEN/8, x4, x1, x2)

inst_75396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x83300000000fffff; valaddr_reg:x3; val_offset:226188*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226188*0 + 3*132*FLEN/8, x4, x1, x2)

inst_75397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x83300000001fffff; valaddr_reg:x3; val_offset:226191*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226191*0 + 3*133*FLEN/8, x4, x1, x2)

inst_75398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x83300000003fffff; valaddr_reg:x3; val_offset:226194*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226194*0 + 3*134*FLEN/8, x4, x1, x2)

inst_75399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x83300000007fffff; valaddr_reg:x3; val_offset:226197*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226197*0 + 3*135*FLEN/8, x4, x1, x2)

inst_75400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x8330000000ffffff; valaddr_reg:x3; val_offset:226200*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226200*0 + 3*136*FLEN/8, x4, x1, x2)

inst_75401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x8330000001ffffff; valaddr_reg:x3; val_offset:226203*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226203*0 + 3*137*FLEN/8, x4, x1, x2)

inst_75402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x8330000003ffffff; valaddr_reg:x3; val_offset:226206*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226206*0 + 3*138*FLEN/8, x4, x1, x2)

inst_75403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x8330000007ffffff; valaddr_reg:x3; val_offset:226209*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226209*0 + 3*139*FLEN/8, x4, x1, x2)

inst_75404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833000000fffffff; valaddr_reg:x3; val_offset:226212*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226212*0 + 3*140*FLEN/8, x4, x1, x2)

inst_75405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833000001fffffff; valaddr_reg:x3; val_offset:226215*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226215*0 + 3*141*FLEN/8, x4, x1, x2)

inst_75406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833000003fffffff; valaddr_reg:x3; val_offset:226218*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226218*0 + 3*142*FLEN/8, x4, x1, x2)

inst_75407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833000007fffffff; valaddr_reg:x3; val_offset:226221*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226221*0 + 3*143*FLEN/8, x4, x1, x2)

inst_75408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x83300000ffffffff; valaddr_reg:x3; val_offset:226224*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226224*0 + 3*144*FLEN/8, x4, x1, x2)

inst_75409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x83300001ffffffff; valaddr_reg:x3; val_offset:226227*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226227*0 + 3*145*FLEN/8, x4, x1, x2)

inst_75410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x83300003ffffffff; valaddr_reg:x3; val_offset:226230*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226230*0 + 3*146*FLEN/8, x4, x1, x2)

inst_75411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x83300007ffffffff; valaddr_reg:x3; val_offset:226233*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226233*0 + 3*147*FLEN/8, x4, x1, x2)

inst_75412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x8330000fffffffff; valaddr_reg:x3; val_offset:226236*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226236*0 + 3*148*FLEN/8, x4, x1, x2)

inst_75413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x8330001fffffffff; valaddr_reg:x3; val_offset:226239*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226239*0 + 3*149*FLEN/8, x4, x1, x2)

inst_75414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x8330003fffffffff; valaddr_reg:x3; val_offset:226242*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226242*0 + 3*150*FLEN/8, x4, x1, x2)

inst_75415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x8330007fffffffff; valaddr_reg:x3; val_offset:226245*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226245*0 + 3*151*FLEN/8, x4, x1, x2)

inst_75416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833000ffffffffff; valaddr_reg:x3; val_offset:226248*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226248*0 + 3*152*FLEN/8, x4, x1, x2)

inst_75417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833001ffffffffff; valaddr_reg:x3; val_offset:226251*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226251*0 + 3*153*FLEN/8, x4, x1, x2)

inst_75418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833003ffffffffff; valaddr_reg:x3; val_offset:226254*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226254*0 + 3*154*FLEN/8, x4, x1, x2)

inst_75419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833007ffffffffff; valaddr_reg:x3; val_offset:226257*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226257*0 + 3*155*FLEN/8, x4, x1, x2)

inst_75420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x83300fffffffffff; valaddr_reg:x3; val_offset:226260*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226260*0 + 3*156*FLEN/8, x4, x1, x2)

inst_75421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x83301fffffffffff; valaddr_reg:x3; val_offset:226263*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226263*0 + 3*157*FLEN/8, x4, x1, x2)

inst_75422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x83303fffffffffff; valaddr_reg:x3; val_offset:226266*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226266*0 + 3*158*FLEN/8, x4, x1, x2)

inst_75423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x83307fffffffffff; valaddr_reg:x3; val_offset:226269*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226269*0 + 3*159*FLEN/8, x4, x1, x2)

inst_75424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x8330ffffffffffff; valaddr_reg:x3; val_offset:226272*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226272*0 + 3*160*FLEN/8, x4, x1, x2)

inst_75425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x8331ffffffffffff; valaddr_reg:x3; val_offset:226275*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226275*0 + 3*161*FLEN/8, x4, x1, x2)

inst_75426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x8333ffffffffffff; valaddr_reg:x3; val_offset:226278*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226278*0 + 3*162*FLEN/8, x4, x1, x2)

inst_75427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x8337ffffffffffff; valaddr_reg:x3; val_offset:226281*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226281*0 + 3*163*FLEN/8, x4, x1, x2)

inst_75428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x8338000000000000; valaddr_reg:x3; val_offset:226284*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226284*0 + 3*164*FLEN/8, x4, x1, x2)

inst_75429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833c000000000000; valaddr_reg:x3; val_offset:226287*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226287*0 + 3*165*FLEN/8, x4, x1, x2)

inst_75430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833e000000000000; valaddr_reg:x3; val_offset:226290*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226290*0 + 3*166*FLEN/8, x4, x1, x2)

inst_75431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833f000000000000; valaddr_reg:x3; val_offset:226293*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226293*0 + 3*167*FLEN/8, x4, x1, x2)

inst_75432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833f800000000000; valaddr_reg:x3; val_offset:226296*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226296*0 + 3*168*FLEN/8, x4, x1, x2)

inst_75433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833fc00000000000; valaddr_reg:x3; val_offset:226299*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226299*0 + 3*169*FLEN/8, x4, x1, x2)

inst_75434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833fe00000000000; valaddr_reg:x3; val_offset:226302*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226302*0 + 3*170*FLEN/8, x4, x1, x2)

inst_75435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833ff00000000000; valaddr_reg:x3; val_offset:226305*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226305*0 + 3*171*FLEN/8, x4, x1, x2)

inst_75436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833ff80000000000; valaddr_reg:x3; val_offset:226308*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226308*0 + 3*172*FLEN/8, x4, x1, x2)

inst_75437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833ffc0000000000; valaddr_reg:x3; val_offset:226311*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226311*0 + 3*173*FLEN/8, x4, x1, x2)

inst_75438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833ffe0000000000; valaddr_reg:x3; val_offset:226314*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226314*0 + 3*174*FLEN/8, x4, x1, x2)

inst_75439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833fff0000000000; valaddr_reg:x3; val_offset:226317*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226317*0 + 3*175*FLEN/8, x4, x1, x2)

inst_75440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833fff8000000000; valaddr_reg:x3; val_offset:226320*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226320*0 + 3*176*FLEN/8, x4, x1, x2)

inst_75441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833fffc000000000; valaddr_reg:x3; val_offset:226323*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226323*0 + 3*177*FLEN/8, x4, x1, x2)

inst_75442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833fffe000000000; valaddr_reg:x3; val_offset:226326*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226326*0 + 3*178*FLEN/8, x4, x1, x2)

inst_75443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833ffff000000000; valaddr_reg:x3; val_offset:226329*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226329*0 + 3*179*FLEN/8, x4, x1, x2)

inst_75444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833ffff800000000; valaddr_reg:x3; val_offset:226332*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226332*0 + 3*180*FLEN/8, x4, x1, x2)

inst_75445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833ffffc00000000; valaddr_reg:x3; val_offset:226335*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226335*0 + 3*181*FLEN/8, x4, x1, x2)

inst_75446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833ffffe00000000; valaddr_reg:x3; val_offset:226338*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226338*0 + 3*182*FLEN/8, x4, x1, x2)

inst_75447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833fffff00000000; valaddr_reg:x3; val_offset:226341*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226341*0 + 3*183*FLEN/8, x4, x1, x2)

inst_75448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833fffff80000000; valaddr_reg:x3; val_offset:226344*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226344*0 + 3*184*FLEN/8, x4, x1, x2)

inst_75449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833fffffc0000000; valaddr_reg:x3; val_offset:226347*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226347*0 + 3*185*FLEN/8, x4, x1, x2)

inst_75450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833fffffe0000000; valaddr_reg:x3; val_offset:226350*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226350*0 + 3*186*FLEN/8, x4, x1, x2)

inst_75451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833ffffff0000000; valaddr_reg:x3; val_offset:226353*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226353*0 + 3*187*FLEN/8, x4, x1, x2)

inst_75452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833ffffff8000000; valaddr_reg:x3; val_offset:226356*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226356*0 + 3*188*FLEN/8, x4, x1, x2)

inst_75453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833ffffffc000000; valaddr_reg:x3; val_offset:226359*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226359*0 + 3*189*FLEN/8, x4, x1, x2)

inst_75454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833ffffffe000000; valaddr_reg:x3; val_offset:226362*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226362*0 + 3*190*FLEN/8, x4, x1, x2)

inst_75455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833fffffff000000; valaddr_reg:x3; val_offset:226365*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226365*0 + 3*191*FLEN/8, x4, x1, x2)

inst_75456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833fffffff800000; valaddr_reg:x3; val_offset:226368*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226368*0 + 3*192*FLEN/8, x4, x1, x2)

inst_75457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833fffffffc00000; valaddr_reg:x3; val_offset:226371*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226371*0 + 3*193*FLEN/8, x4, x1, x2)

inst_75458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833fffffffe00000; valaddr_reg:x3; val_offset:226374*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226374*0 + 3*194*FLEN/8, x4, x1, x2)

inst_75459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833ffffffff00000; valaddr_reg:x3; val_offset:226377*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226377*0 + 3*195*FLEN/8, x4, x1, x2)

inst_75460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833ffffffff80000; valaddr_reg:x3; val_offset:226380*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226380*0 + 3*196*FLEN/8, x4, x1, x2)

inst_75461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833ffffffffc0000; valaddr_reg:x3; val_offset:226383*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226383*0 + 3*197*FLEN/8, x4, x1, x2)

inst_75462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833ffffffffe0000; valaddr_reg:x3; val_offset:226386*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226386*0 + 3*198*FLEN/8, x4, x1, x2)

inst_75463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833fffffffff0000; valaddr_reg:x3; val_offset:226389*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226389*0 + 3*199*FLEN/8, x4, x1, x2)

inst_75464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833fffffffff8000; valaddr_reg:x3; val_offset:226392*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226392*0 + 3*200*FLEN/8, x4, x1, x2)

inst_75465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833fffffffffc000; valaddr_reg:x3; val_offset:226395*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226395*0 + 3*201*FLEN/8, x4, x1, x2)

inst_75466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833fffffffffe000; valaddr_reg:x3; val_offset:226398*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226398*0 + 3*202*FLEN/8, x4, x1, x2)

inst_75467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833ffffffffff000; valaddr_reg:x3; val_offset:226401*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226401*0 + 3*203*FLEN/8, x4, x1, x2)

inst_75468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833ffffffffff800; valaddr_reg:x3; val_offset:226404*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226404*0 + 3*204*FLEN/8, x4, x1, x2)

inst_75469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833ffffffffffc00; valaddr_reg:x3; val_offset:226407*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226407*0 + 3*205*FLEN/8, x4, x1, x2)

inst_75470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833ffffffffffe00; valaddr_reg:x3; val_offset:226410*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226410*0 + 3*206*FLEN/8, x4, x1, x2)

inst_75471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833fffffffffff00; valaddr_reg:x3; val_offset:226413*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226413*0 + 3*207*FLEN/8, x4, x1, x2)

inst_75472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833fffffffffff80; valaddr_reg:x3; val_offset:226416*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226416*0 + 3*208*FLEN/8, x4, x1, x2)

inst_75473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833fffffffffffc0; valaddr_reg:x3; val_offset:226419*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226419*0 + 3*209*FLEN/8, x4, x1, x2)

inst_75474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833fffffffffffe0; valaddr_reg:x3; val_offset:226422*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226422*0 + 3*210*FLEN/8, x4, x1, x2)

inst_75475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833ffffffffffff0; valaddr_reg:x3; val_offset:226425*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226425*0 + 3*211*FLEN/8, x4, x1, x2)

inst_75476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833ffffffffffff8; valaddr_reg:x3; val_offset:226428*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226428*0 + 3*212*FLEN/8, x4, x1, x2)

inst_75477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833ffffffffffffc; valaddr_reg:x3; val_offset:226431*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226431*0 + 3*213*FLEN/8, x4, x1, x2)

inst_75478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833ffffffffffffe; valaddr_reg:x3; val_offset:226434*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226434*0 + 3*214*FLEN/8, x4, x1, x2)

inst_75479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7be1603b2cf54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7be1603b2cf54; op2val:0x8000;
op3val:0x833fffffffffffff; valaddr_reg:x3; val_offset:226437*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226437*0 + 3*215*FLEN/8, x4, x1, x2)

inst_75480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:226440*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226440*0 + 3*216*FLEN/8, x4, x1, x2)

inst_75481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:226443*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226443*0 + 3*217*FLEN/8, x4, x1, x2)

inst_75482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:226446*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226446*0 + 3*218*FLEN/8, x4, x1, x2)

inst_75483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:226449*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226449*0 + 3*219*FLEN/8, x4, x1, x2)

inst_75484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:226452*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226452*0 + 3*220*FLEN/8, x4, x1, x2)

inst_75485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:226455*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226455*0 + 3*221*FLEN/8, x4, x1, x2)

inst_75486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:226458*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226458*0 + 3*222*FLEN/8, x4, x1, x2)

inst_75487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:226461*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226461*0 + 3*223*FLEN/8, x4, x1, x2)

inst_75488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:226464*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226464*0 + 3*224*FLEN/8, x4, x1, x2)

inst_75489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:226467*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226467*0 + 3*225*FLEN/8, x4, x1, x2)

inst_75490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:226470*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226470*0 + 3*226*FLEN/8, x4, x1, x2)

inst_75491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:226473*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226473*0 + 3*227*FLEN/8, x4, x1, x2)

inst_75492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:226476*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226476*0 + 3*228*FLEN/8, x4, x1, x2)

inst_75493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:226479*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226479*0 + 3*229*FLEN/8, x4, x1, x2)

inst_75494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:226482*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226482*0 + 3*230*FLEN/8, x4, x1, x2)

inst_75495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:226485*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226485*0 + 3*231*FLEN/8, x4, x1, x2)

inst_75496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:226488*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226488*0 + 3*232*FLEN/8, x4, x1, x2)

inst_75497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:226491*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226491*0 + 3*233*FLEN/8, x4, x1, x2)

inst_75498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:226494*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226494*0 + 3*234*FLEN/8, x4, x1, x2)

inst_75499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:226497*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226497*0 + 3*235*FLEN/8, x4, x1, x2)

inst_75500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:226500*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226500*0 + 3*236*FLEN/8, x4, x1, x2)

inst_75501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:226503*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226503*0 + 3*237*FLEN/8, x4, x1, x2)

inst_75502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x160000000000000; valaddr_reg:x3; val_offset:226506*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226506*0 + 3*238*FLEN/8, x4, x1, x2)

inst_75503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x160000000000001; valaddr_reg:x3; val_offset:226509*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226509*0 + 3*239*FLEN/8, x4, x1, x2)

inst_75504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x160000000000003; valaddr_reg:x3; val_offset:226512*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226512*0 + 3*240*FLEN/8, x4, x1, x2)

inst_75505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x160000000000007; valaddr_reg:x3; val_offset:226515*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226515*0 + 3*241*FLEN/8, x4, x1, x2)

inst_75506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16000000000000f; valaddr_reg:x3; val_offset:226518*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226518*0 + 3*242*FLEN/8, x4, x1, x2)

inst_75507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16000000000001f; valaddr_reg:x3; val_offset:226521*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226521*0 + 3*243*FLEN/8, x4, x1, x2)

inst_75508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16000000000003f; valaddr_reg:x3; val_offset:226524*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226524*0 + 3*244*FLEN/8, x4, x1, x2)

inst_75509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16000000000007f; valaddr_reg:x3; val_offset:226527*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226527*0 + 3*245*FLEN/8, x4, x1, x2)

inst_75510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x1600000000000ff; valaddr_reg:x3; val_offset:226530*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226530*0 + 3*246*FLEN/8, x4, x1, x2)

inst_75511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x1600000000001ff; valaddr_reg:x3; val_offset:226533*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226533*0 + 3*247*FLEN/8, x4, x1, x2)

inst_75512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x1600000000003ff; valaddr_reg:x3; val_offset:226536*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226536*0 + 3*248*FLEN/8, x4, x1, x2)

inst_75513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x1600000000007ff; valaddr_reg:x3; val_offset:226539*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226539*0 + 3*249*FLEN/8, x4, x1, x2)

inst_75514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x160000000000fff; valaddr_reg:x3; val_offset:226542*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226542*0 + 3*250*FLEN/8, x4, x1, x2)

inst_75515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x160000000001fff; valaddr_reg:x3; val_offset:226545*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226545*0 + 3*251*FLEN/8, x4, x1, x2)

inst_75516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x160000000003fff; valaddr_reg:x3; val_offset:226548*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226548*0 + 3*252*FLEN/8, x4, x1, x2)

inst_75517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x160000000007fff; valaddr_reg:x3; val_offset:226551*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226551*0 + 3*253*FLEN/8, x4, x1, x2)

inst_75518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16000000000ffff; valaddr_reg:x3; val_offset:226554*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226554*0 + 3*254*FLEN/8, x4, x1, x2)

inst_75519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16000000001ffff; valaddr_reg:x3; val_offset:226557*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226557*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_75520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16000000003ffff; valaddr_reg:x3; val_offset:226560*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226560*0 + 3*256*FLEN/8, x4, x1, x2)

inst_75521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16000000007ffff; valaddr_reg:x3; val_offset:226563*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226563*0 + 3*257*FLEN/8, x4, x1, x2)

inst_75522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x1600000000fffff; valaddr_reg:x3; val_offset:226566*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226566*0 + 3*258*FLEN/8, x4, x1, x2)

inst_75523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x1600000001fffff; valaddr_reg:x3; val_offset:226569*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226569*0 + 3*259*FLEN/8, x4, x1, x2)

inst_75524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x1600000003fffff; valaddr_reg:x3; val_offset:226572*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226572*0 + 3*260*FLEN/8, x4, x1, x2)

inst_75525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x1600000007fffff; valaddr_reg:x3; val_offset:226575*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226575*0 + 3*261*FLEN/8, x4, x1, x2)

inst_75526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x160000000ffffff; valaddr_reg:x3; val_offset:226578*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226578*0 + 3*262*FLEN/8, x4, x1, x2)

inst_75527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x160000001ffffff; valaddr_reg:x3; val_offset:226581*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226581*0 + 3*263*FLEN/8, x4, x1, x2)

inst_75528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x160000003ffffff; valaddr_reg:x3; val_offset:226584*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226584*0 + 3*264*FLEN/8, x4, x1, x2)

inst_75529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x160000007ffffff; valaddr_reg:x3; val_offset:226587*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226587*0 + 3*265*FLEN/8, x4, x1, x2)

inst_75530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16000000fffffff; valaddr_reg:x3; val_offset:226590*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226590*0 + 3*266*FLEN/8, x4, x1, x2)

inst_75531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16000001fffffff; valaddr_reg:x3; val_offset:226593*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226593*0 + 3*267*FLEN/8, x4, x1, x2)

inst_75532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16000003fffffff; valaddr_reg:x3; val_offset:226596*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226596*0 + 3*268*FLEN/8, x4, x1, x2)

inst_75533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16000007fffffff; valaddr_reg:x3; val_offset:226599*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226599*0 + 3*269*FLEN/8, x4, x1, x2)

inst_75534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x1600000ffffffff; valaddr_reg:x3; val_offset:226602*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226602*0 + 3*270*FLEN/8, x4, x1, x2)

inst_75535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x1600001ffffffff; valaddr_reg:x3; val_offset:226605*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226605*0 + 3*271*FLEN/8, x4, x1, x2)

inst_75536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x1600003ffffffff; valaddr_reg:x3; val_offset:226608*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226608*0 + 3*272*FLEN/8, x4, x1, x2)

inst_75537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x1600007ffffffff; valaddr_reg:x3; val_offset:226611*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226611*0 + 3*273*FLEN/8, x4, x1, x2)

inst_75538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x160000fffffffff; valaddr_reg:x3; val_offset:226614*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226614*0 + 3*274*FLEN/8, x4, x1, x2)

inst_75539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x160001fffffffff; valaddr_reg:x3; val_offset:226617*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226617*0 + 3*275*FLEN/8, x4, x1, x2)

inst_75540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x160003fffffffff; valaddr_reg:x3; val_offset:226620*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226620*0 + 3*276*FLEN/8, x4, x1, x2)

inst_75541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x160007fffffffff; valaddr_reg:x3; val_offset:226623*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226623*0 + 3*277*FLEN/8, x4, x1, x2)

inst_75542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16000ffffffffff; valaddr_reg:x3; val_offset:226626*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226626*0 + 3*278*FLEN/8, x4, x1, x2)

inst_75543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16001ffffffffff; valaddr_reg:x3; val_offset:226629*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226629*0 + 3*279*FLEN/8, x4, x1, x2)

inst_75544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16003ffffffffff; valaddr_reg:x3; val_offset:226632*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226632*0 + 3*280*FLEN/8, x4, x1, x2)

inst_75545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16007ffffffffff; valaddr_reg:x3; val_offset:226635*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226635*0 + 3*281*FLEN/8, x4, x1, x2)

inst_75546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x1600fffffffffff; valaddr_reg:x3; val_offset:226638*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226638*0 + 3*282*FLEN/8, x4, x1, x2)

inst_75547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x1601fffffffffff; valaddr_reg:x3; val_offset:226641*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226641*0 + 3*283*FLEN/8, x4, x1, x2)

inst_75548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x1603fffffffffff; valaddr_reg:x3; val_offset:226644*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226644*0 + 3*284*FLEN/8, x4, x1, x2)

inst_75549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x1607fffffffffff; valaddr_reg:x3; val_offset:226647*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226647*0 + 3*285*FLEN/8, x4, x1, x2)

inst_75550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x160ffffffffffff; valaddr_reg:x3; val_offset:226650*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226650*0 + 3*286*FLEN/8, x4, x1, x2)

inst_75551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x161ffffffffffff; valaddr_reg:x3; val_offset:226653*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226653*0 + 3*287*FLEN/8, x4, x1, x2)

inst_75552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x163ffffffffffff; valaddr_reg:x3; val_offset:226656*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226656*0 + 3*288*FLEN/8, x4, x1, x2)

inst_75553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x167ffffffffffff; valaddr_reg:x3; val_offset:226659*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226659*0 + 3*289*FLEN/8, x4, x1, x2)

inst_75554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x168000000000000; valaddr_reg:x3; val_offset:226662*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226662*0 + 3*290*FLEN/8, x4, x1, x2)

inst_75555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16c000000000000; valaddr_reg:x3; val_offset:226665*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226665*0 + 3*291*FLEN/8, x4, x1, x2)

inst_75556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16e000000000000; valaddr_reg:x3; val_offset:226668*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226668*0 + 3*292*FLEN/8, x4, x1, x2)

inst_75557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16f000000000000; valaddr_reg:x3; val_offset:226671*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226671*0 + 3*293*FLEN/8, x4, x1, x2)

inst_75558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16f800000000000; valaddr_reg:x3; val_offset:226674*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226674*0 + 3*294*FLEN/8, x4, x1, x2)

inst_75559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16fc00000000000; valaddr_reg:x3; val_offset:226677*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226677*0 + 3*295*FLEN/8, x4, x1, x2)

inst_75560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16fe00000000000; valaddr_reg:x3; val_offset:226680*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226680*0 + 3*296*FLEN/8, x4, x1, x2)

inst_75561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16ff00000000000; valaddr_reg:x3; val_offset:226683*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226683*0 + 3*297*FLEN/8, x4, x1, x2)

inst_75562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16ff80000000000; valaddr_reg:x3; val_offset:226686*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226686*0 + 3*298*FLEN/8, x4, x1, x2)

inst_75563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16ffc0000000000; valaddr_reg:x3; val_offset:226689*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226689*0 + 3*299*FLEN/8, x4, x1, x2)

inst_75564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16ffe0000000000; valaddr_reg:x3; val_offset:226692*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226692*0 + 3*300*FLEN/8, x4, x1, x2)

inst_75565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16fff0000000000; valaddr_reg:x3; val_offset:226695*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226695*0 + 3*301*FLEN/8, x4, x1, x2)

inst_75566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16fff8000000000; valaddr_reg:x3; val_offset:226698*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226698*0 + 3*302*FLEN/8, x4, x1, x2)

inst_75567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16fffc000000000; valaddr_reg:x3; val_offset:226701*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226701*0 + 3*303*FLEN/8, x4, x1, x2)

inst_75568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16fffe000000000; valaddr_reg:x3; val_offset:226704*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226704*0 + 3*304*FLEN/8, x4, x1, x2)

inst_75569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16ffff000000000; valaddr_reg:x3; val_offset:226707*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226707*0 + 3*305*FLEN/8, x4, x1, x2)

inst_75570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16ffff800000000; valaddr_reg:x3; val_offset:226710*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226710*0 + 3*306*FLEN/8, x4, x1, x2)

inst_75571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16ffffc00000000; valaddr_reg:x3; val_offset:226713*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226713*0 + 3*307*FLEN/8, x4, x1, x2)

inst_75572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16ffffe00000000; valaddr_reg:x3; val_offset:226716*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226716*0 + 3*308*FLEN/8, x4, x1, x2)

inst_75573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16fffff00000000; valaddr_reg:x3; val_offset:226719*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226719*0 + 3*309*FLEN/8, x4, x1, x2)

inst_75574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16fffff80000000; valaddr_reg:x3; val_offset:226722*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226722*0 + 3*310*FLEN/8, x4, x1, x2)

inst_75575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16fffffc0000000; valaddr_reg:x3; val_offset:226725*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226725*0 + 3*311*FLEN/8, x4, x1, x2)

inst_75576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16fffffe0000000; valaddr_reg:x3; val_offset:226728*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226728*0 + 3*312*FLEN/8, x4, x1, x2)

inst_75577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16ffffff0000000; valaddr_reg:x3; val_offset:226731*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226731*0 + 3*313*FLEN/8, x4, x1, x2)

inst_75578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16ffffff8000000; valaddr_reg:x3; val_offset:226734*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226734*0 + 3*314*FLEN/8, x4, x1, x2)

inst_75579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16ffffffc000000; valaddr_reg:x3; val_offset:226737*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226737*0 + 3*315*FLEN/8, x4, x1, x2)

inst_75580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16ffffffe000000; valaddr_reg:x3; val_offset:226740*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226740*0 + 3*316*FLEN/8, x4, x1, x2)

inst_75581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16fffffff000000; valaddr_reg:x3; val_offset:226743*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226743*0 + 3*317*FLEN/8, x4, x1, x2)

inst_75582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16fffffff800000; valaddr_reg:x3; val_offset:226746*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226746*0 + 3*318*FLEN/8, x4, x1, x2)

inst_75583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16fffffffc00000; valaddr_reg:x3; val_offset:226749*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226749*0 + 3*319*FLEN/8, x4, x1, x2)

inst_75584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16fffffffe00000; valaddr_reg:x3; val_offset:226752*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226752*0 + 3*320*FLEN/8, x4, x1, x2)

inst_75585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16ffffffff00000; valaddr_reg:x3; val_offset:226755*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226755*0 + 3*321*FLEN/8, x4, x1, x2)

inst_75586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16ffffffff80000; valaddr_reg:x3; val_offset:226758*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226758*0 + 3*322*FLEN/8, x4, x1, x2)

inst_75587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16ffffffffc0000; valaddr_reg:x3; val_offset:226761*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226761*0 + 3*323*FLEN/8, x4, x1, x2)

inst_75588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16ffffffffe0000; valaddr_reg:x3; val_offset:226764*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226764*0 + 3*324*FLEN/8, x4, x1, x2)

inst_75589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16fffffffff0000; valaddr_reg:x3; val_offset:226767*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226767*0 + 3*325*FLEN/8, x4, x1, x2)

inst_75590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16fffffffff8000; valaddr_reg:x3; val_offset:226770*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226770*0 + 3*326*FLEN/8, x4, x1, x2)

inst_75591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16fffffffffc000; valaddr_reg:x3; val_offset:226773*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226773*0 + 3*327*FLEN/8, x4, x1, x2)

inst_75592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16fffffffffe000; valaddr_reg:x3; val_offset:226776*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226776*0 + 3*328*FLEN/8, x4, x1, x2)

inst_75593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16ffffffffff000; valaddr_reg:x3; val_offset:226779*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226779*0 + 3*329*FLEN/8, x4, x1, x2)

inst_75594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16ffffffffff800; valaddr_reg:x3; val_offset:226782*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226782*0 + 3*330*FLEN/8, x4, x1, x2)

inst_75595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16ffffffffffc00; valaddr_reg:x3; val_offset:226785*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226785*0 + 3*331*FLEN/8, x4, x1, x2)

inst_75596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16ffffffffffe00; valaddr_reg:x3; val_offset:226788*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226788*0 + 3*332*FLEN/8, x4, x1, x2)

inst_75597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16fffffffffff00; valaddr_reg:x3; val_offset:226791*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226791*0 + 3*333*FLEN/8, x4, x1, x2)

inst_75598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16fffffffffff80; valaddr_reg:x3; val_offset:226794*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226794*0 + 3*334*FLEN/8, x4, x1, x2)

inst_75599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16fffffffffffc0; valaddr_reg:x3; val_offset:226797*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226797*0 + 3*335*FLEN/8, x4, x1, x2)

inst_75600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16fffffffffffe0; valaddr_reg:x3; val_offset:226800*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226800*0 + 3*336*FLEN/8, x4, x1, x2)

inst_75601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16ffffffffffff0; valaddr_reg:x3; val_offset:226803*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226803*0 + 3*337*FLEN/8, x4, x1, x2)

inst_75602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16ffffffffffff8; valaddr_reg:x3; val_offset:226806*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226806*0 + 3*338*FLEN/8, x4, x1, x2)

inst_75603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16ffffffffffffc; valaddr_reg:x3; val_offset:226809*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226809*0 + 3*339*FLEN/8, x4, x1, x2)

inst_75604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16ffffffffffffe; valaddr_reg:x3; val_offset:226812*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226812*0 + 3*340*FLEN/8, x4, x1, x2)

inst_75605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7fd5e8d632b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7fd5e8d632b; op2val:0x0;
op3val:0x16fffffffffffff; valaddr_reg:x3; val_offset:226815*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226815*0 + 3*341*FLEN/8, x4, x1, x2)

inst_75606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:226818*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226818*0 + 3*342*FLEN/8, x4, x1, x2)

inst_75607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:226821*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226821*0 + 3*343*FLEN/8, x4, x1, x2)

inst_75608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:226824*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226824*0 + 3*344*FLEN/8, x4, x1, x2)

inst_75609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:226827*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226827*0 + 3*345*FLEN/8, x4, x1, x2)

inst_75610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:226830*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226830*0 + 3*346*FLEN/8, x4, x1, x2)

inst_75611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:226833*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226833*0 + 3*347*FLEN/8, x4, x1, x2)

inst_75612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:226836*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226836*0 + 3*348*FLEN/8, x4, x1, x2)

inst_75613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:226839*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226839*0 + 3*349*FLEN/8, x4, x1, x2)

inst_75614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:226842*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226842*0 + 3*350*FLEN/8, x4, x1, x2)

inst_75615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:226845*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226845*0 + 3*351*FLEN/8, x4, x1, x2)

inst_75616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:226848*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226848*0 + 3*352*FLEN/8, x4, x1, x2)

inst_75617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:226851*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226851*0 + 3*353*FLEN/8, x4, x1, x2)

inst_75618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:226854*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226854*0 + 3*354*FLEN/8, x4, x1, x2)

inst_75619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:226857*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226857*0 + 3*355*FLEN/8, x4, x1, x2)

inst_75620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:226860*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226860*0 + 3*356*FLEN/8, x4, x1, x2)

inst_75621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:226863*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226863*0 + 3*357*FLEN/8, x4, x1, x2)

inst_75622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:226866*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226866*0 + 3*358*FLEN/8, x4, x1, x2)

inst_75623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:226869*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226869*0 + 3*359*FLEN/8, x4, x1, x2)

inst_75624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:226872*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226872*0 + 3*360*FLEN/8, x4, x1, x2)

inst_75625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:226875*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226875*0 + 3*361*FLEN/8, x4, x1, x2)

inst_75626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:226878*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226878*0 + 3*362*FLEN/8, x4, x1, x2)

inst_75627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:226881*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226881*0 + 3*363*FLEN/8, x4, x1, x2)

inst_75628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x8280000000000000; valaddr_reg:x3; val_offset:226884*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226884*0 + 3*364*FLEN/8, x4, x1, x2)

inst_75629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x8280000000000001; valaddr_reg:x3; val_offset:226887*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226887*0 + 3*365*FLEN/8, x4, x1, x2)

inst_75630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x8280000000000003; valaddr_reg:x3; val_offset:226890*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226890*0 + 3*366*FLEN/8, x4, x1, x2)

inst_75631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x8280000000000007; valaddr_reg:x3; val_offset:226893*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226893*0 + 3*367*FLEN/8, x4, x1, x2)

inst_75632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828000000000000f; valaddr_reg:x3; val_offset:226896*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226896*0 + 3*368*FLEN/8, x4, x1, x2)

inst_75633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828000000000001f; valaddr_reg:x3; val_offset:226899*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226899*0 + 3*369*FLEN/8, x4, x1, x2)

inst_75634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828000000000003f; valaddr_reg:x3; val_offset:226902*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226902*0 + 3*370*FLEN/8, x4, x1, x2)

inst_75635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828000000000007f; valaddr_reg:x3; val_offset:226905*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226905*0 + 3*371*FLEN/8, x4, x1, x2)

inst_75636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x82800000000000ff; valaddr_reg:x3; val_offset:226908*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226908*0 + 3*372*FLEN/8, x4, x1, x2)

inst_75637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x82800000000001ff; valaddr_reg:x3; val_offset:226911*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226911*0 + 3*373*FLEN/8, x4, x1, x2)

inst_75638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x82800000000003ff; valaddr_reg:x3; val_offset:226914*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226914*0 + 3*374*FLEN/8, x4, x1, x2)

inst_75639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x82800000000007ff; valaddr_reg:x3; val_offset:226917*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226917*0 + 3*375*FLEN/8, x4, x1, x2)

inst_75640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x8280000000000fff; valaddr_reg:x3; val_offset:226920*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226920*0 + 3*376*FLEN/8, x4, x1, x2)

inst_75641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x8280000000001fff; valaddr_reg:x3; val_offset:226923*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226923*0 + 3*377*FLEN/8, x4, x1, x2)

inst_75642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x8280000000003fff; valaddr_reg:x3; val_offset:226926*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226926*0 + 3*378*FLEN/8, x4, x1, x2)

inst_75643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x8280000000007fff; valaddr_reg:x3; val_offset:226929*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226929*0 + 3*379*FLEN/8, x4, x1, x2)

inst_75644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828000000000ffff; valaddr_reg:x3; val_offset:226932*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226932*0 + 3*380*FLEN/8, x4, x1, x2)

inst_75645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828000000001ffff; valaddr_reg:x3; val_offset:226935*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226935*0 + 3*381*FLEN/8, x4, x1, x2)

inst_75646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828000000003ffff; valaddr_reg:x3; val_offset:226938*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226938*0 + 3*382*FLEN/8, x4, x1, x2)

inst_75647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828000000007ffff; valaddr_reg:x3; val_offset:226941*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226941*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_75648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x82800000000fffff; valaddr_reg:x3; val_offset:226944*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226944*0 + 3*384*FLEN/8, x4, x1, x2)

inst_75649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x82800000001fffff; valaddr_reg:x3; val_offset:226947*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226947*0 + 3*385*FLEN/8, x4, x1, x2)

inst_75650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x82800000003fffff; valaddr_reg:x3; val_offset:226950*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226950*0 + 3*386*FLEN/8, x4, x1, x2)

inst_75651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x82800000007fffff; valaddr_reg:x3; val_offset:226953*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226953*0 + 3*387*FLEN/8, x4, x1, x2)

inst_75652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x8280000000ffffff; valaddr_reg:x3; val_offset:226956*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226956*0 + 3*388*FLEN/8, x4, x1, x2)

inst_75653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x8280000001ffffff; valaddr_reg:x3; val_offset:226959*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226959*0 + 3*389*FLEN/8, x4, x1, x2)

inst_75654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x8280000003ffffff; valaddr_reg:x3; val_offset:226962*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226962*0 + 3*390*FLEN/8, x4, x1, x2)

inst_75655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x8280000007ffffff; valaddr_reg:x3; val_offset:226965*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226965*0 + 3*391*FLEN/8, x4, x1, x2)

inst_75656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828000000fffffff; valaddr_reg:x3; val_offset:226968*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226968*0 + 3*392*FLEN/8, x4, x1, x2)

inst_75657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828000001fffffff; valaddr_reg:x3; val_offset:226971*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226971*0 + 3*393*FLEN/8, x4, x1, x2)

inst_75658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828000003fffffff; valaddr_reg:x3; val_offset:226974*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226974*0 + 3*394*FLEN/8, x4, x1, x2)

inst_75659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828000007fffffff; valaddr_reg:x3; val_offset:226977*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226977*0 + 3*395*FLEN/8, x4, x1, x2)

inst_75660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x82800000ffffffff; valaddr_reg:x3; val_offset:226980*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226980*0 + 3*396*FLEN/8, x4, x1, x2)

inst_75661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x82800001ffffffff; valaddr_reg:x3; val_offset:226983*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226983*0 + 3*397*FLEN/8, x4, x1, x2)

inst_75662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x82800003ffffffff; valaddr_reg:x3; val_offset:226986*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226986*0 + 3*398*FLEN/8, x4, x1, x2)

inst_75663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x82800007ffffffff; valaddr_reg:x3; val_offset:226989*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226989*0 + 3*399*FLEN/8, x4, x1, x2)

inst_75664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x8280000fffffffff; valaddr_reg:x3; val_offset:226992*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226992*0 + 3*400*FLEN/8, x4, x1, x2)

inst_75665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x8280001fffffffff; valaddr_reg:x3; val_offset:226995*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226995*0 + 3*401*FLEN/8, x4, x1, x2)

inst_75666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x8280003fffffffff; valaddr_reg:x3; val_offset:226998*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 226998*0 + 3*402*FLEN/8, x4, x1, x2)

inst_75667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x8280007fffffffff; valaddr_reg:x3; val_offset:227001*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227001*0 + 3*403*FLEN/8, x4, x1, x2)

inst_75668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828000ffffffffff; valaddr_reg:x3; val_offset:227004*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227004*0 + 3*404*FLEN/8, x4, x1, x2)

inst_75669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828001ffffffffff; valaddr_reg:x3; val_offset:227007*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227007*0 + 3*405*FLEN/8, x4, x1, x2)

inst_75670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828003ffffffffff; valaddr_reg:x3; val_offset:227010*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227010*0 + 3*406*FLEN/8, x4, x1, x2)

inst_75671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828007ffffffffff; valaddr_reg:x3; val_offset:227013*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227013*0 + 3*407*FLEN/8, x4, x1, x2)

inst_75672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x82800fffffffffff; valaddr_reg:x3; val_offset:227016*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227016*0 + 3*408*FLEN/8, x4, x1, x2)

inst_75673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x82801fffffffffff; valaddr_reg:x3; val_offset:227019*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227019*0 + 3*409*FLEN/8, x4, x1, x2)

inst_75674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x82803fffffffffff; valaddr_reg:x3; val_offset:227022*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227022*0 + 3*410*FLEN/8, x4, x1, x2)

inst_75675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x82807fffffffffff; valaddr_reg:x3; val_offset:227025*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227025*0 + 3*411*FLEN/8, x4, x1, x2)

inst_75676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x8280ffffffffffff; valaddr_reg:x3; val_offset:227028*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227028*0 + 3*412*FLEN/8, x4, x1, x2)

inst_75677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x8281ffffffffffff; valaddr_reg:x3; val_offset:227031*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227031*0 + 3*413*FLEN/8, x4, x1, x2)

inst_75678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x8283ffffffffffff; valaddr_reg:x3; val_offset:227034*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227034*0 + 3*414*FLEN/8, x4, x1, x2)

inst_75679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x8287ffffffffffff; valaddr_reg:x3; val_offset:227037*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227037*0 + 3*415*FLEN/8, x4, x1, x2)

inst_75680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x8288000000000000; valaddr_reg:x3; val_offset:227040*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227040*0 + 3*416*FLEN/8, x4, x1, x2)

inst_75681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828c000000000000; valaddr_reg:x3; val_offset:227043*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227043*0 + 3*417*FLEN/8, x4, x1, x2)

inst_75682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828e000000000000; valaddr_reg:x3; val_offset:227046*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227046*0 + 3*418*FLEN/8, x4, x1, x2)

inst_75683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828f000000000000; valaddr_reg:x3; val_offset:227049*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227049*0 + 3*419*FLEN/8, x4, x1, x2)

inst_75684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828f800000000000; valaddr_reg:x3; val_offset:227052*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227052*0 + 3*420*FLEN/8, x4, x1, x2)

inst_75685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828fc00000000000; valaddr_reg:x3; val_offset:227055*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227055*0 + 3*421*FLEN/8, x4, x1, x2)

inst_75686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828fe00000000000; valaddr_reg:x3; val_offset:227058*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227058*0 + 3*422*FLEN/8, x4, x1, x2)

inst_75687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828ff00000000000; valaddr_reg:x3; val_offset:227061*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227061*0 + 3*423*FLEN/8, x4, x1, x2)

inst_75688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828ff80000000000; valaddr_reg:x3; val_offset:227064*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227064*0 + 3*424*FLEN/8, x4, x1, x2)

inst_75689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828ffc0000000000; valaddr_reg:x3; val_offset:227067*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227067*0 + 3*425*FLEN/8, x4, x1, x2)

inst_75690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828ffe0000000000; valaddr_reg:x3; val_offset:227070*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227070*0 + 3*426*FLEN/8, x4, x1, x2)

inst_75691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828fff0000000000; valaddr_reg:x3; val_offset:227073*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227073*0 + 3*427*FLEN/8, x4, x1, x2)

inst_75692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828fff8000000000; valaddr_reg:x3; val_offset:227076*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227076*0 + 3*428*FLEN/8, x4, x1, x2)

inst_75693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828fffc000000000; valaddr_reg:x3; val_offset:227079*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227079*0 + 3*429*FLEN/8, x4, x1, x2)

inst_75694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828fffe000000000; valaddr_reg:x3; val_offset:227082*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227082*0 + 3*430*FLEN/8, x4, x1, x2)

inst_75695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828ffff000000000; valaddr_reg:x3; val_offset:227085*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227085*0 + 3*431*FLEN/8, x4, x1, x2)

inst_75696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828ffff800000000; valaddr_reg:x3; val_offset:227088*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227088*0 + 3*432*FLEN/8, x4, x1, x2)

inst_75697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828ffffc00000000; valaddr_reg:x3; val_offset:227091*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227091*0 + 3*433*FLEN/8, x4, x1, x2)

inst_75698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828ffffe00000000; valaddr_reg:x3; val_offset:227094*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227094*0 + 3*434*FLEN/8, x4, x1, x2)

inst_75699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828fffff00000000; valaddr_reg:x3; val_offset:227097*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227097*0 + 3*435*FLEN/8, x4, x1, x2)

inst_75700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828fffff80000000; valaddr_reg:x3; val_offset:227100*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227100*0 + 3*436*FLEN/8, x4, x1, x2)

inst_75701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828fffffc0000000; valaddr_reg:x3; val_offset:227103*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227103*0 + 3*437*FLEN/8, x4, x1, x2)

inst_75702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828fffffe0000000; valaddr_reg:x3; val_offset:227106*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227106*0 + 3*438*FLEN/8, x4, x1, x2)

inst_75703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828ffffff0000000; valaddr_reg:x3; val_offset:227109*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227109*0 + 3*439*FLEN/8, x4, x1, x2)

inst_75704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828ffffff8000000; valaddr_reg:x3; val_offset:227112*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227112*0 + 3*440*FLEN/8, x4, x1, x2)

inst_75705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828ffffffc000000; valaddr_reg:x3; val_offset:227115*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227115*0 + 3*441*FLEN/8, x4, x1, x2)

inst_75706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828ffffffe000000; valaddr_reg:x3; val_offset:227118*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227118*0 + 3*442*FLEN/8, x4, x1, x2)

inst_75707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828fffffff000000; valaddr_reg:x3; val_offset:227121*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227121*0 + 3*443*FLEN/8, x4, x1, x2)

inst_75708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828fffffff800000; valaddr_reg:x3; val_offset:227124*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227124*0 + 3*444*FLEN/8, x4, x1, x2)

inst_75709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828fffffffc00000; valaddr_reg:x3; val_offset:227127*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227127*0 + 3*445*FLEN/8, x4, x1, x2)

inst_75710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828fffffffe00000; valaddr_reg:x3; val_offset:227130*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227130*0 + 3*446*FLEN/8, x4, x1, x2)

inst_75711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828ffffffff00000; valaddr_reg:x3; val_offset:227133*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227133*0 + 3*447*FLEN/8, x4, x1, x2)

inst_75712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828ffffffff80000; valaddr_reg:x3; val_offset:227136*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227136*0 + 3*448*FLEN/8, x4, x1, x2)

inst_75713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828ffffffffc0000; valaddr_reg:x3; val_offset:227139*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227139*0 + 3*449*FLEN/8, x4, x1, x2)

inst_75714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828ffffffffe0000; valaddr_reg:x3; val_offset:227142*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227142*0 + 3*450*FLEN/8, x4, x1, x2)

inst_75715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828fffffffff0000; valaddr_reg:x3; val_offset:227145*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227145*0 + 3*451*FLEN/8, x4, x1, x2)

inst_75716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828fffffffff8000; valaddr_reg:x3; val_offset:227148*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227148*0 + 3*452*FLEN/8, x4, x1, x2)

inst_75717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828fffffffffc000; valaddr_reg:x3; val_offset:227151*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227151*0 + 3*453*FLEN/8, x4, x1, x2)

inst_75718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828fffffffffe000; valaddr_reg:x3; val_offset:227154*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227154*0 + 3*454*FLEN/8, x4, x1, x2)

inst_75719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828ffffffffff000; valaddr_reg:x3; val_offset:227157*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227157*0 + 3*455*FLEN/8, x4, x1, x2)

inst_75720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828ffffffffff800; valaddr_reg:x3; val_offset:227160*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227160*0 + 3*456*FLEN/8, x4, x1, x2)

inst_75721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828ffffffffffc00; valaddr_reg:x3; val_offset:227163*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227163*0 + 3*457*FLEN/8, x4, x1, x2)

inst_75722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828ffffffffffe00; valaddr_reg:x3; val_offset:227166*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227166*0 + 3*458*FLEN/8, x4, x1, x2)

inst_75723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828fffffffffff00; valaddr_reg:x3; val_offset:227169*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227169*0 + 3*459*FLEN/8, x4, x1, x2)

inst_75724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828fffffffffff80; valaddr_reg:x3; val_offset:227172*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227172*0 + 3*460*FLEN/8, x4, x1, x2)

inst_75725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828fffffffffffc0; valaddr_reg:x3; val_offset:227175*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227175*0 + 3*461*FLEN/8, x4, x1, x2)

inst_75726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828fffffffffffe0; valaddr_reg:x3; val_offset:227178*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227178*0 + 3*462*FLEN/8, x4, x1, x2)

inst_75727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828ffffffffffff0; valaddr_reg:x3; val_offset:227181*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227181*0 + 3*463*FLEN/8, x4, x1, x2)

inst_75728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828ffffffffffff8; valaddr_reg:x3; val_offset:227184*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227184*0 + 3*464*FLEN/8, x4, x1, x2)

inst_75729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828ffffffffffffc; valaddr_reg:x3; val_offset:227187*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227187*0 + 3*465*FLEN/8, x4, x1, x2)

inst_75730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828ffffffffffffe; valaddr_reg:x3; val_offset:227190*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227190*0 + 3*466*FLEN/8, x4, x1, x2)

inst_75731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d8c1fdfb6a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d8c1fdfb6a69; op2val:0x8000;
op3val:0x828fffffffffffff; valaddr_reg:x3; val_offset:227193*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227193*0 + 3*467*FLEN/8, x4, x1, x2)

inst_75732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:227196*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227196*0 + 3*468*FLEN/8, x4, x1, x2)

inst_75733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:227199*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227199*0 + 3*469*FLEN/8, x4, x1, x2)

inst_75734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:227202*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227202*0 + 3*470*FLEN/8, x4, x1, x2)

inst_75735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:227205*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227205*0 + 3*471*FLEN/8, x4, x1, x2)

inst_75736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:227208*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227208*0 + 3*472*FLEN/8, x4, x1, x2)

inst_75737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:227211*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227211*0 + 3*473*FLEN/8, x4, x1, x2)

inst_75738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:227214*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227214*0 + 3*474*FLEN/8, x4, x1, x2)

inst_75739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:227217*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227217*0 + 3*475*FLEN/8, x4, x1, x2)

inst_75740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:227220*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227220*0 + 3*476*FLEN/8, x4, x1, x2)

inst_75741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:227223*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227223*0 + 3*477*FLEN/8, x4, x1, x2)

inst_75742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:227226*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227226*0 + 3*478*FLEN/8, x4, x1, x2)

inst_75743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:227229*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227229*0 + 3*479*FLEN/8, x4, x1, x2)

inst_75744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:227232*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227232*0 + 3*480*FLEN/8, x4, x1, x2)

inst_75745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:227235*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227235*0 + 3*481*FLEN/8, x4, x1, x2)

inst_75746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:227238*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227238*0 + 3*482*FLEN/8, x4, x1, x2)

inst_75747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:227241*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227241*0 + 3*483*FLEN/8, x4, x1, x2)

inst_75748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:227244*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227244*0 + 3*484*FLEN/8, x4, x1, x2)

inst_75749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:227247*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227247*0 + 3*485*FLEN/8, x4, x1, x2)

inst_75750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:227250*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227250*0 + 3*486*FLEN/8, x4, x1, x2)

inst_75751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:227253*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227253*0 + 3*487*FLEN/8, x4, x1, x2)

inst_75752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:227256*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227256*0 + 3*488*FLEN/8, x4, x1, x2)

inst_75753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:227259*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227259*0 + 3*489*FLEN/8, x4, x1, x2)

inst_75754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2e0000000000000; valaddr_reg:x3; val_offset:227262*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227262*0 + 3*490*FLEN/8, x4, x1, x2)

inst_75755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2e0000000000001; valaddr_reg:x3; val_offset:227265*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227265*0 + 3*491*FLEN/8, x4, x1, x2)

inst_75756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2e0000000000003; valaddr_reg:x3; val_offset:227268*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227268*0 + 3*492*FLEN/8, x4, x1, x2)

inst_75757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2e0000000000007; valaddr_reg:x3; val_offset:227271*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227271*0 + 3*493*FLEN/8, x4, x1, x2)

inst_75758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2e000000000000f; valaddr_reg:x3; val_offset:227274*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227274*0 + 3*494*FLEN/8, x4, x1, x2)

inst_75759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2e000000000001f; valaddr_reg:x3; val_offset:227277*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227277*0 + 3*495*FLEN/8, x4, x1, x2)

inst_75760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2e000000000003f; valaddr_reg:x3; val_offset:227280*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227280*0 + 3*496*FLEN/8, x4, x1, x2)

inst_75761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2e000000000007f; valaddr_reg:x3; val_offset:227283*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227283*0 + 3*497*FLEN/8, x4, x1, x2)

inst_75762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2e00000000000ff; valaddr_reg:x3; val_offset:227286*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227286*0 + 3*498*FLEN/8, x4, x1, x2)

inst_75763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2e00000000001ff; valaddr_reg:x3; val_offset:227289*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227289*0 + 3*499*FLEN/8, x4, x1, x2)

inst_75764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2e00000000003ff; valaddr_reg:x3; val_offset:227292*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227292*0 + 3*500*FLEN/8, x4, x1, x2)

inst_75765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2e00000000007ff; valaddr_reg:x3; val_offset:227295*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227295*0 + 3*501*FLEN/8, x4, x1, x2)

inst_75766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2e0000000000fff; valaddr_reg:x3; val_offset:227298*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227298*0 + 3*502*FLEN/8, x4, x1, x2)

inst_75767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2e0000000001fff; valaddr_reg:x3; val_offset:227301*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227301*0 + 3*503*FLEN/8, x4, x1, x2)

inst_75768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2e0000000003fff; valaddr_reg:x3; val_offset:227304*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227304*0 + 3*504*FLEN/8, x4, x1, x2)

inst_75769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2e0000000007fff; valaddr_reg:x3; val_offset:227307*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227307*0 + 3*505*FLEN/8, x4, x1, x2)

inst_75770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2e000000000ffff; valaddr_reg:x3; val_offset:227310*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227310*0 + 3*506*FLEN/8, x4, x1, x2)

inst_75771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2e000000001ffff; valaddr_reg:x3; val_offset:227313*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227313*0 + 3*507*FLEN/8, x4, x1, x2)

inst_75772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2e000000003ffff; valaddr_reg:x3; val_offset:227316*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227316*0 + 3*508*FLEN/8, x4, x1, x2)

inst_75773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2e000000007ffff; valaddr_reg:x3; val_offset:227319*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227319*0 + 3*509*FLEN/8, x4, x1, x2)

inst_75774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2e00000000fffff; valaddr_reg:x3; val_offset:227322*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227322*0 + 3*510*FLEN/8, x4, x1, x2)

inst_75775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2e00000001fffff; valaddr_reg:x3; val_offset:227325*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227325*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_75776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2e00000003fffff; valaddr_reg:x3; val_offset:227328*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227328*0 + 3*512*FLEN/8, x4, x1, x2)

inst_75777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2e00000007fffff; valaddr_reg:x3; val_offset:227331*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227331*0 + 3*513*FLEN/8, x4, x1, x2)

inst_75778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2e0000000ffffff; valaddr_reg:x3; val_offset:227334*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227334*0 + 3*514*FLEN/8, x4, x1, x2)

inst_75779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2e0000001ffffff; valaddr_reg:x3; val_offset:227337*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227337*0 + 3*515*FLEN/8, x4, x1, x2)

inst_75780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2e0000003ffffff; valaddr_reg:x3; val_offset:227340*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227340*0 + 3*516*FLEN/8, x4, x1, x2)

inst_75781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2e0000007ffffff; valaddr_reg:x3; val_offset:227343*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227343*0 + 3*517*FLEN/8, x4, x1, x2)

inst_75782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2e000000fffffff; valaddr_reg:x3; val_offset:227346*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227346*0 + 3*518*FLEN/8, x4, x1, x2)

inst_75783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2e000001fffffff; valaddr_reg:x3; val_offset:227349*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227349*0 + 3*519*FLEN/8, x4, x1, x2)

inst_75784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2e000003fffffff; valaddr_reg:x3; val_offset:227352*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227352*0 + 3*520*FLEN/8, x4, x1, x2)

inst_75785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2e000007fffffff; valaddr_reg:x3; val_offset:227355*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227355*0 + 3*521*FLEN/8, x4, x1, x2)

inst_75786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2e00000ffffffff; valaddr_reg:x3; val_offset:227358*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227358*0 + 3*522*FLEN/8, x4, x1, x2)

inst_75787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2e00001ffffffff; valaddr_reg:x3; val_offset:227361*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227361*0 + 3*523*FLEN/8, x4, x1, x2)

inst_75788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2e00003ffffffff; valaddr_reg:x3; val_offset:227364*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227364*0 + 3*524*FLEN/8, x4, x1, x2)

inst_75789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2e00007ffffffff; valaddr_reg:x3; val_offset:227367*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227367*0 + 3*525*FLEN/8, x4, x1, x2)

inst_75790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2e0000fffffffff; valaddr_reg:x3; val_offset:227370*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227370*0 + 3*526*FLEN/8, x4, x1, x2)

inst_75791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2e0001fffffffff; valaddr_reg:x3; val_offset:227373*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227373*0 + 3*527*FLEN/8, x4, x1, x2)

inst_75792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2e0003fffffffff; valaddr_reg:x3; val_offset:227376*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227376*0 + 3*528*FLEN/8, x4, x1, x2)

inst_75793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2e0007fffffffff; valaddr_reg:x3; val_offset:227379*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227379*0 + 3*529*FLEN/8, x4, x1, x2)

inst_75794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2e000ffffffffff; valaddr_reg:x3; val_offset:227382*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227382*0 + 3*530*FLEN/8, x4, x1, x2)

inst_75795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2e001ffffffffff; valaddr_reg:x3; val_offset:227385*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227385*0 + 3*531*FLEN/8, x4, x1, x2)

inst_75796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2e003ffffffffff; valaddr_reg:x3; val_offset:227388*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227388*0 + 3*532*FLEN/8, x4, x1, x2)

inst_75797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2e007ffffffffff; valaddr_reg:x3; val_offset:227391*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227391*0 + 3*533*FLEN/8, x4, x1, x2)

inst_75798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2e00fffffffffff; valaddr_reg:x3; val_offset:227394*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227394*0 + 3*534*FLEN/8, x4, x1, x2)

inst_75799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2e01fffffffffff; valaddr_reg:x3; val_offset:227397*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227397*0 + 3*535*FLEN/8, x4, x1, x2)

inst_75800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2e03fffffffffff; valaddr_reg:x3; val_offset:227400*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227400*0 + 3*536*FLEN/8, x4, x1, x2)

inst_75801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2e07fffffffffff; valaddr_reg:x3; val_offset:227403*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227403*0 + 3*537*FLEN/8, x4, x1, x2)

inst_75802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2e0ffffffffffff; valaddr_reg:x3; val_offset:227406*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227406*0 + 3*538*FLEN/8, x4, x1, x2)

inst_75803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2e1ffffffffffff; valaddr_reg:x3; val_offset:227409*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227409*0 + 3*539*FLEN/8, x4, x1, x2)

inst_75804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2e3ffffffffffff; valaddr_reg:x3; val_offset:227412*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227412*0 + 3*540*FLEN/8, x4, x1, x2)

inst_75805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2e7ffffffffffff; valaddr_reg:x3; val_offset:227415*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227415*0 + 3*541*FLEN/8, x4, x1, x2)

inst_75806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2e8000000000000; valaddr_reg:x3; val_offset:227418*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227418*0 + 3*542*FLEN/8, x4, x1, x2)

inst_75807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2ec000000000000; valaddr_reg:x3; val_offset:227421*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227421*0 + 3*543*FLEN/8, x4, x1, x2)

inst_75808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2ee000000000000; valaddr_reg:x3; val_offset:227424*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227424*0 + 3*544*FLEN/8, x4, x1, x2)

inst_75809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2ef000000000000; valaddr_reg:x3; val_offset:227427*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227427*0 + 3*545*FLEN/8, x4, x1, x2)

inst_75810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2ef800000000000; valaddr_reg:x3; val_offset:227430*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227430*0 + 3*546*FLEN/8, x4, x1, x2)

inst_75811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2efc00000000000; valaddr_reg:x3; val_offset:227433*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227433*0 + 3*547*FLEN/8, x4, x1, x2)

inst_75812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2efe00000000000; valaddr_reg:x3; val_offset:227436*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227436*0 + 3*548*FLEN/8, x4, x1, x2)

inst_75813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2eff00000000000; valaddr_reg:x3; val_offset:227439*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227439*0 + 3*549*FLEN/8, x4, x1, x2)

inst_75814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2eff80000000000; valaddr_reg:x3; val_offset:227442*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227442*0 + 3*550*FLEN/8, x4, x1, x2)

inst_75815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2effc0000000000; valaddr_reg:x3; val_offset:227445*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227445*0 + 3*551*FLEN/8, x4, x1, x2)

inst_75816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2effe0000000000; valaddr_reg:x3; val_offset:227448*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227448*0 + 3*552*FLEN/8, x4, x1, x2)

inst_75817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2efff0000000000; valaddr_reg:x3; val_offset:227451*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227451*0 + 3*553*FLEN/8, x4, x1, x2)

inst_75818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2efff8000000000; valaddr_reg:x3; val_offset:227454*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227454*0 + 3*554*FLEN/8, x4, x1, x2)

inst_75819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2efffc000000000; valaddr_reg:x3; val_offset:227457*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227457*0 + 3*555*FLEN/8, x4, x1, x2)

inst_75820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2efffe000000000; valaddr_reg:x3; val_offset:227460*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227460*0 + 3*556*FLEN/8, x4, x1, x2)

inst_75821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2effff000000000; valaddr_reg:x3; val_offset:227463*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227463*0 + 3*557*FLEN/8, x4, x1, x2)

inst_75822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2effff800000000; valaddr_reg:x3; val_offset:227466*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227466*0 + 3*558*FLEN/8, x4, x1, x2)

inst_75823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2effffc00000000; valaddr_reg:x3; val_offset:227469*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227469*0 + 3*559*FLEN/8, x4, x1, x2)

inst_75824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2effffe00000000; valaddr_reg:x3; val_offset:227472*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227472*0 + 3*560*FLEN/8, x4, x1, x2)

inst_75825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2efffff00000000; valaddr_reg:x3; val_offset:227475*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227475*0 + 3*561*FLEN/8, x4, x1, x2)

inst_75826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2efffff80000000; valaddr_reg:x3; val_offset:227478*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227478*0 + 3*562*FLEN/8, x4, x1, x2)

inst_75827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2efffffc0000000; valaddr_reg:x3; val_offset:227481*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227481*0 + 3*563*FLEN/8, x4, x1, x2)

inst_75828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2efffffe0000000; valaddr_reg:x3; val_offset:227484*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227484*0 + 3*564*FLEN/8, x4, x1, x2)

inst_75829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2effffff0000000; valaddr_reg:x3; val_offset:227487*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227487*0 + 3*565*FLEN/8, x4, x1, x2)

inst_75830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2effffff8000000; valaddr_reg:x3; val_offset:227490*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227490*0 + 3*566*FLEN/8, x4, x1, x2)

inst_75831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2effffffc000000; valaddr_reg:x3; val_offset:227493*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227493*0 + 3*567*FLEN/8, x4, x1, x2)

inst_75832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2effffffe000000; valaddr_reg:x3; val_offset:227496*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227496*0 + 3*568*FLEN/8, x4, x1, x2)

inst_75833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2efffffff000000; valaddr_reg:x3; val_offset:227499*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227499*0 + 3*569*FLEN/8, x4, x1, x2)

inst_75834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2efffffff800000; valaddr_reg:x3; val_offset:227502*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227502*0 + 3*570*FLEN/8, x4, x1, x2)

inst_75835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2efffffffc00000; valaddr_reg:x3; val_offset:227505*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227505*0 + 3*571*FLEN/8, x4, x1, x2)

inst_75836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2efffffffe00000; valaddr_reg:x3; val_offset:227508*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227508*0 + 3*572*FLEN/8, x4, x1, x2)

inst_75837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2effffffff00000; valaddr_reg:x3; val_offset:227511*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227511*0 + 3*573*FLEN/8, x4, x1, x2)

inst_75838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2effffffff80000; valaddr_reg:x3; val_offset:227514*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227514*0 + 3*574*FLEN/8, x4, x1, x2)

inst_75839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2effffffffc0000; valaddr_reg:x3; val_offset:227517*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227517*0 + 3*575*FLEN/8, x4, x1, x2)

inst_75840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2effffffffe0000; valaddr_reg:x3; val_offset:227520*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227520*0 + 3*576*FLEN/8, x4, x1, x2)

inst_75841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2efffffffff0000; valaddr_reg:x3; val_offset:227523*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227523*0 + 3*577*FLEN/8, x4, x1, x2)

inst_75842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2efffffffff8000; valaddr_reg:x3; val_offset:227526*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227526*0 + 3*578*FLEN/8, x4, x1, x2)

inst_75843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2efffffffffc000; valaddr_reg:x3; val_offset:227529*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227529*0 + 3*579*FLEN/8, x4, x1, x2)

inst_75844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2efffffffffe000; valaddr_reg:x3; val_offset:227532*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227532*0 + 3*580*FLEN/8, x4, x1, x2)

inst_75845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2effffffffff000; valaddr_reg:x3; val_offset:227535*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227535*0 + 3*581*FLEN/8, x4, x1, x2)

inst_75846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2effffffffff800; valaddr_reg:x3; val_offset:227538*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227538*0 + 3*582*FLEN/8, x4, x1, x2)

inst_75847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2effffffffffc00; valaddr_reg:x3; val_offset:227541*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227541*0 + 3*583*FLEN/8, x4, x1, x2)

inst_75848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2effffffffffe00; valaddr_reg:x3; val_offset:227544*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227544*0 + 3*584*FLEN/8, x4, x1, x2)

inst_75849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2efffffffffff00; valaddr_reg:x3; val_offset:227547*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227547*0 + 3*585*FLEN/8, x4, x1, x2)

inst_75850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2efffffffffff80; valaddr_reg:x3; val_offset:227550*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227550*0 + 3*586*FLEN/8, x4, x1, x2)

inst_75851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2efffffffffffc0; valaddr_reg:x3; val_offset:227553*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227553*0 + 3*587*FLEN/8, x4, x1, x2)

inst_75852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2efffffffffffe0; valaddr_reg:x3; val_offset:227556*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227556*0 + 3*588*FLEN/8, x4, x1, x2)

inst_75853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2effffffffffff0; valaddr_reg:x3; val_offset:227559*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227559*0 + 3*589*FLEN/8, x4, x1, x2)

inst_75854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2effffffffffff8; valaddr_reg:x3; val_offset:227562*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227562*0 + 3*590*FLEN/8, x4, x1, x2)

inst_75855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2effffffffffffc; valaddr_reg:x3; val_offset:227565*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227565*0 + 3*591*FLEN/8, x4, x1, x2)

inst_75856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2effffffffffffe; valaddr_reg:x3; val_offset:227568*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227568*0 + 3*592*FLEN/8, x4, x1, x2)

inst_75857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dd769f7d79bc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7dd769f7d79bc; op2val:0x0;
op3val:0x2efffffffffffff; valaddr_reg:x3; val_offset:227571*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227571*0 + 3*593*FLEN/8, x4, x1, x2)

inst_75858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000008000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x8000; valaddr_reg:x3; val_offset:227574*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227574*0 + 3*594*FLEN/8, x4, x1, x2)

inst_75859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:227577*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227577*0 + 3*595*FLEN/8, x4, x1, x2)

inst_75860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:227580*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227580*0 + 3*596*FLEN/8, x4, x1, x2)

inst_75861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:227583*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227583*0 + 3*597*FLEN/8, x4, x1, x2)

inst_75862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:227586*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227586*0 + 3*598*FLEN/8, x4, x1, x2)

inst_75863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:227589*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227589*0 + 3*599*FLEN/8, x4, x1, x2)

inst_75864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:227592*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227592*0 + 3*600*FLEN/8, x4, x1, x2)

inst_75865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800000000000007f; valaddr_reg:x3; val_offset:227595*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227595*0 + 3*601*FLEN/8, x4, x1, x2)

inst_75866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x80000000000000ff; valaddr_reg:x3; val_offset:227598*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227598*0 + 3*602*FLEN/8, x4, x1, x2)

inst_75867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x80000000000001ff; valaddr_reg:x3; val_offset:227601*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227601*0 + 3*603*FLEN/8, x4, x1, x2)

inst_75868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x80000000000003ff; valaddr_reg:x3; val_offset:227604*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227604*0 + 3*604*FLEN/8, x4, x1, x2)

inst_75869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x80000000000007ff; valaddr_reg:x3; val_offset:227607*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227607*0 + 3*605*FLEN/8, x4, x1, x2)

inst_75870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x8000000000000fff; valaddr_reg:x3; val_offset:227610*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227610*0 + 3*606*FLEN/8, x4, x1, x2)

inst_75871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x8000000000001fff; valaddr_reg:x3; val_offset:227613*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227613*0 + 3*607*FLEN/8, x4, x1, x2)

inst_75872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x8000000000003fff; valaddr_reg:x3; val_offset:227616*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227616*0 + 3*608*FLEN/8, x4, x1, x2)

inst_75873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x8000000000007fff; valaddr_reg:x3; val_offset:227619*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227619*0 + 3*609*FLEN/8, x4, x1, x2)

inst_75874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800000000000ffff; valaddr_reg:x3; val_offset:227622*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227622*0 + 3*610*FLEN/8, x4, x1, x2)

inst_75875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800000000001ffff; valaddr_reg:x3; val_offset:227625*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227625*0 + 3*611*FLEN/8, x4, x1, x2)

inst_75876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800000000003ffff; valaddr_reg:x3; val_offset:227628*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227628*0 + 3*612*FLEN/8, x4, x1, x2)

inst_75877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800000000007ffff; valaddr_reg:x3; val_offset:227631*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227631*0 + 3*613*FLEN/8, x4, x1, x2)

inst_75878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x80000000000fffff; valaddr_reg:x3; val_offset:227634*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227634*0 + 3*614*FLEN/8, x4, x1, x2)

inst_75879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x80000000001fffff; valaddr_reg:x3; val_offset:227637*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227637*0 + 3*615*FLEN/8, x4, x1, x2)

inst_75880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x80000000003fffff; valaddr_reg:x3; val_offset:227640*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227640*0 + 3*616*FLEN/8, x4, x1, x2)

inst_75881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x80000000007fffff; valaddr_reg:x3; val_offset:227643*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227643*0 + 3*617*FLEN/8, x4, x1, x2)

inst_75882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x8000000000ffffff; valaddr_reg:x3; val_offset:227646*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227646*0 + 3*618*FLEN/8, x4, x1, x2)

inst_75883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x8000000001ffffff; valaddr_reg:x3; val_offset:227649*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227649*0 + 3*619*FLEN/8, x4, x1, x2)

inst_75884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x8000000003ffffff; valaddr_reg:x3; val_offset:227652*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227652*0 + 3*620*FLEN/8, x4, x1, x2)

inst_75885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x8000000007ffffff; valaddr_reg:x3; val_offset:227655*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227655*0 + 3*621*FLEN/8, x4, x1, x2)

inst_75886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800000000fffffff; valaddr_reg:x3; val_offset:227658*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227658*0 + 3*622*FLEN/8, x4, x1, x2)

inst_75887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800000001fffffff; valaddr_reg:x3; val_offset:227661*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227661*0 + 3*623*FLEN/8, x4, x1, x2)

inst_75888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800000003fffffff; valaddr_reg:x3; val_offset:227664*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227664*0 + 3*624*FLEN/8, x4, x1, x2)

inst_75889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800000007fffffff; valaddr_reg:x3; val_offset:227667*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227667*0 + 3*625*FLEN/8, x4, x1, x2)

inst_75890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x80000000ffffffff; valaddr_reg:x3; val_offset:227670*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227670*0 + 3*626*FLEN/8, x4, x1, x2)

inst_75891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x80000001ffffffff; valaddr_reg:x3; val_offset:227673*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227673*0 + 3*627*FLEN/8, x4, x1, x2)

inst_75892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x80000003ffffffff; valaddr_reg:x3; val_offset:227676*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227676*0 + 3*628*FLEN/8, x4, x1, x2)

inst_75893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x80000007ffffffff; valaddr_reg:x3; val_offset:227679*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227679*0 + 3*629*FLEN/8, x4, x1, x2)

inst_75894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x8000000fffffffff; valaddr_reg:x3; val_offset:227682*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227682*0 + 3*630*FLEN/8, x4, x1, x2)

inst_75895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x8000001fffffffff; valaddr_reg:x3; val_offset:227685*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227685*0 + 3*631*FLEN/8, x4, x1, x2)

inst_75896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x8000003fffffffff; valaddr_reg:x3; val_offset:227688*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227688*0 + 3*632*FLEN/8, x4, x1, x2)

inst_75897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x8000007fffffffff; valaddr_reg:x3; val_offset:227691*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227691*0 + 3*633*FLEN/8, x4, x1, x2)

inst_75898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800000ffffffffff; valaddr_reg:x3; val_offset:227694*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227694*0 + 3*634*FLEN/8, x4, x1, x2)

inst_75899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800001ffffffffff; valaddr_reg:x3; val_offset:227697*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227697*0 + 3*635*FLEN/8, x4, x1, x2)

inst_75900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800003ffffffffff; valaddr_reg:x3; val_offset:227700*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227700*0 + 3*636*FLEN/8, x4, x1, x2)

inst_75901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800007ffffffffff; valaddr_reg:x3; val_offset:227703*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227703*0 + 3*637*FLEN/8, x4, x1, x2)

inst_75902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x80000fffffffffff; valaddr_reg:x3; val_offset:227706*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227706*0 + 3*638*FLEN/8, x4, x1, x2)

inst_75903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x80001fffffffffff; valaddr_reg:x3; val_offset:227709*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227709*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_75904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x80003fffffffffff; valaddr_reg:x3; val_offset:227712*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227712*0 + 3*640*FLEN/8, x4, x1, x2)

inst_75905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x80007fffffffffff; valaddr_reg:x3; val_offset:227715*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227715*0 + 3*641*FLEN/8, x4, x1, x2)

inst_75906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x8000ffffffffffff; valaddr_reg:x3; val_offset:227718*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227718*0 + 3*642*FLEN/8, x4, x1, x2)

inst_75907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x8001ffffffffffff; valaddr_reg:x3; val_offset:227721*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227721*0 + 3*643*FLEN/8, x4, x1, x2)

inst_75908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:227724*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227724*0 + 3*644*FLEN/8, x4, x1, x2)

inst_75909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x8003ffffffffffff; valaddr_reg:x3; val_offset:227727*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227727*0 + 3*645*FLEN/8, x4, x1, x2)

inst_75910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:227730*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227730*0 + 3*646*FLEN/8, x4, x1, x2)

inst_75911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:227733*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227733*0 + 3*647*FLEN/8, x4, x1, x2)

inst_75912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:227736*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227736*0 + 3*648*FLEN/8, x4, x1, x2)

inst_75913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:227739*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227739*0 + 3*649*FLEN/8, x4, x1, x2)

inst_75914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x8007ffffffffffff; valaddr_reg:x3; val_offset:227742*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227742*0 + 3*650*FLEN/8, x4, x1, x2)

inst_75915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x8008000000000000; valaddr_reg:x3; val_offset:227745*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227745*0 + 3*651*FLEN/8, x4, x1, x2)

inst_75916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:227748*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227748*0 + 3*652*FLEN/8, x4, x1, x2)

inst_75917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:227751*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227751*0 + 3*653*FLEN/8, x4, x1, x2)

inst_75918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:227754*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227754*0 + 3*654*FLEN/8, x4, x1, x2)

inst_75919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800c000000000000; valaddr_reg:x3; val_offset:227757*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227757*0 + 3*655*FLEN/8, x4, x1, x2)

inst_75920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:227760*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227760*0 + 3*656*FLEN/8, x4, x1, x2)

inst_75921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:227763*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227763*0 + 3*657*FLEN/8, x4, x1, x2)

inst_75922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800e000000000000; valaddr_reg:x3; val_offset:227766*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227766*0 + 3*658*FLEN/8, x4, x1, x2)

inst_75923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800f000000000000; valaddr_reg:x3; val_offset:227769*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227769*0 + 3*659*FLEN/8, x4, x1, x2)

inst_75924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800f800000000000; valaddr_reg:x3; val_offset:227772*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227772*0 + 3*660*FLEN/8, x4, x1, x2)

inst_75925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800fc00000000000; valaddr_reg:x3; val_offset:227775*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227775*0 + 3*661*FLEN/8, x4, x1, x2)

inst_75926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800fe00000000000; valaddr_reg:x3; val_offset:227778*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227778*0 + 3*662*FLEN/8, x4, x1, x2)

inst_75927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800ff00000000000; valaddr_reg:x3; val_offset:227781*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227781*0 + 3*663*FLEN/8, x4, x1, x2)

inst_75928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800ff80000000000; valaddr_reg:x3; val_offset:227784*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227784*0 + 3*664*FLEN/8, x4, x1, x2)

inst_75929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800ffc0000000000; valaddr_reg:x3; val_offset:227787*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227787*0 + 3*665*FLEN/8, x4, x1, x2)

inst_75930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800ffe0000000000; valaddr_reg:x3; val_offset:227790*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227790*0 + 3*666*FLEN/8, x4, x1, x2)

inst_75931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800fff0000000000; valaddr_reg:x3; val_offset:227793*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227793*0 + 3*667*FLEN/8, x4, x1, x2)

inst_75932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800fff8000000000; valaddr_reg:x3; val_offset:227796*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227796*0 + 3*668*FLEN/8, x4, x1, x2)

inst_75933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800fffc000000000; valaddr_reg:x3; val_offset:227799*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227799*0 + 3*669*FLEN/8, x4, x1, x2)

inst_75934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800fffe000000000; valaddr_reg:x3; val_offset:227802*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227802*0 + 3*670*FLEN/8, x4, x1, x2)

inst_75935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800ffff000000000; valaddr_reg:x3; val_offset:227805*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227805*0 + 3*671*FLEN/8, x4, x1, x2)

inst_75936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800ffff800000000; valaddr_reg:x3; val_offset:227808*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227808*0 + 3*672*FLEN/8, x4, x1, x2)

inst_75937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800ffffc00000000; valaddr_reg:x3; val_offset:227811*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227811*0 + 3*673*FLEN/8, x4, x1, x2)

inst_75938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800ffffe00000000; valaddr_reg:x3; val_offset:227814*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227814*0 + 3*674*FLEN/8, x4, x1, x2)

inst_75939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800fffff00000000; valaddr_reg:x3; val_offset:227817*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227817*0 + 3*675*FLEN/8, x4, x1, x2)

inst_75940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800fffff80000000; valaddr_reg:x3; val_offset:227820*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227820*0 + 3*676*FLEN/8, x4, x1, x2)

inst_75941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800fffffc0000000; valaddr_reg:x3; val_offset:227823*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227823*0 + 3*677*FLEN/8, x4, x1, x2)

inst_75942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800fffffe0000000; valaddr_reg:x3; val_offset:227826*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227826*0 + 3*678*FLEN/8, x4, x1, x2)

inst_75943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800ffffff0000000; valaddr_reg:x3; val_offset:227829*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227829*0 + 3*679*FLEN/8, x4, x1, x2)

inst_75944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800ffffff8000000; valaddr_reg:x3; val_offset:227832*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227832*0 + 3*680*FLEN/8, x4, x1, x2)

inst_75945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800ffffffc000000; valaddr_reg:x3; val_offset:227835*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227835*0 + 3*681*FLEN/8, x4, x1, x2)

inst_75946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800ffffffe000000; valaddr_reg:x3; val_offset:227838*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227838*0 + 3*682*FLEN/8, x4, x1, x2)

inst_75947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800fffffff000000; valaddr_reg:x3; val_offset:227841*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227841*0 + 3*683*FLEN/8, x4, x1, x2)

inst_75948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800fffffff800000; valaddr_reg:x3; val_offset:227844*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227844*0 + 3*684*FLEN/8, x4, x1, x2)

inst_75949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800fffffffc00000; valaddr_reg:x3; val_offset:227847*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227847*0 + 3*685*FLEN/8, x4, x1, x2)

inst_75950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800fffffffe00000; valaddr_reg:x3; val_offset:227850*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227850*0 + 3*686*FLEN/8, x4, x1, x2)

inst_75951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800ffffffff00000; valaddr_reg:x3; val_offset:227853*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227853*0 + 3*687*FLEN/8, x4, x1, x2)

inst_75952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800ffffffff80000; valaddr_reg:x3; val_offset:227856*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227856*0 + 3*688*FLEN/8, x4, x1, x2)

inst_75953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800ffffffffc0000; valaddr_reg:x3; val_offset:227859*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227859*0 + 3*689*FLEN/8, x4, x1, x2)

inst_75954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800ffffffffe0000; valaddr_reg:x3; val_offset:227862*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227862*0 + 3*690*FLEN/8, x4, x1, x2)

inst_75955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800fffffffff0000; valaddr_reg:x3; val_offset:227865*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227865*0 + 3*691*FLEN/8, x4, x1, x2)

inst_75956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800fffffffff8000; valaddr_reg:x3; val_offset:227868*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227868*0 + 3*692*FLEN/8, x4, x1, x2)

inst_75957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800fffffffffc000; valaddr_reg:x3; val_offset:227871*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227871*0 + 3*693*FLEN/8, x4, x1, x2)

inst_75958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800fffffffffe000; valaddr_reg:x3; val_offset:227874*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227874*0 + 3*694*FLEN/8, x4, x1, x2)

inst_75959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800ffffffffff000; valaddr_reg:x3; val_offset:227877*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227877*0 + 3*695*FLEN/8, x4, x1, x2)

inst_75960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800ffffffffff800; valaddr_reg:x3; val_offset:227880*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227880*0 + 3*696*FLEN/8, x4, x1, x2)

inst_75961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800ffffffffffc00; valaddr_reg:x3; val_offset:227883*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227883*0 + 3*697*FLEN/8, x4, x1, x2)

inst_75962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800ffffffffffe00; valaddr_reg:x3; val_offset:227886*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227886*0 + 3*698*FLEN/8, x4, x1, x2)

inst_75963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800fffffffffff00; valaddr_reg:x3; val_offset:227889*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227889*0 + 3*699*FLEN/8, x4, x1, x2)

inst_75964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800fffffffffff80; valaddr_reg:x3; val_offset:227892*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227892*0 + 3*700*FLEN/8, x4, x1, x2)

inst_75965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:227895*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227895*0 + 3*701*FLEN/8, x4, x1, x2)

inst_75966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:227898*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227898*0 + 3*702*FLEN/8, x4, x1, x2)

inst_75967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:227901*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227901*0 + 3*703*FLEN/8, x4, x1, x2)

inst_75968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:227904*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227904*0 + 3*704*FLEN/8, x4, x1, x2)

inst_75969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:227907*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227907*0 + 3*705*FLEN/8, x4, x1, x2)

inst_75970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:227910*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227910*0 + 3*706*FLEN/8, x4, x1, x2)

inst_75971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e3bed102abb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e3bed102abb0; op2val:0x8000;
op3val:0x800fffffffffffff; valaddr_reg:x3; val_offset:227913*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227913*0 + 3*707*FLEN/8, x4, x1, x2)

inst_75972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbef0000000000000; valaddr_reg:x3; val_offset:227916*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227916*0 + 3*708*FLEN/8, x4, x1, x2)

inst_75973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbef0000000000001; valaddr_reg:x3; val_offset:227919*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227919*0 + 3*709*FLEN/8, x4, x1, x2)

inst_75974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbef0000000000003; valaddr_reg:x3; val_offset:227922*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227922*0 + 3*710*FLEN/8, x4, x1, x2)

inst_75975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbef0000000000007; valaddr_reg:x3; val_offset:227925*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227925*0 + 3*711*FLEN/8, x4, x1, x2)

inst_75976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbef000000000000f; valaddr_reg:x3; val_offset:227928*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227928*0 + 3*712*FLEN/8, x4, x1, x2)

inst_75977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbef000000000001f; valaddr_reg:x3; val_offset:227931*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227931*0 + 3*713*FLEN/8, x4, x1, x2)

inst_75978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbef000000000003f; valaddr_reg:x3; val_offset:227934*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227934*0 + 3*714*FLEN/8, x4, x1, x2)

inst_75979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbef000000000007f; valaddr_reg:x3; val_offset:227937*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227937*0 + 3*715*FLEN/8, x4, x1, x2)

inst_75980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbef00000000000ff; valaddr_reg:x3; val_offset:227940*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227940*0 + 3*716*FLEN/8, x4, x1, x2)

inst_75981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbef00000000001ff; valaddr_reg:x3; val_offset:227943*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227943*0 + 3*717*FLEN/8, x4, x1, x2)

inst_75982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbef00000000003ff; valaddr_reg:x3; val_offset:227946*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227946*0 + 3*718*FLEN/8, x4, x1, x2)

inst_75983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbef00000000007ff; valaddr_reg:x3; val_offset:227949*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227949*0 + 3*719*FLEN/8, x4, x1, x2)

inst_75984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbef0000000000fff; valaddr_reg:x3; val_offset:227952*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227952*0 + 3*720*FLEN/8, x4, x1, x2)

inst_75985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbef0000000001fff; valaddr_reg:x3; val_offset:227955*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227955*0 + 3*721*FLEN/8, x4, x1, x2)

inst_75986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbef0000000003fff; valaddr_reg:x3; val_offset:227958*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227958*0 + 3*722*FLEN/8, x4, x1, x2)

inst_75987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbef0000000007fff; valaddr_reg:x3; val_offset:227961*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227961*0 + 3*723*FLEN/8, x4, x1, x2)

inst_75988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbef000000000ffff; valaddr_reg:x3; val_offset:227964*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227964*0 + 3*724*FLEN/8, x4, x1, x2)

inst_75989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbef000000001ffff; valaddr_reg:x3; val_offset:227967*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227967*0 + 3*725*FLEN/8, x4, x1, x2)

inst_75990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbef000000003ffff; valaddr_reg:x3; val_offset:227970*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227970*0 + 3*726*FLEN/8, x4, x1, x2)

inst_75991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbef000000007ffff; valaddr_reg:x3; val_offset:227973*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227973*0 + 3*727*FLEN/8, x4, x1, x2)

inst_75992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbef00000000fffff; valaddr_reg:x3; val_offset:227976*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227976*0 + 3*728*FLEN/8, x4, x1, x2)

inst_75993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbef00000001fffff; valaddr_reg:x3; val_offset:227979*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227979*0 + 3*729*FLEN/8, x4, x1, x2)

inst_75994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbef00000003fffff; valaddr_reg:x3; val_offset:227982*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227982*0 + 3*730*FLEN/8, x4, x1, x2)

inst_75995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbef00000007fffff; valaddr_reg:x3; val_offset:227985*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227985*0 + 3*731*FLEN/8, x4, x1, x2)

inst_75996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbef0000000ffffff; valaddr_reg:x3; val_offset:227988*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227988*0 + 3*732*FLEN/8, x4, x1, x2)

inst_75997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbef0000001ffffff; valaddr_reg:x3; val_offset:227991*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227991*0 + 3*733*FLEN/8, x4, x1, x2)

inst_75998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbef0000003ffffff; valaddr_reg:x3; val_offset:227994*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227994*0 + 3*734*FLEN/8, x4, x1, x2)

inst_75999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbef0000007ffffff; valaddr_reg:x3; val_offset:227997*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 227997*0 + 3*735*FLEN/8, x4, x1, x2)

inst_76000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbef000000fffffff; valaddr_reg:x3; val_offset:228000*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228000*0 + 3*736*FLEN/8, x4, x1, x2)

inst_76001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbef000001fffffff; valaddr_reg:x3; val_offset:228003*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228003*0 + 3*737*FLEN/8, x4, x1, x2)

inst_76002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbef000003fffffff; valaddr_reg:x3; val_offset:228006*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228006*0 + 3*738*FLEN/8, x4, x1, x2)

inst_76003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbef000007fffffff; valaddr_reg:x3; val_offset:228009*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228009*0 + 3*739*FLEN/8, x4, x1, x2)

inst_76004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbef00000ffffffff; valaddr_reg:x3; val_offset:228012*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228012*0 + 3*740*FLEN/8, x4, x1, x2)

inst_76005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbef00001ffffffff; valaddr_reg:x3; val_offset:228015*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228015*0 + 3*741*FLEN/8, x4, x1, x2)

inst_76006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbef00003ffffffff; valaddr_reg:x3; val_offset:228018*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228018*0 + 3*742*FLEN/8, x4, x1, x2)

inst_76007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbef00007ffffffff; valaddr_reg:x3; val_offset:228021*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228021*0 + 3*743*FLEN/8, x4, x1, x2)

inst_76008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbef0000fffffffff; valaddr_reg:x3; val_offset:228024*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228024*0 + 3*744*FLEN/8, x4, x1, x2)

inst_76009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbef0001fffffffff; valaddr_reg:x3; val_offset:228027*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228027*0 + 3*745*FLEN/8, x4, x1, x2)

inst_76010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbef0003fffffffff; valaddr_reg:x3; val_offset:228030*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228030*0 + 3*746*FLEN/8, x4, x1, x2)

inst_76011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbef0007fffffffff; valaddr_reg:x3; val_offset:228033*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228033*0 + 3*747*FLEN/8, x4, x1, x2)

inst_76012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbef000ffffffffff; valaddr_reg:x3; val_offset:228036*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228036*0 + 3*748*FLEN/8, x4, x1, x2)

inst_76013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbef001ffffffffff; valaddr_reg:x3; val_offset:228039*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228039*0 + 3*749*FLEN/8, x4, x1, x2)

inst_76014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbef003ffffffffff; valaddr_reg:x3; val_offset:228042*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228042*0 + 3*750*FLEN/8, x4, x1, x2)

inst_76015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbef007ffffffffff; valaddr_reg:x3; val_offset:228045*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228045*0 + 3*751*FLEN/8, x4, x1, x2)

inst_76016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbef00fffffffffff; valaddr_reg:x3; val_offset:228048*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228048*0 + 3*752*FLEN/8, x4, x1, x2)

inst_76017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbef01fffffffffff; valaddr_reg:x3; val_offset:228051*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228051*0 + 3*753*FLEN/8, x4, x1, x2)

inst_76018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbef03fffffffffff; valaddr_reg:x3; val_offset:228054*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228054*0 + 3*754*FLEN/8, x4, x1, x2)

inst_76019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbef07fffffffffff; valaddr_reg:x3; val_offset:228057*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228057*0 + 3*755*FLEN/8, x4, x1, x2)

inst_76020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbef0ffffffffffff; valaddr_reg:x3; val_offset:228060*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228060*0 + 3*756*FLEN/8, x4, x1, x2)

inst_76021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbef1ffffffffffff; valaddr_reg:x3; val_offset:228063*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228063*0 + 3*757*FLEN/8, x4, x1, x2)

inst_76022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbef3ffffffffffff; valaddr_reg:x3; val_offset:228066*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228066*0 + 3*758*FLEN/8, x4, x1, x2)

inst_76023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbef7ffffffffffff; valaddr_reg:x3; val_offset:228069*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228069*0 + 3*759*FLEN/8, x4, x1, x2)

inst_76024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbef8000000000000; valaddr_reg:x3; val_offset:228072*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228072*0 + 3*760*FLEN/8, x4, x1, x2)

inst_76025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbefc000000000000; valaddr_reg:x3; val_offset:228075*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228075*0 + 3*761*FLEN/8, x4, x1, x2)

inst_76026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbefe000000000000; valaddr_reg:x3; val_offset:228078*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228078*0 + 3*762*FLEN/8, x4, x1, x2)

inst_76027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbeff000000000000; valaddr_reg:x3; val_offset:228081*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228081*0 + 3*763*FLEN/8, x4, x1, x2)

inst_76028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbeff800000000000; valaddr_reg:x3; val_offset:228084*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228084*0 + 3*764*FLEN/8, x4, x1, x2)

inst_76029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbeffc00000000000; valaddr_reg:x3; val_offset:228087*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228087*0 + 3*765*FLEN/8, x4, x1, x2)

inst_76030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbeffe00000000000; valaddr_reg:x3; val_offset:228090*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228090*0 + 3*766*FLEN/8, x4, x1, x2)

inst_76031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e723f5b49976 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x56b853d5d7db5 and fs3 == 1 and fe3 == 0x3ef and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e723f5b49976; op2val:0x9fc56b853d5d7db5;
op3val:0xbefff00000000000; valaddr_reg:x3; val_offset:228093*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228093*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105428479,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105444863,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105477631,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105543167,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105674239,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105936383,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817106460671,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817107509247,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817109606399,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817113800703,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817122189311,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817138966527,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817172520959,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817239629823,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817373847551,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817642283007,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062818179153919,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062819252895743,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062821400379391,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062825695346687,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062834285281279,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062851465150463,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062885824888831,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062954544365567,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462063091983319039,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462063366861225983,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462063916617039871,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462065016128667647,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462067215151923199,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462071613198434303,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462080409291456511,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462098001477500927,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462133185849589759,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462203554593767423,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462344292082122751,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462625767058833407,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9463188717012254719,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9464314616919097343,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9464314616919097344,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9465440516825939968,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466003466779361280,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466284941756071936,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466425679244427264,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466496047988604928,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466531232360693760,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466548824546738176,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466557620639760384,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466562018686271488,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466564217709527040,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466565317221154816,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466565866976968704,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566141854875648,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566279293829120,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566348013305856,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566382373044224,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566399552913408,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566408142848000,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566412437815296,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566414585298944,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566415659040768,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416195911680,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416464347136,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416598564864,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416665673728,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416699228160,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416716005376,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416724393984,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416728588288,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416730685440,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416731734016,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732258304,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732520448,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732651520,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732717056,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732749824,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732766208,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732774400,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732778496,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732780544,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732781568,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782080,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782336,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782464,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782528,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782560,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782576,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782584,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782588,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782590,64,FLEN)
NAN_BOXED(6892686465531404397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782591,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671104,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671105,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671107,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671111,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671119,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671135,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671167,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671231,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671359,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671615,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850672127,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850673151,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850675199,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850679295,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850687487,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850703871,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850736639,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850802175,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850933247,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617851195391,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617851719679,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617852768255,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617854865407,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617859059711,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617867448319,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617884225535,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617917779967,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617984888831,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055618119106559,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055618387542015,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055618924412927,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055619998154751,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055622145638399,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055626440605695,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055635030540287,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055652210409471,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055686570147839,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055755289624575,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055892728578047,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453056167606484991,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453056717362298879,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453057816873926655,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453060015897182207,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453064413943693311,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453073210036715519,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453090802222759935,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453125986594848767,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453196355339026431,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453337092827381759,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453618567804092415,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9454181517757513727,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9455307417664356351,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9455307417664356352,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9456433317571198976,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9456996267524620288,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457277742501330944,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457418479989686272,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457488848733863936,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457524033105952768,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457541625291997184,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457550421385019392,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457554819431530496,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457557018454786048,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457558117966413824,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457558667722227712,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457558942600134656,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559080039088128,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559148758564864,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559183118303232,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559200298172416,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559208888107008,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559213183074304,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559215330557952,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559216404299776,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559216941170688,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217209606144,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217343823872,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217410932736,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217444487168,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217461264384,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217469652992,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217473847296,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217475944448,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217476993024,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217477517312,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217477779456,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217477910528,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217477976064,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478008832,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478025216,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478033408,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478037504,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478039552,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478040576,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041088,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041344,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041472,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041536,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041568,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041584,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041592,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041596,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041598,64,FLEN)
NAN_BOXED(6892686756474441556,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041599,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150912,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150913,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150915,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150919,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150927,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150943,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150975,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802151039,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802151167,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802151423,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802151935,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802152959,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802155007,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802159103,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802167295,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802183679,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802216447,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802281983,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802413055,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802675199,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191803199487,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191804248063,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191806345215,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191810539519,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191818928127,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191835705343,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191869259775,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191936368639,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079192070586367,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079192339021823,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079192875892735,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079193949634559,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079196097118207,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079200392085503,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079208982020095,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079226161889279,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079260521627647,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079329241104383,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079466680057855,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079741557964799,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99080291313778687,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99081390825406463,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99083589848662015,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99087987895173119,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99096783988195327,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99114376174239743,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99149560546328575,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99219929290506239,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99360666778861567,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99642141755572223,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(100205091708993535,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(101330991615836159,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(101330991615836160,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(102456891522678784,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103019841476100096,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103301316452810752,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103442053941166080,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103512422685343744,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103547607057432576,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103565199243476992,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103573995336499200,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103578393383010304,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103580592406265856,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103581691917893632,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582241673707520,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582516551614464,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582653990567936,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582722710044672,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582757069783040,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582774249652224,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582782839586816,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582787134554112,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582789282037760,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582790355779584,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582790892650496,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791161085952,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791295303680,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791362412544,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791395966976,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791412744192,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791421132800,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791425327104,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791427424256,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791428472832,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791428997120,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429259264,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429390336,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429455872,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429488640,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429505024,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429513216,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429517312,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429519360,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429520384,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429520896,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521152,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521280,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521344,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521376,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521392,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521400,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521404,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521406,64,FLEN)
NAN_BOXED(6892697645740811051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521407,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595648,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595649,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595651,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595655,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595663,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595679,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595711,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595775,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595903,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949596159,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949596671,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949597695,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949599743,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949603839,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949612031,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949628415,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949661183,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949726719,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949857791,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021950119935,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021950644223,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021951692799,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021953789951,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021957984255,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021966372863,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021983150079,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516022016704511,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516022083813375,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516022218031103,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516022486466559,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516023023337471,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516024097079295,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516026244562943,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516030539530239,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516039129464831,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516056309334015,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516090669072383,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516159388549119,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516296827502591,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516571705409535,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403517121461223423,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403518220972851199,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403520419996106751,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403524818042617855,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403533614135640063,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403551206321684479,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403586390693773311,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403656759437950975,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403797496926306303,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9404078971903016959,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9404641921856438271,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9405767821763280895,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9405767821763280896,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9406893721670123520,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9407456671623544832,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9407738146600255488,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9407878884088610816,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9407949252832788480,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9407984437204877312,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408002029390921728,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408010825483943936,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408015223530455040,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408017422553710592,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408018522065338368,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019071821152256,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019346699059200,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019484138012672,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019552857489408,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019587217227776,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019604397096960,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019612987031552,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019617281998848,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019619429482496,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019620503224320,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621040095232,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621308530688,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621442748416,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621509857280,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621543411712,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621560188928,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621568577536,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621572771840,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621574868992,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621575917568,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576441856,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576704000,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576835072,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576900608,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576933376,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576949760,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576957952,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576962048,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576964096,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576965120,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576965632,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576965888,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966016,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966080,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966112,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966128,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966136,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966140,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966142,64,FLEN)
NAN_BOXED(6892716082415233641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966143,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042816,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042817,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042819,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042823,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042831,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042847,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042879,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042943,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859043071,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859043327,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859043839,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859044863,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859046911,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859051007,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859059199,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859075583,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859108351,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859173887,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859304959,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859567103,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582860091391,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582861139967,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582863237119,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582867431423,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582875820031,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582892597247,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582926151679,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582993260543,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165583127478271,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165583395913727,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165583932784639,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165585006526463,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165587154010111,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165591448977407,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165600038911999,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165617218781183,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165651578519551,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165720297996287,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165857736949759,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207166132614856703,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207166682370670591,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207167781882298367,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207169980905553919,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207174378952065023,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207183175045087231,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207200767231131647,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207235951603220479,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207306320347398143,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207447057835753471,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207728532812464127,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(208291482765885439,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(209417382672728063,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(209417382672728064,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(210543282579570688,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211106232532992000,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211387707509702656,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211528444998057984,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211598813742235648,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211633998114324480,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211651590300368896,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211660386393391104,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211664784439902208,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211666983463157760,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211668082974785536,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211668632730599424,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211668907608506368,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669045047459840,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669113766936576,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669148126674944,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669165306544128,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669173896478720,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669178191446016,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669180338929664,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669181412671488,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669181949542400,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182217977856,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182352195584,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182419304448,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182452858880,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182469636096,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182478024704,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182482219008,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182484316160,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182485364736,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182485889024,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486151168,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486282240,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486347776,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486380544,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486396928,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486405120,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486409216,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486411264,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486412288,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486412800,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413056,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413184,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413248,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413280,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413296,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413304,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413308,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413310,64,FLEN)
NAN_BOXED(6892721256265513404,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413311,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775935,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854776063,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854776319,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854776831,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854777855,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854779903,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854783999,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854792191,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854808575,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854841343,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854906879,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036855037951,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036855300095,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036855824383,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036856872959,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036858970111,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036863164415,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036871553023,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036888330239,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036921884671,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036988993535,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372037123211263,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372037391646719,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372037928517631,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372039002259455,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372041149743103,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372045444710399,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372054034644991,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372071214514175,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372105574252543,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372174293729279,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372311732682751,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372586610589695,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223373136366403583,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223374235878031359,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223376434901286911,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223380832947798015,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223389629040820223,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223407221226864639,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223442405598953471,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223512774343131135,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223653511831486463,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223934986808197119,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224497936761618431,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225623836668461055,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225623836668461056,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226749736575303680,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227312686528724992,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227594161505435648,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227734898993790976,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227805267737968640,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227840452110057472,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227858044296101888,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227866840389124096,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227871238435635200,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227873437458890752,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227874536970518528,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875086726332416,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875361604239360,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875499043192832,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875567762669568,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875602122407936,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875619302277120,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875627892211712,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875632187179008,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875634334662656,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875635408404480,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875635945275392,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636213710848,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636347928576,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636415037440,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636448591872,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636465369088,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636473757696,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636477952000,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636480049152,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636481097728,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636481622016,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636481884160,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482015232,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482080768,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482113536,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482129920,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482138112,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482142208,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482144256,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482145280,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482145792,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146048,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146176,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6892728163403738032,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146303,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13758496861616865280,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13758496861616865281,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13758496861616865283,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13758496861616865287,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13758496861616865295,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13758496861616865311,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13758496861616865343,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13758496861616865407,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13758496861616865535,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13758496861616865791,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13758496861616866303,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13758496861616867327,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13758496861616869375,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13758496861616873471,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13758496861616881663,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13758496861616898047,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13758496861616930815,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13758496861616996351,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13758496861617127423,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13758496861617389567,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13758496861617913855,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13758496861618962431,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13758496861621059583,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13758496861625253887,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13758496861633642495,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13758496861650419711,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13758496861683974143,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13758496861751083007,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13758496861885300735,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13758496862153736191,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13758496862690607103,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13758496863764348927,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13758496865911832575,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13758496870206799871,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13758496878796734463,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13758496895976603647,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13758496930336342015,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13758496999055818751,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13758497136494772223,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13758497411372679167,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13758497961128493055,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13758499060640120831,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13758501259663376383,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13758505657709887487,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13758514453802909695,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13758532045988954111,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13758567230361042943,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13758637599105220607,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13758778336593575935,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13759059811570286591,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13759622761523707903,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13760748661430550527,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13760748661430550528,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13761874561337393152,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13762437511290814464,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13762718986267525120,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13762859723755880448,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13762930092500058112,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13762965276872146944,64,FLEN)
NAN_BOXED(6892731896345958774,64,FLEN)
NAN_BOXED(11512726242446900661,64,FLEN)
NAN_BOXED(13762982869058191360,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
