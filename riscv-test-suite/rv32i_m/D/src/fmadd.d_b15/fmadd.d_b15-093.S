
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_70656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x660dae3f3f3e9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6e117986cd194 and fs3 == 0 and fe3 == 0x383 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa660dae3f3f3e9; op2val:0x2036e117986cd194;
op3val:0x383ffffffe000000; valaddr_reg:x3; val_offset:211968*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211968*0 + 3*0*FLEN/8, x4, x1, x2)

inst_70657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x660dae3f3f3e9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6e117986cd194 and fs3 == 0 and fe3 == 0x383 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa660dae3f3f3e9; op2val:0x2036e117986cd194;
op3val:0x383fffffff000000; valaddr_reg:x3; val_offset:211971*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211971*0 + 3*1*FLEN/8, x4, x1, x2)

inst_70658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x660dae3f3f3e9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6e117986cd194 and fs3 == 0 and fe3 == 0x383 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa660dae3f3f3e9; op2val:0x2036e117986cd194;
op3val:0x383fffffff800000; valaddr_reg:x3; val_offset:211974*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211974*0 + 3*2*FLEN/8, x4, x1, x2)

inst_70659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x660dae3f3f3e9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6e117986cd194 and fs3 == 0 and fe3 == 0x383 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa660dae3f3f3e9; op2val:0x2036e117986cd194;
op3val:0x383fffffffc00000; valaddr_reg:x3; val_offset:211977*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211977*0 + 3*3*FLEN/8, x4, x1, x2)

inst_70660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x660dae3f3f3e9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6e117986cd194 and fs3 == 0 and fe3 == 0x383 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa660dae3f3f3e9; op2val:0x2036e117986cd194;
op3val:0x383fffffffe00000; valaddr_reg:x3; val_offset:211980*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211980*0 + 3*4*FLEN/8, x4, x1, x2)

inst_70661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x660dae3f3f3e9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6e117986cd194 and fs3 == 0 and fe3 == 0x383 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa660dae3f3f3e9; op2val:0x2036e117986cd194;
op3val:0x383ffffffff00000; valaddr_reg:x3; val_offset:211983*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211983*0 + 3*5*FLEN/8, x4, x1, x2)

inst_70662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x660dae3f3f3e9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6e117986cd194 and fs3 == 0 and fe3 == 0x383 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa660dae3f3f3e9; op2val:0x2036e117986cd194;
op3val:0x383ffffffff80000; valaddr_reg:x3; val_offset:211986*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211986*0 + 3*6*FLEN/8, x4, x1, x2)

inst_70663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x660dae3f3f3e9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6e117986cd194 and fs3 == 0 and fe3 == 0x383 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa660dae3f3f3e9; op2val:0x2036e117986cd194;
op3val:0x383ffffffffc0000; valaddr_reg:x3; val_offset:211989*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211989*0 + 3*7*FLEN/8, x4, x1, x2)

inst_70664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x660dae3f3f3e9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6e117986cd194 and fs3 == 0 and fe3 == 0x383 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa660dae3f3f3e9; op2val:0x2036e117986cd194;
op3val:0x383ffffffffe0000; valaddr_reg:x3; val_offset:211992*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211992*0 + 3*8*FLEN/8, x4, x1, x2)

inst_70665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x660dae3f3f3e9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6e117986cd194 and fs3 == 0 and fe3 == 0x383 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa660dae3f3f3e9; op2val:0x2036e117986cd194;
op3val:0x383fffffffff0000; valaddr_reg:x3; val_offset:211995*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211995*0 + 3*9*FLEN/8, x4, x1, x2)

inst_70666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x660dae3f3f3e9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6e117986cd194 and fs3 == 0 and fe3 == 0x383 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa660dae3f3f3e9; op2val:0x2036e117986cd194;
op3val:0x383fffffffff8000; valaddr_reg:x3; val_offset:211998*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211998*0 + 3*10*FLEN/8, x4, x1, x2)

inst_70667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x660dae3f3f3e9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6e117986cd194 and fs3 == 0 and fe3 == 0x383 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa660dae3f3f3e9; op2val:0x2036e117986cd194;
op3val:0x383fffffffffc000; valaddr_reg:x3; val_offset:212001*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212001*0 + 3*11*FLEN/8, x4, x1, x2)

inst_70668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x660dae3f3f3e9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6e117986cd194 and fs3 == 0 and fe3 == 0x383 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa660dae3f3f3e9; op2val:0x2036e117986cd194;
op3val:0x383fffffffffe000; valaddr_reg:x3; val_offset:212004*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212004*0 + 3*12*FLEN/8, x4, x1, x2)

inst_70669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x660dae3f3f3e9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6e117986cd194 and fs3 == 0 and fe3 == 0x383 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa660dae3f3f3e9; op2val:0x2036e117986cd194;
op3val:0x383ffffffffff000; valaddr_reg:x3; val_offset:212007*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212007*0 + 3*13*FLEN/8, x4, x1, x2)

inst_70670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x660dae3f3f3e9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6e117986cd194 and fs3 == 0 and fe3 == 0x383 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa660dae3f3f3e9; op2val:0x2036e117986cd194;
op3val:0x383ffffffffff800; valaddr_reg:x3; val_offset:212010*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212010*0 + 3*14*FLEN/8, x4, x1, x2)

inst_70671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x660dae3f3f3e9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6e117986cd194 and fs3 == 0 and fe3 == 0x383 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa660dae3f3f3e9; op2val:0x2036e117986cd194;
op3val:0x383ffffffffffc00; valaddr_reg:x3; val_offset:212013*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212013*0 + 3*15*FLEN/8, x4, x1, x2)

inst_70672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x660dae3f3f3e9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6e117986cd194 and fs3 == 0 and fe3 == 0x383 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa660dae3f3f3e9; op2val:0x2036e117986cd194;
op3val:0x383ffffffffffe00; valaddr_reg:x3; val_offset:212016*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212016*0 + 3*16*FLEN/8, x4, x1, x2)

inst_70673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x660dae3f3f3e9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6e117986cd194 and fs3 == 0 and fe3 == 0x383 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa660dae3f3f3e9; op2val:0x2036e117986cd194;
op3val:0x383fffffffffff00; valaddr_reg:x3; val_offset:212019*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212019*0 + 3*17*FLEN/8, x4, x1, x2)

inst_70674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x660dae3f3f3e9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6e117986cd194 and fs3 == 0 and fe3 == 0x383 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa660dae3f3f3e9; op2val:0x2036e117986cd194;
op3val:0x383fffffffffff80; valaddr_reg:x3; val_offset:212022*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212022*0 + 3*18*FLEN/8, x4, x1, x2)

inst_70675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x660dae3f3f3e9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6e117986cd194 and fs3 == 0 and fe3 == 0x383 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa660dae3f3f3e9; op2val:0x2036e117986cd194;
op3val:0x383fffffffffffc0; valaddr_reg:x3; val_offset:212025*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212025*0 + 3*19*FLEN/8, x4, x1, x2)

inst_70676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x660dae3f3f3e9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6e117986cd194 and fs3 == 0 and fe3 == 0x383 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa660dae3f3f3e9; op2val:0x2036e117986cd194;
op3val:0x383fffffffffffe0; valaddr_reg:x3; val_offset:212028*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212028*0 + 3*20*FLEN/8, x4, x1, x2)

inst_70677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x660dae3f3f3e9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6e117986cd194 and fs3 == 0 and fe3 == 0x383 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa660dae3f3f3e9; op2val:0x2036e117986cd194;
op3val:0x383ffffffffffff0; valaddr_reg:x3; val_offset:212031*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212031*0 + 3*21*FLEN/8, x4, x1, x2)

inst_70678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x660dae3f3f3e9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6e117986cd194 and fs3 == 0 and fe3 == 0x383 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa660dae3f3f3e9; op2val:0x2036e117986cd194;
op3val:0x383ffffffffffff8; valaddr_reg:x3; val_offset:212034*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212034*0 + 3*22*FLEN/8, x4, x1, x2)

inst_70679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x660dae3f3f3e9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6e117986cd194 and fs3 == 0 and fe3 == 0x383 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa660dae3f3f3e9; op2val:0x2036e117986cd194;
op3val:0x383ffffffffffffc; valaddr_reg:x3; val_offset:212037*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212037*0 + 3*23*FLEN/8, x4, x1, x2)

inst_70680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x660dae3f3f3e9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6e117986cd194 and fs3 == 0 and fe3 == 0x383 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa660dae3f3f3e9; op2val:0x2036e117986cd194;
op3val:0x383ffffffffffffe; valaddr_reg:x3; val_offset:212040*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212040*0 + 3*24*FLEN/8, x4, x1, x2)

inst_70681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x660dae3f3f3e9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6e117986cd194 and fs3 == 0 and fe3 == 0x383 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa660dae3f3f3e9; op2val:0x2036e117986cd194;
op3val:0x383fffffffffffff; valaddr_reg:x3; val_offset:212043*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212043*0 + 3*25*FLEN/8, x4, x1, x2)

inst_70682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x660dae3f3f3e9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6e117986cd194 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa660dae3f3f3e9; op2val:0x2036e117986cd194;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:212046*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212046*0 + 3*26*FLEN/8, x4, x1, x2)

inst_70683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x660dae3f3f3e9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6e117986cd194 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa660dae3f3f3e9; op2val:0x2036e117986cd194;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:212049*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212049*0 + 3*27*FLEN/8, x4, x1, x2)

inst_70684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x660dae3f3f3e9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6e117986cd194 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa660dae3f3f3e9; op2val:0x2036e117986cd194;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:212052*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212052*0 + 3*28*FLEN/8, x4, x1, x2)

inst_70685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x660dae3f3f3e9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6e117986cd194 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa660dae3f3f3e9; op2val:0x2036e117986cd194;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:212055*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212055*0 + 3*29*FLEN/8, x4, x1, x2)

inst_70686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x660dae3f3f3e9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6e117986cd194 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa660dae3f3f3e9; op2val:0x2036e117986cd194;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:212058*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212058*0 + 3*30*FLEN/8, x4, x1, x2)

inst_70687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x660dae3f3f3e9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6e117986cd194 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa660dae3f3f3e9; op2val:0x2036e117986cd194;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:212061*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212061*0 + 3*31*FLEN/8, x4, x1, x2)

inst_70688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x660dae3f3f3e9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6e117986cd194 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa660dae3f3f3e9; op2val:0x2036e117986cd194;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:212064*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212064*0 + 3*32*FLEN/8, x4, x1, x2)

inst_70689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x660dae3f3f3e9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6e117986cd194 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa660dae3f3f3e9; op2val:0x2036e117986cd194;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:212067*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212067*0 + 3*33*FLEN/8, x4, x1, x2)

inst_70690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x660dae3f3f3e9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6e117986cd194 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa660dae3f3f3e9; op2val:0x2036e117986cd194;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:212070*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212070*0 + 3*34*FLEN/8, x4, x1, x2)

inst_70691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x660dae3f3f3e9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6e117986cd194 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa660dae3f3f3e9; op2val:0x2036e117986cd194;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:212073*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212073*0 + 3*35*FLEN/8, x4, x1, x2)

inst_70692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x660dae3f3f3e9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6e117986cd194 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa660dae3f3f3e9; op2val:0x2036e117986cd194;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:212076*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212076*0 + 3*36*FLEN/8, x4, x1, x2)

inst_70693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x660dae3f3f3e9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6e117986cd194 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa660dae3f3f3e9; op2val:0x2036e117986cd194;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:212079*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212079*0 + 3*37*FLEN/8, x4, x1, x2)

inst_70694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x660dae3f3f3e9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6e117986cd194 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa660dae3f3f3e9; op2val:0x2036e117986cd194;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:212082*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212082*0 + 3*38*FLEN/8, x4, x1, x2)

inst_70695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x660dae3f3f3e9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6e117986cd194 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa660dae3f3f3e9; op2val:0x2036e117986cd194;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:212085*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212085*0 + 3*39*FLEN/8, x4, x1, x2)

inst_70696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x660dae3f3f3e9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6e117986cd194 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa660dae3f3f3e9; op2val:0x2036e117986cd194;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:212088*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212088*0 + 3*40*FLEN/8, x4, x1, x2)

inst_70697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x660dae3f3f3e9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6e117986cd194 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa660dae3f3f3e9; op2val:0x2036e117986cd194;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:212091*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212091*0 + 3*41*FLEN/8, x4, x1, x2)

inst_70698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x660dae3f3f3e9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6e117986cd194 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa660dae3f3f3e9; op2val:0x2036e117986cd194;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:212094*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212094*0 + 3*42*FLEN/8, x4, x1, x2)

inst_70699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x660dae3f3f3e9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6e117986cd194 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa660dae3f3f3e9; op2val:0x2036e117986cd194;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:212097*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212097*0 + 3*43*FLEN/8, x4, x1, x2)

inst_70700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x660dae3f3f3e9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6e117986cd194 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa660dae3f3f3e9; op2val:0x2036e117986cd194;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:212100*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212100*0 + 3*44*FLEN/8, x4, x1, x2)

inst_70701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x660dae3f3f3e9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6e117986cd194 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa660dae3f3f3e9; op2val:0x2036e117986cd194;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:212103*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212103*0 + 3*45*FLEN/8, x4, x1, x2)

inst_70702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x660dae3f3f3e9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6e117986cd194 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa660dae3f3f3e9; op2val:0x2036e117986cd194;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:212106*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212106*0 + 3*46*FLEN/8, x4, x1, x2)

inst_70703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x660dae3f3f3e9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6e117986cd194 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa660dae3f3f3e9; op2val:0x2036e117986cd194;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:212109*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212109*0 + 3*47*FLEN/8, x4, x1, x2)

inst_70704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb920000000000000; valaddr_reg:x3; val_offset:212112*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212112*0 + 3*48*FLEN/8, x4, x1, x2)

inst_70705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb920000000000001; valaddr_reg:x3; val_offset:212115*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212115*0 + 3*49*FLEN/8, x4, x1, x2)

inst_70706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb920000000000003; valaddr_reg:x3; val_offset:212118*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212118*0 + 3*50*FLEN/8, x4, x1, x2)

inst_70707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb920000000000007; valaddr_reg:x3; val_offset:212121*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212121*0 + 3*51*FLEN/8, x4, x1, x2)

inst_70708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92000000000000f; valaddr_reg:x3; val_offset:212124*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212124*0 + 3*52*FLEN/8, x4, x1, x2)

inst_70709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92000000000001f; valaddr_reg:x3; val_offset:212127*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212127*0 + 3*53*FLEN/8, x4, x1, x2)

inst_70710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92000000000003f; valaddr_reg:x3; val_offset:212130*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212130*0 + 3*54*FLEN/8, x4, x1, x2)

inst_70711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92000000000007f; valaddr_reg:x3; val_offset:212133*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212133*0 + 3*55*FLEN/8, x4, x1, x2)

inst_70712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb9200000000000ff; valaddr_reg:x3; val_offset:212136*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212136*0 + 3*56*FLEN/8, x4, x1, x2)

inst_70713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb9200000000001ff; valaddr_reg:x3; val_offset:212139*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212139*0 + 3*57*FLEN/8, x4, x1, x2)

inst_70714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb9200000000003ff; valaddr_reg:x3; val_offset:212142*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212142*0 + 3*58*FLEN/8, x4, x1, x2)

inst_70715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb9200000000007ff; valaddr_reg:x3; val_offset:212145*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212145*0 + 3*59*FLEN/8, x4, x1, x2)

inst_70716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb920000000000fff; valaddr_reg:x3; val_offset:212148*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212148*0 + 3*60*FLEN/8, x4, x1, x2)

inst_70717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb920000000001fff; valaddr_reg:x3; val_offset:212151*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212151*0 + 3*61*FLEN/8, x4, x1, x2)

inst_70718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb920000000003fff; valaddr_reg:x3; val_offset:212154*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212154*0 + 3*62*FLEN/8, x4, x1, x2)

inst_70719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb920000000007fff; valaddr_reg:x3; val_offset:212157*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212157*0 + 3*63*FLEN/8, x4, x1, x2)

inst_70720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92000000000ffff; valaddr_reg:x3; val_offset:212160*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212160*0 + 3*64*FLEN/8, x4, x1, x2)

inst_70721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92000000001ffff; valaddr_reg:x3; val_offset:212163*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212163*0 + 3*65*FLEN/8, x4, x1, x2)

inst_70722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92000000003ffff; valaddr_reg:x3; val_offset:212166*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212166*0 + 3*66*FLEN/8, x4, x1, x2)

inst_70723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92000000007ffff; valaddr_reg:x3; val_offset:212169*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212169*0 + 3*67*FLEN/8, x4, x1, x2)

inst_70724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb9200000000fffff; valaddr_reg:x3; val_offset:212172*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212172*0 + 3*68*FLEN/8, x4, x1, x2)

inst_70725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb9200000001fffff; valaddr_reg:x3; val_offset:212175*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212175*0 + 3*69*FLEN/8, x4, x1, x2)

inst_70726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb9200000003fffff; valaddr_reg:x3; val_offset:212178*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212178*0 + 3*70*FLEN/8, x4, x1, x2)

inst_70727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb9200000007fffff; valaddr_reg:x3; val_offset:212181*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212181*0 + 3*71*FLEN/8, x4, x1, x2)

inst_70728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb920000000ffffff; valaddr_reg:x3; val_offset:212184*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212184*0 + 3*72*FLEN/8, x4, x1, x2)

inst_70729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb920000001ffffff; valaddr_reg:x3; val_offset:212187*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212187*0 + 3*73*FLEN/8, x4, x1, x2)

inst_70730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb920000003ffffff; valaddr_reg:x3; val_offset:212190*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212190*0 + 3*74*FLEN/8, x4, x1, x2)

inst_70731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb920000007ffffff; valaddr_reg:x3; val_offset:212193*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212193*0 + 3*75*FLEN/8, x4, x1, x2)

inst_70732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92000000fffffff; valaddr_reg:x3; val_offset:212196*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212196*0 + 3*76*FLEN/8, x4, x1, x2)

inst_70733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92000001fffffff; valaddr_reg:x3; val_offset:212199*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212199*0 + 3*77*FLEN/8, x4, x1, x2)

inst_70734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92000003fffffff; valaddr_reg:x3; val_offset:212202*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212202*0 + 3*78*FLEN/8, x4, x1, x2)

inst_70735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92000007fffffff; valaddr_reg:x3; val_offset:212205*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212205*0 + 3*79*FLEN/8, x4, x1, x2)

inst_70736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb9200000ffffffff; valaddr_reg:x3; val_offset:212208*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212208*0 + 3*80*FLEN/8, x4, x1, x2)

inst_70737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb9200001ffffffff; valaddr_reg:x3; val_offset:212211*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212211*0 + 3*81*FLEN/8, x4, x1, x2)

inst_70738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb9200003ffffffff; valaddr_reg:x3; val_offset:212214*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212214*0 + 3*82*FLEN/8, x4, x1, x2)

inst_70739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb9200007ffffffff; valaddr_reg:x3; val_offset:212217*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212217*0 + 3*83*FLEN/8, x4, x1, x2)

inst_70740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb920000fffffffff; valaddr_reg:x3; val_offset:212220*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212220*0 + 3*84*FLEN/8, x4, x1, x2)

inst_70741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb920001fffffffff; valaddr_reg:x3; val_offset:212223*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212223*0 + 3*85*FLEN/8, x4, x1, x2)

inst_70742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb920003fffffffff; valaddr_reg:x3; val_offset:212226*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212226*0 + 3*86*FLEN/8, x4, x1, x2)

inst_70743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb920007fffffffff; valaddr_reg:x3; val_offset:212229*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212229*0 + 3*87*FLEN/8, x4, x1, x2)

inst_70744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92000ffffffffff; valaddr_reg:x3; val_offset:212232*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212232*0 + 3*88*FLEN/8, x4, x1, x2)

inst_70745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92001ffffffffff; valaddr_reg:x3; val_offset:212235*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212235*0 + 3*89*FLEN/8, x4, x1, x2)

inst_70746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92003ffffffffff; valaddr_reg:x3; val_offset:212238*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212238*0 + 3*90*FLEN/8, x4, x1, x2)

inst_70747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92007ffffffffff; valaddr_reg:x3; val_offset:212241*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212241*0 + 3*91*FLEN/8, x4, x1, x2)

inst_70748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb9200fffffffffff; valaddr_reg:x3; val_offset:212244*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212244*0 + 3*92*FLEN/8, x4, x1, x2)

inst_70749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb9201fffffffffff; valaddr_reg:x3; val_offset:212247*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212247*0 + 3*93*FLEN/8, x4, x1, x2)

inst_70750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb9203fffffffffff; valaddr_reg:x3; val_offset:212250*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212250*0 + 3*94*FLEN/8, x4, x1, x2)

inst_70751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb9207fffffffffff; valaddr_reg:x3; val_offset:212253*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212253*0 + 3*95*FLEN/8, x4, x1, x2)

inst_70752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb920ffffffffffff; valaddr_reg:x3; val_offset:212256*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212256*0 + 3*96*FLEN/8, x4, x1, x2)

inst_70753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb921ffffffffffff; valaddr_reg:x3; val_offset:212259*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212259*0 + 3*97*FLEN/8, x4, x1, x2)

inst_70754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb923ffffffffffff; valaddr_reg:x3; val_offset:212262*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212262*0 + 3*98*FLEN/8, x4, x1, x2)

inst_70755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb927ffffffffffff; valaddr_reg:x3; val_offset:212265*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212265*0 + 3*99*FLEN/8, x4, x1, x2)

inst_70756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb928000000000000; valaddr_reg:x3; val_offset:212268*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212268*0 + 3*100*FLEN/8, x4, x1, x2)

inst_70757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92c000000000000; valaddr_reg:x3; val_offset:212271*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212271*0 + 3*101*FLEN/8, x4, x1, x2)

inst_70758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92e000000000000; valaddr_reg:x3; val_offset:212274*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212274*0 + 3*102*FLEN/8, x4, x1, x2)

inst_70759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92f000000000000; valaddr_reg:x3; val_offset:212277*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212277*0 + 3*103*FLEN/8, x4, x1, x2)

inst_70760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92f800000000000; valaddr_reg:x3; val_offset:212280*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212280*0 + 3*104*FLEN/8, x4, x1, x2)

inst_70761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92fc00000000000; valaddr_reg:x3; val_offset:212283*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212283*0 + 3*105*FLEN/8, x4, x1, x2)

inst_70762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92fe00000000000; valaddr_reg:x3; val_offset:212286*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212286*0 + 3*106*FLEN/8, x4, x1, x2)

inst_70763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92ff00000000000; valaddr_reg:x3; val_offset:212289*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212289*0 + 3*107*FLEN/8, x4, x1, x2)

inst_70764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92ff80000000000; valaddr_reg:x3; val_offset:212292*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212292*0 + 3*108*FLEN/8, x4, x1, x2)

inst_70765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92ffc0000000000; valaddr_reg:x3; val_offset:212295*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212295*0 + 3*109*FLEN/8, x4, x1, x2)

inst_70766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92ffe0000000000; valaddr_reg:x3; val_offset:212298*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212298*0 + 3*110*FLEN/8, x4, x1, x2)

inst_70767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92fff0000000000; valaddr_reg:x3; val_offset:212301*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212301*0 + 3*111*FLEN/8, x4, x1, x2)

inst_70768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92fff8000000000; valaddr_reg:x3; val_offset:212304*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212304*0 + 3*112*FLEN/8, x4, x1, x2)

inst_70769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92fffc000000000; valaddr_reg:x3; val_offset:212307*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212307*0 + 3*113*FLEN/8, x4, x1, x2)

inst_70770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92fffe000000000; valaddr_reg:x3; val_offset:212310*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212310*0 + 3*114*FLEN/8, x4, x1, x2)

inst_70771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92ffff000000000; valaddr_reg:x3; val_offset:212313*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212313*0 + 3*115*FLEN/8, x4, x1, x2)

inst_70772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92ffff800000000; valaddr_reg:x3; val_offset:212316*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212316*0 + 3*116*FLEN/8, x4, x1, x2)

inst_70773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92ffffc00000000; valaddr_reg:x3; val_offset:212319*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212319*0 + 3*117*FLEN/8, x4, x1, x2)

inst_70774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92ffffe00000000; valaddr_reg:x3; val_offset:212322*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212322*0 + 3*118*FLEN/8, x4, x1, x2)

inst_70775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92fffff00000000; valaddr_reg:x3; val_offset:212325*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212325*0 + 3*119*FLEN/8, x4, x1, x2)

inst_70776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92fffff80000000; valaddr_reg:x3; val_offset:212328*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212328*0 + 3*120*FLEN/8, x4, x1, x2)

inst_70777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92fffffc0000000; valaddr_reg:x3; val_offset:212331*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212331*0 + 3*121*FLEN/8, x4, x1, x2)

inst_70778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92fffffe0000000; valaddr_reg:x3; val_offset:212334*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212334*0 + 3*122*FLEN/8, x4, x1, x2)

inst_70779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92ffffff0000000; valaddr_reg:x3; val_offset:212337*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212337*0 + 3*123*FLEN/8, x4, x1, x2)

inst_70780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92ffffff8000000; valaddr_reg:x3; val_offset:212340*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212340*0 + 3*124*FLEN/8, x4, x1, x2)

inst_70781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92ffffffc000000; valaddr_reg:x3; val_offset:212343*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212343*0 + 3*125*FLEN/8, x4, x1, x2)

inst_70782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92ffffffe000000; valaddr_reg:x3; val_offset:212346*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212346*0 + 3*126*FLEN/8, x4, x1, x2)

inst_70783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92fffffff000000; valaddr_reg:x3; val_offset:212349*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212349*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_70784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92fffffff800000; valaddr_reg:x3; val_offset:212352*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212352*0 + 3*128*FLEN/8, x4, x1, x2)

inst_70785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92fffffffc00000; valaddr_reg:x3; val_offset:212355*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212355*0 + 3*129*FLEN/8, x4, x1, x2)

inst_70786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92fffffffe00000; valaddr_reg:x3; val_offset:212358*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212358*0 + 3*130*FLEN/8, x4, x1, x2)

inst_70787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92ffffffff00000; valaddr_reg:x3; val_offset:212361*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212361*0 + 3*131*FLEN/8, x4, x1, x2)

inst_70788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92ffffffff80000; valaddr_reg:x3; val_offset:212364*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212364*0 + 3*132*FLEN/8, x4, x1, x2)

inst_70789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92ffffffffc0000; valaddr_reg:x3; val_offset:212367*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212367*0 + 3*133*FLEN/8, x4, x1, x2)

inst_70790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92ffffffffe0000; valaddr_reg:x3; val_offset:212370*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212370*0 + 3*134*FLEN/8, x4, x1, x2)

inst_70791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92fffffffff0000; valaddr_reg:x3; val_offset:212373*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212373*0 + 3*135*FLEN/8, x4, x1, x2)

inst_70792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92fffffffff8000; valaddr_reg:x3; val_offset:212376*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212376*0 + 3*136*FLEN/8, x4, x1, x2)

inst_70793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92fffffffffc000; valaddr_reg:x3; val_offset:212379*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212379*0 + 3*137*FLEN/8, x4, x1, x2)

inst_70794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92fffffffffe000; valaddr_reg:x3; val_offset:212382*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212382*0 + 3*138*FLEN/8, x4, x1, x2)

inst_70795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92ffffffffff000; valaddr_reg:x3; val_offset:212385*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212385*0 + 3*139*FLEN/8, x4, x1, x2)

inst_70796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92ffffffffff800; valaddr_reg:x3; val_offset:212388*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212388*0 + 3*140*FLEN/8, x4, x1, x2)

inst_70797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92ffffffffffc00; valaddr_reg:x3; val_offset:212391*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212391*0 + 3*141*FLEN/8, x4, x1, x2)

inst_70798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92ffffffffffe00; valaddr_reg:x3; val_offset:212394*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212394*0 + 3*142*FLEN/8, x4, x1, x2)

inst_70799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92fffffffffff00; valaddr_reg:x3; val_offset:212397*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212397*0 + 3*143*FLEN/8, x4, x1, x2)

inst_70800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92fffffffffff80; valaddr_reg:x3; val_offset:212400*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212400*0 + 3*144*FLEN/8, x4, x1, x2)

inst_70801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92fffffffffffc0; valaddr_reg:x3; val_offset:212403*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212403*0 + 3*145*FLEN/8, x4, x1, x2)

inst_70802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92fffffffffffe0; valaddr_reg:x3; val_offset:212406*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212406*0 + 3*146*FLEN/8, x4, x1, x2)

inst_70803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92ffffffffffff0; valaddr_reg:x3; val_offset:212409*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212409*0 + 3*147*FLEN/8, x4, x1, x2)

inst_70804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92ffffffffffff8; valaddr_reg:x3; val_offset:212412*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212412*0 + 3*148*FLEN/8, x4, x1, x2)

inst_70805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92ffffffffffffc; valaddr_reg:x3; val_offset:212415*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212415*0 + 3*149*FLEN/8, x4, x1, x2)

inst_70806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92ffffffffffffe; valaddr_reg:x3; val_offset:212418*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212418*0 + 3*150*FLEN/8, x4, x1, x2)

inst_70807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x392 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xb92fffffffffffff; valaddr_reg:x3; val_offset:212421*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212421*0 + 3*151*FLEN/8, x4, x1, x2)

inst_70808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:212424*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212424*0 + 3*152*FLEN/8, x4, x1, x2)

inst_70809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:212427*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212427*0 + 3*153*FLEN/8, x4, x1, x2)

inst_70810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:212430*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212430*0 + 3*154*FLEN/8, x4, x1, x2)

inst_70811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:212433*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212433*0 + 3*155*FLEN/8, x4, x1, x2)

inst_70812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:212436*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212436*0 + 3*156*FLEN/8, x4, x1, x2)

inst_70813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:212439*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212439*0 + 3*157*FLEN/8, x4, x1, x2)

inst_70814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:212442*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212442*0 + 3*158*FLEN/8, x4, x1, x2)

inst_70815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:212445*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212445*0 + 3*159*FLEN/8, x4, x1, x2)

inst_70816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:212448*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212448*0 + 3*160*FLEN/8, x4, x1, x2)

inst_70817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:212451*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212451*0 + 3*161*FLEN/8, x4, x1, x2)

inst_70818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:212454*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212454*0 + 3*162*FLEN/8, x4, x1, x2)

inst_70819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:212457*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212457*0 + 3*163*FLEN/8, x4, x1, x2)

inst_70820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:212460*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212460*0 + 3*164*FLEN/8, x4, x1, x2)

inst_70821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:212463*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212463*0 + 3*165*FLEN/8, x4, x1, x2)

inst_70822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:212466*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212466*0 + 3*166*FLEN/8, x4, x1, x2)

inst_70823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:212469*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212469*0 + 3*167*FLEN/8, x4, x1, x2)

inst_70824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:212472*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212472*0 + 3*168*FLEN/8, x4, x1, x2)

inst_70825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:212475*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212475*0 + 3*169*FLEN/8, x4, x1, x2)

inst_70826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:212478*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212478*0 + 3*170*FLEN/8, x4, x1, x2)

inst_70827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:212481*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212481*0 + 3*171*FLEN/8, x4, x1, x2)

inst_70828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:212484*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212484*0 + 3*172*FLEN/8, x4, x1, x2)

inst_70829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6ded045bc6aa8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66315a9fdae1d; op2val:0x9fc6ded045bc6aa8;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:212487*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212487*0 + 3*173*FLEN/8, x4, x1, x2)

inst_70830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:212490*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212490*0 + 3*174*FLEN/8, x4, x1, x2)

inst_70831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:212493*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212493*0 + 3*175*FLEN/8, x4, x1, x2)

inst_70832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:212496*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212496*0 + 3*176*FLEN/8, x4, x1, x2)

inst_70833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:212499*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212499*0 + 3*177*FLEN/8, x4, x1, x2)

inst_70834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:212502*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212502*0 + 3*178*FLEN/8, x4, x1, x2)

inst_70835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:212505*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212505*0 + 3*179*FLEN/8, x4, x1, x2)

inst_70836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:212508*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212508*0 + 3*180*FLEN/8, x4, x1, x2)

inst_70837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:212511*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212511*0 + 3*181*FLEN/8, x4, x1, x2)

inst_70838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:212514*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212514*0 + 3*182*FLEN/8, x4, x1, x2)

inst_70839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:212517*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212517*0 + 3*183*FLEN/8, x4, x1, x2)

inst_70840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:212520*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212520*0 + 3*184*FLEN/8, x4, x1, x2)

inst_70841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:212523*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212523*0 + 3*185*FLEN/8, x4, x1, x2)

inst_70842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:212526*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212526*0 + 3*186*FLEN/8, x4, x1, x2)

inst_70843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:212529*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212529*0 + 3*187*FLEN/8, x4, x1, x2)

inst_70844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:212532*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212532*0 + 3*188*FLEN/8, x4, x1, x2)

inst_70845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:212535*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212535*0 + 3*189*FLEN/8, x4, x1, x2)

inst_70846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:212538*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212538*0 + 3*190*FLEN/8, x4, x1, x2)

inst_70847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:212541*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212541*0 + 3*191*FLEN/8, x4, x1, x2)

inst_70848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:212544*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212544*0 + 3*192*FLEN/8, x4, x1, x2)

inst_70849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:212547*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212547*0 + 3*193*FLEN/8, x4, x1, x2)

inst_70850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:212550*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212550*0 + 3*194*FLEN/8, x4, x1, x2)

inst_70851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:212553*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212553*0 + 3*195*FLEN/8, x4, x1, x2)

inst_70852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83a0000000000000; valaddr_reg:x3; val_offset:212556*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212556*0 + 3*196*FLEN/8, x4, x1, x2)

inst_70853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83a0000000000001; valaddr_reg:x3; val_offset:212559*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212559*0 + 3*197*FLEN/8, x4, x1, x2)

inst_70854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83a0000000000003; valaddr_reg:x3; val_offset:212562*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212562*0 + 3*198*FLEN/8, x4, x1, x2)

inst_70855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83a0000000000007; valaddr_reg:x3; val_offset:212565*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212565*0 + 3*199*FLEN/8, x4, x1, x2)

inst_70856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83a000000000000f; valaddr_reg:x3; val_offset:212568*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212568*0 + 3*200*FLEN/8, x4, x1, x2)

inst_70857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83a000000000001f; valaddr_reg:x3; val_offset:212571*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212571*0 + 3*201*FLEN/8, x4, x1, x2)

inst_70858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83a000000000003f; valaddr_reg:x3; val_offset:212574*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212574*0 + 3*202*FLEN/8, x4, x1, x2)

inst_70859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83a000000000007f; valaddr_reg:x3; val_offset:212577*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212577*0 + 3*203*FLEN/8, x4, x1, x2)

inst_70860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83a00000000000ff; valaddr_reg:x3; val_offset:212580*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212580*0 + 3*204*FLEN/8, x4, x1, x2)

inst_70861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83a00000000001ff; valaddr_reg:x3; val_offset:212583*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212583*0 + 3*205*FLEN/8, x4, x1, x2)

inst_70862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83a00000000003ff; valaddr_reg:x3; val_offset:212586*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212586*0 + 3*206*FLEN/8, x4, x1, x2)

inst_70863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83a00000000007ff; valaddr_reg:x3; val_offset:212589*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212589*0 + 3*207*FLEN/8, x4, x1, x2)

inst_70864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83a0000000000fff; valaddr_reg:x3; val_offset:212592*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212592*0 + 3*208*FLEN/8, x4, x1, x2)

inst_70865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83a0000000001fff; valaddr_reg:x3; val_offset:212595*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212595*0 + 3*209*FLEN/8, x4, x1, x2)

inst_70866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83a0000000003fff; valaddr_reg:x3; val_offset:212598*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212598*0 + 3*210*FLEN/8, x4, x1, x2)

inst_70867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83a0000000007fff; valaddr_reg:x3; val_offset:212601*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212601*0 + 3*211*FLEN/8, x4, x1, x2)

inst_70868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83a000000000ffff; valaddr_reg:x3; val_offset:212604*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212604*0 + 3*212*FLEN/8, x4, x1, x2)

inst_70869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83a000000001ffff; valaddr_reg:x3; val_offset:212607*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212607*0 + 3*213*FLEN/8, x4, x1, x2)

inst_70870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83a000000003ffff; valaddr_reg:x3; val_offset:212610*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212610*0 + 3*214*FLEN/8, x4, x1, x2)

inst_70871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83a000000007ffff; valaddr_reg:x3; val_offset:212613*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212613*0 + 3*215*FLEN/8, x4, x1, x2)

inst_70872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83a00000000fffff; valaddr_reg:x3; val_offset:212616*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212616*0 + 3*216*FLEN/8, x4, x1, x2)

inst_70873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83a00000001fffff; valaddr_reg:x3; val_offset:212619*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212619*0 + 3*217*FLEN/8, x4, x1, x2)

inst_70874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83a00000003fffff; valaddr_reg:x3; val_offset:212622*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212622*0 + 3*218*FLEN/8, x4, x1, x2)

inst_70875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83a00000007fffff; valaddr_reg:x3; val_offset:212625*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212625*0 + 3*219*FLEN/8, x4, x1, x2)

inst_70876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83a0000000ffffff; valaddr_reg:x3; val_offset:212628*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212628*0 + 3*220*FLEN/8, x4, x1, x2)

inst_70877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83a0000001ffffff; valaddr_reg:x3; val_offset:212631*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212631*0 + 3*221*FLEN/8, x4, x1, x2)

inst_70878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83a0000003ffffff; valaddr_reg:x3; val_offset:212634*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212634*0 + 3*222*FLEN/8, x4, x1, x2)

inst_70879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83a0000007ffffff; valaddr_reg:x3; val_offset:212637*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212637*0 + 3*223*FLEN/8, x4, x1, x2)

inst_70880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83a000000fffffff; valaddr_reg:x3; val_offset:212640*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212640*0 + 3*224*FLEN/8, x4, x1, x2)

inst_70881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83a000001fffffff; valaddr_reg:x3; val_offset:212643*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212643*0 + 3*225*FLEN/8, x4, x1, x2)

inst_70882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83a000003fffffff; valaddr_reg:x3; val_offset:212646*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212646*0 + 3*226*FLEN/8, x4, x1, x2)

inst_70883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83a000007fffffff; valaddr_reg:x3; val_offset:212649*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212649*0 + 3*227*FLEN/8, x4, x1, x2)

inst_70884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83a00000ffffffff; valaddr_reg:x3; val_offset:212652*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212652*0 + 3*228*FLEN/8, x4, x1, x2)

inst_70885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83a00001ffffffff; valaddr_reg:x3; val_offset:212655*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212655*0 + 3*229*FLEN/8, x4, x1, x2)

inst_70886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83a00003ffffffff; valaddr_reg:x3; val_offset:212658*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212658*0 + 3*230*FLEN/8, x4, x1, x2)

inst_70887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83a00007ffffffff; valaddr_reg:x3; val_offset:212661*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212661*0 + 3*231*FLEN/8, x4, x1, x2)

inst_70888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83a0000fffffffff; valaddr_reg:x3; val_offset:212664*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212664*0 + 3*232*FLEN/8, x4, x1, x2)

inst_70889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83a0001fffffffff; valaddr_reg:x3; val_offset:212667*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212667*0 + 3*233*FLEN/8, x4, x1, x2)

inst_70890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83a0003fffffffff; valaddr_reg:x3; val_offset:212670*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212670*0 + 3*234*FLEN/8, x4, x1, x2)

inst_70891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83a0007fffffffff; valaddr_reg:x3; val_offset:212673*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212673*0 + 3*235*FLEN/8, x4, x1, x2)

inst_70892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83a000ffffffffff; valaddr_reg:x3; val_offset:212676*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212676*0 + 3*236*FLEN/8, x4, x1, x2)

inst_70893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83a001ffffffffff; valaddr_reg:x3; val_offset:212679*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212679*0 + 3*237*FLEN/8, x4, x1, x2)

inst_70894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83a003ffffffffff; valaddr_reg:x3; val_offset:212682*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212682*0 + 3*238*FLEN/8, x4, x1, x2)

inst_70895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83a007ffffffffff; valaddr_reg:x3; val_offset:212685*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212685*0 + 3*239*FLEN/8, x4, x1, x2)

inst_70896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83a00fffffffffff; valaddr_reg:x3; val_offset:212688*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212688*0 + 3*240*FLEN/8, x4, x1, x2)

inst_70897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83a01fffffffffff; valaddr_reg:x3; val_offset:212691*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212691*0 + 3*241*FLEN/8, x4, x1, x2)

inst_70898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83a03fffffffffff; valaddr_reg:x3; val_offset:212694*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212694*0 + 3*242*FLEN/8, x4, x1, x2)

inst_70899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83a07fffffffffff; valaddr_reg:x3; val_offset:212697*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212697*0 + 3*243*FLEN/8, x4, x1, x2)

inst_70900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83a0ffffffffffff; valaddr_reg:x3; val_offset:212700*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212700*0 + 3*244*FLEN/8, x4, x1, x2)

inst_70901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83a1ffffffffffff; valaddr_reg:x3; val_offset:212703*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212703*0 + 3*245*FLEN/8, x4, x1, x2)

inst_70902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83a3ffffffffffff; valaddr_reg:x3; val_offset:212706*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212706*0 + 3*246*FLEN/8, x4, x1, x2)

inst_70903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83a7ffffffffffff; valaddr_reg:x3; val_offset:212709*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212709*0 + 3*247*FLEN/8, x4, x1, x2)

inst_70904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83a8000000000000; valaddr_reg:x3; val_offset:212712*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212712*0 + 3*248*FLEN/8, x4, x1, x2)

inst_70905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83ac000000000000; valaddr_reg:x3; val_offset:212715*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212715*0 + 3*249*FLEN/8, x4, x1, x2)

inst_70906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83ae000000000000; valaddr_reg:x3; val_offset:212718*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212718*0 + 3*250*FLEN/8, x4, x1, x2)

inst_70907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83af000000000000; valaddr_reg:x3; val_offset:212721*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212721*0 + 3*251*FLEN/8, x4, x1, x2)

inst_70908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83af800000000000; valaddr_reg:x3; val_offset:212724*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212724*0 + 3*252*FLEN/8, x4, x1, x2)

inst_70909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83afc00000000000; valaddr_reg:x3; val_offset:212727*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212727*0 + 3*253*FLEN/8, x4, x1, x2)

inst_70910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83afe00000000000; valaddr_reg:x3; val_offset:212730*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212730*0 + 3*254*FLEN/8, x4, x1, x2)

inst_70911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83aff00000000000; valaddr_reg:x3; val_offset:212733*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212733*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_70912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83aff80000000000; valaddr_reg:x3; val_offset:212736*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212736*0 + 3*256*FLEN/8, x4, x1, x2)

inst_70913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83affc0000000000; valaddr_reg:x3; val_offset:212739*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212739*0 + 3*257*FLEN/8, x4, x1, x2)

inst_70914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83affe0000000000; valaddr_reg:x3; val_offset:212742*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212742*0 + 3*258*FLEN/8, x4, x1, x2)

inst_70915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83afff0000000000; valaddr_reg:x3; val_offset:212745*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212745*0 + 3*259*FLEN/8, x4, x1, x2)

inst_70916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83afff8000000000; valaddr_reg:x3; val_offset:212748*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212748*0 + 3*260*FLEN/8, x4, x1, x2)

inst_70917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83afffc000000000; valaddr_reg:x3; val_offset:212751*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212751*0 + 3*261*FLEN/8, x4, x1, x2)

inst_70918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83afffe000000000; valaddr_reg:x3; val_offset:212754*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212754*0 + 3*262*FLEN/8, x4, x1, x2)

inst_70919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83affff000000000; valaddr_reg:x3; val_offset:212757*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212757*0 + 3*263*FLEN/8, x4, x1, x2)

inst_70920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83affff800000000; valaddr_reg:x3; val_offset:212760*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212760*0 + 3*264*FLEN/8, x4, x1, x2)

inst_70921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83affffc00000000; valaddr_reg:x3; val_offset:212763*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212763*0 + 3*265*FLEN/8, x4, x1, x2)

inst_70922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83affffe00000000; valaddr_reg:x3; val_offset:212766*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212766*0 + 3*266*FLEN/8, x4, x1, x2)

inst_70923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83afffff00000000; valaddr_reg:x3; val_offset:212769*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212769*0 + 3*267*FLEN/8, x4, x1, x2)

inst_70924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83afffff80000000; valaddr_reg:x3; val_offset:212772*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212772*0 + 3*268*FLEN/8, x4, x1, x2)

inst_70925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83afffffc0000000; valaddr_reg:x3; val_offset:212775*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212775*0 + 3*269*FLEN/8, x4, x1, x2)

inst_70926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83afffffe0000000; valaddr_reg:x3; val_offset:212778*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212778*0 + 3*270*FLEN/8, x4, x1, x2)

inst_70927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83affffff0000000; valaddr_reg:x3; val_offset:212781*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212781*0 + 3*271*FLEN/8, x4, x1, x2)

inst_70928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83affffff8000000; valaddr_reg:x3; val_offset:212784*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212784*0 + 3*272*FLEN/8, x4, x1, x2)

inst_70929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83affffffc000000; valaddr_reg:x3; val_offset:212787*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212787*0 + 3*273*FLEN/8, x4, x1, x2)

inst_70930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83affffffe000000; valaddr_reg:x3; val_offset:212790*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212790*0 + 3*274*FLEN/8, x4, x1, x2)

inst_70931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83afffffff000000; valaddr_reg:x3; val_offset:212793*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212793*0 + 3*275*FLEN/8, x4, x1, x2)

inst_70932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83afffffff800000; valaddr_reg:x3; val_offset:212796*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212796*0 + 3*276*FLEN/8, x4, x1, x2)

inst_70933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83afffffffc00000; valaddr_reg:x3; val_offset:212799*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212799*0 + 3*277*FLEN/8, x4, x1, x2)

inst_70934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83afffffffe00000; valaddr_reg:x3; val_offset:212802*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212802*0 + 3*278*FLEN/8, x4, x1, x2)

inst_70935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83affffffff00000; valaddr_reg:x3; val_offset:212805*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212805*0 + 3*279*FLEN/8, x4, x1, x2)

inst_70936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83affffffff80000; valaddr_reg:x3; val_offset:212808*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212808*0 + 3*280*FLEN/8, x4, x1, x2)

inst_70937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83affffffffc0000; valaddr_reg:x3; val_offset:212811*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212811*0 + 3*281*FLEN/8, x4, x1, x2)

inst_70938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83affffffffe0000; valaddr_reg:x3; val_offset:212814*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212814*0 + 3*282*FLEN/8, x4, x1, x2)

inst_70939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83afffffffff0000; valaddr_reg:x3; val_offset:212817*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212817*0 + 3*283*FLEN/8, x4, x1, x2)

inst_70940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83afffffffff8000; valaddr_reg:x3; val_offset:212820*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212820*0 + 3*284*FLEN/8, x4, x1, x2)

inst_70941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83afffffffffc000; valaddr_reg:x3; val_offset:212823*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212823*0 + 3*285*FLEN/8, x4, x1, x2)

inst_70942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83afffffffffe000; valaddr_reg:x3; val_offset:212826*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212826*0 + 3*286*FLEN/8, x4, x1, x2)

inst_70943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83affffffffff000; valaddr_reg:x3; val_offset:212829*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212829*0 + 3*287*FLEN/8, x4, x1, x2)

inst_70944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83affffffffff800; valaddr_reg:x3; val_offset:212832*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212832*0 + 3*288*FLEN/8, x4, x1, x2)

inst_70945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83affffffffffc00; valaddr_reg:x3; val_offset:212835*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212835*0 + 3*289*FLEN/8, x4, x1, x2)

inst_70946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83affffffffffe00; valaddr_reg:x3; val_offset:212838*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212838*0 + 3*290*FLEN/8, x4, x1, x2)

inst_70947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83afffffffffff00; valaddr_reg:x3; val_offset:212841*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212841*0 + 3*291*FLEN/8, x4, x1, x2)

inst_70948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83afffffffffff80; valaddr_reg:x3; val_offset:212844*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212844*0 + 3*292*FLEN/8, x4, x1, x2)

inst_70949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83afffffffffffc0; valaddr_reg:x3; val_offset:212847*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212847*0 + 3*293*FLEN/8, x4, x1, x2)

inst_70950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83afffffffffffe0; valaddr_reg:x3; val_offset:212850*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212850*0 + 3*294*FLEN/8, x4, x1, x2)

inst_70951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83affffffffffff0; valaddr_reg:x3; val_offset:212853*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212853*0 + 3*295*FLEN/8, x4, x1, x2)

inst_70952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83affffffffffff8; valaddr_reg:x3; val_offset:212856*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212856*0 + 3*296*FLEN/8, x4, x1, x2)

inst_70953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83affffffffffffc; valaddr_reg:x3; val_offset:212859*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212859*0 + 3*297*FLEN/8, x4, x1, x2)

inst_70954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83affffffffffffe; valaddr_reg:x3; val_offset:212862*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212862*0 + 3*298*FLEN/8, x4, x1, x2)

inst_70955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x663d37d2b8c0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa663d37d2b8c0a; op2val:0x8000;
op3val:0x83afffffffffffff; valaddr_reg:x3; val_offset:212865*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212865*0 + 3*299*FLEN/8, x4, x1, x2)

inst_70956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:212868*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212868*0 + 3*300*FLEN/8, x4, x1, x2)

inst_70957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:212871*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212871*0 + 3*301*FLEN/8, x4, x1, x2)

inst_70958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:212874*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212874*0 + 3*302*FLEN/8, x4, x1, x2)

inst_70959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:212877*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212877*0 + 3*303*FLEN/8, x4, x1, x2)

inst_70960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:212880*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212880*0 + 3*304*FLEN/8, x4, x1, x2)

inst_70961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:212883*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212883*0 + 3*305*FLEN/8, x4, x1, x2)

inst_70962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:212886*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212886*0 + 3*306*FLEN/8, x4, x1, x2)

inst_70963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:212889*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212889*0 + 3*307*FLEN/8, x4, x1, x2)

inst_70964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:212892*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212892*0 + 3*308*FLEN/8, x4, x1, x2)

inst_70965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:212895*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212895*0 + 3*309*FLEN/8, x4, x1, x2)

inst_70966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:212898*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212898*0 + 3*310*FLEN/8, x4, x1, x2)

inst_70967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:212901*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212901*0 + 3*311*FLEN/8, x4, x1, x2)

inst_70968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:212904*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212904*0 + 3*312*FLEN/8, x4, x1, x2)

inst_70969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:212907*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212907*0 + 3*313*FLEN/8, x4, x1, x2)

inst_70970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:212910*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212910*0 + 3*314*FLEN/8, x4, x1, x2)

inst_70971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:212913*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212913*0 + 3*315*FLEN/8, x4, x1, x2)

inst_70972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:212916*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212916*0 + 3*316*FLEN/8, x4, x1, x2)

inst_70973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:212919*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212919*0 + 3*317*FLEN/8, x4, x1, x2)

inst_70974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:212922*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212922*0 + 3*318*FLEN/8, x4, x1, x2)

inst_70975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:212925*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212925*0 + 3*319*FLEN/8, x4, x1, x2)

inst_70976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:212928*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212928*0 + 3*320*FLEN/8, x4, x1, x2)

inst_70977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:212931*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212931*0 + 3*321*FLEN/8, x4, x1, x2)

inst_70978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1c0000000000000; valaddr_reg:x3; val_offset:212934*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212934*0 + 3*322*FLEN/8, x4, x1, x2)

inst_70979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1c0000000000001; valaddr_reg:x3; val_offset:212937*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212937*0 + 3*323*FLEN/8, x4, x1, x2)

inst_70980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1c0000000000003; valaddr_reg:x3; val_offset:212940*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212940*0 + 3*324*FLEN/8, x4, x1, x2)

inst_70981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1c0000000000007; valaddr_reg:x3; val_offset:212943*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212943*0 + 3*325*FLEN/8, x4, x1, x2)

inst_70982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1c000000000000f; valaddr_reg:x3; val_offset:212946*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212946*0 + 3*326*FLEN/8, x4, x1, x2)

inst_70983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1c000000000001f; valaddr_reg:x3; val_offset:212949*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212949*0 + 3*327*FLEN/8, x4, x1, x2)

inst_70984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1c000000000003f; valaddr_reg:x3; val_offset:212952*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212952*0 + 3*328*FLEN/8, x4, x1, x2)

inst_70985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1c000000000007f; valaddr_reg:x3; val_offset:212955*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212955*0 + 3*329*FLEN/8, x4, x1, x2)

inst_70986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1c00000000000ff; valaddr_reg:x3; val_offset:212958*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212958*0 + 3*330*FLEN/8, x4, x1, x2)

inst_70987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1c00000000001ff; valaddr_reg:x3; val_offset:212961*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212961*0 + 3*331*FLEN/8, x4, x1, x2)

inst_70988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1c00000000003ff; valaddr_reg:x3; val_offset:212964*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212964*0 + 3*332*FLEN/8, x4, x1, x2)

inst_70989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1c00000000007ff; valaddr_reg:x3; val_offset:212967*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212967*0 + 3*333*FLEN/8, x4, x1, x2)

inst_70990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1c0000000000fff; valaddr_reg:x3; val_offset:212970*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212970*0 + 3*334*FLEN/8, x4, x1, x2)

inst_70991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1c0000000001fff; valaddr_reg:x3; val_offset:212973*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212973*0 + 3*335*FLEN/8, x4, x1, x2)

inst_70992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1c0000000003fff; valaddr_reg:x3; val_offset:212976*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212976*0 + 3*336*FLEN/8, x4, x1, x2)

inst_70993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1c0000000007fff; valaddr_reg:x3; val_offset:212979*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212979*0 + 3*337*FLEN/8, x4, x1, x2)

inst_70994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1c000000000ffff; valaddr_reg:x3; val_offset:212982*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212982*0 + 3*338*FLEN/8, x4, x1, x2)

inst_70995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1c000000001ffff; valaddr_reg:x3; val_offset:212985*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212985*0 + 3*339*FLEN/8, x4, x1, x2)

inst_70996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1c000000003ffff; valaddr_reg:x3; val_offset:212988*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212988*0 + 3*340*FLEN/8, x4, x1, x2)

inst_70997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1c000000007ffff; valaddr_reg:x3; val_offset:212991*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212991*0 + 3*341*FLEN/8, x4, x1, x2)

inst_70998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1c00000000fffff; valaddr_reg:x3; val_offset:212994*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212994*0 + 3*342*FLEN/8, x4, x1, x2)

inst_70999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1c00000001fffff; valaddr_reg:x3; val_offset:212997*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 212997*0 + 3*343*FLEN/8, x4, x1, x2)

inst_71000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1c00000003fffff; valaddr_reg:x3; val_offset:213000*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213000*0 + 3*344*FLEN/8, x4, x1, x2)

inst_71001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1c00000007fffff; valaddr_reg:x3; val_offset:213003*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213003*0 + 3*345*FLEN/8, x4, x1, x2)

inst_71002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1c0000000ffffff; valaddr_reg:x3; val_offset:213006*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213006*0 + 3*346*FLEN/8, x4, x1, x2)

inst_71003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1c0000001ffffff; valaddr_reg:x3; val_offset:213009*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213009*0 + 3*347*FLEN/8, x4, x1, x2)

inst_71004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1c0000003ffffff; valaddr_reg:x3; val_offset:213012*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213012*0 + 3*348*FLEN/8, x4, x1, x2)

inst_71005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1c0000007ffffff; valaddr_reg:x3; val_offset:213015*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213015*0 + 3*349*FLEN/8, x4, x1, x2)

inst_71006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1c000000fffffff; valaddr_reg:x3; val_offset:213018*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213018*0 + 3*350*FLEN/8, x4, x1, x2)

inst_71007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1c000001fffffff; valaddr_reg:x3; val_offset:213021*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213021*0 + 3*351*FLEN/8, x4, x1, x2)

inst_71008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1c000003fffffff; valaddr_reg:x3; val_offset:213024*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213024*0 + 3*352*FLEN/8, x4, x1, x2)

inst_71009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1c000007fffffff; valaddr_reg:x3; val_offset:213027*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213027*0 + 3*353*FLEN/8, x4, x1, x2)

inst_71010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1c00000ffffffff; valaddr_reg:x3; val_offset:213030*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213030*0 + 3*354*FLEN/8, x4, x1, x2)

inst_71011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1c00001ffffffff; valaddr_reg:x3; val_offset:213033*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213033*0 + 3*355*FLEN/8, x4, x1, x2)

inst_71012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1c00003ffffffff; valaddr_reg:x3; val_offset:213036*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213036*0 + 3*356*FLEN/8, x4, x1, x2)

inst_71013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1c00007ffffffff; valaddr_reg:x3; val_offset:213039*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213039*0 + 3*357*FLEN/8, x4, x1, x2)

inst_71014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1c0000fffffffff; valaddr_reg:x3; val_offset:213042*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213042*0 + 3*358*FLEN/8, x4, x1, x2)

inst_71015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1c0001fffffffff; valaddr_reg:x3; val_offset:213045*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213045*0 + 3*359*FLEN/8, x4, x1, x2)

inst_71016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1c0003fffffffff; valaddr_reg:x3; val_offset:213048*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213048*0 + 3*360*FLEN/8, x4, x1, x2)

inst_71017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1c0007fffffffff; valaddr_reg:x3; val_offset:213051*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213051*0 + 3*361*FLEN/8, x4, x1, x2)

inst_71018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1c000ffffffffff; valaddr_reg:x3; val_offset:213054*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213054*0 + 3*362*FLEN/8, x4, x1, x2)

inst_71019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1c001ffffffffff; valaddr_reg:x3; val_offset:213057*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213057*0 + 3*363*FLEN/8, x4, x1, x2)

inst_71020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1c003ffffffffff; valaddr_reg:x3; val_offset:213060*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213060*0 + 3*364*FLEN/8, x4, x1, x2)

inst_71021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1c007ffffffffff; valaddr_reg:x3; val_offset:213063*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213063*0 + 3*365*FLEN/8, x4, x1, x2)

inst_71022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1c00fffffffffff; valaddr_reg:x3; val_offset:213066*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213066*0 + 3*366*FLEN/8, x4, x1, x2)

inst_71023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1c01fffffffffff; valaddr_reg:x3; val_offset:213069*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213069*0 + 3*367*FLEN/8, x4, x1, x2)

inst_71024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1c03fffffffffff; valaddr_reg:x3; val_offset:213072*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213072*0 + 3*368*FLEN/8, x4, x1, x2)

inst_71025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1c07fffffffffff; valaddr_reg:x3; val_offset:213075*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213075*0 + 3*369*FLEN/8, x4, x1, x2)

inst_71026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1c0ffffffffffff; valaddr_reg:x3; val_offset:213078*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213078*0 + 3*370*FLEN/8, x4, x1, x2)

inst_71027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1c1ffffffffffff; valaddr_reg:x3; val_offset:213081*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213081*0 + 3*371*FLEN/8, x4, x1, x2)

inst_71028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1c3ffffffffffff; valaddr_reg:x3; val_offset:213084*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213084*0 + 3*372*FLEN/8, x4, x1, x2)

inst_71029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1c7ffffffffffff; valaddr_reg:x3; val_offset:213087*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213087*0 + 3*373*FLEN/8, x4, x1, x2)

inst_71030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1c8000000000000; valaddr_reg:x3; val_offset:213090*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213090*0 + 3*374*FLEN/8, x4, x1, x2)

inst_71031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1cc000000000000; valaddr_reg:x3; val_offset:213093*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213093*0 + 3*375*FLEN/8, x4, x1, x2)

inst_71032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1ce000000000000; valaddr_reg:x3; val_offset:213096*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213096*0 + 3*376*FLEN/8, x4, x1, x2)

inst_71033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1cf000000000000; valaddr_reg:x3; val_offset:213099*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213099*0 + 3*377*FLEN/8, x4, x1, x2)

inst_71034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1cf800000000000; valaddr_reg:x3; val_offset:213102*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213102*0 + 3*378*FLEN/8, x4, x1, x2)

inst_71035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1cfc00000000000; valaddr_reg:x3; val_offset:213105*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213105*0 + 3*379*FLEN/8, x4, x1, x2)

inst_71036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1cfe00000000000; valaddr_reg:x3; val_offset:213108*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213108*0 + 3*380*FLEN/8, x4, x1, x2)

inst_71037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1cff00000000000; valaddr_reg:x3; val_offset:213111*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213111*0 + 3*381*FLEN/8, x4, x1, x2)

inst_71038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1cff80000000000; valaddr_reg:x3; val_offset:213114*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213114*0 + 3*382*FLEN/8, x4, x1, x2)

inst_71039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1cffc0000000000; valaddr_reg:x3; val_offset:213117*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213117*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_71040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1cffe0000000000; valaddr_reg:x3; val_offset:213120*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213120*0 + 3*384*FLEN/8, x4, x1, x2)

inst_71041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1cfff0000000000; valaddr_reg:x3; val_offset:213123*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213123*0 + 3*385*FLEN/8, x4, x1, x2)

inst_71042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1cfff8000000000; valaddr_reg:x3; val_offset:213126*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213126*0 + 3*386*FLEN/8, x4, x1, x2)

inst_71043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1cfffc000000000; valaddr_reg:x3; val_offset:213129*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213129*0 + 3*387*FLEN/8, x4, x1, x2)

inst_71044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1cfffe000000000; valaddr_reg:x3; val_offset:213132*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213132*0 + 3*388*FLEN/8, x4, x1, x2)

inst_71045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1cffff000000000; valaddr_reg:x3; val_offset:213135*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213135*0 + 3*389*FLEN/8, x4, x1, x2)

inst_71046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1cffff800000000; valaddr_reg:x3; val_offset:213138*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213138*0 + 3*390*FLEN/8, x4, x1, x2)

inst_71047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1cffffc00000000; valaddr_reg:x3; val_offset:213141*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213141*0 + 3*391*FLEN/8, x4, x1, x2)

inst_71048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1cffffe00000000; valaddr_reg:x3; val_offset:213144*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213144*0 + 3*392*FLEN/8, x4, x1, x2)

inst_71049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1cfffff00000000; valaddr_reg:x3; val_offset:213147*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213147*0 + 3*393*FLEN/8, x4, x1, x2)

inst_71050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1cfffff80000000; valaddr_reg:x3; val_offset:213150*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213150*0 + 3*394*FLEN/8, x4, x1, x2)

inst_71051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1cfffffc0000000; valaddr_reg:x3; val_offset:213153*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213153*0 + 3*395*FLEN/8, x4, x1, x2)

inst_71052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1cfffffe0000000; valaddr_reg:x3; val_offset:213156*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213156*0 + 3*396*FLEN/8, x4, x1, x2)

inst_71053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1cffffff0000000; valaddr_reg:x3; val_offset:213159*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213159*0 + 3*397*FLEN/8, x4, x1, x2)

inst_71054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1cffffff8000000; valaddr_reg:x3; val_offset:213162*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213162*0 + 3*398*FLEN/8, x4, x1, x2)

inst_71055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1cffffffc000000; valaddr_reg:x3; val_offset:213165*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213165*0 + 3*399*FLEN/8, x4, x1, x2)

inst_71056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1cffffffe000000; valaddr_reg:x3; val_offset:213168*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213168*0 + 3*400*FLEN/8, x4, x1, x2)

inst_71057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1cfffffff000000; valaddr_reg:x3; val_offset:213171*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213171*0 + 3*401*FLEN/8, x4, x1, x2)

inst_71058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1cfffffff800000; valaddr_reg:x3; val_offset:213174*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213174*0 + 3*402*FLEN/8, x4, x1, x2)

inst_71059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1cfffffffc00000; valaddr_reg:x3; val_offset:213177*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213177*0 + 3*403*FLEN/8, x4, x1, x2)

inst_71060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1cfffffffe00000; valaddr_reg:x3; val_offset:213180*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213180*0 + 3*404*FLEN/8, x4, x1, x2)

inst_71061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1cffffffff00000; valaddr_reg:x3; val_offset:213183*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213183*0 + 3*405*FLEN/8, x4, x1, x2)

inst_71062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1cffffffff80000; valaddr_reg:x3; val_offset:213186*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213186*0 + 3*406*FLEN/8, x4, x1, x2)

inst_71063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1cffffffffc0000; valaddr_reg:x3; val_offset:213189*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213189*0 + 3*407*FLEN/8, x4, x1, x2)

inst_71064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1cffffffffe0000; valaddr_reg:x3; val_offset:213192*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213192*0 + 3*408*FLEN/8, x4, x1, x2)

inst_71065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1cfffffffff0000; valaddr_reg:x3; val_offset:213195*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213195*0 + 3*409*FLEN/8, x4, x1, x2)

inst_71066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1cfffffffff8000; valaddr_reg:x3; val_offset:213198*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213198*0 + 3*410*FLEN/8, x4, x1, x2)

inst_71067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1cfffffffffc000; valaddr_reg:x3; val_offset:213201*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213201*0 + 3*411*FLEN/8, x4, x1, x2)

inst_71068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1cfffffffffe000; valaddr_reg:x3; val_offset:213204*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213204*0 + 3*412*FLEN/8, x4, x1, x2)

inst_71069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1cffffffffff000; valaddr_reg:x3; val_offset:213207*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213207*0 + 3*413*FLEN/8, x4, x1, x2)

inst_71070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1cffffffffff800; valaddr_reg:x3; val_offset:213210*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213210*0 + 3*414*FLEN/8, x4, x1, x2)

inst_71071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1cffffffffffc00; valaddr_reg:x3; val_offset:213213*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213213*0 + 3*415*FLEN/8, x4, x1, x2)

inst_71072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1cffffffffffe00; valaddr_reg:x3; val_offset:213216*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213216*0 + 3*416*FLEN/8, x4, x1, x2)

inst_71073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1cfffffffffff00; valaddr_reg:x3; val_offset:213219*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213219*0 + 3*417*FLEN/8, x4, x1, x2)

inst_71074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1cfffffffffff80; valaddr_reg:x3; val_offset:213222*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213222*0 + 3*418*FLEN/8, x4, x1, x2)

inst_71075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1cfffffffffffc0; valaddr_reg:x3; val_offset:213225*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213225*0 + 3*419*FLEN/8, x4, x1, x2)

inst_71076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1cfffffffffffe0; valaddr_reg:x3; val_offset:213228*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213228*0 + 3*420*FLEN/8, x4, x1, x2)

inst_71077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1cffffffffffff0; valaddr_reg:x3; val_offset:213231*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213231*0 + 3*421*FLEN/8, x4, x1, x2)

inst_71078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1cffffffffffff8; valaddr_reg:x3; val_offset:213234*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213234*0 + 3*422*FLEN/8, x4, x1, x2)

inst_71079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1cffffffffffffc; valaddr_reg:x3; val_offset:213237*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213237*0 + 3*423*FLEN/8, x4, x1, x2)

inst_71080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1cffffffffffffe; valaddr_reg:x3; val_offset:213240*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213240*0 + 3*424*FLEN/8, x4, x1, x2)

inst_71081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6670d863252bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6670d863252bd; op2val:0x0;
op3val:0x1cfffffffffffff; valaddr_reg:x3; val_offset:213243*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213243*0 + 3*425*FLEN/8, x4, x1, x2)

inst_71082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:213246*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213246*0 + 3*426*FLEN/8, x4, x1, x2)

inst_71083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:213249*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213249*0 + 3*427*FLEN/8, x4, x1, x2)

inst_71084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:213252*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213252*0 + 3*428*FLEN/8, x4, x1, x2)

inst_71085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:213255*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213255*0 + 3*429*FLEN/8, x4, x1, x2)

inst_71086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:213258*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213258*0 + 3*430*FLEN/8, x4, x1, x2)

inst_71087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:213261*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213261*0 + 3*431*FLEN/8, x4, x1, x2)

inst_71088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:213264*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213264*0 + 3*432*FLEN/8, x4, x1, x2)

inst_71089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:213267*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213267*0 + 3*433*FLEN/8, x4, x1, x2)

inst_71090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:213270*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213270*0 + 3*434*FLEN/8, x4, x1, x2)

inst_71091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:213273*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213273*0 + 3*435*FLEN/8, x4, x1, x2)

inst_71092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:213276*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213276*0 + 3*436*FLEN/8, x4, x1, x2)

inst_71093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:213279*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213279*0 + 3*437*FLEN/8, x4, x1, x2)

inst_71094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:213282*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213282*0 + 3*438*FLEN/8, x4, x1, x2)

inst_71095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:213285*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213285*0 + 3*439*FLEN/8, x4, x1, x2)

inst_71096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:213288*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213288*0 + 3*440*FLEN/8, x4, x1, x2)

inst_71097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:213291*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213291*0 + 3*441*FLEN/8, x4, x1, x2)

inst_71098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:213294*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213294*0 + 3*442*FLEN/8, x4, x1, x2)

inst_71099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:213297*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213297*0 + 3*443*FLEN/8, x4, x1, x2)

inst_71100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:213300*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213300*0 + 3*444*FLEN/8, x4, x1, x2)

inst_71101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:213303*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213303*0 + 3*445*FLEN/8, x4, x1, x2)

inst_71102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:213306*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213306*0 + 3*446*FLEN/8, x4, x1, x2)

inst_71103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:213309*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213309*0 + 3*447*FLEN/8, x4, x1, x2)

inst_71104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x230000000000000; valaddr_reg:x3; val_offset:213312*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213312*0 + 3*448*FLEN/8, x4, x1, x2)

inst_71105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x230000000000001; valaddr_reg:x3; val_offset:213315*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213315*0 + 3*449*FLEN/8, x4, x1, x2)

inst_71106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x230000000000003; valaddr_reg:x3; val_offset:213318*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213318*0 + 3*450*FLEN/8, x4, x1, x2)

inst_71107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x230000000000007; valaddr_reg:x3; val_offset:213321*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213321*0 + 3*451*FLEN/8, x4, x1, x2)

inst_71108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23000000000000f; valaddr_reg:x3; val_offset:213324*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213324*0 + 3*452*FLEN/8, x4, x1, x2)

inst_71109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23000000000001f; valaddr_reg:x3; val_offset:213327*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213327*0 + 3*453*FLEN/8, x4, x1, x2)

inst_71110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23000000000003f; valaddr_reg:x3; val_offset:213330*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213330*0 + 3*454*FLEN/8, x4, x1, x2)

inst_71111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23000000000007f; valaddr_reg:x3; val_offset:213333*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213333*0 + 3*455*FLEN/8, x4, x1, x2)

inst_71112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x2300000000000ff; valaddr_reg:x3; val_offset:213336*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213336*0 + 3*456*FLEN/8, x4, x1, x2)

inst_71113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x2300000000001ff; valaddr_reg:x3; val_offset:213339*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213339*0 + 3*457*FLEN/8, x4, x1, x2)

inst_71114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x2300000000003ff; valaddr_reg:x3; val_offset:213342*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213342*0 + 3*458*FLEN/8, x4, x1, x2)

inst_71115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x2300000000007ff; valaddr_reg:x3; val_offset:213345*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213345*0 + 3*459*FLEN/8, x4, x1, x2)

inst_71116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x230000000000fff; valaddr_reg:x3; val_offset:213348*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213348*0 + 3*460*FLEN/8, x4, x1, x2)

inst_71117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x230000000001fff; valaddr_reg:x3; val_offset:213351*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213351*0 + 3*461*FLEN/8, x4, x1, x2)

inst_71118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x230000000003fff; valaddr_reg:x3; val_offset:213354*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213354*0 + 3*462*FLEN/8, x4, x1, x2)

inst_71119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x230000000007fff; valaddr_reg:x3; val_offset:213357*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213357*0 + 3*463*FLEN/8, x4, x1, x2)

inst_71120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23000000000ffff; valaddr_reg:x3; val_offset:213360*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213360*0 + 3*464*FLEN/8, x4, x1, x2)

inst_71121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23000000001ffff; valaddr_reg:x3; val_offset:213363*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213363*0 + 3*465*FLEN/8, x4, x1, x2)

inst_71122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23000000003ffff; valaddr_reg:x3; val_offset:213366*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213366*0 + 3*466*FLEN/8, x4, x1, x2)

inst_71123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23000000007ffff; valaddr_reg:x3; val_offset:213369*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213369*0 + 3*467*FLEN/8, x4, x1, x2)

inst_71124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x2300000000fffff; valaddr_reg:x3; val_offset:213372*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213372*0 + 3*468*FLEN/8, x4, x1, x2)

inst_71125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x2300000001fffff; valaddr_reg:x3; val_offset:213375*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213375*0 + 3*469*FLEN/8, x4, x1, x2)

inst_71126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x2300000003fffff; valaddr_reg:x3; val_offset:213378*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213378*0 + 3*470*FLEN/8, x4, x1, x2)

inst_71127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x2300000007fffff; valaddr_reg:x3; val_offset:213381*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213381*0 + 3*471*FLEN/8, x4, x1, x2)

inst_71128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x230000000ffffff; valaddr_reg:x3; val_offset:213384*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213384*0 + 3*472*FLEN/8, x4, x1, x2)

inst_71129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x230000001ffffff; valaddr_reg:x3; val_offset:213387*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213387*0 + 3*473*FLEN/8, x4, x1, x2)

inst_71130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x230000003ffffff; valaddr_reg:x3; val_offset:213390*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213390*0 + 3*474*FLEN/8, x4, x1, x2)

inst_71131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x230000007ffffff; valaddr_reg:x3; val_offset:213393*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213393*0 + 3*475*FLEN/8, x4, x1, x2)

inst_71132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23000000fffffff; valaddr_reg:x3; val_offset:213396*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213396*0 + 3*476*FLEN/8, x4, x1, x2)

inst_71133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23000001fffffff; valaddr_reg:x3; val_offset:213399*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213399*0 + 3*477*FLEN/8, x4, x1, x2)

inst_71134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23000003fffffff; valaddr_reg:x3; val_offset:213402*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213402*0 + 3*478*FLEN/8, x4, x1, x2)

inst_71135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23000007fffffff; valaddr_reg:x3; val_offset:213405*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213405*0 + 3*479*FLEN/8, x4, x1, x2)

inst_71136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x2300000ffffffff; valaddr_reg:x3; val_offset:213408*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213408*0 + 3*480*FLEN/8, x4, x1, x2)

inst_71137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x2300001ffffffff; valaddr_reg:x3; val_offset:213411*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213411*0 + 3*481*FLEN/8, x4, x1, x2)

inst_71138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x2300003ffffffff; valaddr_reg:x3; val_offset:213414*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213414*0 + 3*482*FLEN/8, x4, x1, x2)

inst_71139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x2300007ffffffff; valaddr_reg:x3; val_offset:213417*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213417*0 + 3*483*FLEN/8, x4, x1, x2)

inst_71140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x230000fffffffff; valaddr_reg:x3; val_offset:213420*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213420*0 + 3*484*FLEN/8, x4, x1, x2)

inst_71141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x230001fffffffff; valaddr_reg:x3; val_offset:213423*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213423*0 + 3*485*FLEN/8, x4, x1, x2)

inst_71142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x230003fffffffff; valaddr_reg:x3; val_offset:213426*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213426*0 + 3*486*FLEN/8, x4, x1, x2)

inst_71143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x230007fffffffff; valaddr_reg:x3; val_offset:213429*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213429*0 + 3*487*FLEN/8, x4, x1, x2)

inst_71144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23000ffffffffff; valaddr_reg:x3; val_offset:213432*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213432*0 + 3*488*FLEN/8, x4, x1, x2)

inst_71145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23001ffffffffff; valaddr_reg:x3; val_offset:213435*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213435*0 + 3*489*FLEN/8, x4, x1, x2)

inst_71146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23003ffffffffff; valaddr_reg:x3; val_offset:213438*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213438*0 + 3*490*FLEN/8, x4, x1, x2)

inst_71147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23007ffffffffff; valaddr_reg:x3; val_offset:213441*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213441*0 + 3*491*FLEN/8, x4, x1, x2)

inst_71148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x2300fffffffffff; valaddr_reg:x3; val_offset:213444*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213444*0 + 3*492*FLEN/8, x4, x1, x2)

inst_71149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x2301fffffffffff; valaddr_reg:x3; val_offset:213447*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213447*0 + 3*493*FLEN/8, x4, x1, x2)

inst_71150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x2303fffffffffff; valaddr_reg:x3; val_offset:213450*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213450*0 + 3*494*FLEN/8, x4, x1, x2)

inst_71151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x2307fffffffffff; valaddr_reg:x3; val_offset:213453*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213453*0 + 3*495*FLEN/8, x4, x1, x2)

inst_71152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x230ffffffffffff; valaddr_reg:x3; val_offset:213456*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213456*0 + 3*496*FLEN/8, x4, x1, x2)

inst_71153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x231ffffffffffff; valaddr_reg:x3; val_offset:213459*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213459*0 + 3*497*FLEN/8, x4, x1, x2)

inst_71154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x233ffffffffffff; valaddr_reg:x3; val_offset:213462*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213462*0 + 3*498*FLEN/8, x4, x1, x2)

inst_71155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x237ffffffffffff; valaddr_reg:x3; val_offset:213465*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213465*0 + 3*499*FLEN/8, x4, x1, x2)

inst_71156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x238000000000000; valaddr_reg:x3; val_offset:213468*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213468*0 + 3*500*FLEN/8, x4, x1, x2)

inst_71157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23c000000000000; valaddr_reg:x3; val_offset:213471*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213471*0 + 3*501*FLEN/8, x4, x1, x2)

inst_71158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23e000000000000; valaddr_reg:x3; val_offset:213474*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213474*0 + 3*502*FLEN/8, x4, x1, x2)

inst_71159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23f000000000000; valaddr_reg:x3; val_offset:213477*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213477*0 + 3*503*FLEN/8, x4, x1, x2)

inst_71160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23f800000000000; valaddr_reg:x3; val_offset:213480*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213480*0 + 3*504*FLEN/8, x4, x1, x2)

inst_71161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23fc00000000000; valaddr_reg:x3; val_offset:213483*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213483*0 + 3*505*FLEN/8, x4, x1, x2)

inst_71162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23fe00000000000; valaddr_reg:x3; val_offset:213486*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213486*0 + 3*506*FLEN/8, x4, x1, x2)

inst_71163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23ff00000000000; valaddr_reg:x3; val_offset:213489*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213489*0 + 3*507*FLEN/8, x4, x1, x2)

inst_71164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23ff80000000000; valaddr_reg:x3; val_offset:213492*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213492*0 + 3*508*FLEN/8, x4, x1, x2)

inst_71165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23ffc0000000000; valaddr_reg:x3; val_offset:213495*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213495*0 + 3*509*FLEN/8, x4, x1, x2)

inst_71166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23ffe0000000000; valaddr_reg:x3; val_offset:213498*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213498*0 + 3*510*FLEN/8, x4, x1, x2)

inst_71167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23fff0000000000; valaddr_reg:x3; val_offset:213501*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213501*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_71168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23fff8000000000; valaddr_reg:x3; val_offset:213504*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213504*0 + 3*512*FLEN/8, x4, x1, x2)

inst_71169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23fffc000000000; valaddr_reg:x3; val_offset:213507*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213507*0 + 3*513*FLEN/8, x4, x1, x2)

inst_71170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23fffe000000000; valaddr_reg:x3; val_offset:213510*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213510*0 + 3*514*FLEN/8, x4, x1, x2)

inst_71171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23ffff000000000; valaddr_reg:x3; val_offset:213513*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213513*0 + 3*515*FLEN/8, x4, x1, x2)

inst_71172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23ffff800000000; valaddr_reg:x3; val_offset:213516*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213516*0 + 3*516*FLEN/8, x4, x1, x2)

inst_71173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23ffffc00000000; valaddr_reg:x3; val_offset:213519*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213519*0 + 3*517*FLEN/8, x4, x1, x2)

inst_71174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23ffffe00000000; valaddr_reg:x3; val_offset:213522*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213522*0 + 3*518*FLEN/8, x4, x1, x2)

inst_71175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23fffff00000000; valaddr_reg:x3; val_offset:213525*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213525*0 + 3*519*FLEN/8, x4, x1, x2)

inst_71176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23fffff80000000; valaddr_reg:x3; val_offset:213528*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213528*0 + 3*520*FLEN/8, x4, x1, x2)

inst_71177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23fffffc0000000; valaddr_reg:x3; val_offset:213531*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213531*0 + 3*521*FLEN/8, x4, x1, x2)

inst_71178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23fffffe0000000; valaddr_reg:x3; val_offset:213534*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213534*0 + 3*522*FLEN/8, x4, x1, x2)

inst_71179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23ffffff0000000; valaddr_reg:x3; val_offset:213537*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213537*0 + 3*523*FLEN/8, x4, x1, x2)

inst_71180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23ffffff8000000; valaddr_reg:x3; val_offset:213540*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213540*0 + 3*524*FLEN/8, x4, x1, x2)

inst_71181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23ffffffc000000; valaddr_reg:x3; val_offset:213543*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213543*0 + 3*525*FLEN/8, x4, x1, x2)

inst_71182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23ffffffe000000; valaddr_reg:x3; val_offset:213546*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213546*0 + 3*526*FLEN/8, x4, x1, x2)

inst_71183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23fffffff000000; valaddr_reg:x3; val_offset:213549*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213549*0 + 3*527*FLEN/8, x4, x1, x2)

inst_71184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23fffffff800000; valaddr_reg:x3; val_offset:213552*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213552*0 + 3*528*FLEN/8, x4, x1, x2)

inst_71185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23fffffffc00000; valaddr_reg:x3; val_offset:213555*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213555*0 + 3*529*FLEN/8, x4, x1, x2)

inst_71186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23fffffffe00000; valaddr_reg:x3; val_offset:213558*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213558*0 + 3*530*FLEN/8, x4, x1, x2)

inst_71187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23ffffffff00000; valaddr_reg:x3; val_offset:213561*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213561*0 + 3*531*FLEN/8, x4, x1, x2)

inst_71188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23ffffffff80000; valaddr_reg:x3; val_offset:213564*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213564*0 + 3*532*FLEN/8, x4, x1, x2)

inst_71189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23ffffffffc0000; valaddr_reg:x3; val_offset:213567*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213567*0 + 3*533*FLEN/8, x4, x1, x2)

inst_71190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23ffffffffe0000; valaddr_reg:x3; val_offset:213570*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213570*0 + 3*534*FLEN/8, x4, x1, x2)

inst_71191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23fffffffff0000; valaddr_reg:x3; val_offset:213573*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213573*0 + 3*535*FLEN/8, x4, x1, x2)

inst_71192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23fffffffff8000; valaddr_reg:x3; val_offset:213576*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213576*0 + 3*536*FLEN/8, x4, x1, x2)

inst_71193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23fffffffffc000; valaddr_reg:x3; val_offset:213579*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213579*0 + 3*537*FLEN/8, x4, x1, x2)

inst_71194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23fffffffffe000; valaddr_reg:x3; val_offset:213582*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213582*0 + 3*538*FLEN/8, x4, x1, x2)

inst_71195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23ffffffffff000; valaddr_reg:x3; val_offset:213585*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213585*0 + 3*539*FLEN/8, x4, x1, x2)

inst_71196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23ffffffffff800; valaddr_reg:x3; val_offset:213588*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213588*0 + 3*540*FLEN/8, x4, x1, x2)

inst_71197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23ffffffffffc00; valaddr_reg:x3; val_offset:213591*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213591*0 + 3*541*FLEN/8, x4, x1, x2)

inst_71198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23ffffffffffe00; valaddr_reg:x3; val_offset:213594*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213594*0 + 3*542*FLEN/8, x4, x1, x2)

inst_71199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23fffffffffff00; valaddr_reg:x3; val_offset:213597*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213597*0 + 3*543*FLEN/8, x4, x1, x2)

inst_71200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23fffffffffff80; valaddr_reg:x3; val_offset:213600*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213600*0 + 3*544*FLEN/8, x4, x1, x2)

inst_71201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23fffffffffffc0; valaddr_reg:x3; val_offset:213603*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213603*0 + 3*545*FLEN/8, x4, x1, x2)

inst_71202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23fffffffffffe0; valaddr_reg:x3; val_offset:213606*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213606*0 + 3*546*FLEN/8, x4, x1, x2)

inst_71203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23ffffffffffff0; valaddr_reg:x3; val_offset:213609*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213609*0 + 3*547*FLEN/8, x4, x1, x2)

inst_71204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23ffffffffffff8; valaddr_reg:x3; val_offset:213612*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213612*0 + 3*548*FLEN/8, x4, x1, x2)

inst_71205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23ffffffffffffc; valaddr_reg:x3; val_offset:213615*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213615*0 + 3*549*FLEN/8, x4, x1, x2)

inst_71206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23ffffffffffffe; valaddr_reg:x3; val_offset:213618*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213618*0 + 3*550*FLEN/8, x4, x1, x2)

inst_71207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66d18a9de66a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66d18a9de66a2; op2val:0x0;
op3val:0x23fffffffffffff; valaddr_reg:x3; val_offset:213621*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213621*0 + 3*551*FLEN/8, x4, x1, x2)

inst_71208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3be0000000000000; valaddr_reg:x3; val_offset:213624*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213624*0 + 3*552*FLEN/8, x4, x1, x2)

inst_71209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3be0000000000001; valaddr_reg:x3; val_offset:213627*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213627*0 + 3*553*FLEN/8, x4, x1, x2)

inst_71210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3be0000000000003; valaddr_reg:x3; val_offset:213630*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213630*0 + 3*554*FLEN/8, x4, x1, x2)

inst_71211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3be0000000000007; valaddr_reg:x3; val_offset:213633*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213633*0 + 3*555*FLEN/8, x4, x1, x2)

inst_71212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3be000000000000f; valaddr_reg:x3; val_offset:213636*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213636*0 + 3*556*FLEN/8, x4, x1, x2)

inst_71213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3be000000000001f; valaddr_reg:x3; val_offset:213639*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213639*0 + 3*557*FLEN/8, x4, x1, x2)

inst_71214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3be000000000003f; valaddr_reg:x3; val_offset:213642*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213642*0 + 3*558*FLEN/8, x4, x1, x2)

inst_71215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3be000000000007f; valaddr_reg:x3; val_offset:213645*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213645*0 + 3*559*FLEN/8, x4, x1, x2)

inst_71216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3be00000000000ff; valaddr_reg:x3; val_offset:213648*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213648*0 + 3*560*FLEN/8, x4, x1, x2)

inst_71217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3be00000000001ff; valaddr_reg:x3; val_offset:213651*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213651*0 + 3*561*FLEN/8, x4, x1, x2)

inst_71218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3be00000000003ff; valaddr_reg:x3; val_offset:213654*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213654*0 + 3*562*FLEN/8, x4, x1, x2)

inst_71219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3be00000000007ff; valaddr_reg:x3; val_offset:213657*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213657*0 + 3*563*FLEN/8, x4, x1, x2)

inst_71220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3be0000000000fff; valaddr_reg:x3; val_offset:213660*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213660*0 + 3*564*FLEN/8, x4, x1, x2)

inst_71221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3be0000000001fff; valaddr_reg:x3; val_offset:213663*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213663*0 + 3*565*FLEN/8, x4, x1, x2)

inst_71222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3be0000000003fff; valaddr_reg:x3; val_offset:213666*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213666*0 + 3*566*FLEN/8, x4, x1, x2)

inst_71223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3be0000000007fff; valaddr_reg:x3; val_offset:213669*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213669*0 + 3*567*FLEN/8, x4, x1, x2)

inst_71224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3be000000000ffff; valaddr_reg:x3; val_offset:213672*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213672*0 + 3*568*FLEN/8, x4, x1, x2)

inst_71225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3be000000001ffff; valaddr_reg:x3; val_offset:213675*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213675*0 + 3*569*FLEN/8, x4, x1, x2)

inst_71226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3be000000003ffff; valaddr_reg:x3; val_offset:213678*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213678*0 + 3*570*FLEN/8, x4, x1, x2)

inst_71227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3be000000007ffff; valaddr_reg:x3; val_offset:213681*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213681*0 + 3*571*FLEN/8, x4, x1, x2)

inst_71228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3be00000000fffff; valaddr_reg:x3; val_offset:213684*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213684*0 + 3*572*FLEN/8, x4, x1, x2)

inst_71229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3be00000001fffff; valaddr_reg:x3; val_offset:213687*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213687*0 + 3*573*FLEN/8, x4, x1, x2)

inst_71230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3be00000003fffff; valaddr_reg:x3; val_offset:213690*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213690*0 + 3*574*FLEN/8, x4, x1, x2)

inst_71231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3be00000007fffff; valaddr_reg:x3; val_offset:213693*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213693*0 + 3*575*FLEN/8, x4, x1, x2)

inst_71232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3be0000000ffffff; valaddr_reg:x3; val_offset:213696*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213696*0 + 3*576*FLEN/8, x4, x1, x2)

inst_71233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3be0000001ffffff; valaddr_reg:x3; val_offset:213699*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213699*0 + 3*577*FLEN/8, x4, x1, x2)

inst_71234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3be0000003ffffff; valaddr_reg:x3; val_offset:213702*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213702*0 + 3*578*FLEN/8, x4, x1, x2)

inst_71235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3be0000007ffffff; valaddr_reg:x3; val_offset:213705*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213705*0 + 3*579*FLEN/8, x4, x1, x2)

inst_71236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3be000000fffffff; valaddr_reg:x3; val_offset:213708*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213708*0 + 3*580*FLEN/8, x4, x1, x2)

inst_71237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3be000001fffffff; valaddr_reg:x3; val_offset:213711*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213711*0 + 3*581*FLEN/8, x4, x1, x2)

inst_71238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3be000003fffffff; valaddr_reg:x3; val_offset:213714*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213714*0 + 3*582*FLEN/8, x4, x1, x2)

inst_71239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3be000007fffffff; valaddr_reg:x3; val_offset:213717*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213717*0 + 3*583*FLEN/8, x4, x1, x2)

inst_71240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3be00000ffffffff; valaddr_reg:x3; val_offset:213720*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213720*0 + 3*584*FLEN/8, x4, x1, x2)

inst_71241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3be00001ffffffff; valaddr_reg:x3; val_offset:213723*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213723*0 + 3*585*FLEN/8, x4, x1, x2)

inst_71242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3be00003ffffffff; valaddr_reg:x3; val_offset:213726*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213726*0 + 3*586*FLEN/8, x4, x1, x2)

inst_71243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3be00007ffffffff; valaddr_reg:x3; val_offset:213729*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213729*0 + 3*587*FLEN/8, x4, x1, x2)

inst_71244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3be0000fffffffff; valaddr_reg:x3; val_offset:213732*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213732*0 + 3*588*FLEN/8, x4, x1, x2)

inst_71245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3be0001fffffffff; valaddr_reg:x3; val_offset:213735*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213735*0 + 3*589*FLEN/8, x4, x1, x2)

inst_71246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3be0003fffffffff; valaddr_reg:x3; val_offset:213738*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213738*0 + 3*590*FLEN/8, x4, x1, x2)

inst_71247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3be0007fffffffff; valaddr_reg:x3; val_offset:213741*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213741*0 + 3*591*FLEN/8, x4, x1, x2)

inst_71248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3be000ffffffffff; valaddr_reg:x3; val_offset:213744*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213744*0 + 3*592*FLEN/8, x4, x1, x2)

inst_71249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3be001ffffffffff; valaddr_reg:x3; val_offset:213747*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213747*0 + 3*593*FLEN/8, x4, x1, x2)

inst_71250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3be003ffffffffff; valaddr_reg:x3; val_offset:213750*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213750*0 + 3*594*FLEN/8, x4, x1, x2)

inst_71251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3be007ffffffffff; valaddr_reg:x3; val_offset:213753*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213753*0 + 3*595*FLEN/8, x4, x1, x2)

inst_71252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3be00fffffffffff; valaddr_reg:x3; val_offset:213756*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213756*0 + 3*596*FLEN/8, x4, x1, x2)

inst_71253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3be01fffffffffff; valaddr_reg:x3; val_offset:213759*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213759*0 + 3*597*FLEN/8, x4, x1, x2)

inst_71254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3be03fffffffffff; valaddr_reg:x3; val_offset:213762*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213762*0 + 3*598*FLEN/8, x4, x1, x2)

inst_71255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3be07fffffffffff; valaddr_reg:x3; val_offset:213765*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213765*0 + 3*599*FLEN/8, x4, x1, x2)

inst_71256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3be0ffffffffffff; valaddr_reg:x3; val_offset:213768*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213768*0 + 3*600*FLEN/8, x4, x1, x2)

inst_71257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3be1ffffffffffff; valaddr_reg:x3; val_offset:213771*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213771*0 + 3*601*FLEN/8, x4, x1, x2)

inst_71258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3be3ffffffffffff; valaddr_reg:x3; val_offset:213774*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213774*0 + 3*602*FLEN/8, x4, x1, x2)

inst_71259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3be7ffffffffffff; valaddr_reg:x3; val_offset:213777*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213777*0 + 3*603*FLEN/8, x4, x1, x2)

inst_71260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3be8000000000000; valaddr_reg:x3; val_offset:213780*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213780*0 + 3*604*FLEN/8, x4, x1, x2)

inst_71261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3bec000000000000; valaddr_reg:x3; val_offset:213783*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213783*0 + 3*605*FLEN/8, x4, x1, x2)

inst_71262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3bee000000000000; valaddr_reg:x3; val_offset:213786*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213786*0 + 3*606*FLEN/8, x4, x1, x2)

inst_71263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3bef000000000000; valaddr_reg:x3; val_offset:213789*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213789*0 + 3*607*FLEN/8, x4, x1, x2)

inst_71264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3bef800000000000; valaddr_reg:x3; val_offset:213792*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213792*0 + 3*608*FLEN/8, x4, x1, x2)

inst_71265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3befc00000000000; valaddr_reg:x3; val_offset:213795*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213795*0 + 3*609*FLEN/8, x4, x1, x2)

inst_71266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3befe00000000000; valaddr_reg:x3; val_offset:213798*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213798*0 + 3*610*FLEN/8, x4, x1, x2)

inst_71267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3beff00000000000; valaddr_reg:x3; val_offset:213801*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213801*0 + 3*611*FLEN/8, x4, x1, x2)

inst_71268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3beff80000000000; valaddr_reg:x3; val_offset:213804*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213804*0 + 3*612*FLEN/8, x4, x1, x2)

inst_71269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3beffc0000000000; valaddr_reg:x3; val_offset:213807*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213807*0 + 3*613*FLEN/8, x4, x1, x2)

inst_71270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3beffe0000000000; valaddr_reg:x3; val_offset:213810*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213810*0 + 3*614*FLEN/8, x4, x1, x2)

inst_71271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3befff0000000000; valaddr_reg:x3; val_offset:213813*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213813*0 + 3*615*FLEN/8, x4, x1, x2)

inst_71272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3befff8000000000; valaddr_reg:x3; val_offset:213816*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213816*0 + 3*616*FLEN/8, x4, x1, x2)

inst_71273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3befffc000000000; valaddr_reg:x3; val_offset:213819*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213819*0 + 3*617*FLEN/8, x4, x1, x2)

inst_71274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3befffe000000000; valaddr_reg:x3; val_offset:213822*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213822*0 + 3*618*FLEN/8, x4, x1, x2)

inst_71275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3beffff000000000; valaddr_reg:x3; val_offset:213825*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213825*0 + 3*619*FLEN/8, x4, x1, x2)

inst_71276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3beffff800000000; valaddr_reg:x3; val_offset:213828*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213828*0 + 3*620*FLEN/8, x4, x1, x2)

inst_71277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3beffffc00000000; valaddr_reg:x3; val_offset:213831*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213831*0 + 3*621*FLEN/8, x4, x1, x2)

inst_71278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3beffffe00000000; valaddr_reg:x3; val_offset:213834*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213834*0 + 3*622*FLEN/8, x4, x1, x2)

inst_71279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3befffff00000000; valaddr_reg:x3; val_offset:213837*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213837*0 + 3*623*FLEN/8, x4, x1, x2)

inst_71280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3befffff80000000; valaddr_reg:x3; val_offset:213840*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213840*0 + 3*624*FLEN/8, x4, x1, x2)

inst_71281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3befffffc0000000; valaddr_reg:x3; val_offset:213843*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213843*0 + 3*625*FLEN/8, x4, x1, x2)

inst_71282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3befffffe0000000; valaddr_reg:x3; val_offset:213846*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213846*0 + 3*626*FLEN/8, x4, x1, x2)

inst_71283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3beffffff0000000; valaddr_reg:x3; val_offset:213849*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213849*0 + 3*627*FLEN/8, x4, x1, x2)

inst_71284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3beffffff8000000; valaddr_reg:x3; val_offset:213852*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213852*0 + 3*628*FLEN/8, x4, x1, x2)

inst_71285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3beffffffc000000; valaddr_reg:x3; val_offset:213855*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213855*0 + 3*629*FLEN/8, x4, x1, x2)

inst_71286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3beffffffe000000; valaddr_reg:x3; val_offset:213858*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213858*0 + 3*630*FLEN/8, x4, x1, x2)

inst_71287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3befffffff000000; valaddr_reg:x3; val_offset:213861*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213861*0 + 3*631*FLEN/8, x4, x1, x2)

inst_71288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3befffffff800000; valaddr_reg:x3; val_offset:213864*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213864*0 + 3*632*FLEN/8, x4, x1, x2)

inst_71289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3befffffffc00000; valaddr_reg:x3; val_offset:213867*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213867*0 + 3*633*FLEN/8, x4, x1, x2)

inst_71290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3befffffffe00000; valaddr_reg:x3; val_offset:213870*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213870*0 + 3*634*FLEN/8, x4, x1, x2)

inst_71291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3beffffffff00000; valaddr_reg:x3; val_offset:213873*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213873*0 + 3*635*FLEN/8, x4, x1, x2)

inst_71292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3beffffffff80000; valaddr_reg:x3; val_offset:213876*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213876*0 + 3*636*FLEN/8, x4, x1, x2)

inst_71293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3beffffffffc0000; valaddr_reg:x3; val_offset:213879*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213879*0 + 3*637*FLEN/8, x4, x1, x2)

inst_71294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3beffffffffe0000; valaddr_reg:x3; val_offset:213882*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213882*0 + 3*638*FLEN/8, x4, x1, x2)

inst_71295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3befffffffff0000; valaddr_reg:x3; val_offset:213885*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213885*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_71296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3befffffffff8000; valaddr_reg:x3; val_offset:213888*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213888*0 + 3*640*FLEN/8, x4, x1, x2)

inst_71297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3befffffffffc000; valaddr_reg:x3; val_offset:213891*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213891*0 + 3*641*FLEN/8, x4, x1, x2)

inst_71298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3befffffffffe000; valaddr_reg:x3; val_offset:213894*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213894*0 + 3*642*FLEN/8, x4, x1, x2)

inst_71299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3beffffffffff000; valaddr_reg:x3; val_offset:213897*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213897*0 + 3*643*FLEN/8, x4, x1, x2)

inst_71300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3beffffffffff800; valaddr_reg:x3; val_offset:213900*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213900*0 + 3*644*FLEN/8, x4, x1, x2)

inst_71301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3beffffffffffc00; valaddr_reg:x3; val_offset:213903*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213903*0 + 3*645*FLEN/8, x4, x1, x2)

inst_71302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3beffffffffffe00; valaddr_reg:x3; val_offset:213906*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213906*0 + 3*646*FLEN/8, x4, x1, x2)

inst_71303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3befffffffffff00; valaddr_reg:x3; val_offset:213909*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213909*0 + 3*647*FLEN/8, x4, x1, x2)

inst_71304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3befffffffffff80; valaddr_reg:x3; val_offset:213912*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213912*0 + 3*648*FLEN/8, x4, x1, x2)

inst_71305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3befffffffffffc0; valaddr_reg:x3; val_offset:213915*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213915*0 + 3*649*FLEN/8, x4, x1, x2)

inst_71306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3befffffffffffe0; valaddr_reg:x3; val_offset:213918*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213918*0 + 3*650*FLEN/8, x4, x1, x2)

inst_71307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3beffffffffffff0; valaddr_reg:x3; val_offset:213921*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213921*0 + 3*651*FLEN/8, x4, x1, x2)

inst_71308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3beffffffffffff8; valaddr_reg:x3; val_offset:213924*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213924*0 + 3*652*FLEN/8, x4, x1, x2)

inst_71309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3beffffffffffffc; valaddr_reg:x3; val_offset:213927*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213927*0 + 3*653*FLEN/8, x4, x1, x2)

inst_71310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3beffffffffffffe; valaddr_reg:x3; val_offset:213930*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213930*0 + 3*654*FLEN/8, x4, x1, x2)

inst_71311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3befffffffffffff; valaddr_reg:x3; val_offset:213933*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213933*0 + 3*655*FLEN/8, x4, x1, x2)

inst_71312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:213936*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213936*0 + 3*656*FLEN/8, x4, x1, x2)

inst_71313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:213939*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213939*0 + 3*657*FLEN/8, x4, x1, x2)

inst_71314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:213942*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213942*0 + 3*658*FLEN/8, x4, x1, x2)

inst_71315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:213945*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213945*0 + 3*659*FLEN/8, x4, x1, x2)

inst_71316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:213948*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213948*0 + 3*660*FLEN/8, x4, x1, x2)

inst_71317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:213951*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213951*0 + 3*661*FLEN/8, x4, x1, x2)

inst_71318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:213954*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213954*0 + 3*662*FLEN/8, x4, x1, x2)

inst_71319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:213957*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213957*0 + 3*663*FLEN/8, x4, x1, x2)

inst_71320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:213960*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213960*0 + 3*664*FLEN/8, x4, x1, x2)

inst_71321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:213963*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213963*0 + 3*665*FLEN/8, x4, x1, x2)

inst_71322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:213966*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213966*0 + 3*666*FLEN/8, x4, x1, x2)

inst_71323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:213969*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213969*0 + 3*667*FLEN/8, x4, x1, x2)

inst_71324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:213972*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213972*0 + 3*668*FLEN/8, x4, x1, x2)

inst_71325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:213975*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213975*0 + 3*669*FLEN/8, x4, x1, x2)

inst_71326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:213978*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213978*0 + 3*670*FLEN/8, x4, x1, x2)

inst_71327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:213981*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213981*0 + 3*671*FLEN/8, x4, x1, x2)

inst_71328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:213984*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213984*0 + 3*672*FLEN/8, x4, x1, x2)

inst_71329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:213987*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213987*0 + 3*673*FLEN/8, x4, x1, x2)

inst_71330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:213990*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213990*0 + 3*674*FLEN/8, x4, x1, x2)

inst_71331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:213993*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213993*0 + 3*675*FLEN/8, x4, x1, x2)

inst_71332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:213996*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213996*0 + 3*676*FLEN/8, x4, x1, x2)

inst_71333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x672d208a17895 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6cec833cfb99a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa672d208a17895; op2val:0x2036cec833cfb99a;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:213999*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213999*0 + 3*677*FLEN/8, x4, x1, x2)

inst_71334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb00000000000000; valaddr_reg:x3; val_offset:214002*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214002*0 + 3*678*FLEN/8, x4, x1, x2)

inst_71335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb00000000000001; valaddr_reg:x3; val_offset:214005*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214005*0 + 3*679*FLEN/8, x4, x1, x2)

inst_71336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb00000000000003; valaddr_reg:x3; val_offset:214008*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214008*0 + 3*680*FLEN/8, x4, x1, x2)

inst_71337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb00000000000007; valaddr_reg:x3; val_offset:214011*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214011*0 + 3*681*FLEN/8, x4, x1, x2)

inst_71338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb0000000000000f; valaddr_reg:x3; val_offset:214014*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214014*0 + 3*682*FLEN/8, x4, x1, x2)

inst_71339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb0000000000001f; valaddr_reg:x3; val_offset:214017*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214017*0 + 3*683*FLEN/8, x4, x1, x2)

inst_71340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb0000000000003f; valaddr_reg:x3; val_offset:214020*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214020*0 + 3*684*FLEN/8, x4, x1, x2)

inst_71341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb0000000000007f; valaddr_reg:x3; val_offset:214023*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214023*0 + 3*685*FLEN/8, x4, x1, x2)

inst_71342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb000000000000ff; valaddr_reg:x3; val_offset:214026*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214026*0 + 3*686*FLEN/8, x4, x1, x2)

inst_71343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb000000000001ff; valaddr_reg:x3; val_offset:214029*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214029*0 + 3*687*FLEN/8, x4, x1, x2)

inst_71344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb000000000003ff; valaddr_reg:x3; val_offset:214032*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214032*0 + 3*688*FLEN/8, x4, x1, x2)

inst_71345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb000000000007ff; valaddr_reg:x3; val_offset:214035*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214035*0 + 3*689*FLEN/8, x4, x1, x2)

inst_71346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb00000000000fff; valaddr_reg:x3; val_offset:214038*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214038*0 + 3*690*FLEN/8, x4, x1, x2)

inst_71347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb00000000001fff; valaddr_reg:x3; val_offset:214041*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214041*0 + 3*691*FLEN/8, x4, x1, x2)

inst_71348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb00000000003fff; valaddr_reg:x3; val_offset:214044*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214044*0 + 3*692*FLEN/8, x4, x1, x2)

inst_71349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb00000000007fff; valaddr_reg:x3; val_offset:214047*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214047*0 + 3*693*FLEN/8, x4, x1, x2)

inst_71350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb0000000000ffff; valaddr_reg:x3; val_offset:214050*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214050*0 + 3*694*FLEN/8, x4, x1, x2)

inst_71351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb0000000001ffff; valaddr_reg:x3; val_offset:214053*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214053*0 + 3*695*FLEN/8, x4, x1, x2)

inst_71352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb0000000003ffff; valaddr_reg:x3; val_offset:214056*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214056*0 + 3*696*FLEN/8, x4, x1, x2)

inst_71353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb0000000007ffff; valaddr_reg:x3; val_offset:214059*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214059*0 + 3*697*FLEN/8, x4, x1, x2)

inst_71354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb000000000fffff; valaddr_reg:x3; val_offset:214062*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214062*0 + 3*698*FLEN/8, x4, x1, x2)

inst_71355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb000000001fffff; valaddr_reg:x3; val_offset:214065*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214065*0 + 3*699*FLEN/8, x4, x1, x2)

inst_71356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb000000003fffff; valaddr_reg:x3; val_offset:214068*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214068*0 + 3*700*FLEN/8, x4, x1, x2)

inst_71357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb000000007fffff; valaddr_reg:x3; val_offset:214071*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214071*0 + 3*701*FLEN/8, x4, x1, x2)

inst_71358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb00000000ffffff; valaddr_reg:x3; val_offset:214074*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214074*0 + 3*702*FLEN/8, x4, x1, x2)

inst_71359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb00000001ffffff; valaddr_reg:x3; val_offset:214077*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214077*0 + 3*703*FLEN/8, x4, x1, x2)

inst_71360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb00000003ffffff; valaddr_reg:x3; val_offset:214080*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214080*0 + 3*704*FLEN/8, x4, x1, x2)

inst_71361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb00000007ffffff; valaddr_reg:x3; val_offset:214083*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214083*0 + 3*705*FLEN/8, x4, x1, x2)

inst_71362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb0000000fffffff; valaddr_reg:x3; val_offset:214086*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214086*0 + 3*706*FLEN/8, x4, x1, x2)

inst_71363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb0000001fffffff; valaddr_reg:x3; val_offset:214089*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214089*0 + 3*707*FLEN/8, x4, x1, x2)

inst_71364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb0000003fffffff; valaddr_reg:x3; val_offset:214092*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214092*0 + 3*708*FLEN/8, x4, x1, x2)

inst_71365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb0000007fffffff; valaddr_reg:x3; val_offset:214095*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214095*0 + 3*709*FLEN/8, x4, x1, x2)

inst_71366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb000000ffffffff; valaddr_reg:x3; val_offset:214098*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214098*0 + 3*710*FLEN/8, x4, x1, x2)

inst_71367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb000001ffffffff; valaddr_reg:x3; val_offset:214101*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214101*0 + 3*711*FLEN/8, x4, x1, x2)

inst_71368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb000003ffffffff; valaddr_reg:x3; val_offset:214104*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214104*0 + 3*712*FLEN/8, x4, x1, x2)

inst_71369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb000007ffffffff; valaddr_reg:x3; val_offset:214107*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214107*0 + 3*713*FLEN/8, x4, x1, x2)

inst_71370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb00000fffffffff; valaddr_reg:x3; val_offset:214110*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214110*0 + 3*714*FLEN/8, x4, x1, x2)

inst_71371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb00001fffffffff; valaddr_reg:x3; val_offset:214113*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214113*0 + 3*715*FLEN/8, x4, x1, x2)

inst_71372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb00003fffffffff; valaddr_reg:x3; val_offset:214116*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214116*0 + 3*716*FLEN/8, x4, x1, x2)

inst_71373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb00007fffffffff; valaddr_reg:x3; val_offset:214119*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214119*0 + 3*717*FLEN/8, x4, x1, x2)

inst_71374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb0000ffffffffff; valaddr_reg:x3; val_offset:214122*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214122*0 + 3*718*FLEN/8, x4, x1, x2)

inst_71375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb0001ffffffffff; valaddr_reg:x3; val_offset:214125*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214125*0 + 3*719*FLEN/8, x4, x1, x2)

inst_71376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb0003ffffffffff; valaddr_reg:x3; val_offset:214128*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214128*0 + 3*720*FLEN/8, x4, x1, x2)

inst_71377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb0007ffffffffff; valaddr_reg:x3; val_offset:214131*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214131*0 + 3*721*FLEN/8, x4, x1, x2)

inst_71378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb000fffffffffff; valaddr_reg:x3; val_offset:214134*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214134*0 + 3*722*FLEN/8, x4, x1, x2)

inst_71379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb001fffffffffff; valaddr_reg:x3; val_offset:214137*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214137*0 + 3*723*FLEN/8, x4, x1, x2)

inst_71380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb003fffffffffff; valaddr_reg:x3; val_offset:214140*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214140*0 + 3*724*FLEN/8, x4, x1, x2)

inst_71381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb007fffffffffff; valaddr_reg:x3; val_offset:214143*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214143*0 + 3*725*FLEN/8, x4, x1, x2)

inst_71382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb00ffffffffffff; valaddr_reg:x3; val_offset:214146*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214146*0 + 3*726*FLEN/8, x4, x1, x2)

inst_71383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb01ffffffffffff; valaddr_reg:x3; val_offset:214149*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214149*0 + 3*727*FLEN/8, x4, x1, x2)

inst_71384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb03ffffffffffff; valaddr_reg:x3; val_offset:214152*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214152*0 + 3*728*FLEN/8, x4, x1, x2)

inst_71385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb07ffffffffffff; valaddr_reg:x3; val_offset:214155*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214155*0 + 3*729*FLEN/8, x4, x1, x2)

inst_71386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb08000000000000; valaddr_reg:x3; val_offset:214158*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214158*0 + 3*730*FLEN/8, x4, x1, x2)

inst_71387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb0c000000000000; valaddr_reg:x3; val_offset:214161*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214161*0 + 3*731*FLEN/8, x4, x1, x2)

inst_71388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb0e000000000000; valaddr_reg:x3; val_offset:214164*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214164*0 + 3*732*FLEN/8, x4, x1, x2)

inst_71389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb0f000000000000; valaddr_reg:x3; val_offset:214167*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214167*0 + 3*733*FLEN/8, x4, x1, x2)

inst_71390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb0f800000000000; valaddr_reg:x3; val_offset:214170*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214170*0 + 3*734*FLEN/8, x4, x1, x2)

inst_71391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb0fc00000000000; valaddr_reg:x3; val_offset:214173*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214173*0 + 3*735*FLEN/8, x4, x1, x2)

inst_71392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb0fe00000000000; valaddr_reg:x3; val_offset:214176*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214176*0 + 3*736*FLEN/8, x4, x1, x2)

inst_71393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb0ff00000000000; valaddr_reg:x3; val_offset:214179*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214179*0 + 3*737*FLEN/8, x4, x1, x2)

inst_71394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb0ff80000000000; valaddr_reg:x3; val_offset:214182*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214182*0 + 3*738*FLEN/8, x4, x1, x2)

inst_71395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb0ffc0000000000; valaddr_reg:x3; val_offset:214185*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214185*0 + 3*739*FLEN/8, x4, x1, x2)

inst_71396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb0ffe0000000000; valaddr_reg:x3; val_offset:214188*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214188*0 + 3*740*FLEN/8, x4, x1, x2)

inst_71397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb0fff0000000000; valaddr_reg:x3; val_offset:214191*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214191*0 + 3*741*FLEN/8, x4, x1, x2)

inst_71398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb0fff8000000000; valaddr_reg:x3; val_offset:214194*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214194*0 + 3*742*FLEN/8, x4, x1, x2)

inst_71399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb0fffc000000000; valaddr_reg:x3; val_offset:214197*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214197*0 + 3*743*FLEN/8, x4, x1, x2)

inst_71400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb0fffe000000000; valaddr_reg:x3; val_offset:214200*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214200*0 + 3*744*FLEN/8, x4, x1, x2)

inst_71401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb0ffff000000000; valaddr_reg:x3; val_offset:214203*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214203*0 + 3*745*FLEN/8, x4, x1, x2)

inst_71402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb0ffff800000000; valaddr_reg:x3; val_offset:214206*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214206*0 + 3*746*FLEN/8, x4, x1, x2)

inst_71403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb0ffffc00000000; valaddr_reg:x3; val_offset:214209*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214209*0 + 3*747*FLEN/8, x4, x1, x2)

inst_71404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb0ffffe00000000; valaddr_reg:x3; val_offset:214212*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214212*0 + 3*748*FLEN/8, x4, x1, x2)

inst_71405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb0fffff00000000; valaddr_reg:x3; val_offset:214215*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214215*0 + 3*749*FLEN/8, x4, x1, x2)

inst_71406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb0fffff80000000; valaddr_reg:x3; val_offset:214218*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214218*0 + 3*750*FLEN/8, x4, x1, x2)

inst_71407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb0fffffc0000000; valaddr_reg:x3; val_offset:214221*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214221*0 + 3*751*FLEN/8, x4, x1, x2)

inst_71408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb0fffffe0000000; valaddr_reg:x3; val_offset:214224*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214224*0 + 3*752*FLEN/8, x4, x1, x2)

inst_71409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb0ffffff0000000; valaddr_reg:x3; val_offset:214227*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214227*0 + 3*753*FLEN/8, x4, x1, x2)

inst_71410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb0ffffff8000000; valaddr_reg:x3; val_offset:214230*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214230*0 + 3*754*FLEN/8, x4, x1, x2)

inst_71411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb0ffffffc000000; valaddr_reg:x3; val_offset:214233*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214233*0 + 3*755*FLEN/8, x4, x1, x2)

inst_71412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb0ffffffe000000; valaddr_reg:x3; val_offset:214236*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214236*0 + 3*756*FLEN/8, x4, x1, x2)

inst_71413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb0fffffff000000; valaddr_reg:x3; val_offset:214239*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214239*0 + 3*757*FLEN/8, x4, x1, x2)

inst_71414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb0fffffff800000; valaddr_reg:x3; val_offset:214242*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214242*0 + 3*758*FLEN/8, x4, x1, x2)

inst_71415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb0fffffffc00000; valaddr_reg:x3; val_offset:214245*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214245*0 + 3*759*FLEN/8, x4, x1, x2)

inst_71416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb0fffffffe00000; valaddr_reg:x3; val_offset:214248*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214248*0 + 3*760*FLEN/8, x4, x1, x2)

inst_71417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb0ffffffff00000; valaddr_reg:x3; val_offset:214251*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214251*0 + 3*761*FLEN/8, x4, x1, x2)

inst_71418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb0ffffffff80000; valaddr_reg:x3; val_offset:214254*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214254*0 + 3*762*FLEN/8, x4, x1, x2)

inst_71419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb0ffffffffc0000; valaddr_reg:x3; val_offset:214257*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214257*0 + 3*763*FLEN/8, x4, x1, x2)

inst_71420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb0ffffffffe0000; valaddr_reg:x3; val_offset:214260*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214260*0 + 3*764*FLEN/8, x4, x1, x2)

inst_71421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb0fffffffff0000; valaddr_reg:x3; val_offset:214263*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214263*0 + 3*765*FLEN/8, x4, x1, x2)

inst_71422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb0fffffffff8000; valaddr_reg:x3; val_offset:214266*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214266*0 + 3*766*FLEN/8, x4, x1, x2)

inst_71423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6cab92d0dbaf4 and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa676d1681c4823; op2val:0x9fc6cab92d0dbaf4;
op3val:0xbb0fffffffffc000; valaddr_reg:x3; val_offset:214269*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 214269*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6892302772980675561,64,FLEN)
NAN_BOXED(2321290149413835156,64,FLEN)
NAN_BOXED(4053239664599891968,64,FLEN)
NAN_BOXED(6892302772980675561,64,FLEN)
NAN_BOXED(2321290149413835156,64,FLEN)
NAN_BOXED(4053239664616669184,64,FLEN)
NAN_BOXED(6892302772980675561,64,FLEN)
NAN_BOXED(2321290149413835156,64,FLEN)
NAN_BOXED(4053239664625057792,64,FLEN)
NAN_BOXED(6892302772980675561,64,FLEN)
NAN_BOXED(2321290149413835156,64,FLEN)
NAN_BOXED(4053239664629252096,64,FLEN)
NAN_BOXED(6892302772980675561,64,FLEN)
NAN_BOXED(2321290149413835156,64,FLEN)
NAN_BOXED(4053239664631349248,64,FLEN)
NAN_BOXED(6892302772980675561,64,FLEN)
NAN_BOXED(2321290149413835156,64,FLEN)
NAN_BOXED(4053239664632397824,64,FLEN)
NAN_BOXED(6892302772980675561,64,FLEN)
NAN_BOXED(2321290149413835156,64,FLEN)
NAN_BOXED(4053239664632922112,64,FLEN)
NAN_BOXED(6892302772980675561,64,FLEN)
NAN_BOXED(2321290149413835156,64,FLEN)
NAN_BOXED(4053239664633184256,64,FLEN)
NAN_BOXED(6892302772980675561,64,FLEN)
NAN_BOXED(2321290149413835156,64,FLEN)
NAN_BOXED(4053239664633315328,64,FLEN)
NAN_BOXED(6892302772980675561,64,FLEN)
NAN_BOXED(2321290149413835156,64,FLEN)
NAN_BOXED(4053239664633380864,64,FLEN)
NAN_BOXED(6892302772980675561,64,FLEN)
NAN_BOXED(2321290149413835156,64,FLEN)
NAN_BOXED(4053239664633413632,64,FLEN)
NAN_BOXED(6892302772980675561,64,FLEN)
NAN_BOXED(2321290149413835156,64,FLEN)
NAN_BOXED(4053239664633430016,64,FLEN)
NAN_BOXED(6892302772980675561,64,FLEN)
NAN_BOXED(2321290149413835156,64,FLEN)
NAN_BOXED(4053239664633438208,64,FLEN)
NAN_BOXED(6892302772980675561,64,FLEN)
NAN_BOXED(2321290149413835156,64,FLEN)
NAN_BOXED(4053239664633442304,64,FLEN)
NAN_BOXED(6892302772980675561,64,FLEN)
NAN_BOXED(2321290149413835156,64,FLEN)
NAN_BOXED(4053239664633444352,64,FLEN)
NAN_BOXED(6892302772980675561,64,FLEN)
NAN_BOXED(2321290149413835156,64,FLEN)
NAN_BOXED(4053239664633445376,64,FLEN)
NAN_BOXED(6892302772980675561,64,FLEN)
NAN_BOXED(2321290149413835156,64,FLEN)
NAN_BOXED(4053239664633445888,64,FLEN)
NAN_BOXED(6892302772980675561,64,FLEN)
NAN_BOXED(2321290149413835156,64,FLEN)
NAN_BOXED(4053239664633446144,64,FLEN)
NAN_BOXED(6892302772980675561,64,FLEN)
NAN_BOXED(2321290149413835156,64,FLEN)
NAN_BOXED(4053239664633446272,64,FLEN)
NAN_BOXED(6892302772980675561,64,FLEN)
NAN_BOXED(2321290149413835156,64,FLEN)
NAN_BOXED(4053239664633446336,64,FLEN)
NAN_BOXED(6892302772980675561,64,FLEN)
NAN_BOXED(2321290149413835156,64,FLEN)
NAN_BOXED(4053239664633446368,64,FLEN)
NAN_BOXED(6892302772980675561,64,FLEN)
NAN_BOXED(2321290149413835156,64,FLEN)
NAN_BOXED(4053239664633446384,64,FLEN)
NAN_BOXED(6892302772980675561,64,FLEN)
NAN_BOXED(2321290149413835156,64,FLEN)
NAN_BOXED(4053239664633446392,64,FLEN)
NAN_BOXED(6892302772980675561,64,FLEN)
NAN_BOXED(2321290149413835156,64,FLEN)
NAN_BOXED(4053239664633446396,64,FLEN)
NAN_BOXED(6892302772980675561,64,FLEN)
NAN_BOXED(2321290149413835156,64,FLEN)
NAN_BOXED(4053239664633446398,64,FLEN)
NAN_BOXED(6892302772980675561,64,FLEN)
NAN_BOXED(2321290149413835156,64,FLEN)
NAN_BOXED(4053239664633446399,64,FLEN)
NAN_BOXED(6892302772980675561,64,FLEN)
NAN_BOXED(2321290149413835156,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6892302772980675561,64,FLEN)
NAN_BOXED(2321290149413835156,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6892302772980675561,64,FLEN)
NAN_BOXED(2321290149413835156,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6892302772980675561,64,FLEN)
NAN_BOXED(2321290149413835156,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6892302772980675561,64,FLEN)
NAN_BOXED(2321290149413835156,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6892302772980675561,64,FLEN)
NAN_BOXED(2321290149413835156,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6892302772980675561,64,FLEN)
NAN_BOXED(2321290149413835156,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6892302772980675561,64,FLEN)
NAN_BOXED(2321290149413835156,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6892302772980675561,64,FLEN)
NAN_BOXED(2321290149413835156,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6892302772980675561,64,FLEN)
NAN_BOXED(2321290149413835156,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6892302772980675561,64,FLEN)
NAN_BOXED(2321290149413835156,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6892302772980675561,64,FLEN)
NAN_BOXED(2321290149413835156,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6892302772980675561,64,FLEN)
NAN_BOXED(2321290149413835156,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6892302772980675561,64,FLEN)
NAN_BOXED(2321290149413835156,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6892302772980675561,64,FLEN)
NAN_BOXED(2321290149413835156,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6892302772980675561,64,FLEN)
NAN_BOXED(2321290149413835156,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6892302772980675561,64,FLEN)
NAN_BOXED(2321290149413835156,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6892302772980675561,64,FLEN)
NAN_BOXED(2321290149413835156,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6892302772980675561,64,FLEN)
NAN_BOXED(2321290149413835156,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6892302772980675561,64,FLEN)
NAN_BOXED(2321290149413835156,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6892302772980675561,64,FLEN)
NAN_BOXED(2321290149413835156,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6892302772980675561,64,FLEN)
NAN_BOXED(2321290149413835156,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13339662096271409152,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13339662096271409153,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13339662096271409155,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13339662096271409159,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13339662096271409167,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13339662096271409183,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13339662096271409215,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13339662096271409279,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13339662096271409407,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13339662096271409663,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13339662096271410175,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13339662096271411199,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13339662096271413247,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13339662096271417343,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13339662096271425535,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13339662096271441919,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13339662096271474687,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13339662096271540223,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13339662096271671295,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13339662096271933439,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13339662096272457727,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13339662096273506303,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13339662096275603455,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13339662096279797759,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13339662096288186367,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13339662096304963583,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13339662096338518015,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13339662096405626879,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13339662096539844607,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13339662096808280063,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13339662097345150975,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13339662098418892799,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13339662100566376447,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13339662104861343743,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13339662113451278335,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13339662130631147519,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13339662164990885887,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13339662233710362623,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13339662371149316095,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13339662646027223039,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13339663195783036927,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13339664295294664703,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13339666494317920255,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13339670892364431359,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13339679688457453567,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13339697280643497983,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13339732465015586815,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13339802833759764479,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13339943571248119807,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13340225046224830463,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13340787996178251775,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13341913896085094399,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13341913896085094400,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13343039795991937024,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13343602745945358336,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13343884220922068992,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13344024958410424320,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13344095327154601984,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13344130511526690816,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13344148103712735232,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13344156899805757440,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13344161297852268544,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13344163496875524096,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13344164596387151872,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13344165146142965760,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13344165421020872704,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13344165558459826176,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13344165627179302912,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13344165661539041280,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13344165678718910464,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13344165687308845056,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13344165691603812352,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13344165693751296000,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13344165694825037824,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13344165695361908736,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13344165695630344192,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13344165695764561920,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13344165695831670784,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13344165695865225216,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13344165695882002432,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13344165695890391040,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13344165695894585344,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13344165695896682496,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13344165695897731072,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13344165695898255360,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13344165695898517504,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13344165695898648576,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13344165695898714112,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13344165695898746880,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13344165695898763264,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13344165695898771456,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13344165695898775552,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13344165695898777600,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13344165695898778624,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13344165695898779136,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13344165695898779392,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13344165695898779520,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13344165695898779584,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13344165695898779616,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13344165695898779632,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13344165695898779640,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13344165695898779644,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13344165695898779646,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13344165695898779647,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6892305224434560541,64,FLEN)
NAN_BOXED(11513134483523791528,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264576,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264577,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264579,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264583,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264591,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264607,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264639,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264703,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264831,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242265087,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242265599,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242266623,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242268671,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242272767,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242280959,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242297343,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242330111,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242395647,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242526719,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242788863,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815243313151,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815244361727,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815246458879,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815250653183,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815259041791,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815275819007,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815309373439,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815376482303,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815510700031,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815779135487,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580816316006399,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580817389748223,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580819537231871,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580823832199167,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580832422133759,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580849602002943,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580883961741311,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580952681218047,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484581090120171519,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484581364998078463,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484581914753892351,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484583014265520127,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484585213288775679,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484589611335286783,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484598407428308991,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484615999614353407,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484651183986442239,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484721552730619903,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484862290218975231,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9485143765195685887,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9485706715149107199,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9486832615055949823,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9486832615055949824,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9487958514962792448,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9488521464916213760,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9488802939892924416,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9488943677381279744,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489014046125457408,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489049230497546240,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489066822683590656,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489075618776612864,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489080016823123968,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489082215846379520,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489083315358007296,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489083865113821184,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084139991728128,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084277430681600,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084346150158336,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084380509896704,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084397689765888,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084406279700480,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084410574667776,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084412722151424,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084413795893248,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414332764160,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414601199616,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414735417344,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414802526208,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414836080640,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414852857856,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414861246464,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414865440768,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414867537920,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414868586496,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869110784,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869372928,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869504000,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869569536,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869602304,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869618688,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869626880,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869630976,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869633024,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869634048,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869634560,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869634816,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869634944,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635008,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635040,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635056,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635064,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635068,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635070,64,FLEN)
NAN_BOXED(6892306039726377994,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635071,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373888,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373889,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373891,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373895,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373903,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373919,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373951,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566374015,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566374143,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566374399,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566374911,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566375935,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566377983,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566382079,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566390271,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566406655,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566439423,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566504959,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566636031,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566898175,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789567422463,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789568471039,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789570568191,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789574762495,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789583151103,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789599928319,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789633482751,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789700591615,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789834809343,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100790103244799,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100790640115711,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100791713857535,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100793861341183,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100798156308479,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100806746243071,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100823926112255,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100858285850623,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100927005327359,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126101064444280831,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126101339322187775,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126101889078001663,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126102988589629439,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126105187612884991,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126109585659396095,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126118381752418303,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126135973938462719,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126171158310551551,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126241527054729215,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126382264543084543,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126663739519795199,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(127226689473216511,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(128352589380059135,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(128352589380059136,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(129478489286901760,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130041439240323072,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130322914217033728,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130463651705389056,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130534020449566720,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130569204821655552,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130586797007699968,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130595593100722176,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130599991147233280,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130602190170488832,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130603289682116608,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130603839437930496,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604114315837440,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604251754790912,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604320474267648,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604354834006016,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604372013875200,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604380603809792,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604384898777088,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604387046260736,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604388120002560,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604388656873472,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604388925308928,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389059526656,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389126635520,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389160189952,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389176967168,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389185355776,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389189550080,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389191647232,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389192695808,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193220096,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193482240,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193613312,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193678848,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193711616,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193728000,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193736192,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193740288,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193742336,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193743360,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193743872,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744128,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744256,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744320,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744352,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744368,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744376,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744380,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744382,64,FLEN)
NAN_BOXED(6892309587520803517,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744383,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967360,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967361,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967363,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967367,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967375,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967391,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967423,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967487,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967615,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967871,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957968383,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957969407,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957971455,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957975551,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957983743,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986958000127,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986958032895,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986958098431,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986958229503,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986958491647,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986959015935,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986960064511,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986962161663,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986966355967,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986974744575,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986991521791,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625987025076223,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625987092185087,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625987226402815,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625987494838271,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625988031709183,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625989105451007,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625991252934655,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625995547901951,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157626004137836543,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157626021317705727,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157626055677444095,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157626124396920831,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157626261835874303,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157626536713781247,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157627086469595135,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157628185981222911,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157630385004478463,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157634783050989567,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157643579144011775,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157661171330056191,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157696355702145023,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157766724446322687,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157907461934678015,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(158188936911388671,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(158751886864809983,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(159877786771652607,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(159877786771652608,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(161003686678495232,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(161566636631916544,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(161848111608627200,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(161988849096982528,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162059217841160192,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162094402213249024,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162111994399293440,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162120790492315648,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162125188538826752,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162127387562082304,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162128487073710080,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129036829523968,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129311707430912,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129449146384384,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129517865861120,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129552225599488,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129569405468672,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129577995403264,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129582290370560,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129584437854208,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129585511596032,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586048466944,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586316902400,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586451120128,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586518228992,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586551783424,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586568560640,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586576949248,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586581143552,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586583240704,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586584289280,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586584813568,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585075712,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585206784,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585272320,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585305088,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585321472,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585329664,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585333760,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585335808,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585336832,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337344,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337600,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337728,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337792,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337824,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337840,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337848,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337852,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337854,64,FLEN)
NAN_BOXED(6892316232433690274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337855,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4314448443020935168,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4314448443020935169,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4314448443020935171,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4314448443020935175,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4314448443020935183,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4314448443020935199,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4314448443020935231,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4314448443020935295,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4314448443020935423,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4314448443020935679,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4314448443020936191,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4314448443020937215,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4314448443020939263,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4314448443020943359,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4314448443020951551,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4314448443020967935,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4314448443021000703,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4314448443021066239,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4314448443021197311,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4314448443021459455,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4314448443021983743,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4314448443023032319,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4314448443025129471,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4314448443029323775,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4314448443037712383,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4314448443054489599,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4314448443088044031,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4314448443155152895,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4314448443289370623,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4314448443557806079,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4314448444094676991,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4314448445168418815,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4314448447315902463,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4314448451610869759,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4314448460200804351,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4314448477380673535,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4314448511740411903,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4314448580459888639,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4314448717898842111,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4314448992776749055,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4314449542532562943,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4314450642044190719,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4314452841067446271,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4314457239113957375,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4314466035206979583,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4314483627393023999,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4314518811765112831,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4314589180509290495,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4314729917997645823,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4315011392974356479,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4315574342927777791,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4316700242834620415,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4316700242834620416,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4317826142741463040,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4318389092694884352,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4318670567671595008,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4318811305159950336,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4318881673904128000,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4318916858276216832,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4318934450462261248,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4318943246555283456,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4318947644601794560,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4318949843625050112,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4318950943136677888,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4318951492892491776,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4318951767770398720,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4318951905209352192,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4318951973928828928,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4318952008288567296,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4318952025468436480,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4318952034058371072,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4318952038353338368,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4318952040500822016,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4318952041574563840,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4318952042111434752,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4318952042379870208,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4318952042514087936,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4318952042581196800,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4318952042614751232,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4318952042631528448,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4318952042639917056,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4318952042644111360,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4318952042646208512,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4318952042647257088,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4318952042647781376,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4318952042648043520,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4318952042648174592,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4318952042648240128,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4318952042648272896,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4318952042648289280,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4318952042648297472,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4318952042648301568,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4318952042648303616,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4318952042648304640,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4318952042648305152,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4318952042648305408,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4318952042648305536,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4318952042648305600,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4318952042648305632,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4318952042648305648,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4318952042648305656,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4318952042648305660,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4318952042648305662,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4318952042648305663,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6892322526150621333,64,FLEN)
NAN_BOXED(2321270017214101914,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13474770085092524032,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13474770085092524033,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13474770085092524035,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13474770085092524039,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13474770085092524047,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13474770085092524063,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13474770085092524095,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13474770085092524159,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13474770085092524287,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13474770085092524543,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13474770085092525055,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13474770085092526079,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13474770085092528127,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13474770085092532223,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13474770085092540415,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13474770085092556799,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13474770085092589567,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13474770085092655103,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13474770085092786175,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13474770085093048319,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13474770085093572607,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13474770085094621183,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13474770085096718335,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13474770085100912639,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13474770085109301247,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13474770085126078463,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13474770085159632895,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13474770085226741759,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13474770085360959487,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13474770085629394943,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13474770086166265855,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13474770087240007679,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13474770089387491327,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13474770093682458623,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13474770102272393215,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13474770119452262399,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13474770153812000767,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13474770222531477503,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13474770359970430975,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13474770634848337919,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13474771184604151807,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13474772284115779583,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13474774483139035135,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13474778881185546239,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13474787677278568447,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13474805269464612863,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13474840453836701695,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13474910822580879359,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13475051560069234687,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13475333035045945343,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13475895984999366655,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13477021884906209279,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13477021884906209280,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13478147784813051904,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13478710734766473216,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13478992209743183872,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13479132947231539200,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13479203315975716864,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13479238500347805696,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13479256092533850112,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13479264888626872320,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13479269286673383424,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13479271485696638976,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13479272585208266752,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13479273134964080640,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13479273409841987584,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13479273547280941056,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13479273616000417792,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13479273650360156160,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13479273667540025344,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13479273676129959936,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13479273680424927232,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13479273682572410880,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13479273683646152704,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13479273684183023616,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13479273684451459072,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13479273684585676800,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13479273684652785664,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13479273684686340096,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13479273684703117312,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13479273684711505920,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13479273684715700224,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13479273684717797376,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13479273684718845952,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13479273684719370240,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13479273684719632384,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13479273684719763456,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13479273684719828992,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13479273684719861760,64,FLEN)
NAN_BOXED(6892326921504049187,64,FLEN)
NAN_BOXED(11513112394092886772,64,FLEN)
NAN_BOXED(13479273684719878144,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
