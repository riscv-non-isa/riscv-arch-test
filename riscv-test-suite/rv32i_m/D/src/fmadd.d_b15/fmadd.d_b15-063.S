
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_47616:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x153ffffffffffff; valaddr_reg:x3; val_offset:142848*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142848*0 + 3*0*FLEN/8, x4, x1, x2)

inst_47617:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x157ffffffffffff; valaddr_reg:x3; val_offset:142851*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142851*0 + 3*1*FLEN/8, x4, x1, x2)

inst_47618:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x158000000000000; valaddr_reg:x3; val_offset:142854*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142854*0 + 3*2*FLEN/8, x4, x1, x2)

inst_47619:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x15c000000000000; valaddr_reg:x3; val_offset:142857*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142857*0 + 3*3*FLEN/8, x4, x1, x2)

inst_47620:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x15e000000000000; valaddr_reg:x3; val_offset:142860*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142860*0 + 3*4*FLEN/8, x4, x1, x2)

inst_47621:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x15f000000000000; valaddr_reg:x3; val_offset:142863*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142863*0 + 3*5*FLEN/8, x4, x1, x2)

inst_47622:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x15f800000000000; valaddr_reg:x3; val_offset:142866*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142866*0 + 3*6*FLEN/8, x4, x1, x2)

inst_47623:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x15fc00000000000; valaddr_reg:x3; val_offset:142869*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142869*0 + 3*7*FLEN/8, x4, x1, x2)

inst_47624:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x15fe00000000000; valaddr_reg:x3; val_offset:142872*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142872*0 + 3*8*FLEN/8, x4, x1, x2)

inst_47625:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x15ff00000000000; valaddr_reg:x3; val_offset:142875*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142875*0 + 3*9*FLEN/8, x4, x1, x2)

inst_47626:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x15ff80000000000; valaddr_reg:x3; val_offset:142878*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142878*0 + 3*10*FLEN/8, x4, x1, x2)

inst_47627:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x15ffc0000000000; valaddr_reg:x3; val_offset:142881*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142881*0 + 3*11*FLEN/8, x4, x1, x2)

inst_47628:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x15ffe0000000000; valaddr_reg:x3; val_offset:142884*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142884*0 + 3*12*FLEN/8, x4, x1, x2)

inst_47629:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x15fff0000000000; valaddr_reg:x3; val_offset:142887*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142887*0 + 3*13*FLEN/8, x4, x1, x2)

inst_47630:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x15fff8000000000; valaddr_reg:x3; val_offset:142890*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142890*0 + 3*14*FLEN/8, x4, x1, x2)

inst_47631:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x15fffc000000000; valaddr_reg:x3; val_offset:142893*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142893*0 + 3*15*FLEN/8, x4, x1, x2)

inst_47632:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x15fffe000000000; valaddr_reg:x3; val_offset:142896*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142896*0 + 3*16*FLEN/8, x4, x1, x2)

inst_47633:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x15ffff000000000; valaddr_reg:x3; val_offset:142899*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142899*0 + 3*17*FLEN/8, x4, x1, x2)

inst_47634:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x15ffff800000000; valaddr_reg:x3; val_offset:142902*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142902*0 + 3*18*FLEN/8, x4, x1, x2)

inst_47635:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x15ffffc00000000; valaddr_reg:x3; val_offset:142905*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142905*0 + 3*19*FLEN/8, x4, x1, x2)

inst_47636:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x15ffffe00000000; valaddr_reg:x3; val_offset:142908*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142908*0 + 3*20*FLEN/8, x4, x1, x2)

inst_47637:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x15fffff00000000; valaddr_reg:x3; val_offset:142911*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142911*0 + 3*21*FLEN/8, x4, x1, x2)

inst_47638:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x15fffff80000000; valaddr_reg:x3; val_offset:142914*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142914*0 + 3*22*FLEN/8, x4, x1, x2)

inst_47639:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x15fffffc0000000; valaddr_reg:x3; val_offset:142917*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142917*0 + 3*23*FLEN/8, x4, x1, x2)

inst_47640:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x15fffffe0000000; valaddr_reg:x3; val_offset:142920*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142920*0 + 3*24*FLEN/8, x4, x1, x2)

inst_47641:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x15ffffff0000000; valaddr_reg:x3; val_offset:142923*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142923*0 + 3*25*FLEN/8, x4, x1, x2)

inst_47642:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x15ffffff8000000; valaddr_reg:x3; val_offset:142926*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142926*0 + 3*26*FLEN/8, x4, x1, x2)

inst_47643:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x15ffffffc000000; valaddr_reg:x3; val_offset:142929*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142929*0 + 3*27*FLEN/8, x4, x1, x2)

inst_47644:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x15ffffffe000000; valaddr_reg:x3; val_offset:142932*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142932*0 + 3*28*FLEN/8, x4, x1, x2)

inst_47645:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x15fffffff000000; valaddr_reg:x3; val_offset:142935*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142935*0 + 3*29*FLEN/8, x4, x1, x2)

inst_47646:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x15fffffff800000; valaddr_reg:x3; val_offset:142938*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142938*0 + 3*30*FLEN/8, x4, x1, x2)

inst_47647:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x15fffffffc00000; valaddr_reg:x3; val_offset:142941*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142941*0 + 3*31*FLEN/8, x4, x1, x2)

inst_47648:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x15fffffffe00000; valaddr_reg:x3; val_offset:142944*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142944*0 + 3*32*FLEN/8, x4, x1, x2)

inst_47649:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x15ffffffff00000; valaddr_reg:x3; val_offset:142947*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142947*0 + 3*33*FLEN/8, x4, x1, x2)

inst_47650:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x15ffffffff80000; valaddr_reg:x3; val_offset:142950*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142950*0 + 3*34*FLEN/8, x4, x1, x2)

inst_47651:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x15ffffffffc0000; valaddr_reg:x3; val_offset:142953*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142953*0 + 3*35*FLEN/8, x4, x1, x2)

inst_47652:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x15ffffffffe0000; valaddr_reg:x3; val_offset:142956*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142956*0 + 3*36*FLEN/8, x4, x1, x2)

inst_47653:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x15fffffffff0000; valaddr_reg:x3; val_offset:142959*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142959*0 + 3*37*FLEN/8, x4, x1, x2)

inst_47654:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x15fffffffff8000; valaddr_reg:x3; val_offset:142962*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142962*0 + 3*38*FLEN/8, x4, x1, x2)

inst_47655:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x15fffffffffc000; valaddr_reg:x3; val_offset:142965*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142965*0 + 3*39*FLEN/8, x4, x1, x2)

inst_47656:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x15fffffffffe000; valaddr_reg:x3; val_offset:142968*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142968*0 + 3*40*FLEN/8, x4, x1, x2)

inst_47657:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x15ffffffffff000; valaddr_reg:x3; val_offset:142971*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142971*0 + 3*41*FLEN/8, x4, x1, x2)

inst_47658:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x15ffffffffff800; valaddr_reg:x3; val_offset:142974*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142974*0 + 3*42*FLEN/8, x4, x1, x2)

inst_47659:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x15ffffffffffc00; valaddr_reg:x3; val_offset:142977*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142977*0 + 3*43*FLEN/8, x4, x1, x2)

inst_47660:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x15ffffffffffe00; valaddr_reg:x3; val_offset:142980*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142980*0 + 3*44*FLEN/8, x4, x1, x2)

inst_47661:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x15fffffffffff00; valaddr_reg:x3; val_offset:142983*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142983*0 + 3*45*FLEN/8, x4, x1, x2)

inst_47662:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x15fffffffffff80; valaddr_reg:x3; val_offset:142986*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142986*0 + 3*46*FLEN/8, x4, x1, x2)

inst_47663:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x15fffffffffffc0; valaddr_reg:x3; val_offset:142989*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142989*0 + 3*47*FLEN/8, x4, x1, x2)

inst_47664:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x15fffffffffffe0; valaddr_reg:x3; val_offset:142992*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142992*0 + 3*48*FLEN/8, x4, x1, x2)

inst_47665:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x15ffffffffffff0; valaddr_reg:x3; val_offset:142995*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142995*0 + 3*49*FLEN/8, x4, x1, x2)

inst_47666:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x15ffffffffffff8; valaddr_reg:x3; val_offset:142998*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142998*0 + 3*50*FLEN/8, x4, x1, x2)

inst_47667:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x15ffffffffffffc; valaddr_reg:x3; val_offset:143001*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143001*0 + 3*51*FLEN/8, x4, x1, x2)

inst_47668:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x15ffffffffffffe; valaddr_reg:x3; val_offset:143004*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143004*0 + 3*52*FLEN/8, x4, x1, x2)

inst_47669:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5e54006052c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5e54006052c9; op2val:0x0;
op3val:0x15fffffffffffff; valaddr_reg:x3; val_offset:143007*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143007*0 + 3*53*FLEN/8, x4, x1, x2)

inst_47670:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:143010*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143010*0 + 3*54*FLEN/8, x4, x1, x2)

inst_47671:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:143013*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143013*0 + 3*55*FLEN/8, x4, x1, x2)

inst_47672:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:143016*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143016*0 + 3*56*FLEN/8, x4, x1, x2)

inst_47673:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:143019*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143019*0 + 3*57*FLEN/8, x4, x1, x2)

inst_47674:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:143022*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143022*0 + 3*58*FLEN/8, x4, x1, x2)

inst_47675:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:143025*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143025*0 + 3*59*FLEN/8, x4, x1, x2)

inst_47676:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:143028*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143028*0 + 3*60*FLEN/8, x4, x1, x2)

inst_47677:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:143031*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143031*0 + 3*61*FLEN/8, x4, x1, x2)

inst_47678:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:143034*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143034*0 + 3*62*FLEN/8, x4, x1, x2)

inst_47679:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:143037*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143037*0 + 3*63*FLEN/8, x4, x1, x2)

inst_47680:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:143040*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143040*0 + 3*64*FLEN/8, x4, x1, x2)

inst_47681:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:143043*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143043*0 + 3*65*FLEN/8, x4, x1, x2)

inst_47682:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:143046*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143046*0 + 3*66*FLEN/8, x4, x1, x2)

inst_47683:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:143049*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143049*0 + 3*67*FLEN/8, x4, x1, x2)

inst_47684:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:143052*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143052*0 + 3*68*FLEN/8, x4, x1, x2)

inst_47685:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:143055*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143055*0 + 3*69*FLEN/8, x4, x1, x2)

inst_47686:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:143058*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143058*0 + 3*70*FLEN/8, x4, x1, x2)

inst_47687:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:143061*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143061*0 + 3*71*FLEN/8, x4, x1, x2)

inst_47688:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:143064*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143064*0 + 3*72*FLEN/8, x4, x1, x2)

inst_47689:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:143067*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143067*0 + 3*73*FLEN/8, x4, x1, x2)

inst_47690:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:143070*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143070*0 + 3*74*FLEN/8, x4, x1, x2)

inst_47691:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:143073*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143073*0 + 3*75*FLEN/8, x4, x1, x2)

inst_47692:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80f0000000000000; valaddr_reg:x3; val_offset:143076*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143076*0 + 3*76*FLEN/8, x4, x1, x2)

inst_47693:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80f0000000000001; valaddr_reg:x3; val_offset:143079*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143079*0 + 3*77*FLEN/8, x4, x1, x2)

inst_47694:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80f0000000000003; valaddr_reg:x3; val_offset:143082*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143082*0 + 3*78*FLEN/8, x4, x1, x2)

inst_47695:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80f0000000000007; valaddr_reg:x3; val_offset:143085*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143085*0 + 3*79*FLEN/8, x4, x1, x2)

inst_47696:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80f000000000000f; valaddr_reg:x3; val_offset:143088*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143088*0 + 3*80*FLEN/8, x4, x1, x2)

inst_47697:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80f000000000001f; valaddr_reg:x3; val_offset:143091*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143091*0 + 3*81*FLEN/8, x4, x1, x2)

inst_47698:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80f000000000003f; valaddr_reg:x3; val_offset:143094*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143094*0 + 3*82*FLEN/8, x4, x1, x2)

inst_47699:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80f000000000007f; valaddr_reg:x3; val_offset:143097*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143097*0 + 3*83*FLEN/8, x4, x1, x2)

inst_47700:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80f00000000000ff; valaddr_reg:x3; val_offset:143100*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143100*0 + 3*84*FLEN/8, x4, x1, x2)

inst_47701:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80f00000000001ff; valaddr_reg:x3; val_offset:143103*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143103*0 + 3*85*FLEN/8, x4, x1, x2)

inst_47702:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80f00000000003ff; valaddr_reg:x3; val_offset:143106*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143106*0 + 3*86*FLEN/8, x4, x1, x2)

inst_47703:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80f00000000007ff; valaddr_reg:x3; val_offset:143109*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143109*0 + 3*87*FLEN/8, x4, x1, x2)

inst_47704:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80f0000000000fff; valaddr_reg:x3; val_offset:143112*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143112*0 + 3*88*FLEN/8, x4, x1, x2)

inst_47705:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80f0000000001fff; valaddr_reg:x3; val_offset:143115*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143115*0 + 3*89*FLEN/8, x4, x1, x2)

inst_47706:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80f0000000003fff; valaddr_reg:x3; val_offset:143118*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143118*0 + 3*90*FLEN/8, x4, x1, x2)

inst_47707:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80f0000000007fff; valaddr_reg:x3; val_offset:143121*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143121*0 + 3*91*FLEN/8, x4, x1, x2)

inst_47708:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80f000000000ffff; valaddr_reg:x3; val_offset:143124*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143124*0 + 3*92*FLEN/8, x4, x1, x2)

inst_47709:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80f000000001ffff; valaddr_reg:x3; val_offset:143127*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143127*0 + 3*93*FLEN/8, x4, x1, x2)

inst_47710:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80f000000003ffff; valaddr_reg:x3; val_offset:143130*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143130*0 + 3*94*FLEN/8, x4, x1, x2)

inst_47711:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80f000000007ffff; valaddr_reg:x3; val_offset:143133*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143133*0 + 3*95*FLEN/8, x4, x1, x2)

inst_47712:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80f00000000fffff; valaddr_reg:x3; val_offset:143136*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143136*0 + 3*96*FLEN/8, x4, x1, x2)

inst_47713:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80f00000001fffff; valaddr_reg:x3; val_offset:143139*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143139*0 + 3*97*FLEN/8, x4, x1, x2)

inst_47714:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80f00000003fffff; valaddr_reg:x3; val_offset:143142*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143142*0 + 3*98*FLEN/8, x4, x1, x2)

inst_47715:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80f00000007fffff; valaddr_reg:x3; val_offset:143145*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143145*0 + 3*99*FLEN/8, x4, x1, x2)

inst_47716:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80f0000000ffffff; valaddr_reg:x3; val_offset:143148*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143148*0 + 3*100*FLEN/8, x4, x1, x2)

inst_47717:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80f0000001ffffff; valaddr_reg:x3; val_offset:143151*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143151*0 + 3*101*FLEN/8, x4, x1, x2)

inst_47718:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80f0000003ffffff; valaddr_reg:x3; val_offset:143154*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143154*0 + 3*102*FLEN/8, x4, x1, x2)

inst_47719:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80f0000007ffffff; valaddr_reg:x3; val_offset:143157*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143157*0 + 3*103*FLEN/8, x4, x1, x2)

inst_47720:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80f000000fffffff; valaddr_reg:x3; val_offset:143160*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143160*0 + 3*104*FLEN/8, x4, x1, x2)

inst_47721:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80f000001fffffff; valaddr_reg:x3; val_offset:143163*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143163*0 + 3*105*FLEN/8, x4, x1, x2)

inst_47722:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80f000003fffffff; valaddr_reg:x3; val_offset:143166*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143166*0 + 3*106*FLEN/8, x4, x1, x2)

inst_47723:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80f000007fffffff; valaddr_reg:x3; val_offset:143169*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143169*0 + 3*107*FLEN/8, x4, x1, x2)

inst_47724:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80f00000ffffffff; valaddr_reg:x3; val_offset:143172*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143172*0 + 3*108*FLEN/8, x4, x1, x2)

inst_47725:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80f00001ffffffff; valaddr_reg:x3; val_offset:143175*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143175*0 + 3*109*FLEN/8, x4, x1, x2)

inst_47726:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80f00003ffffffff; valaddr_reg:x3; val_offset:143178*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143178*0 + 3*110*FLEN/8, x4, x1, x2)

inst_47727:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80f00007ffffffff; valaddr_reg:x3; val_offset:143181*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143181*0 + 3*111*FLEN/8, x4, x1, x2)

inst_47728:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80f0000fffffffff; valaddr_reg:x3; val_offset:143184*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143184*0 + 3*112*FLEN/8, x4, x1, x2)

inst_47729:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80f0001fffffffff; valaddr_reg:x3; val_offset:143187*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143187*0 + 3*113*FLEN/8, x4, x1, x2)

inst_47730:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80f0003fffffffff; valaddr_reg:x3; val_offset:143190*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143190*0 + 3*114*FLEN/8, x4, x1, x2)

inst_47731:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80f0007fffffffff; valaddr_reg:x3; val_offset:143193*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143193*0 + 3*115*FLEN/8, x4, x1, x2)

inst_47732:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80f000ffffffffff; valaddr_reg:x3; val_offset:143196*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143196*0 + 3*116*FLEN/8, x4, x1, x2)

inst_47733:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80f001ffffffffff; valaddr_reg:x3; val_offset:143199*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143199*0 + 3*117*FLEN/8, x4, x1, x2)

inst_47734:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80f003ffffffffff; valaddr_reg:x3; val_offset:143202*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143202*0 + 3*118*FLEN/8, x4, x1, x2)

inst_47735:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80f007ffffffffff; valaddr_reg:x3; val_offset:143205*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143205*0 + 3*119*FLEN/8, x4, x1, x2)

inst_47736:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80f00fffffffffff; valaddr_reg:x3; val_offset:143208*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143208*0 + 3*120*FLEN/8, x4, x1, x2)

inst_47737:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80f01fffffffffff; valaddr_reg:x3; val_offset:143211*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143211*0 + 3*121*FLEN/8, x4, x1, x2)

inst_47738:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80f03fffffffffff; valaddr_reg:x3; val_offset:143214*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143214*0 + 3*122*FLEN/8, x4, x1, x2)

inst_47739:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80f07fffffffffff; valaddr_reg:x3; val_offset:143217*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143217*0 + 3*123*FLEN/8, x4, x1, x2)

inst_47740:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80f0ffffffffffff; valaddr_reg:x3; val_offset:143220*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143220*0 + 3*124*FLEN/8, x4, x1, x2)

inst_47741:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80f1ffffffffffff; valaddr_reg:x3; val_offset:143223*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143223*0 + 3*125*FLEN/8, x4, x1, x2)

inst_47742:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80f3ffffffffffff; valaddr_reg:x3; val_offset:143226*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143226*0 + 3*126*FLEN/8, x4, x1, x2)

inst_47743:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80f7ffffffffffff; valaddr_reg:x3; val_offset:143229*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143229*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_47744:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80f8000000000000; valaddr_reg:x3; val_offset:143232*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143232*0 + 3*128*FLEN/8, x4, x1, x2)

inst_47745:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80fc000000000000; valaddr_reg:x3; val_offset:143235*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143235*0 + 3*129*FLEN/8, x4, x1, x2)

inst_47746:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80fe000000000000; valaddr_reg:x3; val_offset:143238*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143238*0 + 3*130*FLEN/8, x4, x1, x2)

inst_47747:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80ff000000000000; valaddr_reg:x3; val_offset:143241*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143241*0 + 3*131*FLEN/8, x4, x1, x2)

inst_47748:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80ff800000000000; valaddr_reg:x3; val_offset:143244*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143244*0 + 3*132*FLEN/8, x4, x1, x2)

inst_47749:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80ffc00000000000; valaddr_reg:x3; val_offset:143247*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143247*0 + 3*133*FLEN/8, x4, x1, x2)

inst_47750:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80ffe00000000000; valaddr_reg:x3; val_offset:143250*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143250*0 + 3*134*FLEN/8, x4, x1, x2)

inst_47751:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80fff00000000000; valaddr_reg:x3; val_offset:143253*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143253*0 + 3*135*FLEN/8, x4, x1, x2)

inst_47752:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80fff80000000000; valaddr_reg:x3; val_offset:143256*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143256*0 + 3*136*FLEN/8, x4, x1, x2)

inst_47753:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80fffc0000000000; valaddr_reg:x3; val_offset:143259*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143259*0 + 3*137*FLEN/8, x4, x1, x2)

inst_47754:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80fffe0000000000; valaddr_reg:x3; val_offset:143262*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143262*0 + 3*138*FLEN/8, x4, x1, x2)

inst_47755:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80ffff0000000000; valaddr_reg:x3; val_offset:143265*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143265*0 + 3*139*FLEN/8, x4, x1, x2)

inst_47756:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80ffff8000000000; valaddr_reg:x3; val_offset:143268*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143268*0 + 3*140*FLEN/8, x4, x1, x2)

inst_47757:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80ffffc000000000; valaddr_reg:x3; val_offset:143271*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143271*0 + 3*141*FLEN/8, x4, x1, x2)

inst_47758:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80ffffe000000000; valaddr_reg:x3; val_offset:143274*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143274*0 + 3*142*FLEN/8, x4, x1, x2)

inst_47759:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80fffff000000000; valaddr_reg:x3; val_offset:143277*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143277*0 + 3*143*FLEN/8, x4, x1, x2)

inst_47760:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80fffff800000000; valaddr_reg:x3; val_offset:143280*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143280*0 + 3*144*FLEN/8, x4, x1, x2)

inst_47761:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80fffffc00000000; valaddr_reg:x3; val_offset:143283*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143283*0 + 3*145*FLEN/8, x4, x1, x2)

inst_47762:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80fffffe00000000; valaddr_reg:x3; val_offset:143286*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143286*0 + 3*146*FLEN/8, x4, x1, x2)

inst_47763:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80ffffff00000000; valaddr_reg:x3; val_offset:143289*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143289*0 + 3*147*FLEN/8, x4, x1, x2)

inst_47764:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80ffffff80000000; valaddr_reg:x3; val_offset:143292*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143292*0 + 3*148*FLEN/8, x4, x1, x2)

inst_47765:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80ffffffc0000000; valaddr_reg:x3; val_offset:143295*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143295*0 + 3*149*FLEN/8, x4, x1, x2)

inst_47766:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80ffffffe0000000; valaddr_reg:x3; val_offset:143298*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143298*0 + 3*150*FLEN/8, x4, x1, x2)

inst_47767:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80fffffff0000000; valaddr_reg:x3; val_offset:143301*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143301*0 + 3*151*FLEN/8, x4, x1, x2)

inst_47768:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80fffffff8000000; valaddr_reg:x3; val_offset:143304*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143304*0 + 3*152*FLEN/8, x4, x1, x2)

inst_47769:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80fffffffc000000; valaddr_reg:x3; val_offset:143307*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143307*0 + 3*153*FLEN/8, x4, x1, x2)

inst_47770:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80fffffffe000000; valaddr_reg:x3; val_offset:143310*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143310*0 + 3*154*FLEN/8, x4, x1, x2)

inst_47771:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80ffffffff000000; valaddr_reg:x3; val_offset:143313*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143313*0 + 3*155*FLEN/8, x4, x1, x2)

inst_47772:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80ffffffff800000; valaddr_reg:x3; val_offset:143316*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143316*0 + 3*156*FLEN/8, x4, x1, x2)

inst_47773:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80ffffffffc00000; valaddr_reg:x3; val_offset:143319*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143319*0 + 3*157*FLEN/8, x4, x1, x2)

inst_47774:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80ffffffffe00000; valaddr_reg:x3; val_offset:143322*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143322*0 + 3*158*FLEN/8, x4, x1, x2)

inst_47775:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80fffffffff00000; valaddr_reg:x3; val_offset:143325*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143325*0 + 3*159*FLEN/8, x4, x1, x2)

inst_47776:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80fffffffff80000; valaddr_reg:x3; val_offset:143328*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143328*0 + 3*160*FLEN/8, x4, x1, x2)

inst_47777:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80fffffffffc0000; valaddr_reg:x3; val_offset:143331*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143331*0 + 3*161*FLEN/8, x4, x1, x2)

inst_47778:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80fffffffffe0000; valaddr_reg:x3; val_offset:143334*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143334*0 + 3*162*FLEN/8, x4, x1, x2)

inst_47779:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80ffffffffff0000; valaddr_reg:x3; val_offset:143337*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143337*0 + 3*163*FLEN/8, x4, x1, x2)

inst_47780:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80ffffffffff8000; valaddr_reg:x3; val_offset:143340*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143340*0 + 3*164*FLEN/8, x4, x1, x2)

inst_47781:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80ffffffffffc000; valaddr_reg:x3; val_offset:143343*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143343*0 + 3*165*FLEN/8, x4, x1, x2)

inst_47782:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80ffffffffffe000; valaddr_reg:x3; val_offset:143346*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143346*0 + 3*166*FLEN/8, x4, x1, x2)

inst_47783:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80fffffffffff000; valaddr_reg:x3; val_offset:143349*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143349*0 + 3*167*FLEN/8, x4, x1, x2)

inst_47784:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80fffffffffff800; valaddr_reg:x3; val_offset:143352*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143352*0 + 3*168*FLEN/8, x4, x1, x2)

inst_47785:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80fffffffffffc00; valaddr_reg:x3; val_offset:143355*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143355*0 + 3*169*FLEN/8, x4, x1, x2)

inst_47786:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80fffffffffffe00; valaddr_reg:x3; val_offset:143358*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143358*0 + 3*170*FLEN/8, x4, x1, x2)

inst_47787:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80ffffffffffff00; valaddr_reg:x3; val_offset:143361*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143361*0 + 3*171*FLEN/8, x4, x1, x2)

inst_47788:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80ffffffffffff80; valaddr_reg:x3; val_offset:143364*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143364*0 + 3*172*FLEN/8, x4, x1, x2)

inst_47789:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80ffffffffffffc0; valaddr_reg:x3; val_offset:143367*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143367*0 + 3*173*FLEN/8, x4, x1, x2)

inst_47790:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80ffffffffffffe0; valaddr_reg:x3; val_offset:143370*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143370*0 + 3*174*FLEN/8, x4, x1, x2)

inst_47791:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80fffffffffffff0; valaddr_reg:x3; val_offset:143373*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143373*0 + 3*175*FLEN/8, x4, x1, x2)

inst_47792:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80fffffffffffff8; valaddr_reg:x3; val_offset:143376*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143376*0 + 3*176*FLEN/8, x4, x1, x2)

inst_47793:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80fffffffffffffc; valaddr_reg:x3; val_offset:143379*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143379*0 + 3*177*FLEN/8, x4, x1, x2)

inst_47794:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80fffffffffffffe; valaddr_reg:x3; val_offset:143382*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143382*0 + 3*178*FLEN/8, x4, x1, x2)

inst_47795:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7905f38557a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7905f38557a7; op2val:0x8000;
op3val:0x80ffffffffffffff; valaddr_reg:x3; val_offset:143385*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143385*0 + 3*179*FLEN/8, x4, x1, x2)

inst_47796:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:143388*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143388*0 + 3*180*FLEN/8, x4, x1, x2)

inst_47797:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:143391*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143391*0 + 3*181*FLEN/8, x4, x1, x2)

inst_47798:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:143394*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143394*0 + 3*182*FLEN/8, x4, x1, x2)

inst_47799:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:143397*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143397*0 + 3*183*FLEN/8, x4, x1, x2)

inst_47800:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:143400*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143400*0 + 3*184*FLEN/8, x4, x1, x2)

inst_47801:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:143403*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143403*0 + 3*185*FLEN/8, x4, x1, x2)

inst_47802:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:143406*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143406*0 + 3*186*FLEN/8, x4, x1, x2)

inst_47803:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:143409*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143409*0 + 3*187*FLEN/8, x4, x1, x2)

inst_47804:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:143412*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143412*0 + 3*188*FLEN/8, x4, x1, x2)

inst_47805:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:143415*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143415*0 + 3*189*FLEN/8, x4, x1, x2)

inst_47806:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:143418*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143418*0 + 3*190*FLEN/8, x4, x1, x2)

inst_47807:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:143421*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143421*0 + 3*191*FLEN/8, x4, x1, x2)

inst_47808:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:143424*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143424*0 + 3*192*FLEN/8, x4, x1, x2)

inst_47809:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:143427*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143427*0 + 3*193*FLEN/8, x4, x1, x2)

inst_47810:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:143430*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143430*0 + 3*194*FLEN/8, x4, x1, x2)

inst_47811:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:143433*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143433*0 + 3*195*FLEN/8, x4, x1, x2)

inst_47812:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:143436*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143436*0 + 3*196*FLEN/8, x4, x1, x2)

inst_47813:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:143439*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143439*0 + 3*197*FLEN/8, x4, x1, x2)

inst_47814:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:143442*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143442*0 + 3*198*FLEN/8, x4, x1, x2)

inst_47815:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:143445*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143445*0 + 3*199*FLEN/8, x4, x1, x2)

inst_47816:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:143448*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143448*0 + 3*200*FLEN/8, x4, x1, x2)

inst_47817:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:143451*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143451*0 + 3*201*FLEN/8, x4, x1, x2)

inst_47818:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x8400000000000000; valaddr_reg:x3; val_offset:143454*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143454*0 + 3*202*FLEN/8, x4, x1, x2)

inst_47819:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x8400000000000001; valaddr_reg:x3; val_offset:143457*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143457*0 + 3*203*FLEN/8, x4, x1, x2)

inst_47820:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x8400000000000003; valaddr_reg:x3; val_offset:143460*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143460*0 + 3*204*FLEN/8, x4, x1, x2)

inst_47821:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x8400000000000007; valaddr_reg:x3; val_offset:143463*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143463*0 + 3*205*FLEN/8, x4, x1, x2)

inst_47822:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840000000000000f; valaddr_reg:x3; val_offset:143466*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143466*0 + 3*206*FLEN/8, x4, x1, x2)

inst_47823:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840000000000001f; valaddr_reg:x3; val_offset:143469*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143469*0 + 3*207*FLEN/8, x4, x1, x2)

inst_47824:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840000000000003f; valaddr_reg:x3; val_offset:143472*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143472*0 + 3*208*FLEN/8, x4, x1, x2)

inst_47825:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840000000000007f; valaddr_reg:x3; val_offset:143475*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143475*0 + 3*209*FLEN/8, x4, x1, x2)

inst_47826:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x84000000000000ff; valaddr_reg:x3; val_offset:143478*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143478*0 + 3*210*FLEN/8, x4, x1, x2)

inst_47827:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x84000000000001ff; valaddr_reg:x3; val_offset:143481*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143481*0 + 3*211*FLEN/8, x4, x1, x2)

inst_47828:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x84000000000003ff; valaddr_reg:x3; val_offset:143484*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143484*0 + 3*212*FLEN/8, x4, x1, x2)

inst_47829:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x84000000000007ff; valaddr_reg:x3; val_offset:143487*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143487*0 + 3*213*FLEN/8, x4, x1, x2)

inst_47830:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x8400000000000fff; valaddr_reg:x3; val_offset:143490*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143490*0 + 3*214*FLEN/8, x4, x1, x2)

inst_47831:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x8400000000001fff; valaddr_reg:x3; val_offset:143493*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143493*0 + 3*215*FLEN/8, x4, x1, x2)

inst_47832:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x8400000000003fff; valaddr_reg:x3; val_offset:143496*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143496*0 + 3*216*FLEN/8, x4, x1, x2)

inst_47833:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x8400000000007fff; valaddr_reg:x3; val_offset:143499*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143499*0 + 3*217*FLEN/8, x4, x1, x2)

inst_47834:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840000000000ffff; valaddr_reg:x3; val_offset:143502*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143502*0 + 3*218*FLEN/8, x4, x1, x2)

inst_47835:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840000000001ffff; valaddr_reg:x3; val_offset:143505*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143505*0 + 3*219*FLEN/8, x4, x1, x2)

inst_47836:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840000000003ffff; valaddr_reg:x3; val_offset:143508*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143508*0 + 3*220*FLEN/8, x4, x1, x2)

inst_47837:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840000000007ffff; valaddr_reg:x3; val_offset:143511*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143511*0 + 3*221*FLEN/8, x4, x1, x2)

inst_47838:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x84000000000fffff; valaddr_reg:x3; val_offset:143514*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143514*0 + 3*222*FLEN/8, x4, x1, x2)

inst_47839:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x84000000001fffff; valaddr_reg:x3; val_offset:143517*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143517*0 + 3*223*FLEN/8, x4, x1, x2)

inst_47840:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x84000000003fffff; valaddr_reg:x3; val_offset:143520*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143520*0 + 3*224*FLEN/8, x4, x1, x2)

inst_47841:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x84000000007fffff; valaddr_reg:x3; val_offset:143523*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143523*0 + 3*225*FLEN/8, x4, x1, x2)

inst_47842:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x8400000000ffffff; valaddr_reg:x3; val_offset:143526*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143526*0 + 3*226*FLEN/8, x4, x1, x2)

inst_47843:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x8400000001ffffff; valaddr_reg:x3; val_offset:143529*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143529*0 + 3*227*FLEN/8, x4, x1, x2)

inst_47844:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x8400000003ffffff; valaddr_reg:x3; val_offset:143532*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143532*0 + 3*228*FLEN/8, x4, x1, x2)

inst_47845:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x8400000007ffffff; valaddr_reg:x3; val_offset:143535*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143535*0 + 3*229*FLEN/8, x4, x1, x2)

inst_47846:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840000000fffffff; valaddr_reg:x3; val_offset:143538*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143538*0 + 3*230*FLEN/8, x4, x1, x2)

inst_47847:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840000001fffffff; valaddr_reg:x3; val_offset:143541*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143541*0 + 3*231*FLEN/8, x4, x1, x2)

inst_47848:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840000003fffffff; valaddr_reg:x3; val_offset:143544*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143544*0 + 3*232*FLEN/8, x4, x1, x2)

inst_47849:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840000007fffffff; valaddr_reg:x3; val_offset:143547*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143547*0 + 3*233*FLEN/8, x4, x1, x2)

inst_47850:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x84000000ffffffff; valaddr_reg:x3; val_offset:143550*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143550*0 + 3*234*FLEN/8, x4, x1, x2)

inst_47851:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x84000001ffffffff; valaddr_reg:x3; val_offset:143553*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143553*0 + 3*235*FLEN/8, x4, x1, x2)

inst_47852:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x84000003ffffffff; valaddr_reg:x3; val_offset:143556*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143556*0 + 3*236*FLEN/8, x4, x1, x2)

inst_47853:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x84000007ffffffff; valaddr_reg:x3; val_offset:143559*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143559*0 + 3*237*FLEN/8, x4, x1, x2)

inst_47854:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x8400000fffffffff; valaddr_reg:x3; val_offset:143562*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143562*0 + 3*238*FLEN/8, x4, x1, x2)

inst_47855:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x8400001fffffffff; valaddr_reg:x3; val_offset:143565*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143565*0 + 3*239*FLEN/8, x4, x1, x2)

inst_47856:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x8400003fffffffff; valaddr_reg:x3; val_offset:143568*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143568*0 + 3*240*FLEN/8, x4, x1, x2)

inst_47857:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x8400007fffffffff; valaddr_reg:x3; val_offset:143571*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143571*0 + 3*241*FLEN/8, x4, x1, x2)

inst_47858:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840000ffffffffff; valaddr_reg:x3; val_offset:143574*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143574*0 + 3*242*FLEN/8, x4, x1, x2)

inst_47859:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840001ffffffffff; valaddr_reg:x3; val_offset:143577*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143577*0 + 3*243*FLEN/8, x4, x1, x2)

inst_47860:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840003ffffffffff; valaddr_reg:x3; val_offset:143580*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143580*0 + 3*244*FLEN/8, x4, x1, x2)

inst_47861:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840007ffffffffff; valaddr_reg:x3; val_offset:143583*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143583*0 + 3*245*FLEN/8, x4, x1, x2)

inst_47862:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x84000fffffffffff; valaddr_reg:x3; val_offset:143586*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143586*0 + 3*246*FLEN/8, x4, x1, x2)

inst_47863:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x84001fffffffffff; valaddr_reg:x3; val_offset:143589*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143589*0 + 3*247*FLEN/8, x4, x1, x2)

inst_47864:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x84003fffffffffff; valaddr_reg:x3; val_offset:143592*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143592*0 + 3*248*FLEN/8, x4, x1, x2)

inst_47865:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x84007fffffffffff; valaddr_reg:x3; val_offset:143595*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143595*0 + 3*249*FLEN/8, x4, x1, x2)

inst_47866:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x8400ffffffffffff; valaddr_reg:x3; val_offset:143598*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143598*0 + 3*250*FLEN/8, x4, x1, x2)

inst_47867:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x8401ffffffffffff; valaddr_reg:x3; val_offset:143601*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143601*0 + 3*251*FLEN/8, x4, x1, x2)

inst_47868:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x8403ffffffffffff; valaddr_reg:x3; val_offset:143604*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143604*0 + 3*252*FLEN/8, x4, x1, x2)

inst_47869:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x8407ffffffffffff; valaddr_reg:x3; val_offset:143607*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143607*0 + 3*253*FLEN/8, x4, x1, x2)

inst_47870:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x8408000000000000; valaddr_reg:x3; val_offset:143610*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143610*0 + 3*254*FLEN/8, x4, x1, x2)

inst_47871:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840c000000000000; valaddr_reg:x3; val_offset:143613*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143613*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_47872:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840e000000000000; valaddr_reg:x3; val_offset:143616*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143616*0 + 3*256*FLEN/8, x4, x1, x2)

inst_47873:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840f000000000000; valaddr_reg:x3; val_offset:143619*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143619*0 + 3*257*FLEN/8, x4, x1, x2)

inst_47874:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840f800000000000; valaddr_reg:x3; val_offset:143622*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143622*0 + 3*258*FLEN/8, x4, x1, x2)

inst_47875:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840fc00000000000; valaddr_reg:x3; val_offset:143625*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143625*0 + 3*259*FLEN/8, x4, x1, x2)

inst_47876:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840fe00000000000; valaddr_reg:x3; val_offset:143628*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143628*0 + 3*260*FLEN/8, x4, x1, x2)

inst_47877:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840ff00000000000; valaddr_reg:x3; val_offset:143631*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143631*0 + 3*261*FLEN/8, x4, x1, x2)

inst_47878:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840ff80000000000; valaddr_reg:x3; val_offset:143634*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143634*0 + 3*262*FLEN/8, x4, x1, x2)

inst_47879:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840ffc0000000000; valaddr_reg:x3; val_offset:143637*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143637*0 + 3*263*FLEN/8, x4, x1, x2)

inst_47880:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840ffe0000000000; valaddr_reg:x3; val_offset:143640*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143640*0 + 3*264*FLEN/8, x4, x1, x2)

inst_47881:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840fff0000000000; valaddr_reg:x3; val_offset:143643*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143643*0 + 3*265*FLEN/8, x4, x1, x2)

inst_47882:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840fff8000000000; valaddr_reg:x3; val_offset:143646*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143646*0 + 3*266*FLEN/8, x4, x1, x2)

inst_47883:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840fffc000000000; valaddr_reg:x3; val_offset:143649*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143649*0 + 3*267*FLEN/8, x4, x1, x2)

inst_47884:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840fffe000000000; valaddr_reg:x3; val_offset:143652*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143652*0 + 3*268*FLEN/8, x4, x1, x2)

inst_47885:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840ffff000000000; valaddr_reg:x3; val_offset:143655*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143655*0 + 3*269*FLEN/8, x4, x1, x2)

inst_47886:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840ffff800000000; valaddr_reg:x3; val_offset:143658*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143658*0 + 3*270*FLEN/8, x4, x1, x2)

inst_47887:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840ffffc00000000; valaddr_reg:x3; val_offset:143661*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143661*0 + 3*271*FLEN/8, x4, x1, x2)

inst_47888:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840ffffe00000000; valaddr_reg:x3; val_offset:143664*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143664*0 + 3*272*FLEN/8, x4, x1, x2)

inst_47889:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840fffff00000000; valaddr_reg:x3; val_offset:143667*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143667*0 + 3*273*FLEN/8, x4, x1, x2)

inst_47890:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840fffff80000000; valaddr_reg:x3; val_offset:143670*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143670*0 + 3*274*FLEN/8, x4, x1, x2)

inst_47891:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840fffffc0000000; valaddr_reg:x3; val_offset:143673*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143673*0 + 3*275*FLEN/8, x4, x1, x2)

inst_47892:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840fffffe0000000; valaddr_reg:x3; val_offset:143676*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143676*0 + 3*276*FLEN/8, x4, x1, x2)

inst_47893:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840ffffff0000000; valaddr_reg:x3; val_offset:143679*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143679*0 + 3*277*FLEN/8, x4, x1, x2)

inst_47894:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840ffffff8000000; valaddr_reg:x3; val_offset:143682*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143682*0 + 3*278*FLEN/8, x4, x1, x2)

inst_47895:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840ffffffc000000; valaddr_reg:x3; val_offset:143685*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143685*0 + 3*279*FLEN/8, x4, x1, x2)

inst_47896:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840ffffffe000000; valaddr_reg:x3; val_offset:143688*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143688*0 + 3*280*FLEN/8, x4, x1, x2)

inst_47897:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840fffffff000000; valaddr_reg:x3; val_offset:143691*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143691*0 + 3*281*FLEN/8, x4, x1, x2)

inst_47898:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840fffffff800000; valaddr_reg:x3; val_offset:143694*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143694*0 + 3*282*FLEN/8, x4, x1, x2)

inst_47899:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840fffffffc00000; valaddr_reg:x3; val_offset:143697*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143697*0 + 3*283*FLEN/8, x4, x1, x2)

inst_47900:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840fffffffe00000; valaddr_reg:x3; val_offset:143700*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143700*0 + 3*284*FLEN/8, x4, x1, x2)

inst_47901:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840ffffffff00000; valaddr_reg:x3; val_offset:143703*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143703*0 + 3*285*FLEN/8, x4, x1, x2)

inst_47902:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840ffffffff80000; valaddr_reg:x3; val_offset:143706*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143706*0 + 3*286*FLEN/8, x4, x1, x2)

inst_47903:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840ffffffffc0000; valaddr_reg:x3; val_offset:143709*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143709*0 + 3*287*FLEN/8, x4, x1, x2)

inst_47904:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840ffffffffe0000; valaddr_reg:x3; val_offset:143712*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143712*0 + 3*288*FLEN/8, x4, x1, x2)

inst_47905:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840fffffffff0000; valaddr_reg:x3; val_offset:143715*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143715*0 + 3*289*FLEN/8, x4, x1, x2)

inst_47906:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840fffffffff8000; valaddr_reg:x3; val_offset:143718*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143718*0 + 3*290*FLEN/8, x4, x1, x2)

inst_47907:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840fffffffffc000; valaddr_reg:x3; val_offset:143721*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143721*0 + 3*291*FLEN/8, x4, x1, x2)

inst_47908:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840fffffffffe000; valaddr_reg:x3; val_offset:143724*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143724*0 + 3*292*FLEN/8, x4, x1, x2)

inst_47909:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840ffffffffff000; valaddr_reg:x3; val_offset:143727*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143727*0 + 3*293*FLEN/8, x4, x1, x2)

inst_47910:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840ffffffffff800; valaddr_reg:x3; val_offset:143730*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143730*0 + 3*294*FLEN/8, x4, x1, x2)

inst_47911:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840ffffffffffc00; valaddr_reg:x3; val_offset:143733*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143733*0 + 3*295*FLEN/8, x4, x1, x2)

inst_47912:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840ffffffffffe00; valaddr_reg:x3; val_offset:143736*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143736*0 + 3*296*FLEN/8, x4, x1, x2)

inst_47913:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840fffffffffff00; valaddr_reg:x3; val_offset:143739*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143739*0 + 3*297*FLEN/8, x4, x1, x2)

inst_47914:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840fffffffffff80; valaddr_reg:x3; val_offset:143742*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143742*0 + 3*298*FLEN/8, x4, x1, x2)

inst_47915:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840fffffffffffc0; valaddr_reg:x3; val_offset:143745*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143745*0 + 3*299*FLEN/8, x4, x1, x2)

inst_47916:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840fffffffffffe0; valaddr_reg:x3; val_offset:143748*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143748*0 + 3*300*FLEN/8, x4, x1, x2)

inst_47917:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840ffffffffffff0; valaddr_reg:x3; val_offset:143751*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143751*0 + 3*301*FLEN/8, x4, x1, x2)

inst_47918:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840ffffffffffff8; valaddr_reg:x3; val_offset:143754*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143754*0 + 3*302*FLEN/8, x4, x1, x2)

inst_47919:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840ffffffffffffc; valaddr_reg:x3; val_offset:143757*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143757*0 + 3*303*FLEN/8, x4, x1, x2)

inst_47920:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840ffffffffffffe; valaddr_reg:x3; val_offset:143760*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143760*0 + 3*304*FLEN/8, x4, x1, x2)

inst_47921:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7f4d4dbb1379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7f4d4dbb1379; op2val:0x8000;
op3val:0x840fffffffffffff; valaddr_reg:x3; val_offset:143763*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143763*0 + 3*305*FLEN/8, x4, x1, x2)

inst_47922:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:143766*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143766*0 + 3*306*FLEN/8, x4, x1, x2)

inst_47923:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:143769*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143769*0 + 3*307*FLEN/8, x4, x1, x2)

inst_47924:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:143772*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143772*0 + 3*308*FLEN/8, x4, x1, x2)

inst_47925:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:143775*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143775*0 + 3*309*FLEN/8, x4, x1, x2)

inst_47926:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:143778*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143778*0 + 3*310*FLEN/8, x4, x1, x2)

inst_47927:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:143781*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143781*0 + 3*311*FLEN/8, x4, x1, x2)

inst_47928:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:143784*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143784*0 + 3*312*FLEN/8, x4, x1, x2)

inst_47929:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:143787*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143787*0 + 3*313*FLEN/8, x4, x1, x2)

inst_47930:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:143790*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143790*0 + 3*314*FLEN/8, x4, x1, x2)

inst_47931:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:143793*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143793*0 + 3*315*FLEN/8, x4, x1, x2)

inst_47932:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:143796*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143796*0 + 3*316*FLEN/8, x4, x1, x2)

inst_47933:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:143799*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143799*0 + 3*317*FLEN/8, x4, x1, x2)

inst_47934:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:143802*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143802*0 + 3*318*FLEN/8, x4, x1, x2)

inst_47935:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:143805*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143805*0 + 3*319*FLEN/8, x4, x1, x2)

inst_47936:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:143808*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143808*0 + 3*320*FLEN/8, x4, x1, x2)

inst_47937:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:143811*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143811*0 + 3*321*FLEN/8, x4, x1, x2)

inst_47938:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:143814*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143814*0 + 3*322*FLEN/8, x4, x1, x2)

inst_47939:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:143817*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143817*0 + 3*323*FLEN/8, x4, x1, x2)

inst_47940:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:143820*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143820*0 + 3*324*FLEN/8, x4, x1, x2)

inst_47941:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:143823*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143823*0 + 3*325*FLEN/8, x4, x1, x2)

inst_47942:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:143826*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143826*0 + 3*326*FLEN/8, x4, x1, x2)

inst_47943:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:143829*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143829*0 + 3*327*FLEN/8, x4, x1, x2)

inst_47944:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80a0000000000000; valaddr_reg:x3; val_offset:143832*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143832*0 + 3*328*FLEN/8, x4, x1, x2)

inst_47945:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80a0000000000001; valaddr_reg:x3; val_offset:143835*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143835*0 + 3*329*FLEN/8, x4, x1, x2)

inst_47946:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80a0000000000003; valaddr_reg:x3; val_offset:143838*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143838*0 + 3*330*FLEN/8, x4, x1, x2)

inst_47947:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80a0000000000007; valaddr_reg:x3; val_offset:143841*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143841*0 + 3*331*FLEN/8, x4, x1, x2)

inst_47948:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80a000000000000f; valaddr_reg:x3; val_offset:143844*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143844*0 + 3*332*FLEN/8, x4, x1, x2)

inst_47949:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80a000000000001f; valaddr_reg:x3; val_offset:143847*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143847*0 + 3*333*FLEN/8, x4, x1, x2)

inst_47950:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80a000000000003f; valaddr_reg:x3; val_offset:143850*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143850*0 + 3*334*FLEN/8, x4, x1, x2)

inst_47951:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80a000000000007f; valaddr_reg:x3; val_offset:143853*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143853*0 + 3*335*FLEN/8, x4, x1, x2)

inst_47952:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80a00000000000ff; valaddr_reg:x3; val_offset:143856*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143856*0 + 3*336*FLEN/8, x4, x1, x2)

inst_47953:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80a00000000001ff; valaddr_reg:x3; val_offset:143859*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143859*0 + 3*337*FLEN/8, x4, x1, x2)

inst_47954:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80a00000000003ff; valaddr_reg:x3; val_offset:143862*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143862*0 + 3*338*FLEN/8, x4, x1, x2)

inst_47955:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80a00000000007ff; valaddr_reg:x3; val_offset:143865*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143865*0 + 3*339*FLEN/8, x4, x1, x2)

inst_47956:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80a0000000000fff; valaddr_reg:x3; val_offset:143868*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143868*0 + 3*340*FLEN/8, x4, x1, x2)

inst_47957:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80a0000000001fff; valaddr_reg:x3; val_offset:143871*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143871*0 + 3*341*FLEN/8, x4, x1, x2)

inst_47958:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80a0000000003fff; valaddr_reg:x3; val_offset:143874*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143874*0 + 3*342*FLEN/8, x4, x1, x2)

inst_47959:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80a0000000007fff; valaddr_reg:x3; val_offset:143877*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143877*0 + 3*343*FLEN/8, x4, x1, x2)

inst_47960:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80a000000000ffff; valaddr_reg:x3; val_offset:143880*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143880*0 + 3*344*FLEN/8, x4, x1, x2)

inst_47961:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80a000000001ffff; valaddr_reg:x3; val_offset:143883*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143883*0 + 3*345*FLEN/8, x4, x1, x2)

inst_47962:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80a000000003ffff; valaddr_reg:x3; val_offset:143886*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143886*0 + 3*346*FLEN/8, x4, x1, x2)

inst_47963:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80a000000007ffff; valaddr_reg:x3; val_offset:143889*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143889*0 + 3*347*FLEN/8, x4, x1, x2)

inst_47964:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80a00000000fffff; valaddr_reg:x3; val_offset:143892*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143892*0 + 3*348*FLEN/8, x4, x1, x2)

inst_47965:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80a00000001fffff; valaddr_reg:x3; val_offset:143895*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143895*0 + 3*349*FLEN/8, x4, x1, x2)

inst_47966:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80a00000003fffff; valaddr_reg:x3; val_offset:143898*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143898*0 + 3*350*FLEN/8, x4, x1, x2)

inst_47967:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80a00000007fffff; valaddr_reg:x3; val_offset:143901*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143901*0 + 3*351*FLEN/8, x4, x1, x2)

inst_47968:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80a0000000ffffff; valaddr_reg:x3; val_offset:143904*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143904*0 + 3*352*FLEN/8, x4, x1, x2)

inst_47969:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80a0000001ffffff; valaddr_reg:x3; val_offset:143907*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143907*0 + 3*353*FLEN/8, x4, x1, x2)

inst_47970:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80a0000003ffffff; valaddr_reg:x3; val_offset:143910*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143910*0 + 3*354*FLEN/8, x4, x1, x2)

inst_47971:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80a0000007ffffff; valaddr_reg:x3; val_offset:143913*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143913*0 + 3*355*FLEN/8, x4, x1, x2)

inst_47972:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80a000000fffffff; valaddr_reg:x3; val_offset:143916*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143916*0 + 3*356*FLEN/8, x4, x1, x2)

inst_47973:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80a000001fffffff; valaddr_reg:x3; val_offset:143919*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143919*0 + 3*357*FLEN/8, x4, x1, x2)

inst_47974:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80a000003fffffff; valaddr_reg:x3; val_offset:143922*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143922*0 + 3*358*FLEN/8, x4, x1, x2)

inst_47975:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80a000007fffffff; valaddr_reg:x3; val_offset:143925*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143925*0 + 3*359*FLEN/8, x4, x1, x2)

inst_47976:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80a00000ffffffff; valaddr_reg:x3; val_offset:143928*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143928*0 + 3*360*FLEN/8, x4, x1, x2)

inst_47977:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80a00001ffffffff; valaddr_reg:x3; val_offset:143931*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143931*0 + 3*361*FLEN/8, x4, x1, x2)

inst_47978:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80a00003ffffffff; valaddr_reg:x3; val_offset:143934*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143934*0 + 3*362*FLEN/8, x4, x1, x2)

inst_47979:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80a00007ffffffff; valaddr_reg:x3; val_offset:143937*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143937*0 + 3*363*FLEN/8, x4, x1, x2)

inst_47980:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80a0000fffffffff; valaddr_reg:x3; val_offset:143940*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143940*0 + 3*364*FLEN/8, x4, x1, x2)

inst_47981:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80a0001fffffffff; valaddr_reg:x3; val_offset:143943*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143943*0 + 3*365*FLEN/8, x4, x1, x2)

inst_47982:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80a0003fffffffff; valaddr_reg:x3; val_offset:143946*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143946*0 + 3*366*FLEN/8, x4, x1, x2)

inst_47983:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80a0007fffffffff; valaddr_reg:x3; val_offset:143949*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143949*0 + 3*367*FLEN/8, x4, x1, x2)

inst_47984:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80a000ffffffffff; valaddr_reg:x3; val_offset:143952*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143952*0 + 3*368*FLEN/8, x4, x1, x2)

inst_47985:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80a001ffffffffff; valaddr_reg:x3; val_offset:143955*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143955*0 + 3*369*FLEN/8, x4, x1, x2)

inst_47986:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80a003ffffffffff; valaddr_reg:x3; val_offset:143958*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143958*0 + 3*370*FLEN/8, x4, x1, x2)

inst_47987:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80a007ffffffffff; valaddr_reg:x3; val_offset:143961*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143961*0 + 3*371*FLEN/8, x4, x1, x2)

inst_47988:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80a00fffffffffff; valaddr_reg:x3; val_offset:143964*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143964*0 + 3*372*FLEN/8, x4, x1, x2)

inst_47989:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80a01fffffffffff; valaddr_reg:x3; val_offset:143967*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143967*0 + 3*373*FLEN/8, x4, x1, x2)

inst_47990:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80a03fffffffffff; valaddr_reg:x3; val_offset:143970*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143970*0 + 3*374*FLEN/8, x4, x1, x2)

inst_47991:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80a07fffffffffff; valaddr_reg:x3; val_offset:143973*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143973*0 + 3*375*FLEN/8, x4, x1, x2)

inst_47992:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80a0ffffffffffff; valaddr_reg:x3; val_offset:143976*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143976*0 + 3*376*FLEN/8, x4, x1, x2)

inst_47993:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80a1ffffffffffff; valaddr_reg:x3; val_offset:143979*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143979*0 + 3*377*FLEN/8, x4, x1, x2)

inst_47994:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80a3ffffffffffff; valaddr_reg:x3; val_offset:143982*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143982*0 + 3*378*FLEN/8, x4, x1, x2)

inst_47995:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80a7ffffffffffff; valaddr_reg:x3; val_offset:143985*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143985*0 + 3*379*FLEN/8, x4, x1, x2)

inst_47996:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80a8000000000000; valaddr_reg:x3; val_offset:143988*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143988*0 + 3*380*FLEN/8, x4, x1, x2)

inst_47997:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80ac000000000000; valaddr_reg:x3; val_offset:143991*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143991*0 + 3*381*FLEN/8, x4, x1, x2)

inst_47998:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80ae000000000000; valaddr_reg:x3; val_offset:143994*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143994*0 + 3*382*FLEN/8, x4, x1, x2)

inst_47999:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80af000000000000; valaddr_reg:x3; val_offset:143997*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143997*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_48000:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80af800000000000; valaddr_reg:x3; val_offset:144000*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144000*0 + 3*384*FLEN/8, x4, x1, x2)

inst_48001:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80afc00000000000; valaddr_reg:x3; val_offset:144003*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144003*0 + 3*385*FLEN/8, x4, x1, x2)

inst_48002:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80afe00000000000; valaddr_reg:x3; val_offset:144006*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144006*0 + 3*386*FLEN/8, x4, x1, x2)

inst_48003:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80aff00000000000; valaddr_reg:x3; val_offset:144009*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144009*0 + 3*387*FLEN/8, x4, x1, x2)

inst_48004:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80aff80000000000; valaddr_reg:x3; val_offset:144012*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144012*0 + 3*388*FLEN/8, x4, x1, x2)

inst_48005:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80affc0000000000; valaddr_reg:x3; val_offset:144015*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144015*0 + 3*389*FLEN/8, x4, x1, x2)

inst_48006:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80affe0000000000; valaddr_reg:x3; val_offset:144018*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144018*0 + 3*390*FLEN/8, x4, x1, x2)

inst_48007:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80afff0000000000; valaddr_reg:x3; val_offset:144021*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144021*0 + 3*391*FLEN/8, x4, x1, x2)

inst_48008:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80afff8000000000; valaddr_reg:x3; val_offset:144024*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144024*0 + 3*392*FLEN/8, x4, x1, x2)

inst_48009:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80afffc000000000; valaddr_reg:x3; val_offset:144027*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144027*0 + 3*393*FLEN/8, x4, x1, x2)

inst_48010:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80afffe000000000; valaddr_reg:x3; val_offset:144030*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144030*0 + 3*394*FLEN/8, x4, x1, x2)

inst_48011:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80affff000000000; valaddr_reg:x3; val_offset:144033*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144033*0 + 3*395*FLEN/8, x4, x1, x2)

inst_48012:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80affff800000000; valaddr_reg:x3; val_offset:144036*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144036*0 + 3*396*FLEN/8, x4, x1, x2)

inst_48013:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80affffc00000000; valaddr_reg:x3; val_offset:144039*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144039*0 + 3*397*FLEN/8, x4, x1, x2)

inst_48014:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80affffe00000000; valaddr_reg:x3; val_offset:144042*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144042*0 + 3*398*FLEN/8, x4, x1, x2)

inst_48015:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80afffff00000000; valaddr_reg:x3; val_offset:144045*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144045*0 + 3*399*FLEN/8, x4, x1, x2)

inst_48016:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80afffff80000000; valaddr_reg:x3; val_offset:144048*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144048*0 + 3*400*FLEN/8, x4, x1, x2)

inst_48017:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80afffffc0000000; valaddr_reg:x3; val_offset:144051*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144051*0 + 3*401*FLEN/8, x4, x1, x2)

inst_48018:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80afffffe0000000; valaddr_reg:x3; val_offset:144054*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144054*0 + 3*402*FLEN/8, x4, x1, x2)

inst_48019:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80affffff0000000; valaddr_reg:x3; val_offset:144057*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144057*0 + 3*403*FLEN/8, x4, x1, x2)

inst_48020:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80affffff8000000; valaddr_reg:x3; val_offset:144060*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144060*0 + 3*404*FLEN/8, x4, x1, x2)

inst_48021:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80affffffc000000; valaddr_reg:x3; val_offset:144063*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144063*0 + 3*405*FLEN/8, x4, x1, x2)

inst_48022:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80affffffe000000; valaddr_reg:x3; val_offset:144066*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144066*0 + 3*406*FLEN/8, x4, x1, x2)

inst_48023:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80afffffff000000; valaddr_reg:x3; val_offset:144069*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144069*0 + 3*407*FLEN/8, x4, x1, x2)

inst_48024:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80afffffff800000; valaddr_reg:x3; val_offset:144072*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144072*0 + 3*408*FLEN/8, x4, x1, x2)

inst_48025:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80afffffffc00000; valaddr_reg:x3; val_offset:144075*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144075*0 + 3*409*FLEN/8, x4, x1, x2)

inst_48026:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80afffffffe00000; valaddr_reg:x3; val_offset:144078*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144078*0 + 3*410*FLEN/8, x4, x1, x2)

inst_48027:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80affffffff00000; valaddr_reg:x3; val_offset:144081*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144081*0 + 3*411*FLEN/8, x4, x1, x2)

inst_48028:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80affffffff80000; valaddr_reg:x3; val_offset:144084*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144084*0 + 3*412*FLEN/8, x4, x1, x2)

inst_48029:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80affffffffc0000; valaddr_reg:x3; val_offset:144087*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144087*0 + 3*413*FLEN/8, x4, x1, x2)

inst_48030:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80affffffffe0000; valaddr_reg:x3; val_offset:144090*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144090*0 + 3*414*FLEN/8, x4, x1, x2)

inst_48031:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80afffffffff0000; valaddr_reg:x3; val_offset:144093*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144093*0 + 3*415*FLEN/8, x4, x1, x2)

inst_48032:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80afffffffff8000; valaddr_reg:x3; val_offset:144096*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144096*0 + 3*416*FLEN/8, x4, x1, x2)

inst_48033:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80afffffffffc000; valaddr_reg:x3; val_offset:144099*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144099*0 + 3*417*FLEN/8, x4, x1, x2)

inst_48034:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80afffffffffe000; valaddr_reg:x3; val_offset:144102*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144102*0 + 3*418*FLEN/8, x4, x1, x2)

inst_48035:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80affffffffff000; valaddr_reg:x3; val_offset:144105*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144105*0 + 3*419*FLEN/8, x4, x1, x2)

inst_48036:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80affffffffff800; valaddr_reg:x3; val_offset:144108*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144108*0 + 3*420*FLEN/8, x4, x1, x2)

inst_48037:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80affffffffffc00; valaddr_reg:x3; val_offset:144111*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144111*0 + 3*421*FLEN/8, x4, x1, x2)

inst_48038:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80affffffffffe00; valaddr_reg:x3; val_offset:144114*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144114*0 + 3*422*FLEN/8, x4, x1, x2)

inst_48039:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80afffffffffff00; valaddr_reg:x3; val_offset:144117*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144117*0 + 3*423*FLEN/8, x4, x1, x2)

inst_48040:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80afffffffffff80; valaddr_reg:x3; val_offset:144120*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144120*0 + 3*424*FLEN/8, x4, x1, x2)

inst_48041:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80afffffffffffc0; valaddr_reg:x3; val_offset:144123*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144123*0 + 3*425*FLEN/8, x4, x1, x2)

inst_48042:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80afffffffffffe0; valaddr_reg:x3; val_offset:144126*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144126*0 + 3*426*FLEN/8, x4, x1, x2)

inst_48043:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80affffffffffff0; valaddr_reg:x3; val_offset:144129*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144129*0 + 3*427*FLEN/8, x4, x1, x2)

inst_48044:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80affffffffffff8; valaddr_reg:x3; val_offset:144132*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144132*0 + 3*428*FLEN/8, x4, x1, x2)

inst_48045:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80affffffffffffc; valaddr_reg:x3; val_offset:144135*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144135*0 + 3*429*FLEN/8, x4, x1, x2)

inst_48046:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80affffffffffffe; valaddr_reg:x3; val_offset:144138*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144138*0 + 3*430*FLEN/8, x4, x1, x2)

inst_48047:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7fe4fbf6601f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7fe4fbf6601f; op2val:0x8000;
op3val:0x80afffffffffffff; valaddr_reg:x3; val_offset:144141*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144141*0 + 3*431*FLEN/8, x4, x1, x2)

inst_48048:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:144144*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144144*0 + 3*432*FLEN/8, x4, x1, x2)

inst_48049:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:144147*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144147*0 + 3*433*FLEN/8, x4, x1, x2)

inst_48050:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:144150*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144150*0 + 3*434*FLEN/8, x4, x1, x2)

inst_48051:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:144153*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144153*0 + 3*435*FLEN/8, x4, x1, x2)

inst_48052:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:144156*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144156*0 + 3*436*FLEN/8, x4, x1, x2)

inst_48053:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:144159*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144159*0 + 3*437*FLEN/8, x4, x1, x2)

inst_48054:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:144162*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144162*0 + 3*438*FLEN/8, x4, x1, x2)

inst_48055:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:144165*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144165*0 + 3*439*FLEN/8, x4, x1, x2)

inst_48056:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:144168*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144168*0 + 3*440*FLEN/8, x4, x1, x2)

inst_48057:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:144171*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144171*0 + 3*441*FLEN/8, x4, x1, x2)

inst_48058:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:144174*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144174*0 + 3*442*FLEN/8, x4, x1, x2)

inst_48059:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:144177*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144177*0 + 3*443*FLEN/8, x4, x1, x2)

inst_48060:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:144180*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144180*0 + 3*444*FLEN/8, x4, x1, x2)

inst_48061:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:144183*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144183*0 + 3*445*FLEN/8, x4, x1, x2)

inst_48062:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:144186*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144186*0 + 3*446*FLEN/8, x4, x1, x2)

inst_48063:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:144189*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144189*0 + 3*447*FLEN/8, x4, x1, x2)

inst_48064:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:144192*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144192*0 + 3*448*FLEN/8, x4, x1, x2)

inst_48065:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:144195*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144195*0 + 3*449*FLEN/8, x4, x1, x2)

inst_48066:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:144198*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144198*0 + 3*450*FLEN/8, x4, x1, x2)

inst_48067:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:144201*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144201*0 + 3*451*FLEN/8, x4, x1, x2)

inst_48068:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:144204*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144204*0 + 3*452*FLEN/8, x4, x1, x2)

inst_48069:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:144207*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144207*0 + 3*453*FLEN/8, x4, x1, x2)

inst_48070:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2b0000000000000; valaddr_reg:x3; val_offset:144210*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144210*0 + 3*454*FLEN/8, x4, x1, x2)

inst_48071:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2b0000000000001; valaddr_reg:x3; val_offset:144213*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144213*0 + 3*455*FLEN/8, x4, x1, x2)

inst_48072:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2b0000000000003; valaddr_reg:x3; val_offset:144216*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144216*0 + 3*456*FLEN/8, x4, x1, x2)

inst_48073:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2b0000000000007; valaddr_reg:x3; val_offset:144219*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144219*0 + 3*457*FLEN/8, x4, x1, x2)

inst_48074:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2b000000000000f; valaddr_reg:x3; val_offset:144222*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144222*0 + 3*458*FLEN/8, x4, x1, x2)

inst_48075:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2b000000000001f; valaddr_reg:x3; val_offset:144225*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144225*0 + 3*459*FLEN/8, x4, x1, x2)

inst_48076:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2b000000000003f; valaddr_reg:x3; val_offset:144228*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144228*0 + 3*460*FLEN/8, x4, x1, x2)

inst_48077:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2b000000000007f; valaddr_reg:x3; val_offset:144231*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144231*0 + 3*461*FLEN/8, x4, x1, x2)

inst_48078:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2b00000000000ff; valaddr_reg:x3; val_offset:144234*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144234*0 + 3*462*FLEN/8, x4, x1, x2)

inst_48079:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2b00000000001ff; valaddr_reg:x3; val_offset:144237*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144237*0 + 3*463*FLEN/8, x4, x1, x2)

inst_48080:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2b00000000003ff; valaddr_reg:x3; val_offset:144240*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144240*0 + 3*464*FLEN/8, x4, x1, x2)

inst_48081:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2b00000000007ff; valaddr_reg:x3; val_offset:144243*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144243*0 + 3*465*FLEN/8, x4, x1, x2)

inst_48082:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2b0000000000fff; valaddr_reg:x3; val_offset:144246*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144246*0 + 3*466*FLEN/8, x4, x1, x2)

inst_48083:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2b0000000001fff; valaddr_reg:x3; val_offset:144249*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144249*0 + 3*467*FLEN/8, x4, x1, x2)

inst_48084:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2b0000000003fff; valaddr_reg:x3; val_offset:144252*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144252*0 + 3*468*FLEN/8, x4, x1, x2)

inst_48085:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2b0000000007fff; valaddr_reg:x3; val_offset:144255*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144255*0 + 3*469*FLEN/8, x4, x1, x2)

inst_48086:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2b000000000ffff; valaddr_reg:x3; val_offset:144258*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144258*0 + 3*470*FLEN/8, x4, x1, x2)

inst_48087:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2b000000001ffff; valaddr_reg:x3; val_offset:144261*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144261*0 + 3*471*FLEN/8, x4, x1, x2)

inst_48088:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2b000000003ffff; valaddr_reg:x3; val_offset:144264*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144264*0 + 3*472*FLEN/8, x4, x1, x2)

inst_48089:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2b000000007ffff; valaddr_reg:x3; val_offset:144267*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144267*0 + 3*473*FLEN/8, x4, x1, x2)

inst_48090:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2b00000000fffff; valaddr_reg:x3; val_offset:144270*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144270*0 + 3*474*FLEN/8, x4, x1, x2)

inst_48091:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2b00000001fffff; valaddr_reg:x3; val_offset:144273*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144273*0 + 3*475*FLEN/8, x4, x1, x2)

inst_48092:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2b00000003fffff; valaddr_reg:x3; val_offset:144276*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144276*0 + 3*476*FLEN/8, x4, x1, x2)

inst_48093:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2b00000007fffff; valaddr_reg:x3; val_offset:144279*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144279*0 + 3*477*FLEN/8, x4, x1, x2)

inst_48094:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2b0000000ffffff; valaddr_reg:x3; val_offset:144282*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144282*0 + 3*478*FLEN/8, x4, x1, x2)

inst_48095:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2b0000001ffffff; valaddr_reg:x3; val_offset:144285*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144285*0 + 3*479*FLEN/8, x4, x1, x2)

inst_48096:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2b0000003ffffff; valaddr_reg:x3; val_offset:144288*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144288*0 + 3*480*FLEN/8, x4, x1, x2)

inst_48097:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2b0000007ffffff; valaddr_reg:x3; val_offset:144291*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144291*0 + 3*481*FLEN/8, x4, x1, x2)

inst_48098:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2b000000fffffff; valaddr_reg:x3; val_offset:144294*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144294*0 + 3*482*FLEN/8, x4, x1, x2)

inst_48099:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2b000001fffffff; valaddr_reg:x3; val_offset:144297*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144297*0 + 3*483*FLEN/8, x4, x1, x2)

inst_48100:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2b000003fffffff; valaddr_reg:x3; val_offset:144300*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144300*0 + 3*484*FLEN/8, x4, x1, x2)

inst_48101:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2b000007fffffff; valaddr_reg:x3; val_offset:144303*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144303*0 + 3*485*FLEN/8, x4, x1, x2)

inst_48102:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2b00000ffffffff; valaddr_reg:x3; val_offset:144306*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144306*0 + 3*486*FLEN/8, x4, x1, x2)

inst_48103:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2b00001ffffffff; valaddr_reg:x3; val_offset:144309*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144309*0 + 3*487*FLEN/8, x4, x1, x2)

inst_48104:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2b00003ffffffff; valaddr_reg:x3; val_offset:144312*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144312*0 + 3*488*FLEN/8, x4, x1, x2)

inst_48105:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2b00007ffffffff; valaddr_reg:x3; val_offset:144315*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144315*0 + 3*489*FLEN/8, x4, x1, x2)

inst_48106:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2b0000fffffffff; valaddr_reg:x3; val_offset:144318*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144318*0 + 3*490*FLEN/8, x4, x1, x2)

inst_48107:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2b0001fffffffff; valaddr_reg:x3; val_offset:144321*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144321*0 + 3*491*FLEN/8, x4, x1, x2)

inst_48108:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2b0003fffffffff; valaddr_reg:x3; val_offset:144324*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144324*0 + 3*492*FLEN/8, x4, x1, x2)

inst_48109:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2b0007fffffffff; valaddr_reg:x3; val_offset:144327*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144327*0 + 3*493*FLEN/8, x4, x1, x2)

inst_48110:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2b000ffffffffff; valaddr_reg:x3; val_offset:144330*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144330*0 + 3*494*FLEN/8, x4, x1, x2)

inst_48111:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2b001ffffffffff; valaddr_reg:x3; val_offset:144333*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144333*0 + 3*495*FLEN/8, x4, x1, x2)

inst_48112:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2b003ffffffffff; valaddr_reg:x3; val_offset:144336*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144336*0 + 3*496*FLEN/8, x4, x1, x2)

inst_48113:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2b007ffffffffff; valaddr_reg:x3; val_offset:144339*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144339*0 + 3*497*FLEN/8, x4, x1, x2)

inst_48114:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2b00fffffffffff; valaddr_reg:x3; val_offset:144342*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144342*0 + 3*498*FLEN/8, x4, x1, x2)

inst_48115:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2b01fffffffffff; valaddr_reg:x3; val_offset:144345*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144345*0 + 3*499*FLEN/8, x4, x1, x2)

inst_48116:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2b03fffffffffff; valaddr_reg:x3; val_offset:144348*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144348*0 + 3*500*FLEN/8, x4, x1, x2)

inst_48117:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2b07fffffffffff; valaddr_reg:x3; val_offset:144351*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144351*0 + 3*501*FLEN/8, x4, x1, x2)

inst_48118:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2b0ffffffffffff; valaddr_reg:x3; val_offset:144354*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144354*0 + 3*502*FLEN/8, x4, x1, x2)

inst_48119:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2b1ffffffffffff; valaddr_reg:x3; val_offset:144357*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144357*0 + 3*503*FLEN/8, x4, x1, x2)

inst_48120:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2b3ffffffffffff; valaddr_reg:x3; val_offset:144360*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144360*0 + 3*504*FLEN/8, x4, x1, x2)

inst_48121:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2b7ffffffffffff; valaddr_reg:x3; val_offset:144363*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144363*0 + 3*505*FLEN/8, x4, x1, x2)

inst_48122:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2b8000000000000; valaddr_reg:x3; val_offset:144366*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144366*0 + 3*506*FLEN/8, x4, x1, x2)

inst_48123:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2bc000000000000; valaddr_reg:x3; val_offset:144369*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144369*0 + 3*507*FLEN/8, x4, x1, x2)

inst_48124:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2be000000000000; valaddr_reg:x3; val_offset:144372*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144372*0 + 3*508*FLEN/8, x4, x1, x2)

inst_48125:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2bf000000000000; valaddr_reg:x3; val_offset:144375*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144375*0 + 3*509*FLEN/8, x4, x1, x2)

inst_48126:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2bf800000000000; valaddr_reg:x3; val_offset:144378*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144378*0 + 3*510*FLEN/8, x4, x1, x2)

inst_48127:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2bfc00000000000; valaddr_reg:x3; val_offset:144381*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144381*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_48128:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2bfe00000000000; valaddr_reg:x3; val_offset:144384*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144384*0 + 3*512*FLEN/8, x4, x1, x2)

inst_48129:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2bff00000000000; valaddr_reg:x3; val_offset:144387*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144387*0 + 3*513*FLEN/8, x4, x1, x2)

inst_48130:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2bff80000000000; valaddr_reg:x3; val_offset:144390*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144390*0 + 3*514*FLEN/8, x4, x1, x2)

inst_48131:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2bffc0000000000; valaddr_reg:x3; val_offset:144393*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144393*0 + 3*515*FLEN/8, x4, x1, x2)

inst_48132:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2bffe0000000000; valaddr_reg:x3; val_offset:144396*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144396*0 + 3*516*FLEN/8, x4, x1, x2)

inst_48133:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2bfff0000000000; valaddr_reg:x3; val_offset:144399*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144399*0 + 3*517*FLEN/8, x4, x1, x2)

inst_48134:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2bfff8000000000; valaddr_reg:x3; val_offset:144402*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144402*0 + 3*518*FLEN/8, x4, x1, x2)

inst_48135:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2bfffc000000000; valaddr_reg:x3; val_offset:144405*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144405*0 + 3*519*FLEN/8, x4, x1, x2)

inst_48136:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2bfffe000000000; valaddr_reg:x3; val_offset:144408*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144408*0 + 3*520*FLEN/8, x4, x1, x2)

inst_48137:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2bffff000000000; valaddr_reg:x3; val_offset:144411*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144411*0 + 3*521*FLEN/8, x4, x1, x2)

inst_48138:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2bffff800000000; valaddr_reg:x3; val_offset:144414*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144414*0 + 3*522*FLEN/8, x4, x1, x2)

inst_48139:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2bffffc00000000; valaddr_reg:x3; val_offset:144417*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144417*0 + 3*523*FLEN/8, x4, x1, x2)

inst_48140:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2bffffe00000000; valaddr_reg:x3; val_offset:144420*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144420*0 + 3*524*FLEN/8, x4, x1, x2)

inst_48141:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2bfffff00000000; valaddr_reg:x3; val_offset:144423*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144423*0 + 3*525*FLEN/8, x4, x1, x2)

inst_48142:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2bfffff80000000; valaddr_reg:x3; val_offset:144426*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144426*0 + 3*526*FLEN/8, x4, x1, x2)

inst_48143:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2bfffffc0000000; valaddr_reg:x3; val_offset:144429*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144429*0 + 3*527*FLEN/8, x4, x1, x2)

inst_48144:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2bfffffe0000000; valaddr_reg:x3; val_offset:144432*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144432*0 + 3*528*FLEN/8, x4, x1, x2)

inst_48145:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2bffffff0000000; valaddr_reg:x3; val_offset:144435*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144435*0 + 3*529*FLEN/8, x4, x1, x2)

inst_48146:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2bffffff8000000; valaddr_reg:x3; val_offset:144438*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144438*0 + 3*530*FLEN/8, x4, x1, x2)

inst_48147:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2bffffffc000000; valaddr_reg:x3; val_offset:144441*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144441*0 + 3*531*FLEN/8, x4, x1, x2)

inst_48148:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2bffffffe000000; valaddr_reg:x3; val_offset:144444*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144444*0 + 3*532*FLEN/8, x4, x1, x2)

inst_48149:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2bfffffff000000; valaddr_reg:x3; val_offset:144447*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144447*0 + 3*533*FLEN/8, x4, x1, x2)

inst_48150:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2bfffffff800000; valaddr_reg:x3; val_offset:144450*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144450*0 + 3*534*FLEN/8, x4, x1, x2)

inst_48151:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2bfffffffc00000; valaddr_reg:x3; val_offset:144453*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144453*0 + 3*535*FLEN/8, x4, x1, x2)

inst_48152:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2bfffffffe00000; valaddr_reg:x3; val_offset:144456*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144456*0 + 3*536*FLEN/8, x4, x1, x2)

inst_48153:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2bffffffff00000; valaddr_reg:x3; val_offset:144459*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144459*0 + 3*537*FLEN/8, x4, x1, x2)

inst_48154:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2bffffffff80000; valaddr_reg:x3; val_offset:144462*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144462*0 + 3*538*FLEN/8, x4, x1, x2)

inst_48155:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2bffffffffc0000; valaddr_reg:x3; val_offset:144465*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144465*0 + 3*539*FLEN/8, x4, x1, x2)

inst_48156:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2bffffffffe0000; valaddr_reg:x3; val_offset:144468*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144468*0 + 3*540*FLEN/8, x4, x1, x2)

inst_48157:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2bfffffffff0000; valaddr_reg:x3; val_offset:144471*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144471*0 + 3*541*FLEN/8, x4, x1, x2)

inst_48158:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2bfffffffff8000; valaddr_reg:x3; val_offset:144474*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144474*0 + 3*542*FLEN/8, x4, x1, x2)

inst_48159:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2bfffffffffc000; valaddr_reg:x3; val_offset:144477*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144477*0 + 3*543*FLEN/8, x4, x1, x2)

inst_48160:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2bfffffffffe000; valaddr_reg:x3; val_offset:144480*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144480*0 + 3*544*FLEN/8, x4, x1, x2)

inst_48161:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2bffffffffff000; valaddr_reg:x3; val_offset:144483*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144483*0 + 3*545*FLEN/8, x4, x1, x2)

inst_48162:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2bffffffffff800; valaddr_reg:x3; val_offset:144486*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144486*0 + 3*546*FLEN/8, x4, x1, x2)

inst_48163:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2bffffffffffc00; valaddr_reg:x3; val_offset:144489*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144489*0 + 3*547*FLEN/8, x4, x1, x2)

inst_48164:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2bffffffffffe00; valaddr_reg:x3; val_offset:144492*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144492*0 + 3*548*FLEN/8, x4, x1, x2)

inst_48165:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2bfffffffffff00; valaddr_reg:x3; val_offset:144495*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144495*0 + 3*549*FLEN/8, x4, x1, x2)

inst_48166:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2bfffffffffff80; valaddr_reg:x3; val_offset:144498*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144498*0 + 3*550*FLEN/8, x4, x1, x2)

inst_48167:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2bfffffffffffc0; valaddr_reg:x3; val_offset:144501*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144501*0 + 3*551*FLEN/8, x4, x1, x2)

inst_48168:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2bfffffffffffe0; valaddr_reg:x3; val_offset:144504*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144504*0 + 3*552*FLEN/8, x4, x1, x2)

inst_48169:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2bffffffffffff0; valaddr_reg:x3; val_offset:144507*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144507*0 + 3*553*FLEN/8, x4, x1, x2)

inst_48170:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2bffffffffffff8; valaddr_reg:x3; val_offset:144510*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144510*0 + 3*554*FLEN/8, x4, x1, x2)

inst_48171:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2bffffffffffffc; valaddr_reg:x3; val_offset:144513*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144513*0 + 3*555*FLEN/8, x4, x1, x2)

inst_48172:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2bffffffffffffe; valaddr_reg:x3; val_offset:144516*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144516*0 + 3*556*FLEN/8, x4, x1, x2)

inst_48173:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd9195f00fed33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d9195f00fed33; op2val:0x0;
op3val:0x2bfffffffffffff; valaddr_reg:x3; val_offset:144519*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144519*0 + 3*557*FLEN/8, x4, x1, x2)

inst_48174:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:144522*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144522*0 + 3*558*FLEN/8, x4, x1, x2)

inst_48175:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:144525*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144525*0 + 3*559*FLEN/8, x4, x1, x2)

inst_48176:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:144528*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144528*0 + 3*560*FLEN/8, x4, x1, x2)

inst_48177:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:144531*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144531*0 + 3*561*FLEN/8, x4, x1, x2)

inst_48178:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:144534*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144534*0 + 3*562*FLEN/8, x4, x1, x2)

inst_48179:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:144537*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144537*0 + 3*563*FLEN/8, x4, x1, x2)

inst_48180:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:144540*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144540*0 + 3*564*FLEN/8, x4, x1, x2)

inst_48181:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:144543*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144543*0 + 3*565*FLEN/8, x4, x1, x2)

inst_48182:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:144546*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144546*0 + 3*566*FLEN/8, x4, x1, x2)

inst_48183:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:144549*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144549*0 + 3*567*FLEN/8, x4, x1, x2)

inst_48184:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:144552*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144552*0 + 3*568*FLEN/8, x4, x1, x2)

inst_48185:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:144555*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144555*0 + 3*569*FLEN/8, x4, x1, x2)

inst_48186:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:144558*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144558*0 + 3*570*FLEN/8, x4, x1, x2)

inst_48187:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:144561*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144561*0 + 3*571*FLEN/8, x4, x1, x2)

inst_48188:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:144564*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144564*0 + 3*572*FLEN/8, x4, x1, x2)

inst_48189:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:144567*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144567*0 + 3*573*FLEN/8, x4, x1, x2)

inst_48190:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:144570*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144570*0 + 3*574*FLEN/8, x4, x1, x2)

inst_48191:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:144573*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144573*0 + 3*575*FLEN/8, x4, x1, x2)

inst_48192:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:144576*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144576*0 + 3*576*FLEN/8, x4, x1, x2)

inst_48193:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:144579*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144579*0 + 3*577*FLEN/8, x4, x1, x2)

inst_48194:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:144582*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144582*0 + 3*578*FLEN/8, x4, x1, x2)

inst_48195:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:144585*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144585*0 + 3*579*FLEN/8, x4, x1, x2)

inst_48196:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x140000000000000; valaddr_reg:x3; val_offset:144588*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144588*0 + 3*580*FLEN/8, x4, x1, x2)

inst_48197:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x140000000000001; valaddr_reg:x3; val_offset:144591*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144591*0 + 3*581*FLEN/8, x4, x1, x2)

inst_48198:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x140000000000003; valaddr_reg:x3; val_offset:144594*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144594*0 + 3*582*FLEN/8, x4, x1, x2)

inst_48199:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x140000000000007; valaddr_reg:x3; val_offset:144597*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144597*0 + 3*583*FLEN/8, x4, x1, x2)

inst_48200:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14000000000000f; valaddr_reg:x3; val_offset:144600*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144600*0 + 3*584*FLEN/8, x4, x1, x2)

inst_48201:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14000000000001f; valaddr_reg:x3; val_offset:144603*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144603*0 + 3*585*FLEN/8, x4, x1, x2)

inst_48202:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14000000000003f; valaddr_reg:x3; val_offset:144606*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144606*0 + 3*586*FLEN/8, x4, x1, x2)

inst_48203:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14000000000007f; valaddr_reg:x3; val_offset:144609*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144609*0 + 3*587*FLEN/8, x4, x1, x2)

inst_48204:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x1400000000000ff; valaddr_reg:x3; val_offset:144612*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144612*0 + 3*588*FLEN/8, x4, x1, x2)

inst_48205:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x1400000000001ff; valaddr_reg:x3; val_offset:144615*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144615*0 + 3*589*FLEN/8, x4, x1, x2)

inst_48206:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x1400000000003ff; valaddr_reg:x3; val_offset:144618*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144618*0 + 3*590*FLEN/8, x4, x1, x2)

inst_48207:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x1400000000007ff; valaddr_reg:x3; val_offset:144621*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144621*0 + 3*591*FLEN/8, x4, x1, x2)

inst_48208:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x140000000000fff; valaddr_reg:x3; val_offset:144624*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144624*0 + 3*592*FLEN/8, x4, x1, x2)

inst_48209:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x140000000001fff; valaddr_reg:x3; val_offset:144627*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144627*0 + 3*593*FLEN/8, x4, x1, x2)

inst_48210:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x140000000003fff; valaddr_reg:x3; val_offset:144630*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144630*0 + 3*594*FLEN/8, x4, x1, x2)

inst_48211:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x140000000007fff; valaddr_reg:x3; val_offset:144633*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144633*0 + 3*595*FLEN/8, x4, x1, x2)

inst_48212:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14000000000ffff; valaddr_reg:x3; val_offset:144636*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144636*0 + 3*596*FLEN/8, x4, x1, x2)

inst_48213:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14000000001ffff; valaddr_reg:x3; val_offset:144639*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144639*0 + 3*597*FLEN/8, x4, x1, x2)

inst_48214:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14000000003ffff; valaddr_reg:x3; val_offset:144642*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144642*0 + 3*598*FLEN/8, x4, x1, x2)

inst_48215:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14000000007ffff; valaddr_reg:x3; val_offset:144645*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144645*0 + 3*599*FLEN/8, x4, x1, x2)

inst_48216:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x1400000000fffff; valaddr_reg:x3; val_offset:144648*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144648*0 + 3*600*FLEN/8, x4, x1, x2)

inst_48217:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x1400000001fffff; valaddr_reg:x3; val_offset:144651*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144651*0 + 3*601*FLEN/8, x4, x1, x2)

inst_48218:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x1400000003fffff; valaddr_reg:x3; val_offset:144654*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144654*0 + 3*602*FLEN/8, x4, x1, x2)

inst_48219:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x1400000007fffff; valaddr_reg:x3; val_offset:144657*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144657*0 + 3*603*FLEN/8, x4, x1, x2)

inst_48220:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x140000000ffffff; valaddr_reg:x3; val_offset:144660*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144660*0 + 3*604*FLEN/8, x4, x1, x2)

inst_48221:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x140000001ffffff; valaddr_reg:x3; val_offset:144663*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144663*0 + 3*605*FLEN/8, x4, x1, x2)

inst_48222:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x140000003ffffff; valaddr_reg:x3; val_offset:144666*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144666*0 + 3*606*FLEN/8, x4, x1, x2)

inst_48223:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x140000007ffffff; valaddr_reg:x3; val_offset:144669*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144669*0 + 3*607*FLEN/8, x4, x1, x2)

inst_48224:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14000000fffffff; valaddr_reg:x3; val_offset:144672*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144672*0 + 3*608*FLEN/8, x4, x1, x2)

inst_48225:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14000001fffffff; valaddr_reg:x3; val_offset:144675*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144675*0 + 3*609*FLEN/8, x4, x1, x2)

inst_48226:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14000003fffffff; valaddr_reg:x3; val_offset:144678*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144678*0 + 3*610*FLEN/8, x4, x1, x2)

inst_48227:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14000007fffffff; valaddr_reg:x3; val_offset:144681*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144681*0 + 3*611*FLEN/8, x4, x1, x2)

inst_48228:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x1400000ffffffff; valaddr_reg:x3; val_offset:144684*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144684*0 + 3*612*FLEN/8, x4, x1, x2)

inst_48229:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x1400001ffffffff; valaddr_reg:x3; val_offset:144687*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144687*0 + 3*613*FLEN/8, x4, x1, x2)

inst_48230:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x1400003ffffffff; valaddr_reg:x3; val_offset:144690*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144690*0 + 3*614*FLEN/8, x4, x1, x2)

inst_48231:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x1400007ffffffff; valaddr_reg:x3; val_offset:144693*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144693*0 + 3*615*FLEN/8, x4, x1, x2)

inst_48232:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x140000fffffffff; valaddr_reg:x3; val_offset:144696*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144696*0 + 3*616*FLEN/8, x4, x1, x2)

inst_48233:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x140001fffffffff; valaddr_reg:x3; val_offset:144699*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144699*0 + 3*617*FLEN/8, x4, x1, x2)

inst_48234:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x140003fffffffff; valaddr_reg:x3; val_offset:144702*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144702*0 + 3*618*FLEN/8, x4, x1, x2)

inst_48235:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x140007fffffffff; valaddr_reg:x3; val_offset:144705*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144705*0 + 3*619*FLEN/8, x4, x1, x2)

inst_48236:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14000ffffffffff; valaddr_reg:x3; val_offset:144708*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144708*0 + 3*620*FLEN/8, x4, x1, x2)

inst_48237:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14001ffffffffff; valaddr_reg:x3; val_offset:144711*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144711*0 + 3*621*FLEN/8, x4, x1, x2)

inst_48238:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14003ffffffffff; valaddr_reg:x3; val_offset:144714*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144714*0 + 3*622*FLEN/8, x4, x1, x2)

inst_48239:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14007ffffffffff; valaddr_reg:x3; val_offset:144717*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144717*0 + 3*623*FLEN/8, x4, x1, x2)

inst_48240:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x1400fffffffffff; valaddr_reg:x3; val_offset:144720*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144720*0 + 3*624*FLEN/8, x4, x1, x2)

inst_48241:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x1401fffffffffff; valaddr_reg:x3; val_offset:144723*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144723*0 + 3*625*FLEN/8, x4, x1, x2)

inst_48242:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x1403fffffffffff; valaddr_reg:x3; val_offset:144726*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144726*0 + 3*626*FLEN/8, x4, x1, x2)

inst_48243:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x1407fffffffffff; valaddr_reg:x3; val_offset:144729*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144729*0 + 3*627*FLEN/8, x4, x1, x2)

inst_48244:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x140ffffffffffff; valaddr_reg:x3; val_offset:144732*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144732*0 + 3*628*FLEN/8, x4, x1, x2)

inst_48245:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x141ffffffffffff; valaddr_reg:x3; val_offset:144735*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144735*0 + 3*629*FLEN/8, x4, x1, x2)

inst_48246:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x143ffffffffffff; valaddr_reg:x3; val_offset:144738*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144738*0 + 3*630*FLEN/8, x4, x1, x2)

inst_48247:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x147ffffffffffff; valaddr_reg:x3; val_offset:144741*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144741*0 + 3*631*FLEN/8, x4, x1, x2)

inst_48248:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x148000000000000; valaddr_reg:x3; val_offset:144744*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144744*0 + 3*632*FLEN/8, x4, x1, x2)

inst_48249:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14c000000000000; valaddr_reg:x3; val_offset:144747*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144747*0 + 3*633*FLEN/8, x4, x1, x2)

inst_48250:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14e000000000000; valaddr_reg:x3; val_offset:144750*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144750*0 + 3*634*FLEN/8, x4, x1, x2)

inst_48251:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14f000000000000; valaddr_reg:x3; val_offset:144753*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144753*0 + 3*635*FLEN/8, x4, x1, x2)

inst_48252:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14f800000000000; valaddr_reg:x3; val_offset:144756*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144756*0 + 3*636*FLEN/8, x4, x1, x2)

inst_48253:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14fc00000000000; valaddr_reg:x3; val_offset:144759*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144759*0 + 3*637*FLEN/8, x4, x1, x2)

inst_48254:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14fe00000000000; valaddr_reg:x3; val_offset:144762*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144762*0 + 3*638*FLEN/8, x4, x1, x2)

inst_48255:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14ff00000000000; valaddr_reg:x3; val_offset:144765*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144765*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_48256:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14ff80000000000; valaddr_reg:x3; val_offset:144768*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144768*0 + 3*640*FLEN/8, x4, x1, x2)

inst_48257:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14ffc0000000000; valaddr_reg:x3; val_offset:144771*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144771*0 + 3*641*FLEN/8, x4, x1, x2)

inst_48258:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14ffe0000000000; valaddr_reg:x3; val_offset:144774*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144774*0 + 3*642*FLEN/8, x4, x1, x2)

inst_48259:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14fff0000000000; valaddr_reg:x3; val_offset:144777*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144777*0 + 3*643*FLEN/8, x4, x1, x2)

inst_48260:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14fff8000000000; valaddr_reg:x3; val_offset:144780*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144780*0 + 3*644*FLEN/8, x4, x1, x2)

inst_48261:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14fffc000000000; valaddr_reg:x3; val_offset:144783*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144783*0 + 3*645*FLEN/8, x4, x1, x2)

inst_48262:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14fffe000000000; valaddr_reg:x3; val_offset:144786*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144786*0 + 3*646*FLEN/8, x4, x1, x2)

inst_48263:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14ffff000000000; valaddr_reg:x3; val_offset:144789*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144789*0 + 3*647*FLEN/8, x4, x1, x2)

inst_48264:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14ffff800000000; valaddr_reg:x3; val_offset:144792*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144792*0 + 3*648*FLEN/8, x4, x1, x2)

inst_48265:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14ffffc00000000; valaddr_reg:x3; val_offset:144795*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144795*0 + 3*649*FLEN/8, x4, x1, x2)

inst_48266:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14ffffe00000000; valaddr_reg:x3; val_offset:144798*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144798*0 + 3*650*FLEN/8, x4, x1, x2)

inst_48267:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14fffff00000000; valaddr_reg:x3; val_offset:144801*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144801*0 + 3*651*FLEN/8, x4, x1, x2)

inst_48268:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14fffff80000000; valaddr_reg:x3; val_offset:144804*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144804*0 + 3*652*FLEN/8, x4, x1, x2)

inst_48269:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14fffffc0000000; valaddr_reg:x3; val_offset:144807*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144807*0 + 3*653*FLEN/8, x4, x1, x2)

inst_48270:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14fffffe0000000; valaddr_reg:x3; val_offset:144810*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144810*0 + 3*654*FLEN/8, x4, x1, x2)

inst_48271:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14ffffff0000000; valaddr_reg:x3; val_offset:144813*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144813*0 + 3*655*FLEN/8, x4, x1, x2)

inst_48272:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14ffffff8000000; valaddr_reg:x3; val_offset:144816*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144816*0 + 3*656*FLEN/8, x4, x1, x2)

inst_48273:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14ffffffc000000; valaddr_reg:x3; val_offset:144819*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144819*0 + 3*657*FLEN/8, x4, x1, x2)

inst_48274:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14ffffffe000000; valaddr_reg:x3; val_offset:144822*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144822*0 + 3*658*FLEN/8, x4, x1, x2)

inst_48275:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14fffffff000000; valaddr_reg:x3; val_offset:144825*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144825*0 + 3*659*FLEN/8, x4, x1, x2)

inst_48276:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14fffffff800000; valaddr_reg:x3; val_offset:144828*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144828*0 + 3*660*FLEN/8, x4, x1, x2)

inst_48277:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14fffffffc00000; valaddr_reg:x3; val_offset:144831*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144831*0 + 3*661*FLEN/8, x4, x1, x2)

inst_48278:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14fffffffe00000; valaddr_reg:x3; val_offset:144834*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144834*0 + 3*662*FLEN/8, x4, x1, x2)

inst_48279:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14ffffffff00000; valaddr_reg:x3; val_offset:144837*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144837*0 + 3*663*FLEN/8, x4, x1, x2)

inst_48280:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14ffffffff80000; valaddr_reg:x3; val_offset:144840*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144840*0 + 3*664*FLEN/8, x4, x1, x2)

inst_48281:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14ffffffffc0000; valaddr_reg:x3; val_offset:144843*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144843*0 + 3*665*FLEN/8, x4, x1, x2)

inst_48282:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14ffffffffe0000; valaddr_reg:x3; val_offset:144846*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144846*0 + 3*666*FLEN/8, x4, x1, x2)

inst_48283:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14fffffffff0000; valaddr_reg:x3; val_offset:144849*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144849*0 + 3*667*FLEN/8, x4, x1, x2)

inst_48284:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14fffffffff8000; valaddr_reg:x3; val_offset:144852*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144852*0 + 3*668*FLEN/8, x4, x1, x2)

inst_48285:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14fffffffffc000; valaddr_reg:x3; val_offset:144855*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144855*0 + 3*669*FLEN/8, x4, x1, x2)

inst_48286:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14fffffffffe000; valaddr_reg:x3; val_offset:144858*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144858*0 + 3*670*FLEN/8, x4, x1, x2)

inst_48287:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14ffffffffff000; valaddr_reg:x3; val_offset:144861*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144861*0 + 3*671*FLEN/8, x4, x1, x2)

inst_48288:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14ffffffffff800; valaddr_reg:x3; val_offset:144864*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144864*0 + 3*672*FLEN/8, x4, x1, x2)

inst_48289:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14ffffffffffc00; valaddr_reg:x3; val_offset:144867*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144867*0 + 3*673*FLEN/8, x4, x1, x2)

inst_48290:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14ffffffffffe00; valaddr_reg:x3; val_offset:144870*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144870*0 + 3*674*FLEN/8, x4, x1, x2)

inst_48291:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14fffffffffff00; valaddr_reg:x3; val_offset:144873*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144873*0 + 3*675*FLEN/8, x4, x1, x2)

inst_48292:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14fffffffffff80; valaddr_reg:x3; val_offset:144876*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144876*0 + 3*676*FLEN/8, x4, x1, x2)

inst_48293:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14fffffffffffc0; valaddr_reg:x3; val_offset:144879*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144879*0 + 3*677*FLEN/8, x4, x1, x2)

inst_48294:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14fffffffffffe0; valaddr_reg:x3; val_offset:144882*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144882*0 + 3*678*FLEN/8, x4, x1, x2)

inst_48295:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14ffffffffffff0; valaddr_reg:x3; val_offset:144885*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144885*0 + 3*679*FLEN/8, x4, x1, x2)

inst_48296:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14ffffffffffff8; valaddr_reg:x3; val_offset:144888*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144888*0 + 3*680*FLEN/8, x4, x1, x2)

inst_48297:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14ffffffffffffc; valaddr_reg:x3; val_offset:144891*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144891*0 + 3*681*FLEN/8, x4, x1, x2)

inst_48298:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14ffffffffffffe; valaddr_reg:x3; val_offset:144894*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144894*0 + 3*682*FLEN/8, x4, x1, x2)

inst_48299:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd783b317ed41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd783b317ed41; op2val:0x0;
op3val:0x14fffffffffffff; valaddr_reg:x3; val_offset:144897*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144897*0 + 3*683*FLEN/8, x4, x1, x2)

inst_48300:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x3810000000000000; valaddr_reg:x3; val_offset:144900*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144900*0 + 3*684*FLEN/8, x4, x1, x2)

inst_48301:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x3810000000000001; valaddr_reg:x3; val_offset:144903*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144903*0 + 3*685*FLEN/8, x4, x1, x2)

inst_48302:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x3810000000000003; valaddr_reg:x3; val_offset:144906*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144906*0 + 3*686*FLEN/8, x4, x1, x2)

inst_48303:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x3810000000000007; valaddr_reg:x3; val_offset:144909*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144909*0 + 3*687*FLEN/8, x4, x1, x2)

inst_48304:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381000000000000f; valaddr_reg:x3; val_offset:144912*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144912*0 + 3*688*FLEN/8, x4, x1, x2)

inst_48305:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381000000000001f; valaddr_reg:x3; val_offset:144915*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144915*0 + 3*689*FLEN/8, x4, x1, x2)

inst_48306:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381000000000003f; valaddr_reg:x3; val_offset:144918*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144918*0 + 3*690*FLEN/8, x4, x1, x2)

inst_48307:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381000000000007f; valaddr_reg:x3; val_offset:144921*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144921*0 + 3*691*FLEN/8, x4, x1, x2)

inst_48308:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x38100000000000ff; valaddr_reg:x3; val_offset:144924*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144924*0 + 3*692*FLEN/8, x4, x1, x2)

inst_48309:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x38100000000001ff; valaddr_reg:x3; val_offset:144927*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144927*0 + 3*693*FLEN/8, x4, x1, x2)

inst_48310:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x38100000000003ff; valaddr_reg:x3; val_offset:144930*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144930*0 + 3*694*FLEN/8, x4, x1, x2)

inst_48311:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x38100000000007ff; valaddr_reg:x3; val_offset:144933*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144933*0 + 3*695*FLEN/8, x4, x1, x2)

inst_48312:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x3810000000000fff; valaddr_reg:x3; val_offset:144936*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144936*0 + 3*696*FLEN/8, x4, x1, x2)

inst_48313:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x3810000000001fff; valaddr_reg:x3; val_offset:144939*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144939*0 + 3*697*FLEN/8, x4, x1, x2)

inst_48314:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x3810000000003fff; valaddr_reg:x3; val_offset:144942*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144942*0 + 3*698*FLEN/8, x4, x1, x2)

inst_48315:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x3810000000007fff; valaddr_reg:x3; val_offset:144945*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144945*0 + 3*699*FLEN/8, x4, x1, x2)

inst_48316:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381000000000ffff; valaddr_reg:x3; val_offset:144948*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144948*0 + 3*700*FLEN/8, x4, x1, x2)

inst_48317:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381000000001ffff; valaddr_reg:x3; val_offset:144951*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144951*0 + 3*701*FLEN/8, x4, x1, x2)

inst_48318:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381000000003ffff; valaddr_reg:x3; val_offset:144954*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144954*0 + 3*702*FLEN/8, x4, x1, x2)

inst_48319:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381000000007ffff; valaddr_reg:x3; val_offset:144957*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144957*0 + 3*703*FLEN/8, x4, x1, x2)

inst_48320:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x38100000000fffff; valaddr_reg:x3; val_offset:144960*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144960*0 + 3*704*FLEN/8, x4, x1, x2)

inst_48321:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x38100000001fffff; valaddr_reg:x3; val_offset:144963*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144963*0 + 3*705*FLEN/8, x4, x1, x2)

inst_48322:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x38100000003fffff; valaddr_reg:x3; val_offset:144966*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144966*0 + 3*706*FLEN/8, x4, x1, x2)

inst_48323:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x38100000007fffff; valaddr_reg:x3; val_offset:144969*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144969*0 + 3*707*FLEN/8, x4, x1, x2)

inst_48324:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x3810000000ffffff; valaddr_reg:x3; val_offset:144972*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144972*0 + 3*708*FLEN/8, x4, x1, x2)

inst_48325:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x3810000001ffffff; valaddr_reg:x3; val_offset:144975*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144975*0 + 3*709*FLEN/8, x4, x1, x2)

inst_48326:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x3810000003ffffff; valaddr_reg:x3; val_offset:144978*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144978*0 + 3*710*FLEN/8, x4, x1, x2)

inst_48327:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x3810000007ffffff; valaddr_reg:x3; val_offset:144981*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144981*0 + 3*711*FLEN/8, x4, x1, x2)

inst_48328:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381000000fffffff; valaddr_reg:x3; val_offset:144984*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144984*0 + 3*712*FLEN/8, x4, x1, x2)

inst_48329:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381000001fffffff; valaddr_reg:x3; val_offset:144987*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144987*0 + 3*713*FLEN/8, x4, x1, x2)

inst_48330:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381000003fffffff; valaddr_reg:x3; val_offset:144990*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144990*0 + 3*714*FLEN/8, x4, x1, x2)

inst_48331:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381000007fffffff; valaddr_reg:x3; val_offset:144993*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144993*0 + 3*715*FLEN/8, x4, x1, x2)

inst_48332:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x38100000ffffffff; valaddr_reg:x3; val_offset:144996*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144996*0 + 3*716*FLEN/8, x4, x1, x2)

inst_48333:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x38100001ffffffff; valaddr_reg:x3; val_offset:144999*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144999*0 + 3*717*FLEN/8, x4, x1, x2)

inst_48334:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x38100003ffffffff; valaddr_reg:x3; val_offset:145002*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145002*0 + 3*718*FLEN/8, x4, x1, x2)

inst_48335:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x38100007ffffffff; valaddr_reg:x3; val_offset:145005*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145005*0 + 3*719*FLEN/8, x4, x1, x2)

inst_48336:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x3810000fffffffff; valaddr_reg:x3; val_offset:145008*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145008*0 + 3*720*FLEN/8, x4, x1, x2)

inst_48337:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x3810001fffffffff; valaddr_reg:x3; val_offset:145011*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145011*0 + 3*721*FLEN/8, x4, x1, x2)

inst_48338:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x3810003fffffffff; valaddr_reg:x3; val_offset:145014*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145014*0 + 3*722*FLEN/8, x4, x1, x2)

inst_48339:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x3810007fffffffff; valaddr_reg:x3; val_offset:145017*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145017*0 + 3*723*FLEN/8, x4, x1, x2)

inst_48340:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381000ffffffffff; valaddr_reg:x3; val_offset:145020*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145020*0 + 3*724*FLEN/8, x4, x1, x2)

inst_48341:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381001ffffffffff; valaddr_reg:x3; val_offset:145023*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145023*0 + 3*725*FLEN/8, x4, x1, x2)

inst_48342:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381003ffffffffff; valaddr_reg:x3; val_offset:145026*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145026*0 + 3*726*FLEN/8, x4, x1, x2)

inst_48343:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381007ffffffffff; valaddr_reg:x3; val_offset:145029*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145029*0 + 3*727*FLEN/8, x4, x1, x2)

inst_48344:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x38100fffffffffff; valaddr_reg:x3; val_offset:145032*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145032*0 + 3*728*FLEN/8, x4, x1, x2)

inst_48345:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x38101fffffffffff; valaddr_reg:x3; val_offset:145035*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145035*0 + 3*729*FLEN/8, x4, x1, x2)

inst_48346:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x38103fffffffffff; valaddr_reg:x3; val_offset:145038*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145038*0 + 3*730*FLEN/8, x4, x1, x2)

inst_48347:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x38107fffffffffff; valaddr_reg:x3; val_offset:145041*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145041*0 + 3*731*FLEN/8, x4, x1, x2)

inst_48348:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x3810ffffffffffff; valaddr_reg:x3; val_offset:145044*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145044*0 + 3*732*FLEN/8, x4, x1, x2)

inst_48349:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x3811ffffffffffff; valaddr_reg:x3; val_offset:145047*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145047*0 + 3*733*FLEN/8, x4, x1, x2)

inst_48350:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x3813ffffffffffff; valaddr_reg:x3; val_offset:145050*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145050*0 + 3*734*FLEN/8, x4, x1, x2)

inst_48351:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x3817ffffffffffff; valaddr_reg:x3; val_offset:145053*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145053*0 + 3*735*FLEN/8, x4, x1, x2)

inst_48352:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x3818000000000000; valaddr_reg:x3; val_offset:145056*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145056*0 + 3*736*FLEN/8, x4, x1, x2)

inst_48353:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381c000000000000; valaddr_reg:x3; val_offset:145059*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145059*0 + 3*737*FLEN/8, x4, x1, x2)

inst_48354:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381e000000000000; valaddr_reg:x3; val_offset:145062*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145062*0 + 3*738*FLEN/8, x4, x1, x2)

inst_48355:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381f000000000000; valaddr_reg:x3; val_offset:145065*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145065*0 + 3*739*FLEN/8, x4, x1, x2)

inst_48356:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381f800000000000; valaddr_reg:x3; val_offset:145068*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145068*0 + 3*740*FLEN/8, x4, x1, x2)

inst_48357:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381fc00000000000; valaddr_reg:x3; val_offset:145071*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145071*0 + 3*741*FLEN/8, x4, x1, x2)

inst_48358:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381fe00000000000; valaddr_reg:x3; val_offset:145074*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145074*0 + 3*742*FLEN/8, x4, x1, x2)

inst_48359:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381ff00000000000; valaddr_reg:x3; val_offset:145077*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145077*0 + 3*743*FLEN/8, x4, x1, x2)

inst_48360:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381ff80000000000; valaddr_reg:x3; val_offset:145080*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145080*0 + 3*744*FLEN/8, x4, x1, x2)

inst_48361:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381ffc0000000000; valaddr_reg:x3; val_offset:145083*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145083*0 + 3*745*FLEN/8, x4, x1, x2)

inst_48362:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381ffe0000000000; valaddr_reg:x3; val_offset:145086*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145086*0 + 3*746*FLEN/8, x4, x1, x2)

inst_48363:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381fff0000000000; valaddr_reg:x3; val_offset:145089*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145089*0 + 3*747*FLEN/8, x4, x1, x2)

inst_48364:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381fff8000000000; valaddr_reg:x3; val_offset:145092*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145092*0 + 3*748*FLEN/8, x4, x1, x2)

inst_48365:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381fffc000000000; valaddr_reg:x3; val_offset:145095*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145095*0 + 3*749*FLEN/8, x4, x1, x2)

inst_48366:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381fffe000000000; valaddr_reg:x3; val_offset:145098*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145098*0 + 3*750*FLEN/8, x4, x1, x2)

inst_48367:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381ffff000000000; valaddr_reg:x3; val_offset:145101*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145101*0 + 3*751*FLEN/8, x4, x1, x2)

inst_48368:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381ffff800000000; valaddr_reg:x3; val_offset:145104*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145104*0 + 3*752*FLEN/8, x4, x1, x2)

inst_48369:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381ffffc00000000; valaddr_reg:x3; val_offset:145107*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145107*0 + 3*753*FLEN/8, x4, x1, x2)

inst_48370:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381ffffe00000000; valaddr_reg:x3; val_offset:145110*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145110*0 + 3*754*FLEN/8, x4, x1, x2)

inst_48371:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381fffff00000000; valaddr_reg:x3; val_offset:145113*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145113*0 + 3*755*FLEN/8, x4, x1, x2)

inst_48372:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381fffff80000000; valaddr_reg:x3; val_offset:145116*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145116*0 + 3*756*FLEN/8, x4, x1, x2)

inst_48373:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381fffffc0000000; valaddr_reg:x3; val_offset:145119*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145119*0 + 3*757*FLEN/8, x4, x1, x2)

inst_48374:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381fffffe0000000; valaddr_reg:x3; val_offset:145122*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145122*0 + 3*758*FLEN/8, x4, x1, x2)

inst_48375:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381ffffff0000000; valaddr_reg:x3; val_offset:145125*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145125*0 + 3*759*FLEN/8, x4, x1, x2)

inst_48376:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381ffffff8000000; valaddr_reg:x3; val_offset:145128*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145128*0 + 3*760*FLEN/8, x4, x1, x2)

inst_48377:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381ffffffc000000; valaddr_reg:x3; val_offset:145131*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145131*0 + 3*761*FLEN/8, x4, x1, x2)

inst_48378:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381ffffffe000000; valaddr_reg:x3; val_offset:145134*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145134*0 + 3*762*FLEN/8, x4, x1, x2)

inst_48379:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381fffffff000000; valaddr_reg:x3; val_offset:145137*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145137*0 + 3*763*FLEN/8, x4, x1, x2)

inst_48380:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381fffffff800000; valaddr_reg:x3; val_offset:145140*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145140*0 + 3*764*FLEN/8, x4, x1, x2)

inst_48381:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381fffffffc00000; valaddr_reg:x3; val_offset:145143*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145143*0 + 3*765*FLEN/8, x4, x1, x2)

inst_48382:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381fffffffe00000; valaddr_reg:x3; val_offset:145146*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145146*0 + 3*766*FLEN/8, x4, x1, x2)

inst_48383:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381ffffffff00000; valaddr_reg:x3; val_offset:145149*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145149*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(95701492081623039,64,FLEN)
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(96827391988465663,64,FLEN)
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(96827391988465664,64,FLEN)
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(97953291895308288,64,FLEN)
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(98516241848729600,64,FLEN)
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(98797716825440256,64,FLEN)
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(98938454313795584,64,FLEN)
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99008823057973248,64,FLEN)
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99044007430062080,64,FLEN)
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99061599616106496,64,FLEN)
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99070395709128704,64,FLEN)
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99074793755639808,64,FLEN)
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99076992778895360,64,FLEN)
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99078092290523136,64,FLEN)
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99078642046337024,64,FLEN)
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99078916924243968,64,FLEN)
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079054363197440,64,FLEN)
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079123082674176,64,FLEN)
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079157442412544,64,FLEN)
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079174622281728,64,FLEN)
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079183212216320,64,FLEN)
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079187507183616,64,FLEN)
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079189654667264,64,FLEN)
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079190728409088,64,FLEN)
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191265280000,64,FLEN)
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191533715456,64,FLEN)
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191667933184,64,FLEN)
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191735042048,64,FLEN)
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191768596480,64,FLEN)
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191785373696,64,FLEN)
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191793762304,64,FLEN)
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191797956608,64,FLEN)
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191800053760,64,FLEN)
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191801102336,64,FLEN)
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191801626624,64,FLEN)
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191801888768,64,FLEN)
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802019840,64,FLEN)
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802085376,64,FLEN)
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802118144,64,FLEN)
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802134528,64,FLEN)
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802142720,64,FLEN)
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802146816,64,FLEN)
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802148864,64,FLEN)
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802149888,64,FLEN)
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150400,64,FLEN)
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150656,64,FLEN)
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150784,64,FLEN)
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150848,64,FLEN)
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150880,64,FLEN)
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150896,64,FLEN)
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150904,64,FLEN)
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150908,64,FLEN)
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150910,64,FLEN)
NAN_BOXED(6889766719823303369,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150911,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333248,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333249,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333251,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333255,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333263,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333279,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333311,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333375,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333503,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333759,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265334271,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265335295,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265337343,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265341439,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265349631,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265366015,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265398783,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265464319,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265595391,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265857535,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031266381823,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031267430399,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031269527551,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031273721855,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031282110463,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031298887679,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031332442111,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031399550975,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031533768703,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031802204159,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926032339075071,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926033412816895,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926035560300543,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926039855267839,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926048445202431,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926065625071615,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926099984809983,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926168704286719,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926306143240191,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926581021147135,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290927130776961023,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290928230288588799,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290930429311844351,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290934827358355455,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290943623451377663,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290961215637422079,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290996400009510911,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9291066768753688575,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9291207506242043903,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9291488981218754559,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9292051931172175871,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9293177831079018495,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9293177831079018496,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9294303730985861120,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9294866680939282432,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295148155915993088,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295288893404348416,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295359262148526080,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295394446520614912,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295412038706659328,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295420834799681536,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295425232846192640,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295427431869448192,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295428531381075968,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429081136889856,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429356014796800,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429493453750272,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429562173227008,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429596532965376,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429613712834560,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429622302769152,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429626597736448,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429628745220096,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429629818961920,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630355832832,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630624268288,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630758486016,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630825594880,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630859149312,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630875926528,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630884315136,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630888509440,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630890606592,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630891655168,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892179456,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892441600,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892572672,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892638208,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892670976,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892687360,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892695552,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892699648,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892701696,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892702720,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703232,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703488,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703616,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703680,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703712,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703728,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703736,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703740,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703742,64,FLEN)
NAN_BOXED(6889796071414126503,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703743,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487552,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487553,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487555,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487559,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487567,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487583,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487615,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487679,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487807,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006488063,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006488575,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006489599,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006491647,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006495743,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006503935,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006520319,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006553087,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006618623,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006749695,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413007011839,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413007536127,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413008584703,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413010681855,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413014876159,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413023264767,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413040041983,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413073596415,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413140705279,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413274923007,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413543358463,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602414080229375,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602415153971199,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602417301454847,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602421596422143,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602430186356735,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602447366225919,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602481725964287,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602550445441023,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602687884394495,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602962762301439,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511603512518115327,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511604612029743103,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511606811052998655,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511611209099509759,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511620005192531967,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511637597378576383,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511672781750665215,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511743150494842879,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511883887983198207,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9512165362959908863,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9512728312913330175,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9513854212820172799,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9513854212820172800,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9514980112727015424,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9515543062680436736,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9515824537657147392,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9515965275145502720,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516035643889680384,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516070828261769216,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516088420447813632,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516097216540835840,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516101614587346944,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516103813610602496,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516104913122230272,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516105462878044160,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516105737755951104,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516105875194904576,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516105943914381312,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516105978274119680,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516105995453988864,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106004043923456,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106008338890752,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106010486374400,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106011560116224,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012096987136,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012365422592,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012499640320,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012566749184,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012600303616,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012617080832,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012625469440,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012629663744,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012631760896,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012632809472,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633333760,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633595904,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633726976,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633792512,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633825280,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633841664,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633849856,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633853952,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633856000,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633857024,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633857536,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633857792,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633857920,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633857984,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633858016,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633858032,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633858040,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633858044,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633858046,64,FLEN)
NAN_BOXED(6889802974940042105,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633858047,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480768,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480769,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480771,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480775,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480783,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480799,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480831,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480895,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128481023,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128481279,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128481791,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128482815,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128484863,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128488959,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128497151,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128513535,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128546303,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128611839,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128742911,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033129005055,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033129529343,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033130577919,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033132675071,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033136869375,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033145257983,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033162035199,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033195589631,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033262698495,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033396916223,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033665351679,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408034202222591,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408035275964415,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408037423448063,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408041718415359,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408050308349951,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408067488219135,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408101847957503,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408170567434239,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408308006387711,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408582884294655,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268409132640108543,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268410232151736319,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268412431174991871,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268416829221502975,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268425625314525183,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268443217500569599,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268478401872658431,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268548770616836095,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268689508105191423,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268970983081902079,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9269533933035323391,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9270659832942166015,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9270659832942166016,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9271785732849008640,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272348682802429952,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272630157779140608,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272770895267495936,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272841264011673600,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272876448383762432,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272894040569806848,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272902836662829056,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272907234709340160,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272909433732595712,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272910533244223488,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911083000037376,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911357877944320,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911495316897792,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911564036374528,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911598396112896,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911615575982080,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911624165916672,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911628460883968,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911630608367616,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911631682109440,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632218980352,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632487415808,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632621633536,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632688742400,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632722296832,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632739074048,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632747462656,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632751656960,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632753754112,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632754802688,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755326976,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755589120,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755720192,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755785728,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755818496,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755834880,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755843072,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755847168,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755849216,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755850240,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755850752,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851008,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851136,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851200,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851232,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851248,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851256,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851260,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851262,64,FLEN)
NAN_BOXED(6889803626403225631,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851263,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931328,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931329,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931331,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931335,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931343,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931359,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931391,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931455,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931583,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931839,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976932351,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976933375,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976935423,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976939519,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976947711,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976964095,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976996863,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783977062399,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783977193471,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783977455615,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783977979903,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783979028479,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783981125631,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783985319935,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783993708543,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654784010485759,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654784044040191,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654784111149055,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654784245366783,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654784513802239,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654785050673151,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654786124414975,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654788271898623,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654792566865919,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654801156800511,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654818336669695,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654852696408063,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654921415884799,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193655058854838271,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193655333732745215,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193655883488559103,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193656983000186879,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193659182023442431,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193663580069953535,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193672376162975743,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193689968349020159,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193725152721108991,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193795521465286655,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193936258953641983,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(194217733930352639,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(194780683883773951,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(195906583790616575,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(195906583790616576,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(197032483697459200,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(197595433650880512,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(197876908627591168,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198017646115946496,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198088014860124160,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198123199232212992,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198140791418257408,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198149587511279616,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198153985557790720,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198156184581046272,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198157284092674048,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198157833848487936,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158108726394880,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158246165348352,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158314884825088,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158349244563456,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158366424432640,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158375014367232,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158379309334528,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158381456818176,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158382530560000,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383067430912,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383335866368,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383470084096,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383537192960,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383570747392,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383587524608,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383595913216,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383600107520,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383602204672,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383603253248,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383603777536,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604039680,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604170752,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604236288,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604269056,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604285440,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604293632,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604297728,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604299776,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604300800,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301312,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301568,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301696,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301760,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301792,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301808,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301816,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301820,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301822,64,FLEN)
NAN_BOXED(6889823078110457139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301823,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409920,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409921,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409923,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409927,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409935,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409951,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409983,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547410047,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547410175,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547410431,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547410943,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547411967,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547414015,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547418111,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547426303,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547442687,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547475455,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547540991,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547672063,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547934207,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992548458495,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992549507071,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992551604223,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992555798527,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992564187135,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992580964351,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992614518783,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992681627647,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992815845375,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071993084280831,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071993621151743,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071994694893567,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071996842377215,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90072001137344511,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90072009727279103,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90072026907148287,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90072061266886655,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90072129986363391,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90072267425316863,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90072542303223807,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90073092059037695,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90074191570665471,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90076390593921023,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90080788640432127,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90089584733454335,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90107176919498751,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90142361291587583,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90212730035765247,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90353467524120575,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90634942500831231,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(91197892454252543,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(92323792361095167,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(92323792361095168,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(93449692267937792,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94012642221359104,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94294117198069760,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94434854686425088,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94505223430602752,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94540407802691584,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94557999988736000,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94566796081758208,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94571194128269312,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94573393151524864,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94574492663152640,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575042418966528,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575317296873472,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575454735826944,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575523455303680,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575557815042048,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575574994911232,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575583584845824,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575587879813120,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575590027296768,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575591101038592,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575591637909504,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575591906344960,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592040562688,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592107671552,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592141225984,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592158003200,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592166391808,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592170586112,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592172683264,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592173731840,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174256128,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174518272,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174649344,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174714880,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174747648,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174764032,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174772224,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174776320,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174778368,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174779392,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174779904,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780160,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780288,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780352,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780384,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780400,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780408,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780412,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780414,64,FLEN)
NAN_BOXED(6889899965592104257,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780415,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4039728865751334912,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4039728865751334913,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4039728865751334915,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4039728865751334919,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4039728865751334927,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4039728865751334943,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4039728865751334975,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4039728865751335039,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4039728865751335167,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4039728865751335423,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4039728865751335935,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4039728865751336959,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4039728865751339007,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4039728865751343103,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4039728865751351295,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4039728865751367679,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4039728865751400447,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4039728865751465983,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4039728865751597055,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4039728865751859199,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4039728865752383487,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4039728865753432063,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4039728865755529215,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4039728865759723519,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4039728865768112127,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4039728865784889343,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4039728865818443775,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4039728865885552639,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4039728866019770367,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4039728866288205823,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4039728866825076735,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4039728867898818559,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4039728870046302207,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4039728874341269503,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4039728882931204095,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4039728900111073279,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4039728934470811647,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4039729003190288383,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4039729140629241855,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4039729415507148799,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4039729965262962687,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4039731064774590463,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4039733263797846015,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4039737661844357119,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4039746457937379327,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4039764050123423743,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4039799234495512575,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4039869603239690239,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4040010340728045567,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4040291815704756223,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4040854765658177535,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4041980665565020159,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4041980665565020160,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4043106565471862784,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4043669515425284096,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4043950990401994752,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4044091727890350080,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4044162096634527744,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4044197281006616576,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4044214873192660992,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4044223669285683200,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4044228067332194304,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4044230266355449856,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4044231365867077632,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4044231915622891520,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4044232190500798464,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4044232327939751936,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4044232396659228672,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4044232431018967040,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4044232448198836224,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4044232456788770816,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4044232461083738112,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4044232463231221760,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4044232464304963584,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4044232464841834496,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4044232465110269952,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4044232465244487680,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4044232465311596544,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4044232465345150976,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4044232465361928192,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4044232465370316800,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4044232465374511104,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4044232465376608256,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4044232465377656832,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
