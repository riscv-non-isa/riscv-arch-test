
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_21504:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7ef581743c7e7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87ef581743c7e7; op2val:0x8000;
op3val:0x82affffffffe0000; valaddr_reg:x3; val_offset:64512*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64512*0 + 3*0*FLEN/8, x4, x1, x2)

inst_21505:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7ef581743c7e7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87ef581743c7e7; op2val:0x8000;
op3val:0x82afffffffff0000; valaddr_reg:x3; val_offset:64515*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64515*0 + 3*1*FLEN/8, x4, x1, x2)

inst_21506:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7ef581743c7e7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87ef581743c7e7; op2val:0x8000;
op3val:0x82afffffffff8000; valaddr_reg:x3; val_offset:64518*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64518*0 + 3*2*FLEN/8, x4, x1, x2)

inst_21507:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7ef581743c7e7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87ef581743c7e7; op2val:0x8000;
op3val:0x82afffffffffc000; valaddr_reg:x3; val_offset:64521*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64521*0 + 3*3*FLEN/8, x4, x1, x2)

inst_21508:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7ef581743c7e7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87ef581743c7e7; op2val:0x8000;
op3val:0x82afffffffffe000; valaddr_reg:x3; val_offset:64524*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64524*0 + 3*4*FLEN/8, x4, x1, x2)

inst_21509:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7ef581743c7e7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87ef581743c7e7; op2val:0x8000;
op3val:0x82affffffffff000; valaddr_reg:x3; val_offset:64527*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64527*0 + 3*5*FLEN/8, x4, x1, x2)

inst_21510:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7ef581743c7e7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87ef581743c7e7; op2val:0x8000;
op3val:0x82affffffffff800; valaddr_reg:x3; val_offset:64530*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64530*0 + 3*6*FLEN/8, x4, x1, x2)

inst_21511:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7ef581743c7e7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87ef581743c7e7; op2val:0x8000;
op3val:0x82affffffffffc00; valaddr_reg:x3; val_offset:64533*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64533*0 + 3*7*FLEN/8, x4, x1, x2)

inst_21512:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7ef581743c7e7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87ef581743c7e7; op2val:0x8000;
op3val:0x82affffffffffe00; valaddr_reg:x3; val_offset:64536*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64536*0 + 3*8*FLEN/8, x4, x1, x2)

inst_21513:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7ef581743c7e7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87ef581743c7e7; op2val:0x8000;
op3val:0x82afffffffffff00; valaddr_reg:x3; val_offset:64539*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64539*0 + 3*9*FLEN/8, x4, x1, x2)

inst_21514:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7ef581743c7e7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87ef581743c7e7; op2val:0x8000;
op3val:0x82afffffffffff80; valaddr_reg:x3; val_offset:64542*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64542*0 + 3*10*FLEN/8, x4, x1, x2)

inst_21515:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7ef581743c7e7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87ef581743c7e7; op2val:0x8000;
op3val:0x82afffffffffffc0; valaddr_reg:x3; val_offset:64545*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64545*0 + 3*11*FLEN/8, x4, x1, x2)

inst_21516:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7ef581743c7e7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87ef581743c7e7; op2val:0x8000;
op3val:0x82afffffffffffe0; valaddr_reg:x3; val_offset:64548*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64548*0 + 3*12*FLEN/8, x4, x1, x2)

inst_21517:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7ef581743c7e7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87ef581743c7e7; op2val:0x8000;
op3val:0x82affffffffffff0; valaddr_reg:x3; val_offset:64551*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64551*0 + 3*13*FLEN/8, x4, x1, x2)

inst_21518:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7ef581743c7e7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87ef581743c7e7; op2val:0x8000;
op3val:0x82affffffffffff8; valaddr_reg:x3; val_offset:64554*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64554*0 + 3*14*FLEN/8, x4, x1, x2)

inst_21519:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7ef581743c7e7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87ef581743c7e7; op2val:0x8000;
op3val:0x82affffffffffffc; valaddr_reg:x3; val_offset:64557*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64557*0 + 3*15*FLEN/8, x4, x1, x2)

inst_21520:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7ef581743c7e7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87ef581743c7e7; op2val:0x8000;
op3val:0x82affffffffffffe; valaddr_reg:x3; val_offset:64560*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64560*0 + 3*16*FLEN/8, x4, x1, x2)

inst_21521:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7ef581743c7e7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87ef581743c7e7; op2val:0x8000;
op3val:0x82afffffffffffff; valaddr_reg:x3; val_offset:64563*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64563*0 + 3*17*FLEN/8, x4, x1, x2)

inst_21522:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000008000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x8000; valaddr_reg:x3; val_offset:64566*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64566*0 + 3*18*FLEN/8, x4, x1, x2)

inst_21523:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:64569*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64569*0 + 3*19*FLEN/8, x4, x1, x2)

inst_21524:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:64572*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64572*0 + 3*20*FLEN/8, x4, x1, x2)

inst_21525:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:64575*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64575*0 + 3*21*FLEN/8, x4, x1, x2)

inst_21526:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:64578*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64578*0 + 3*22*FLEN/8, x4, x1, x2)

inst_21527:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:64581*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64581*0 + 3*23*FLEN/8, x4, x1, x2)

inst_21528:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:64584*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64584*0 + 3*24*FLEN/8, x4, x1, x2)

inst_21529:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800000000000007f; valaddr_reg:x3; val_offset:64587*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64587*0 + 3*25*FLEN/8, x4, x1, x2)

inst_21530:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x80000000000000ff; valaddr_reg:x3; val_offset:64590*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64590*0 + 3*26*FLEN/8, x4, x1, x2)

inst_21531:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x80000000000001ff; valaddr_reg:x3; val_offset:64593*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64593*0 + 3*27*FLEN/8, x4, x1, x2)

inst_21532:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x80000000000003ff; valaddr_reg:x3; val_offset:64596*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64596*0 + 3*28*FLEN/8, x4, x1, x2)

inst_21533:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x80000000000007ff; valaddr_reg:x3; val_offset:64599*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64599*0 + 3*29*FLEN/8, x4, x1, x2)

inst_21534:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x8000000000000fff; valaddr_reg:x3; val_offset:64602*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64602*0 + 3*30*FLEN/8, x4, x1, x2)

inst_21535:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x8000000000001fff; valaddr_reg:x3; val_offset:64605*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64605*0 + 3*31*FLEN/8, x4, x1, x2)

inst_21536:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x8000000000003fff; valaddr_reg:x3; val_offset:64608*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64608*0 + 3*32*FLEN/8, x4, x1, x2)

inst_21537:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x8000000000007fff; valaddr_reg:x3; val_offset:64611*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64611*0 + 3*33*FLEN/8, x4, x1, x2)

inst_21538:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800000000000ffff; valaddr_reg:x3; val_offset:64614*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64614*0 + 3*34*FLEN/8, x4, x1, x2)

inst_21539:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800000000001ffff; valaddr_reg:x3; val_offset:64617*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64617*0 + 3*35*FLEN/8, x4, x1, x2)

inst_21540:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800000000003ffff; valaddr_reg:x3; val_offset:64620*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64620*0 + 3*36*FLEN/8, x4, x1, x2)

inst_21541:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800000000007ffff; valaddr_reg:x3; val_offset:64623*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64623*0 + 3*37*FLEN/8, x4, x1, x2)

inst_21542:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x80000000000fffff; valaddr_reg:x3; val_offset:64626*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64626*0 + 3*38*FLEN/8, x4, x1, x2)

inst_21543:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x80000000001fffff; valaddr_reg:x3; val_offset:64629*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64629*0 + 3*39*FLEN/8, x4, x1, x2)

inst_21544:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x80000000003fffff; valaddr_reg:x3; val_offset:64632*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64632*0 + 3*40*FLEN/8, x4, x1, x2)

inst_21545:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x80000000007fffff; valaddr_reg:x3; val_offset:64635*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64635*0 + 3*41*FLEN/8, x4, x1, x2)

inst_21546:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x8000000000ffffff; valaddr_reg:x3; val_offset:64638*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64638*0 + 3*42*FLEN/8, x4, x1, x2)

inst_21547:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x8000000001ffffff; valaddr_reg:x3; val_offset:64641*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64641*0 + 3*43*FLEN/8, x4, x1, x2)

inst_21548:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x8000000003ffffff; valaddr_reg:x3; val_offset:64644*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64644*0 + 3*44*FLEN/8, x4, x1, x2)

inst_21549:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x8000000007ffffff; valaddr_reg:x3; val_offset:64647*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64647*0 + 3*45*FLEN/8, x4, x1, x2)

inst_21550:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800000000fffffff; valaddr_reg:x3; val_offset:64650*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64650*0 + 3*46*FLEN/8, x4, x1, x2)

inst_21551:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800000001fffffff; valaddr_reg:x3; val_offset:64653*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64653*0 + 3*47*FLEN/8, x4, x1, x2)

inst_21552:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800000003fffffff; valaddr_reg:x3; val_offset:64656*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64656*0 + 3*48*FLEN/8, x4, x1, x2)

inst_21553:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800000007fffffff; valaddr_reg:x3; val_offset:64659*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64659*0 + 3*49*FLEN/8, x4, x1, x2)

inst_21554:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x80000000ffffffff; valaddr_reg:x3; val_offset:64662*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64662*0 + 3*50*FLEN/8, x4, x1, x2)

inst_21555:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x80000001ffffffff; valaddr_reg:x3; val_offset:64665*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64665*0 + 3*51*FLEN/8, x4, x1, x2)

inst_21556:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x80000003ffffffff; valaddr_reg:x3; val_offset:64668*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64668*0 + 3*52*FLEN/8, x4, x1, x2)

inst_21557:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x80000007ffffffff; valaddr_reg:x3; val_offset:64671*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64671*0 + 3*53*FLEN/8, x4, x1, x2)

inst_21558:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x8000000fffffffff; valaddr_reg:x3; val_offset:64674*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64674*0 + 3*54*FLEN/8, x4, x1, x2)

inst_21559:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x8000001fffffffff; valaddr_reg:x3; val_offset:64677*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64677*0 + 3*55*FLEN/8, x4, x1, x2)

inst_21560:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x8000003fffffffff; valaddr_reg:x3; val_offset:64680*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64680*0 + 3*56*FLEN/8, x4, x1, x2)

inst_21561:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x8000007fffffffff; valaddr_reg:x3; val_offset:64683*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64683*0 + 3*57*FLEN/8, x4, x1, x2)

inst_21562:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800000ffffffffff; valaddr_reg:x3; val_offset:64686*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64686*0 + 3*58*FLEN/8, x4, x1, x2)

inst_21563:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800001ffffffffff; valaddr_reg:x3; val_offset:64689*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64689*0 + 3*59*FLEN/8, x4, x1, x2)

inst_21564:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800003ffffffffff; valaddr_reg:x3; val_offset:64692*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64692*0 + 3*60*FLEN/8, x4, x1, x2)

inst_21565:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800007ffffffffff; valaddr_reg:x3; val_offset:64695*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64695*0 + 3*61*FLEN/8, x4, x1, x2)

inst_21566:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x80000fffffffffff; valaddr_reg:x3; val_offset:64698*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64698*0 + 3*62*FLEN/8, x4, x1, x2)

inst_21567:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x80001fffffffffff; valaddr_reg:x3; val_offset:64701*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64701*0 + 3*63*FLEN/8, x4, x1, x2)

inst_21568:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x80003fffffffffff; valaddr_reg:x3; val_offset:64704*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64704*0 + 3*64*FLEN/8, x4, x1, x2)

inst_21569:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x80007fffffffffff; valaddr_reg:x3; val_offset:64707*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64707*0 + 3*65*FLEN/8, x4, x1, x2)

inst_21570:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x8000ffffffffffff; valaddr_reg:x3; val_offset:64710*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64710*0 + 3*66*FLEN/8, x4, x1, x2)

inst_21571:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x8001ffffffffffff; valaddr_reg:x3; val_offset:64713*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64713*0 + 3*67*FLEN/8, x4, x1, x2)

inst_21572:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:64716*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64716*0 + 3*68*FLEN/8, x4, x1, x2)

inst_21573:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x8003ffffffffffff; valaddr_reg:x3; val_offset:64719*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64719*0 + 3*69*FLEN/8, x4, x1, x2)

inst_21574:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:64722*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64722*0 + 3*70*FLEN/8, x4, x1, x2)

inst_21575:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:64725*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64725*0 + 3*71*FLEN/8, x4, x1, x2)

inst_21576:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:64728*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64728*0 + 3*72*FLEN/8, x4, x1, x2)

inst_21577:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:64731*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64731*0 + 3*73*FLEN/8, x4, x1, x2)

inst_21578:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x8007ffffffffffff; valaddr_reg:x3; val_offset:64734*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64734*0 + 3*74*FLEN/8, x4, x1, x2)

inst_21579:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x8008000000000000; valaddr_reg:x3; val_offset:64737*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64737*0 + 3*75*FLEN/8, x4, x1, x2)

inst_21580:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:64740*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64740*0 + 3*76*FLEN/8, x4, x1, x2)

inst_21581:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:64743*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64743*0 + 3*77*FLEN/8, x4, x1, x2)

inst_21582:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:64746*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64746*0 + 3*78*FLEN/8, x4, x1, x2)

inst_21583:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800c000000000000; valaddr_reg:x3; val_offset:64749*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64749*0 + 3*79*FLEN/8, x4, x1, x2)

inst_21584:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:64752*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64752*0 + 3*80*FLEN/8, x4, x1, x2)

inst_21585:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:64755*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64755*0 + 3*81*FLEN/8, x4, x1, x2)

inst_21586:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800e000000000000; valaddr_reg:x3; val_offset:64758*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64758*0 + 3*82*FLEN/8, x4, x1, x2)

inst_21587:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800f000000000000; valaddr_reg:x3; val_offset:64761*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64761*0 + 3*83*FLEN/8, x4, x1, x2)

inst_21588:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800f800000000000; valaddr_reg:x3; val_offset:64764*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64764*0 + 3*84*FLEN/8, x4, x1, x2)

inst_21589:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800fc00000000000; valaddr_reg:x3; val_offset:64767*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64767*0 + 3*85*FLEN/8, x4, x1, x2)

inst_21590:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800fe00000000000; valaddr_reg:x3; val_offset:64770*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64770*0 + 3*86*FLEN/8, x4, x1, x2)

inst_21591:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800ff00000000000; valaddr_reg:x3; val_offset:64773*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64773*0 + 3*87*FLEN/8, x4, x1, x2)

inst_21592:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800ff80000000000; valaddr_reg:x3; val_offset:64776*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64776*0 + 3*88*FLEN/8, x4, x1, x2)

inst_21593:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800ffc0000000000; valaddr_reg:x3; val_offset:64779*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64779*0 + 3*89*FLEN/8, x4, x1, x2)

inst_21594:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800ffe0000000000; valaddr_reg:x3; val_offset:64782*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64782*0 + 3*90*FLEN/8, x4, x1, x2)

inst_21595:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800fff0000000000; valaddr_reg:x3; val_offset:64785*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64785*0 + 3*91*FLEN/8, x4, x1, x2)

inst_21596:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800fff8000000000; valaddr_reg:x3; val_offset:64788*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64788*0 + 3*92*FLEN/8, x4, x1, x2)

inst_21597:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800fffc000000000; valaddr_reg:x3; val_offset:64791*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64791*0 + 3*93*FLEN/8, x4, x1, x2)

inst_21598:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800fffe000000000; valaddr_reg:x3; val_offset:64794*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64794*0 + 3*94*FLEN/8, x4, x1, x2)

inst_21599:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800ffff000000000; valaddr_reg:x3; val_offset:64797*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64797*0 + 3*95*FLEN/8, x4, x1, x2)

inst_21600:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800ffff800000000; valaddr_reg:x3; val_offset:64800*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64800*0 + 3*96*FLEN/8, x4, x1, x2)

inst_21601:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800ffffc00000000; valaddr_reg:x3; val_offset:64803*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64803*0 + 3*97*FLEN/8, x4, x1, x2)

inst_21602:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800ffffe00000000; valaddr_reg:x3; val_offset:64806*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64806*0 + 3*98*FLEN/8, x4, x1, x2)

inst_21603:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800fffff00000000; valaddr_reg:x3; val_offset:64809*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64809*0 + 3*99*FLEN/8, x4, x1, x2)

inst_21604:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800fffff80000000; valaddr_reg:x3; val_offset:64812*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64812*0 + 3*100*FLEN/8, x4, x1, x2)

inst_21605:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800fffffc0000000; valaddr_reg:x3; val_offset:64815*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64815*0 + 3*101*FLEN/8, x4, x1, x2)

inst_21606:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800fffffe0000000; valaddr_reg:x3; val_offset:64818*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64818*0 + 3*102*FLEN/8, x4, x1, x2)

inst_21607:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800ffffff0000000; valaddr_reg:x3; val_offset:64821*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64821*0 + 3*103*FLEN/8, x4, x1, x2)

inst_21608:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800ffffff8000000; valaddr_reg:x3; val_offset:64824*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64824*0 + 3*104*FLEN/8, x4, x1, x2)

inst_21609:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800ffffffc000000; valaddr_reg:x3; val_offset:64827*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64827*0 + 3*105*FLEN/8, x4, x1, x2)

inst_21610:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800ffffffe000000; valaddr_reg:x3; val_offset:64830*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64830*0 + 3*106*FLEN/8, x4, x1, x2)

inst_21611:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800fffffff000000; valaddr_reg:x3; val_offset:64833*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64833*0 + 3*107*FLEN/8, x4, x1, x2)

inst_21612:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800fffffff800000; valaddr_reg:x3; val_offset:64836*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64836*0 + 3*108*FLEN/8, x4, x1, x2)

inst_21613:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800fffffffc00000; valaddr_reg:x3; val_offset:64839*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64839*0 + 3*109*FLEN/8, x4, x1, x2)

inst_21614:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800fffffffe00000; valaddr_reg:x3; val_offset:64842*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64842*0 + 3*110*FLEN/8, x4, x1, x2)

inst_21615:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800ffffffff00000; valaddr_reg:x3; val_offset:64845*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64845*0 + 3*111*FLEN/8, x4, x1, x2)

inst_21616:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800ffffffff80000; valaddr_reg:x3; val_offset:64848*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64848*0 + 3*112*FLEN/8, x4, x1, x2)

inst_21617:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800ffffffffc0000; valaddr_reg:x3; val_offset:64851*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64851*0 + 3*113*FLEN/8, x4, x1, x2)

inst_21618:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800ffffffffe0000; valaddr_reg:x3; val_offset:64854*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64854*0 + 3*114*FLEN/8, x4, x1, x2)

inst_21619:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800fffffffff0000; valaddr_reg:x3; val_offset:64857*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64857*0 + 3*115*FLEN/8, x4, x1, x2)

inst_21620:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800fffffffff8000; valaddr_reg:x3; val_offset:64860*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64860*0 + 3*116*FLEN/8, x4, x1, x2)

inst_21621:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800fffffffffc000; valaddr_reg:x3; val_offset:64863*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64863*0 + 3*117*FLEN/8, x4, x1, x2)

inst_21622:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800fffffffffe000; valaddr_reg:x3; val_offset:64866*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64866*0 + 3*118*FLEN/8, x4, x1, x2)

inst_21623:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800ffffffffff000; valaddr_reg:x3; val_offset:64869*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64869*0 + 3*119*FLEN/8, x4, x1, x2)

inst_21624:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800ffffffffff800; valaddr_reg:x3; val_offset:64872*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64872*0 + 3*120*FLEN/8, x4, x1, x2)

inst_21625:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800ffffffffffc00; valaddr_reg:x3; val_offset:64875*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64875*0 + 3*121*FLEN/8, x4, x1, x2)

inst_21626:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800ffffffffffe00; valaddr_reg:x3; val_offset:64878*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64878*0 + 3*122*FLEN/8, x4, x1, x2)

inst_21627:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800fffffffffff00; valaddr_reg:x3; val_offset:64881*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64881*0 + 3*123*FLEN/8, x4, x1, x2)

inst_21628:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800fffffffffff80; valaddr_reg:x3; val_offset:64884*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64884*0 + 3*124*FLEN/8, x4, x1, x2)

inst_21629:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:64887*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64887*0 + 3*125*FLEN/8, x4, x1, x2)

inst_21630:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:64890*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64890*0 + 3*126*FLEN/8, x4, x1, x2)

inst_21631:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:64893*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64893*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_21632:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:64896*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64896*0 + 3*128*FLEN/8, x4, x1, x2)

inst_21633:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:64899*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64899*0 + 3*129*FLEN/8, x4, x1, x2)

inst_21634:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:64902*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64902*0 + 3*130*FLEN/8, x4, x1, x2)

inst_21635:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f883df99d24bacb; op2val:0x8000;
op3val:0x800fffffffffffff; valaddr_reg:x3; val_offset:64905*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64905*0 + 3*131*FLEN/8, x4, x1, x2)

inst_21636:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:64908*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64908*0 + 3*132*FLEN/8, x4, x1, x2)

inst_21637:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:64911*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64911*0 + 3*133*FLEN/8, x4, x1, x2)

inst_21638:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:64914*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64914*0 + 3*134*FLEN/8, x4, x1, x2)

inst_21639:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:64917*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64917*0 + 3*135*FLEN/8, x4, x1, x2)

inst_21640:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:64920*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64920*0 + 3*136*FLEN/8, x4, x1, x2)

inst_21641:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:64923*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64923*0 + 3*137*FLEN/8, x4, x1, x2)

inst_21642:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:64926*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64926*0 + 3*138*FLEN/8, x4, x1, x2)

inst_21643:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:64929*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64929*0 + 3*139*FLEN/8, x4, x1, x2)

inst_21644:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:64932*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64932*0 + 3*140*FLEN/8, x4, x1, x2)

inst_21645:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:64935*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64935*0 + 3*141*FLEN/8, x4, x1, x2)

inst_21646:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:64938*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64938*0 + 3*142*FLEN/8, x4, x1, x2)

inst_21647:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:64941*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64941*0 + 3*143*FLEN/8, x4, x1, x2)

inst_21648:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:64944*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64944*0 + 3*144*FLEN/8, x4, x1, x2)

inst_21649:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:64947*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64947*0 + 3*145*FLEN/8, x4, x1, x2)

inst_21650:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:64950*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64950*0 + 3*146*FLEN/8, x4, x1, x2)

inst_21651:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:64953*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64953*0 + 3*147*FLEN/8, x4, x1, x2)

inst_21652:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:64956*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64956*0 + 3*148*FLEN/8, x4, x1, x2)

inst_21653:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:64959*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64959*0 + 3*149*FLEN/8, x4, x1, x2)

inst_21654:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:64962*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64962*0 + 3*150*FLEN/8, x4, x1, x2)

inst_21655:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:64965*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64965*0 + 3*151*FLEN/8, x4, x1, x2)

inst_21656:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:64968*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64968*0 + 3*152*FLEN/8, x4, x1, x2)

inst_21657:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:64971*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64971*0 + 3*153*FLEN/8, x4, x1, x2)

inst_21658:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3f0000000000000; valaddr_reg:x3; val_offset:64974*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64974*0 + 3*154*FLEN/8, x4, x1, x2)

inst_21659:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3f0000000000001; valaddr_reg:x3; val_offset:64977*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64977*0 + 3*155*FLEN/8, x4, x1, x2)

inst_21660:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3f0000000000003; valaddr_reg:x3; val_offset:64980*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64980*0 + 3*156*FLEN/8, x4, x1, x2)

inst_21661:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3f0000000000007; valaddr_reg:x3; val_offset:64983*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64983*0 + 3*157*FLEN/8, x4, x1, x2)

inst_21662:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3f000000000000f; valaddr_reg:x3; val_offset:64986*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64986*0 + 3*158*FLEN/8, x4, x1, x2)

inst_21663:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3f000000000001f; valaddr_reg:x3; val_offset:64989*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64989*0 + 3*159*FLEN/8, x4, x1, x2)

inst_21664:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3f000000000003f; valaddr_reg:x3; val_offset:64992*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64992*0 + 3*160*FLEN/8, x4, x1, x2)

inst_21665:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3f000000000007f; valaddr_reg:x3; val_offset:64995*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64995*0 + 3*161*FLEN/8, x4, x1, x2)

inst_21666:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3f00000000000ff; valaddr_reg:x3; val_offset:64998*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64998*0 + 3*162*FLEN/8, x4, x1, x2)

inst_21667:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3f00000000001ff; valaddr_reg:x3; val_offset:65001*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65001*0 + 3*163*FLEN/8, x4, x1, x2)

inst_21668:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3f00000000003ff; valaddr_reg:x3; val_offset:65004*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65004*0 + 3*164*FLEN/8, x4, x1, x2)

inst_21669:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3f00000000007ff; valaddr_reg:x3; val_offset:65007*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65007*0 + 3*165*FLEN/8, x4, x1, x2)

inst_21670:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3f0000000000fff; valaddr_reg:x3; val_offset:65010*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65010*0 + 3*166*FLEN/8, x4, x1, x2)

inst_21671:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3f0000000001fff; valaddr_reg:x3; val_offset:65013*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65013*0 + 3*167*FLEN/8, x4, x1, x2)

inst_21672:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3f0000000003fff; valaddr_reg:x3; val_offset:65016*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65016*0 + 3*168*FLEN/8, x4, x1, x2)

inst_21673:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3f0000000007fff; valaddr_reg:x3; val_offset:65019*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65019*0 + 3*169*FLEN/8, x4, x1, x2)

inst_21674:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3f000000000ffff; valaddr_reg:x3; val_offset:65022*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65022*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21675:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3f000000001ffff; valaddr_reg:x3; val_offset:65025*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65025*0 + 3*171*FLEN/8, x4, x1, x2)

inst_21676:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3f000000003ffff; valaddr_reg:x3; val_offset:65028*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65028*0 + 3*172*FLEN/8, x4, x1, x2)

inst_21677:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3f000000007ffff; valaddr_reg:x3; val_offset:65031*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65031*0 + 3*173*FLEN/8, x4, x1, x2)

inst_21678:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3f00000000fffff; valaddr_reg:x3; val_offset:65034*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65034*0 + 3*174*FLEN/8, x4, x1, x2)

inst_21679:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3f00000001fffff; valaddr_reg:x3; val_offset:65037*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65037*0 + 3*175*FLEN/8, x4, x1, x2)

inst_21680:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3f00000003fffff; valaddr_reg:x3; val_offset:65040*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65040*0 + 3*176*FLEN/8, x4, x1, x2)

inst_21681:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3f00000007fffff; valaddr_reg:x3; val_offset:65043*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65043*0 + 3*177*FLEN/8, x4, x1, x2)

inst_21682:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3f0000000ffffff; valaddr_reg:x3; val_offset:65046*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65046*0 + 3*178*FLEN/8, x4, x1, x2)

inst_21683:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3f0000001ffffff; valaddr_reg:x3; val_offset:65049*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65049*0 + 3*179*FLEN/8, x4, x1, x2)

inst_21684:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3f0000003ffffff; valaddr_reg:x3; val_offset:65052*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65052*0 + 3*180*FLEN/8, x4, x1, x2)

inst_21685:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3f0000007ffffff; valaddr_reg:x3; val_offset:65055*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65055*0 + 3*181*FLEN/8, x4, x1, x2)

inst_21686:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3f000000fffffff; valaddr_reg:x3; val_offset:65058*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65058*0 + 3*182*FLEN/8, x4, x1, x2)

inst_21687:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3f000001fffffff; valaddr_reg:x3; val_offset:65061*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65061*0 + 3*183*FLEN/8, x4, x1, x2)

inst_21688:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3f000003fffffff; valaddr_reg:x3; val_offset:65064*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65064*0 + 3*184*FLEN/8, x4, x1, x2)

inst_21689:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3f000007fffffff; valaddr_reg:x3; val_offset:65067*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65067*0 + 3*185*FLEN/8, x4, x1, x2)

inst_21690:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3f00000ffffffff; valaddr_reg:x3; val_offset:65070*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65070*0 + 3*186*FLEN/8, x4, x1, x2)

inst_21691:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3f00001ffffffff; valaddr_reg:x3; val_offset:65073*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65073*0 + 3*187*FLEN/8, x4, x1, x2)

inst_21692:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3f00003ffffffff; valaddr_reg:x3; val_offset:65076*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65076*0 + 3*188*FLEN/8, x4, x1, x2)

inst_21693:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3f00007ffffffff; valaddr_reg:x3; val_offset:65079*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65079*0 + 3*189*FLEN/8, x4, x1, x2)

inst_21694:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3f0000fffffffff; valaddr_reg:x3; val_offset:65082*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65082*0 + 3*190*FLEN/8, x4, x1, x2)

inst_21695:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3f0001fffffffff; valaddr_reg:x3; val_offset:65085*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65085*0 + 3*191*FLEN/8, x4, x1, x2)

inst_21696:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3f0003fffffffff; valaddr_reg:x3; val_offset:65088*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65088*0 + 3*192*FLEN/8, x4, x1, x2)

inst_21697:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3f0007fffffffff; valaddr_reg:x3; val_offset:65091*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65091*0 + 3*193*FLEN/8, x4, x1, x2)

inst_21698:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3f000ffffffffff; valaddr_reg:x3; val_offset:65094*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65094*0 + 3*194*FLEN/8, x4, x1, x2)

inst_21699:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3f001ffffffffff; valaddr_reg:x3; val_offset:65097*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65097*0 + 3*195*FLEN/8, x4, x1, x2)

inst_21700:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3f003ffffffffff; valaddr_reg:x3; val_offset:65100*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65100*0 + 3*196*FLEN/8, x4, x1, x2)

inst_21701:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3f007ffffffffff; valaddr_reg:x3; val_offset:65103*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65103*0 + 3*197*FLEN/8, x4, x1, x2)

inst_21702:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3f00fffffffffff; valaddr_reg:x3; val_offset:65106*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65106*0 + 3*198*FLEN/8, x4, x1, x2)

inst_21703:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3f01fffffffffff; valaddr_reg:x3; val_offset:65109*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65109*0 + 3*199*FLEN/8, x4, x1, x2)

inst_21704:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3f03fffffffffff; valaddr_reg:x3; val_offset:65112*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65112*0 + 3*200*FLEN/8, x4, x1, x2)

inst_21705:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3f07fffffffffff; valaddr_reg:x3; val_offset:65115*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65115*0 + 3*201*FLEN/8, x4, x1, x2)

inst_21706:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3f0ffffffffffff; valaddr_reg:x3; val_offset:65118*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65118*0 + 3*202*FLEN/8, x4, x1, x2)

inst_21707:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3f1ffffffffffff; valaddr_reg:x3; val_offset:65121*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65121*0 + 3*203*FLEN/8, x4, x1, x2)

inst_21708:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3f3ffffffffffff; valaddr_reg:x3; val_offset:65124*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65124*0 + 3*204*FLEN/8, x4, x1, x2)

inst_21709:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3f7ffffffffffff; valaddr_reg:x3; val_offset:65127*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65127*0 + 3*205*FLEN/8, x4, x1, x2)

inst_21710:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3f8000000000000; valaddr_reg:x3; val_offset:65130*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65130*0 + 3*206*FLEN/8, x4, x1, x2)

inst_21711:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3fc000000000000; valaddr_reg:x3; val_offset:65133*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65133*0 + 3*207*FLEN/8, x4, x1, x2)

inst_21712:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3fe000000000000; valaddr_reg:x3; val_offset:65136*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65136*0 + 3*208*FLEN/8, x4, x1, x2)

inst_21713:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3ff000000000000; valaddr_reg:x3; val_offset:65139*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65139*0 + 3*209*FLEN/8, x4, x1, x2)

inst_21714:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3ff800000000000; valaddr_reg:x3; val_offset:65142*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65142*0 + 3*210*FLEN/8, x4, x1, x2)

inst_21715:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3ffc00000000000; valaddr_reg:x3; val_offset:65145*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65145*0 + 3*211*FLEN/8, x4, x1, x2)

inst_21716:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3ffe00000000000; valaddr_reg:x3; val_offset:65148*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65148*0 + 3*212*FLEN/8, x4, x1, x2)

inst_21717:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3fff00000000000; valaddr_reg:x3; val_offset:65151*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65151*0 + 3*213*FLEN/8, x4, x1, x2)

inst_21718:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3fff80000000000; valaddr_reg:x3; val_offset:65154*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65154*0 + 3*214*FLEN/8, x4, x1, x2)

inst_21719:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3fffc0000000000; valaddr_reg:x3; val_offset:65157*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65157*0 + 3*215*FLEN/8, x4, x1, x2)

inst_21720:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3fffe0000000000; valaddr_reg:x3; val_offset:65160*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65160*0 + 3*216*FLEN/8, x4, x1, x2)

inst_21721:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3ffff0000000000; valaddr_reg:x3; val_offset:65163*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65163*0 + 3*217*FLEN/8, x4, x1, x2)

inst_21722:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3ffff8000000000; valaddr_reg:x3; val_offset:65166*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65166*0 + 3*218*FLEN/8, x4, x1, x2)

inst_21723:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3ffffc000000000; valaddr_reg:x3; val_offset:65169*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65169*0 + 3*219*FLEN/8, x4, x1, x2)

inst_21724:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3ffffe000000000; valaddr_reg:x3; val_offset:65172*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65172*0 + 3*220*FLEN/8, x4, x1, x2)

inst_21725:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3fffff000000000; valaddr_reg:x3; val_offset:65175*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65175*0 + 3*221*FLEN/8, x4, x1, x2)

inst_21726:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3fffff800000000; valaddr_reg:x3; val_offset:65178*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65178*0 + 3*222*FLEN/8, x4, x1, x2)

inst_21727:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3fffffc00000000; valaddr_reg:x3; val_offset:65181*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65181*0 + 3*223*FLEN/8, x4, x1, x2)

inst_21728:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3fffffe00000000; valaddr_reg:x3; val_offset:65184*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65184*0 + 3*224*FLEN/8, x4, x1, x2)

inst_21729:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3ffffff00000000; valaddr_reg:x3; val_offset:65187*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65187*0 + 3*225*FLEN/8, x4, x1, x2)

inst_21730:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3ffffff80000000; valaddr_reg:x3; val_offset:65190*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65190*0 + 3*226*FLEN/8, x4, x1, x2)

inst_21731:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3ffffffc0000000; valaddr_reg:x3; val_offset:65193*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65193*0 + 3*227*FLEN/8, x4, x1, x2)

inst_21732:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3ffffffe0000000; valaddr_reg:x3; val_offset:65196*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65196*0 + 3*228*FLEN/8, x4, x1, x2)

inst_21733:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3fffffff0000000; valaddr_reg:x3; val_offset:65199*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65199*0 + 3*229*FLEN/8, x4, x1, x2)

inst_21734:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3fffffff8000000; valaddr_reg:x3; val_offset:65202*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65202*0 + 3*230*FLEN/8, x4, x1, x2)

inst_21735:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3fffffffc000000; valaddr_reg:x3; val_offset:65205*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65205*0 + 3*231*FLEN/8, x4, x1, x2)

inst_21736:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3fffffffe000000; valaddr_reg:x3; val_offset:65208*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65208*0 + 3*232*FLEN/8, x4, x1, x2)

inst_21737:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3ffffffff000000; valaddr_reg:x3; val_offset:65211*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65211*0 + 3*233*FLEN/8, x4, x1, x2)

inst_21738:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3ffffffff800000; valaddr_reg:x3; val_offset:65214*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65214*0 + 3*234*FLEN/8, x4, x1, x2)

inst_21739:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3ffffffffc00000; valaddr_reg:x3; val_offset:65217*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65217*0 + 3*235*FLEN/8, x4, x1, x2)

inst_21740:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3ffffffffe00000; valaddr_reg:x3; val_offset:65220*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65220*0 + 3*236*FLEN/8, x4, x1, x2)

inst_21741:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3fffffffff00000; valaddr_reg:x3; val_offset:65223*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65223*0 + 3*237*FLEN/8, x4, x1, x2)

inst_21742:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3fffffffff80000; valaddr_reg:x3; val_offset:65226*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65226*0 + 3*238*FLEN/8, x4, x1, x2)

inst_21743:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3fffffffffc0000; valaddr_reg:x3; val_offset:65229*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65229*0 + 3*239*FLEN/8, x4, x1, x2)

inst_21744:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3fffffffffe0000; valaddr_reg:x3; val_offset:65232*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65232*0 + 3*240*FLEN/8, x4, x1, x2)

inst_21745:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3ffffffffff0000; valaddr_reg:x3; val_offset:65235*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65235*0 + 3*241*FLEN/8, x4, x1, x2)

inst_21746:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3ffffffffff8000; valaddr_reg:x3; val_offset:65238*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65238*0 + 3*242*FLEN/8, x4, x1, x2)

inst_21747:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3ffffffffffc000; valaddr_reg:x3; val_offset:65241*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65241*0 + 3*243*FLEN/8, x4, x1, x2)

inst_21748:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3ffffffffffe000; valaddr_reg:x3; val_offset:65244*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65244*0 + 3*244*FLEN/8, x4, x1, x2)

inst_21749:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3fffffffffff000; valaddr_reg:x3; val_offset:65247*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65247*0 + 3*245*FLEN/8, x4, x1, x2)

inst_21750:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3fffffffffff800; valaddr_reg:x3; val_offset:65250*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65250*0 + 3*246*FLEN/8, x4, x1, x2)

inst_21751:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3fffffffffffc00; valaddr_reg:x3; val_offset:65253*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65253*0 + 3*247*FLEN/8, x4, x1, x2)

inst_21752:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3fffffffffffe00; valaddr_reg:x3; val_offset:65256*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65256*0 + 3*248*FLEN/8, x4, x1, x2)

inst_21753:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3ffffffffffff00; valaddr_reg:x3; val_offset:65259*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65259*0 + 3*249*FLEN/8, x4, x1, x2)

inst_21754:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3ffffffffffff80; valaddr_reg:x3; val_offset:65262*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65262*0 + 3*250*FLEN/8, x4, x1, x2)

inst_21755:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3ffffffffffffc0; valaddr_reg:x3; val_offset:65265*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65265*0 + 3*251*FLEN/8, x4, x1, x2)

inst_21756:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3ffffffffffffe0; valaddr_reg:x3; val_offset:65268*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65268*0 + 3*252*FLEN/8, x4, x1, x2)

inst_21757:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3fffffffffffff0; valaddr_reg:x3; val_offset:65271*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65271*0 + 3*253*FLEN/8, x4, x1, x2)

inst_21758:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3fffffffffffff8; valaddr_reg:x3; val_offset:65274*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65274*0 + 3*254*FLEN/8, x4, x1, x2)

inst_21759:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3fffffffffffffc; valaddr_reg:x3; val_offset:65277*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65277*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_21760:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3fffffffffffffe; valaddr_reg:x3; val_offset:65280*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65280*0 + 3*256*FLEN/8, x4, x1, x2)

inst_21761:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8563ce5e6364b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88563ce5e6364b; op2val:0x0;
op3val:0x3ffffffffffffff; valaddr_reg:x3; val_offset:65283*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65283*0 + 3*257*FLEN/8, x4, x1, x2)

inst_21762:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d90000000000000; valaddr_reg:x3; val_offset:65286*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65286*0 + 3*258*FLEN/8, x4, x1, x2)

inst_21763:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d90000000000001; valaddr_reg:x3; val_offset:65289*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65289*0 + 3*259*FLEN/8, x4, x1, x2)

inst_21764:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d90000000000003; valaddr_reg:x3; val_offset:65292*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65292*0 + 3*260*FLEN/8, x4, x1, x2)

inst_21765:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d90000000000007; valaddr_reg:x3; val_offset:65295*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65295*0 + 3*261*FLEN/8, x4, x1, x2)

inst_21766:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9000000000000f; valaddr_reg:x3; val_offset:65298*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65298*0 + 3*262*FLEN/8, x4, x1, x2)

inst_21767:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9000000000001f; valaddr_reg:x3; val_offset:65301*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65301*0 + 3*263*FLEN/8, x4, x1, x2)

inst_21768:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9000000000003f; valaddr_reg:x3; val_offset:65304*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65304*0 + 3*264*FLEN/8, x4, x1, x2)

inst_21769:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9000000000007f; valaddr_reg:x3; val_offset:65307*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65307*0 + 3*265*FLEN/8, x4, x1, x2)

inst_21770:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d900000000000ff; valaddr_reg:x3; val_offset:65310*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65310*0 + 3*266*FLEN/8, x4, x1, x2)

inst_21771:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d900000000001ff; valaddr_reg:x3; val_offset:65313*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65313*0 + 3*267*FLEN/8, x4, x1, x2)

inst_21772:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d900000000003ff; valaddr_reg:x3; val_offset:65316*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65316*0 + 3*268*FLEN/8, x4, x1, x2)

inst_21773:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d900000000007ff; valaddr_reg:x3; val_offset:65319*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65319*0 + 3*269*FLEN/8, x4, x1, x2)

inst_21774:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d90000000000fff; valaddr_reg:x3; val_offset:65322*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65322*0 + 3*270*FLEN/8, x4, x1, x2)

inst_21775:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d90000000001fff; valaddr_reg:x3; val_offset:65325*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65325*0 + 3*271*FLEN/8, x4, x1, x2)

inst_21776:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d90000000003fff; valaddr_reg:x3; val_offset:65328*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65328*0 + 3*272*FLEN/8, x4, x1, x2)

inst_21777:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d90000000007fff; valaddr_reg:x3; val_offset:65331*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65331*0 + 3*273*FLEN/8, x4, x1, x2)

inst_21778:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9000000000ffff; valaddr_reg:x3; val_offset:65334*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65334*0 + 3*274*FLEN/8, x4, x1, x2)

inst_21779:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9000000001ffff; valaddr_reg:x3; val_offset:65337*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65337*0 + 3*275*FLEN/8, x4, x1, x2)

inst_21780:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9000000003ffff; valaddr_reg:x3; val_offset:65340*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65340*0 + 3*276*FLEN/8, x4, x1, x2)

inst_21781:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9000000007ffff; valaddr_reg:x3; val_offset:65343*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65343*0 + 3*277*FLEN/8, x4, x1, x2)

inst_21782:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d900000000fffff; valaddr_reg:x3; val_offset:65346*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65346*0 + 3*278*FLEN/8, x4, x1, x2)

inst_21783:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d900000001fffff; valaddr_reg:x3; val_offset:65349*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65349*0 + 3*279*FLEN/8, x4, x1, x2)

inst_21784:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d900000003fffff; valaddr_reg:x3; val_offset:65352*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65352*0 + 3*280*FLEN/8, x4, x1, x2)

inst_21785:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d900000007fffff; valaddr_reg:x3; val_offset:65355*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65355*0 + 3*281*FLEN/8, x4, x1, x2)

inst_21786:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d90000000ffffff; valaddr_reg:x3; val_offset:65358*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65358*0 + 3*282*FLEN/8, x4, x1, x2)

inst_21787:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d90000001ffffff; valaddr_reg:x3; val_offset:65361*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65361*0 + 3*283*FLEN/8, x4, x1, x2)

inst_21788:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d90000003ffffff; valaddr_reg:x3; val_offset:65364*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65364*0 + 3*284*FLEN/8, x4, x1, x2)

inst_21789:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d90000007ffffff; valaddr_reg:x3; val_offset:65367*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65367*0 + 3*285*FLEN/8, x4, x1, x2)

inst_21790:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9000000fffffff; valaddr_reg:x3; val_offset:65370*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65370*0 + 3*286*FLEN/8, x4, x1, x2)

inst_21791:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9000001fffffff; valaddr_reg:x3; val_offset:65373*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65373*0 + 3*287*FLEN/8, x4, x1, x2)

inst_21792:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9000003fffffff; valaddr_reg:x3; val_offset:65376*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65376*0 + 3*288*FLEN/8, x4, x1, x2)

inst_21793:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9000007fffffff; valaddr_reg:x3; val_offset:65379*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65379*0 + 3*289*FLEN/8, x4, x1, x2)

inst_21794:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d900000ffffffff; valaddr_reg:x3; val_offset:65382*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65382*0 + 3*290*FLEN/8, x4, x1, x2)

inst_21795:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d900001ffffffff; valaddr_reg:x3; val_offset:65385*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65385*0 + 3*291*FLEN/8, x4, x1, x2)

inst_21796:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d900003ffffffff; valaddr_reg:x3; val_offset:65388*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65388*0 + 3*292*FLEN/8, x4, x1, x2)

inst_21797:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d900007ffffffff; valaddr_reg:x3; val_offset:65391*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65391*0 + 3*293*FLEN/8, x4, x1, x2)

inst_21798:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d90000fffffffff; valaddr_reg:x3; val_offset:65394*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65394*0 + 3*294*FLEN/8, x4, x1, x2)

inst_21799:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d90001fffffffff; valaddr_reg:x3; val_offset:65397*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65397*0 + 3*295*FLEN/8, x4, x1, x2)

inst_21800:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d90003fffffffff; valaddr_reg:x3; val_offset:65400*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65400*0 + 3*296*FLEN/8, x4, x1, x2)

inst_21801:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d90007fffffffff; valaddr_reg:x3; val_offset:65403*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65403*0 + 3*297*FLEN/8, x4, x1, x2)

inst_21802:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9000ffffffffff; valaddr_reg:x3; val_offset:65406*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65406*0 + 3*298*FLEN/8, x4, x1, x2)

inst_21803:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9001ffffffffff; valaddr_reg:x3; val_offset:65409*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65409*0 + 3*299*FLEN/8, x4, x1, x2)

inst_21804:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9003ffffffffff; valaddr_reg:x3; val_offset:65412*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65412*0 + 3*300*FLEN/8, x4, x1, x2)

inst_21805:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9007ffffffffff; valaddr_reg:x3; val_offset:65415*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65415*0 + 3*301*FLEN/8, x4, x1, x2)

inst_21806:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d900fffffffffff; valaddr_reg:x3; val_offset:65418*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65418*0 + 3*302*FLEN/8, x4, x1, x2)

inst_21807:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d901fffffffffff; valaddr_reg:x3; val_offset:65421*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65421*0 + 3*303*FLEN/8, x4, x1, x2)

inst_21808:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d903fffffffffff; valaddr_reg:x3; val_offset:65424*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65424*0 + 3*304*FLEN/8, x4, x1, x2)

inst_21809:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d907fffffffffff; valaddr_reg:x3; val_offset:65427*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65427*0 + 3*305*FLEN/8, x4, x1, x2)

inst_21810:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d90ffffffffffff; valaddr_reg:x3; val_offset:65430*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65430*0 + 3*306*FLEN/8, x4, x1, x2)

inst_21811:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d91ffffffffffff; valaddr_reg:x3; val_offset:65433*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65433*0 + 3*307*FLEN/8, x4, x1, x2)

inst_21812:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d93ffffffffffff; valaddr_reg:x3; val_offset:65436*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65436*0 + 3*308*FLEN/8, x4, x1, x2)

inst_21813:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d97ffffffffffff; valaddr_reg:x3; val_offset:65439*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65439*0 + 3*309*FLEN/8, x4, x1, x2)

inst_21814:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d98000000000000; valaddr_reg:x3; val_offset:65442*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65442*0 + 3*310*FLEN/8, x4, x1, x2)

inst_21815:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9c000000000000; valaddr_reg:x3; val_offset:65445*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65445*0 + 3*311*FLEN/8, x4, x1, x2)

inst_21816:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9e000000000000; valaddr_reg:x3; val_offset:65448*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65448*0 + 3*312*FLEN/8, x4, x1, x2)

inst_21817:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9f000000000000; valaddr_reg:x3; val_offset:65451*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65451*0 + 3*313*FLEN/8, x4, x1, x2)

inst_21818:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9f800000000000; valaddr_reg:x3; val_offset:65454*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65454*0 + 3*314*FLEN/8, x4, x1, x2)

inst_21819:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9fc00000000000; valaddr_reg:x3; val_offset:65457*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65457*0 + 3*315*FLEN/8, x4, x1, x2)

inst_21820:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9fe00000000000; valaddr_reg:x3; val_offset:65460*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65460*0 + 3*316*FLEN/8, x4, x1, x2)

inst_21821:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9ff00000000000; valaddr_reg:x3; val_offset:65463*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65463*0 + 3*317*FLEN/8, x4, x1, x2)

inst_21822:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9ff80000000000; valaddr_reg:x3; val_offset:65466*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65466*0 + 3*318*FLEN/8, x4, x1, x2)

inst_21823:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9ffc0000000000; valaddr_reg:x3; val_offset:65469*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65469*0 + 3*319*FLEN/8, x4, x1, x2)

inst_21824:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9ffe0000000000; valaddr_reg:x3; val_offset:65472*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65472*0 + 3*320*FLEN/8, x4, x1, x2)

inst_21825:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9fff0000000000; valaddr_reg:x3; val_offset:65475*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65475*0 + 3*321*FLEN/8, x4, x1, x2)

inst_21826:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9fff8000000000; valaddr_reg:x3; val_offset:65478*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65478*0 + 3*322*FLEN/8, x4, x1, x2)

inst_21827:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9fffc000000000; valaddr_reg:x3; val_offset:65481*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65481*0 + 3*323*FLEN/8, x4, x1, x2)

inst_21828:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9fffe000000000; valaddr_reg:x3; val_offset:65484*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65484*0 + 3*324*FLEN/8, x4, x1, x2)

inst_21829:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9ffff000000000; valaddr_reg:x3; val_offset:65487*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65487*0 + 3*325*FLEN/8, x4, x1, x2)

inst_21830:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9ffff800000000; valaddr_reg:x3; val_offset:65490*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65490*0 + 3*326*FLEN/8, x4, x1, x2)

inst_21831:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9ffffc00000000; valaddr_reg:x3; val_offset:65493*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65493*0 + 3*327*FLEN/8, x4, x1, x2)

inst_21832:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9ffffe00000000; valaddr_reg:x3; val_offset:65496*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65496*0 + 3*328*FLEN/8, x4, x1, x2)

inst_21833:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9fffff00000000; valaddr_reg:x3; val_offset:65499*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65499*0 + 3*329*FLEN/8, x4, x1, x2)

inst_21834:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9fffff80000000; valaddr_reg:x3; val_offset:65502*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65502*0 + 3*330*FLEN/8, x4, x1, x2)

inst_21835:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9fffffc0000000; valaddr_reg:x3; val_offset:65505*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65505*0 + 3*331*FLEN/8, x4, x1, x2)

inst_21836:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9fffffe0000000; valaddr_reg:x3; val_offset:65508*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65508*0 + 3*332*FLEN/8, x4, x1, x2)

inst_21837:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9ffffff0000000; valaddr_reg:x3; val_offset:65511*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65511*0 + 3*333*FLEN/8, x4, x1, x2)

inst_21838:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9ffffff8000000; valaddr_reg:x3; val_offset:65514*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65514*0 + 3*334*FLEN/8, x4, x1, x2)

inst_21839:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9ffffffc000000; valaddr_reg:x3; val_offset:65517*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65517*0 + 3*335*FLEN/8, x4, x1, x2)

inst_21840:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9ffffffe000000; valaddr_reg:x3; val_offset:65520*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65520*0 + 3*336*FLEN/8, x4, x1, x2)

inst_21841:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9fffffff000000; valaddr_reg:x3; val_offset:65523*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65523*0 + 3*337*FLEN/8, x4, x1, x2)

inst_21842:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9fffffff800000; valaddr_reg:x3; val_offset:65526*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65526*0 + 3*338*FLEN/8, x4, x1, x2)

inst_21843:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9fffffffc00000; valaddr_reg:x3; val_offset:65529*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65529*0 + 3*339*FLEN/8, x4, x1, x2)

inst_21844:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9fffffffe00000; valaddr_reg:x3; val_offset:65532*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65532*0 + 3*340*FLEN/8, x4, x1, x2)

inst_21845:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9ffffffff00000; valaddr_reg:x3; val_offset:65535*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65535*0 + 3*341*FLEN/8, x4, x1, x2)

inst_21846:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9ffffffff80000; valaddr_reg:x3; val_offset:65538*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65538*0 + 3*342*FLEN/8, x4, x1, x2)

inst_21847:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9ffffffffc0000; valaddr_reg:x3; val_offset:65541*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65541*0 + 3*343*FLEN/8, x4, x1, x2)

inst_21848:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9ffffffffe0000; valaddr_reg:x3; val_offset:65544*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65544*0 + 3*344*FLEN/8, x4, x1, x2)

inst_21849:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9fffffffff0000; valaddr_reg:x3; val_offset:65547*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65547*0 + 3*345*FLEN/8, x4, x1, x2)

inst_21850:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9fffffffff8000; valaddr_reg:x3; val_offset:65550*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65550*0 + 3*346*FLEN/8, x4, x1, x2)

inst_21851:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9fffffffffc000; valaddr_reg:x3; val_offset:65553*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65553*0 + 3*347*FLEN/8, x4, x1, x2)

inst_21852:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9fffffffffe000; valaddr_reg:x3; val_offset:65556*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65556*0 + 3*348*FLEN/8, x4, x1, x2)

inst_21853:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9ffffffffff000; valaddr_reg:x3; val_offset:65559*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65559*0 + 3*349*FLEN/8, x4, x1, x2)

inst_21854:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9ffffffffff800; valaddr_reg:x3; val_offset:65562*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65562*0 + 3*350*FLEN/8, x4, x1, x2)

inst_21855:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9ffffffffffc00; valaddr_reg:x3; val_offset:65565*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65565*0 + 3*351*FLEN/8, x4, x1, x2)

inst_21856:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9ffffffffffe00; valaddr_reg:x3; val_offset:65568*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65568*0 + 3*352*FLEN/8, x4, x1, x2)

inst_21857:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9fffffffffff00; valaddr_reg:x3; val_offset:65571*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65571*0 + 3*353*FLEN/8, x4, x1, x2)

inst_21858:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9fffffffffff80; valaddr_reg:x3; val_offset:65574*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65574*0 + 3*354*FLEN/8, x4, x1, x2)

inst_21859:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9fffffffffffc0; valaddr_reg:x3; val_offset:65577*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65577*0 + 3*355*FLEN/8, x4, x1, x2)

inst_21860:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9fffffffffffe0; valaddr_reg:x3; val_offset:65580*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65580*0 + 3*356*FLEN/8, x4, x1, x2)

inst_21861:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9ffffffffffff0; valaddr_reg:x3; val_offset:65583*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65583*0 + 3*357*FLEN/8, x4, x1, x2)

inst_21862:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9ffffffffffff8; valaddr_reg:x3; val_offset:65586*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65586*0 + 3*358*FLEN/8, x4, x1, x2)

inst_21863:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9ffffffffffffc; valaddr_reg:x3; val_offset:65589*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65589*0 + 3*359*FLEN/8, x4, x1, x2)

inst_21864:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9ffffffffffffe; valaddr_reg:x3; val_offset:65592*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65592*0 + 3*360*FLEN/8, x4, x1, x2)

inst_21865:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3d9fffffffffffff; valaddr_reg:x3; val_offset:65595*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65595*0 + 3*361*FLEN/8, x4, x1, x2)

inst_21866:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:65598*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65598*0 + 3*362*FLEN/8, x4, x1, x2)

inst_21867:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:65601*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65601*0 + 3*363*FLEN/8, x4, x1, x2)

inst_21868:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:65604*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65604*0 + 3*364*FLEN/8, x4, x1, x2)

inst_21869:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:65607*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65607*0 + 3*365*FLEN/8, x4, x1, x2)

inst_21870:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:65610*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65610*0 + 3*366*FLEN/8, x4, x1, x2)

inst_21871:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:65613*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65613*0 + 3*367*FLEN/8, x4, x1, x2)

inst_21872:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:65616*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65616*0 + 3*368*FLEN/8, x4, x1, x2)

inst_21873:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:65619*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65619*0 + 3*369*FLEN/8, x4, x1, x2)

inst_21874:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:65622*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65622*0 + 3*370*FLEN/8, x4, x1, x2)

inst_21875:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:65625*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65625*0 + 3*371*FLEN/8, x4, x1, x2)

inst_21876:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:65628*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65628*0 + 3*372*FLEN/8, x4, x1, x2)

inst_21877:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:65631*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65631*0 + 3*373*FLEN/8, x4, x1, x2)

inst_21878:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:65634*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65634*0 + 3*374*FLEN/8, x4, x1, x2)

inst_21879:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:65637*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65637*0 + 3*375*FLEN/8, x4, x1, x2)

inst_21880:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:65640*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65640*0 + 3*376*FLEN/8, x4, x1, x2)

inst_21881:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:65643*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65643*0 + 3*377*FLEN/8, x4, x1, x2)

inst_21882:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:65646*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65646*0 + 3*378*FLEN/8, x4, x1, x2)

inst_21883:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:65649*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65649*0 + 3*379*FLEN/8, x4, x1, x2)

inst_21884:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:65652*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65652*0 + 3*380*FLEN/8, x4, x1, x2)

inst_21885:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:65655*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65655*0 + 3*381*FLEN/8, x4, x1, x2)

inst_21886:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:65658*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65658*0 + 3*382*FLEN/8, x4, x1, x2)

inst_21887:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x860fdb1e707c3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x500757ed5d72d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8860fdb1e707c3; op2val:0x205500757ed5d72d;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:65661*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65661*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_21888:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:65664*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65664*0 + 3*384*FLEN/8, x4, x1, x2)

inst_21889:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:65667*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65667*0 + 3*385*FLEN/8, x4, x1, x2)

inst_21890:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:65670*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65670*0 + 3*386*FLEN/8, x4, x1, x2)

inst_21891:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:65673*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65673*0 + 3*387*FLEN/8, x4, x1, x2)

inst_21892:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:65676*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65676*0 + 3*388*FLEN/8, x4, x1, x2)

inst_21893:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:65679*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65679*0 + 3*389*FLEN/8, x4, x1, x2)

inst_21894:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:65682*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65682*0 + 3*390*FLEN/8, x4, x1, x2)

inst_21895:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:65685*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65685*0 + 3*391*FLEN/8, x4, x1, x2)

inst_21896:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:65688*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65688*0 + 3*392*FLEN/8, x4, x1, x2)

inst_21897:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:65691*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65691*0 + 3*393*FLEN/8, x4, x1, x2)

inst_21898:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:65694*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65694*0 + 3*394*FLEN/8, x4, x1, x2)

inst_21899:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:65697*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65697*0 + 3*395*FLEN/8, x4, x1, x2)

inst_21900:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:65700*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65700*0 + 3*396*FLEN/8, x4, x1, x2)

inst_21901:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:65703*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65703*0 + 3*397*FLEN/8, x4, x1, x2)

inst_21902:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:65706*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65706*0 + 3*398*FLEN/8, x4, x1, x2)

inst_21903:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:65709*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65709*0 + 3*399*FLEN/8, x4, x1, x2)

inst_21904:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:65712*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65712*0 + 3*400*FLEN/8, x4, x1, x2)

inst_21905:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:65715*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65715*0 + 3*401*FLEN/8, x4, x1, x2)

inst_21906:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:65718*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65718*0 + 3*402*FLEN/8, x4, x1, x2)

inst_21907:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:65721*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65721*0 + 3*403*FLEN/8, x4, x1, x2)

inst_21908:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:65724*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65724*0 + 3*404*FLEN/8, x4, x1, x2)

inst_21909:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:65727*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65727*0 + 3*405*FLEN/8, x4, x1, x2)

inst_21910:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x370000000000000; valaddr_reg:x3; val_offset:65730*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65730*0 + 3*406*FLEN/8, x4, x1, x2)

inst_21911:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x370000000000001; valaddr_reg:x3; val_offset:65733*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65733*0 + 3*407*FLEN/8, x4, x1, x2)

inst_21912:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x370000000000003; valaddr_reg:x3; val_offset:65736*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65736*0 + 3*408*FLEN/8, x4, x1, x2)

inst_21913:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x370000000000007; valaddr_reg:x3; val_offset:65739*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65739*0 + 3*409*FLEN/8, x4, x1, x2)

inst_21914:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37000000000000f; valaddr_reg:x3; val_offset:65742*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65742*0 + 3*410*FLEN/8, x4, x1, x2)

inst_21915:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37000000000001f; valaddr_reg:x3; val_offset:65745*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65745*0 + 3*411*FLEN/8, x4, x1, x2)

inst_21916:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37000000000003f; valaddr_reg:x3; val_offset:65748*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65748*0 + 3*412*FLEN/8, x4, x1, x2)

inst_21917:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37000000000007f; valaddr_reg:x3; val_offset:65751*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65751*0 + 3*413*FLEN/8, x4, x1, x2)

inst_21918:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x3700000000000ff; valaddr_reg:x3; val_offset:65754*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65754*0 + 3*414*FLEN/8, x4, x1, x2)

inst_21919:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x3700000000001ff; valaddr_reg:x3; val_offset:65757*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65757*0 + 3*415*FLEN/8, x4, x1, x2)

inst_21920:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x3700000000003ff; valaddr_reg:x3; val_offset:65760*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65760*0 + 3*416*FLEN/8, x4, x1, x2)

inst_21921:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x3700000000007ff; valaddr_reg:x3; val_offset:65763*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65763*0 + 3*417*FLEN/8, x4, x1, x2)

inst_21922:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x370000000000fff; valaddr_reg:x3; val_offset:65766*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65766*0 + 3*418*FLEN/8, x4, x1, x2)

inst_21923:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x370000000001fff; valaddr_reg:x3; val_offset:65769*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65769*0 + 3*419*FLEN/8, x4, x1, x2)

inst_21924:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x370000000003fff; valaddr_reg:x3; val_offset:65772*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65772*0 + 3*420*FLEN/8, x4, x1, x2)

inst_21925:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x370000000007fff; valaddr_reg:x3; val_offset:65775*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65775*0 + 3*421*FLEN/8, x4, x1, x2)

inst_21926:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37000000000ffff; valaddr_reg:x3; val_offset:65778*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65778*0 + 3*422*FLEN/8, x4, x1, x2)

inst_21927:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37000000001ffff; valaddr_reg:x3; val_offset:65781*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65781*0 + 3*423*FLEN/8, x4, x1, x2)

inst_21928:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37000000003ffff; valaddr_reg:x3; val_offset:65784*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65784*0 + 3*424*FLEN/8, x4, x1, x2)

inst_21929:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37000000007ffff; valaddr_reg:x3; val_offset:65787*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65787*0 + 3*425*FLEN/8, x4, x1, x2)

inst_21930:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x3700000000fffff; valaddr_reg:x3; val_offset:65790*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65790*0 + 3*426*FLEN/8, x4, x1, x2)

inst_21931:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x3700000001fffff; valaddr_reg:x3; val_offset:65793*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65793*0 + 3*427*FLEN/8, x4, x1, x2)

inst_21932:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x3700000003fffff; valaddr_reg:x3; val_offset:65796*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65796*0 + 3*428*FLEN/8, x4, x1, x2)

inst_21933:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x3700000007fffff; valaddr_reg:x3; val_offset:65799*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65799*0 + 3*429*FLEN/8, x4, x1, x2)

inst_21934:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x370000000ffffff; valaddr_reg:x3; val_offset:65802*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65802*0 + 3*430*FLEN/8, x4, x1, x2)

inst_21935:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x370000001ffffff; valaddr_reg:x3; val_offset:65805*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65805*0 + 3*431*FLEN/8, x4, x1, x2)

inst_21936:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x370000003ffffff; valaddr_reg:x3; val_offset:65808*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65808*0 + 3*432*FLEN/8, x4, x1, x2)

inst_21937:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x370000007ffffff; valaddr_reg:x3; val_offset:65811*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65811*0 + 3*433*FLEN/8, x4, x1, x2)

inst_21938:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37000000fffffff; valaddr_reg:x3; val_offset:65814*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65814*0 + 3*434*FLEN/8, x4, x1, x2)

inst_21939:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37000001fffffff; valaddr_reg:x3; val_offset:65817*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65817*0 + 3*435*FLEN/8, x4, x1, x2)

inst_21940:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37000003fffffff; valaddr_reg:x3; val_offset:65820*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65820*0 + 3*436*FLEN/8, x4, x1, x2)

inst_21941:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37000007fffffff; valaddr_reg:x3; val_offset:65823*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65823*0 + 3*437*FLEN/8, x4, x1, x2)

inst_21942:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x3700000ffffffff; valaddr_reg:x3; val_offset:65826*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65826*0 + 3*438*FLEN/8, x4, x1, x2)

inst_21943:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x3700001ffffffff; valaddr_reg:x3; val_offset:65829*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65829*0 + 3*439*FLEN/8, x4, x1, x2)

inst_21944:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x3700003ffffffff; valaddr_reg:x3; val_offset:65832*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65832*0 + 3*440*FLEN/8, x4, x1, x2)

inst_21945:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x3700007ffffffff; valaddr_reg:x3; val_offset:65835*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65835*0 + 3*441*FLEN/8, x4, x1, x2)

inst_21946:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x370000fffffffff; valaddr_reg:x3; val_offset:65838*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65838*0 + 3*442*FLEN/8, x4, x1, x2)

inst_21947:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x370001fffffffff; valaddr_reg:x3; val_offset:65841*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65841*0 + 3*443*FLEN/8, x4, x1, x2)

inst_21948:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x370003fffffffff; valaddr_reg:x3; val_offset:65844*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65844*0 + 3*444*FLEN/8, x4, x1, x2)

inst_21949:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x370007fffffffff; valaddr_reg:x3; val_offset:65847*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65847*0 + 3*445*FLEN/8, x4, x1, x2)

inst_21950:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37000ffffffffff; valaddr_reg:x3; val_offset:65850*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65850*0 + 3*446*FLEN/8, x4, x1, x2)

inst_21951:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37001ffffffffff; valaddr_reg:x3; val_offset:65853*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65853*0 + 3*447*FLEN/8, x4, x1, x2)

inst_21952:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37003ffffffffff; valaddr_reg:x3; val_offset:65856*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65856*0 + 3*448*FLEN/8, x4, x1, x2)

inst_21953:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37007ffffffffff; valaddr_reg:x3; val_offset:65859*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65859*0 + 3*449*FLEN/8, x4, x1, x2)

inst_21954:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x3700fffffffffff; valaddr_reg:x3; val_offset:65862*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65862*0 + 3*450*FLEN/8, x4, x1, x2)

inst_21955:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x3701fffffffffff; valaddr_reg:x3; val_offset:65865*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65865*0 + 3*451*FLEN/8, x4, x1, x2)

inst_21956:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x3703fffffffffff; valaddr_reg:x3; val_offset:65868*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65868*0 + 3*452*FLEN/8, x4, x1, x2)

inst_21957:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x3707fffffffffff; valaddr_reg:x3; val_offset:65871*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65871*0 + 3*453*FLEN/8, x4, x1, x2)

inst_21958:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x370ffffffffffff; valaddr_reg:x3; val_offset:65874*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65874*0 + 3*454*FLEN/8, x4, x1, x2)

inst_21959:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x371ffffffffffff; valaddr_reg:x3; val_offset:65877*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65877*0 + 3*455*FLEN/8, x4, x1, x2)

inst_21960:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x373ffffffffffff; valaddr_reg:x3; val_offset:65880*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65880*0 + 3*456*FLEN/8, x4, x1, x2)

inst_21961:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x377ffffffffffff; valaddr_reg:x3; val_offset:65883*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65883*0 + 3*457*FLEN/8, x4, x1, x2)

inst_21962:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x378000000000000; valaddr_reg:x3; val_offset:65886*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65886*0 + 3*458*FLEN/8, x4, x1, x2)

inst_21963:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37c000000000000; valaddr_reg:x3; val_offset:65889*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65889*0 + 3*459*FLEN/8, x4, x1, x2)

inst_21964:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37e000000000000; valaddr_reg:x3; val_offset:65892*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65892*0 + 3*460*FLEN/8, x4, x1, x2)

inst_21965:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37f000000000000; valaddr_reg:x3; val_offset:65895*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65895*0 + 3*461*FLEN/8, x4, x1, x2)

inst_21966:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37f800000000000; valaddr_reg:x3; val_offset:65898*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65898*0 + 3*462*FLEN/8, x4, x1, x2)

inst_21967:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37fc00000000000; valaddr_reg:x3; val_offset:65901*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65901*0 + 3*463*FLEN/8, x4, x1, x2)

inst_21968:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37fe00000000000; valaddr_reg:x3; val_offset:65904*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65904*0 + 3*464*FLEN/8, x4, x1, x2)

inst_21969:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37ff00000000000; valaddr_reg:x3; val_offset:65907*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65907*0 + 3*465*FLEN/8, x4, x1, x2)

inst_21970:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37ff80000000000; valaddr_reg:x3; val_offset:65910*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65910*0 + 3*466*FLEN/8, x4, x1, x2)

inst_21971:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37ffc0000000000; valaddr_reg:x3; val_offset:65913*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65913*0 + 3*467*FLEN/8, x4, x1, x2)

inst_21972:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37ffe0000000000; valaddr_reg:x3; val_offset:65916*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65916*0 + 3*468*FLEN/8, x4, x1, x2)

inst_21973:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37fff0000000000; valaddr_reg:x3; val_offset:65919*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65919*0 + 3*469*FLEN/8, x4, x1, x2)

inst_21974:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37fff8000000000; valaddr_reg:x3; val_offset:65922*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65922*0 + 3*470*FLEN/8, x4, x1, x2)

inst_21975:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37fffc000000000; valaddr_reg:x3; val_offset:65925*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65925*0 + 3*471*FLEN/8, x4, x1, x2)

inst_21976:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37fffe000000000; valaddr_reg:x3; val_offset:65928*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65928*0 + 3*472*FLEN/8, x4, x1, x2)

inst_21977:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37ffff000000000; valaddr_reg:x3; val_offset:65931*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65931*0 + 3*473*FLEN/8, x4, x1, x2)

inst_21978:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37ffff800000000; valaddr_reg:x3; val_offset:65934*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65934*0 + 3*474*FLEN/8, x4, x1, x2)

inst_21979:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37ffffc00000000; valaddr_reg:x3; val_offset:65937*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65937*0 + 3*475*FLEN/8, x4, x1, x2)

inst_21980:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37ffffe00000000; valaddr_reg:x3; val_offset:65940*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65940*0 + 3*476*FLEN/8, x4, x1, x2)

inst_21981:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37fffff00000000; valaddr_reg:x3; val_offset:65943*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65943*0 + 3*477*FLEN/8, x4, x1, x2)

inst_21982:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37fffff80000000; valaddr_reg:x3; val_offset:65946*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65946*0 + 3*478*FLEN/8, x4, x1, x2)

inst_21983:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37fffffc0000000; valaddr_reg:x3; val_offset:65949*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65949*0 + 3*479*FLEN/8, x4, x1, x2)

inst_21984:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37fffffe0000000; valaddr_reg:x3; val_offset:65952*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65952*0 + 3*480*FLEN/8, x4, x1, x2)

inst_21985:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37ffffff0000000; valaddr_reg:x3; val_offset:65955*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65955*0 + 3*481*FLEN/8, x4, x1, x2)

inst_21986:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37ffffff8000000; valaddr_reg:x3; val_offset:65958*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65958*0 + 3*482*FLEN/8, x4, x1, x2)

inst_21987:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37ffffffc000000; valaddr_reg:x3; val_offset:65961*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65961*0 + 3*483*FLEN/8, x4, x1, x2)

inst_21988:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37ffffffe000000; valaddr_reg:x3; val_offset:65964*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65964*0 + 3*484*FLEN/8, x4, x1, x2)

inst_21989:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37fffffff000000; valaddr_reg:x3; val_offset:65967*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65967*0 + 3*485*FLEN/8, x4, x1, x2)

inst_21990:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37fffffff800000; valaddr_reg:x3; val_offset:65970*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65970*0 + 3*486*FLEN/8, x4, x1, x2)

inst_21991:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37fffffffc00000; valaddr_reg:x3; val_offset:65973*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65973*0 + 3*487*FLEN/8, x4, x1, x2)

inst_21992:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37fffffffe00000; valaddr_reg:x3; val_offset:65976*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65976*0 + 3*488*FLEN/8, x4, x1, x2)

inst_21993:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37ffffffff00000; valaddr_reg:x3; val_offset:65979*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65979*0 + 3*489*FLEN/8, x4, x1, x2)

inst_21994:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37ffffffff80000; valaddr_reg:x3; val_offset:65982*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65982*0 + 3*490*FLEN/8, x4, x1, x2)

inst_21995:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37ffffffffc0000; valaddr_reg:x3; val_offset:65985*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65985*0 + 3*491*FLEN/8, x4, x1, x2)

inst_21996:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37ffffffffe0000; valaddr_reg:x3; val_offset:65988*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65988*0 + 3*492*FLEN/8, x4, x1, x2)

inst_21997:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37fffffffff0000; valaddr_reg:x3; val_offset:65991*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65991*0 + 3*493*FLEN/8, x4, x1, x2)

inst_21998:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37fffffffff8000; valaddr_reg:x3; val_offset:65994*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65994*0 + 3*494*FLEN/8, x4, x1, x2)

inst_21999:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37fffffffffc000; valaddr_reg:x3; val_offset:65997*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65997*0 + 3*495*FLEN/8, x4, x1, x2)

inst_22000:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37fffffffffe000; valaddr_reg:x3; val_offset:66000*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66000*0 + 3*496*FLEN/8, x4, x1, x2)

inst_22001:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37ffffffffff000; valaddr_reg:x3; val_offset:66003*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66003*0 + 3*497*FLEN/8, x4, x1, x2)

inst_22002:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37ffffffffff800; valaddr_reg:x3; val_offset:66006*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66006*0 + 3*498*FLEN/8, x4, x1, x2)

inst_22003:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37ffffffffffc00; valaddr_reg:x3; val_offset:66009*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66009*0 + 3*499*FLEN/8, x4, x1, x2)

inst_22004:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37ffffffffffe00; valaddr_reg:x3; val_offset:66012*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66012*0 + 3*500*FLEN/8, x4, x1, x2)

inst_22005:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37fffffffffff00; valaddr_reg:x3; val_offset:66015*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66015*0 + 3*501*FLEN/8, x4, x1, x2)

inst_22006:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37fffffffffff80; valaddr_reg:x3; val_offset:66018*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66018*0 + 3*502*FLEN/8, x4, x1, x2)

inst_22007:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37fffffffffffc0; valaddr_reg:x3; val_offset:66021*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66021*0 + 3*503*FLEN/8, x4, x1, x2)

inst_22008:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37fffffffffffe0; valaddr_reg:x3; val_offset:66024*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66024*0 + 3*504*FLEN/8, x4, x1, x2)

inst_22009:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37ffffffffffff0; valaddr_reg:x3; val_offset:66027*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66027*0 + 3*505*FLEN/8, x4, x1, x2)

inst_22010:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37ffffffffffff8; valaddr_reg:x3; val_offset:66030*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66030*0 + 3*506*FLEN/8, x4, x1, x2)

inst_22011:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37ffffffffffffc; valaddr_reg:x3; val_offset:66033*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66033*0 + 3*507*FLEN/8, x4, x1, x2)

inst_22012:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37ffffffffffffe; valaddr_reg:x3; val_offset:66036*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66036*0 + 3*508*FLEN/8, x4, x1, x2)

inst_22013:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8619197499b27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88619197499b27; op2val:0x0;
op3val:0x37fffffffffffff; valaddr_reg:x3; val_offset:66039*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66039*0 + 3*509*FLEN/8, x4, x1, x2)

inst_22014:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:66042*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66042*0 + 3*510*FLEN/8, x4, x1, x2)

inst_22015:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:66045*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66045*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_22016:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:66048*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66048*0 + 3*512*FLEN/8, x4, x1, x2)

inst_22017:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:66051*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66051*0 + 3*513*FLEN/8, x4, x1, x2)

inst_22018:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:66054*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66054*0 + 3*514*FLEN/8, x4, x1, x2)

inst_22019:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:66057*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66057*0 + 3*515*FLEN/8, x4, x1, x2)

inst_22020:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:66060*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66060*0 + 3*516*FLEN/8, x4, x1, x2)

inst_22021:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:66063*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66063*0 + 3*517*FLEN/8, x4, x1, x2)

inst_22022:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:66066*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66066*0 + 3*518*FLEN/8, x4, x1, x2)

inst_22023:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:66069*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66069*0 + 3*519*FLEN/8, x4, x1, x2)

inst_22024:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:66072*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66072*0 + 3*520*FLEN/8, x4, x1, x2)

inst_22025:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:66075*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66075*0 + 3*521*FLEN/8, x4, x1, x2)

inst_22026:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:66078*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66078*0 + 3*522*FLEN/8, x4, x1, x2)

inst_22027:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:66081*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66081*0 + 3*523*FLEN/8, x4, x1, x2)

inst_22028:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:66084*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66084*0 + 3*524*FLEN/8, x4, x1, x2)

inst_22029:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:66087*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66087*0 + 3*525*FLEN/8, x4, x1, x2)

inst_22030:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:66090*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66090*0 + 3*526*FLEN/8, x4, x1, x2)

inst_22031:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:66093*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66093*0 + 3*527*FLEN/8, x4, x1, x2)

inst_22032:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:66096*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66096*0 + 3*528*FLEN/8, x4, x1, x2)

inst_22033:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:66099*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66099*0 + 3*529*FLEN/8, x4, x1, x2)

inst_22034:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:66102*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66102*0 + 3*530*FLEN/8, x4, x1, x2)

inst_22035:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:66105*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66105*0 + 3*531*FLEN/8, x4, x1, x2)

inst_22036:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x360000000000000; valaddr_reg:x3; val_offset:66108*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66108*0 + 3*532*FLEN/8, x4, x1, x2)

inst_22037:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x360000000000001; valaddr_reg:x3; val_offset:66111*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66111*0 + 3*533*FLEN/8, x4, x1, x2)

inst_22038:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x360000000000003; valaddr_reg:x3; val_offset:66114*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66114*0 + 3*534*FLEN/8, x4, x1, x2)

inst_22039:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x360000000000007; valaddr_reg:x3; val_offset:66117*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66117*0 + 3*535*FLEN/8, x4, x1, x2)

inst_22040:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36000000000000f; valaddr_reg:x3; val_offset:66120*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66120*0 + 3*536*FLEN/8, x4, x1, x2)

inst_22041:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36000000000001f; valaddr_reg:x3; val_offset:66123*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66123*0 + 3*537*FLEN/8, x4, x1, x2)

inst_22042:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36000000000003f; valaddr_reg:x3; val_offset:66126*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66126*0 + 3*538*FLEN/8, x4, x1, x2)

inst_22043:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36000000000007f; valaddr_reg:x3; val_offset:66129*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66129*0 + 3*539*FLEN/8, x4, x1, x2)

inst_22044:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x3600000000000ff; valaddr_reg:x3; val_offset:66132*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66132*0 + 3*540*FLEN/8, x4, x1, x2)

inst_22045:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x3600000000001ff; valaddr_reg:x3; val_offset:66135*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66135*0 + 3*541*FLEN/8, x4, x1, x2)

inst_22046:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x3600000000003ff; valaddr_reg:x3; val_offset:66138*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66138*0 + 3*542*FLEN/8, x4, x1, x2)

inst_22047:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x3600000000007ff; valaddr_reg:x3; val_offset:66141*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66141*0 + 3*543*FLEN/8, x4, x1, x2)

inst_22048:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x360000000000fff; valaddr_reg:x3; val_offset:66144*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66144*0 + 3*544*FLEN/8, x4, x1, x2)

inst_22049:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x360000000001fff; valaddr_reg:x3; val_offset:66147*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66147*0 + 3*545*FLEN/8, x4, x1, x2)

inst_22050:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x360000000003fff; valaddr_reg:x3; val_offset:66150*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66150*0 + 3*546*FLEN/8, x4, x1, x2)

inst_22051:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x360000000007fff; valaddr_reg:x3; val_offset:66153*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66153*0 + 3*547*FLEN/8, x4, x1, x2)

inst_22052:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36000000000ffff; valaddr_reg:x3; val_offset:66156*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66156*0 + 3*548*FLEN/8, x4, x1, x2)

inst_22053:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36000000001ffff; valaddr_reg:x3; val_offset:66159*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66159*0 + 3*549*FLEN/8, x4, x1, x2)

inst_22054:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36000000003ffff; valaddr_reg:x3; val_offset:66162*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66162*0 + 3*550*FLEN/8, x4, x1, x2)

inst_22055:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36000000007ffff; valaddr_reg:x3; val_offset:66165*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66165*0 + 3*551*FLEN/8, x4, x1, x2)

inst_22056:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x3600000000fffff; valaddr_reg:x3; val_offset:66168*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66168*0 + 3*552*FLEN/8, x4, x1, x2)

inst_22057:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x3600000001fffff; valaddr_reg:x3; val_offset:66171*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66171*0 + 3*553*FLEN/8, x4, x1, x2)

inst_22058:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x3600000003fffff; valaddr_reg:x3; val_offset:66174*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66174*0 + 3*554*FLEN/8, x4, x1, x2)

inst_22059:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x3600000007fffff; valaddr_reg:x3; val_offset:66177*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66177*0 + 3*555*FLEN/8, x4, x1, x2)

inst_22060:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x360000000ffffff; valaddr_reg:x3; val_offset:66180*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66180*0 + 3*556*FLEN/8, x4, x1, x2)

inst_22061:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x360000001ffffff; valaddr_reg:x3; val_offset:66183*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66183*0 + 3*557*FLEN/8, x4, x1, x2)

inst_22062:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x360000003ffffff; valaddr_reg:x3; val_offset:66186*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66186*0 + 3*558*FLEN/8, x4, x1, x2)

inst_22063:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x360000007ffffff; valaddr_reg:x3; val_offset:66189*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66189*0 + 3*559*FLEN/8, x4, x1, x2)

inst_22064:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36000000fffffff; valaddr_reg:x3; val_offset:66192*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66192*0 + 3*560*FLEN/8, x4, x1, x2)

inst_22065:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36000001fffffff; valaddr_reg:x3; val_offset:66195*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66195*0 + 3*561*FLEN/8, x4, x1, x2)

inst_22066:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36000003fffffff; valaddr_reg:x3; val_offset:66198*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66198*0 + 3*562*FLEN/8, x4, x1, x2)

inst_22067:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36000007fffffff; valaddr_reg:x3; val_offset:66201*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66201*0 + 3*563*FLEN/8, x4, x1, x2)

inst_22068:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x3600000ffffffff; valaddr_reg:x3; val_offset:66204*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66204*0 + 3*564*FLEN/8, x4, x1, x2)

inst_22069:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x3600001ffffffff; valaddr_reg:x3; val_offset:66207*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66207*0 + 3*565*FLEN/8, x4, x1, x2)

inst_22070:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x3600003ffffffff; valaddr_reg:x3; val_offset:66210*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66210*0 + 3*566*FLEN/8, x4, x1, x2)

inst_22071:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x3600007ffffffff; valaddr_reg:x3; val_offset:66213*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66213*0 + 3*567*FLEN/8, x4, x1, x2)

inst_22072:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x360000fffffffff; valaddr_reg:x3; val_offset:66216*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66216*0 + 3*568*FLEN/8, x4, x1, x2)

inst_22073:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x360001fffffffff; valaddr_reg:x3; val_offset:66219*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66219*0 + 3*569*FLEN/8, x4, x1, x2)

inst_22074:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x360003fffffffff; valaddr_reg:x3; val_offset:66222*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66222*0 + 3*570*FLEN/8, x4, x1, x2)

inst_22075:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x360007fffffffff; valaddr_reg:x3; val_offset:66225*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66225*0 + 3*571*FLEN/8, x4, x1, x2)

inst_22076:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36000ffffffffff; valaddr_reg:x3; val_offset:66228*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66228*0 + 3*572*FLEN/8, x4, x1, x2)

inst_22077:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36001ffffffffff; valaddr_reg:x3; val_offset:66231*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66231*0 + 3*573*FLEN/8, x4, x1, x2)

inst_22078:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36003ffffffffff; valaddr_reg:x3; val_offset:66234*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66234*0 + 3*574*FLEN/8, x4, x1, x2)

inst_22079:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36007ffffffffff; valaddr_reg:x3; val_offset:66237*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66237*0 + 3*575*FLEN/8, x4, x1, x2)

inst_22080:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x3600fffffffffff; valaddr_reg:x3; val_offset:66240*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66240*0 + 3*576*FLEN/8, x4, x1, x2)

inst_22081:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x3601fffffffffff; valaddr_reg:x3; val_offset:66243*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66243*0 + 3*577*FLEN/8, x4, x1, x2)

inst_22082:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x3603fffffffffff; valaddr_reg:x3; val_offset:66246*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66246*0 + 3*578*FLEN/8, x4, x1, x2)

inst_22083:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x3607fffffffffff; valaddr_reg:x3; val_offset:66249*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66249*0 + 3*579*FLEN/8, x4, x1, x2)

inst_22084:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x360ffffffffffff; valaddr_reg:x3; val_offset:66252*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66252*0 + 3*580*FLEN/8, x4, x1, x2)

inst_22085:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x361ffffffffffff; valaddr_reg:x3; val_offset:66255*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66255*0 + 3*581*FLEN/8, x4, x1, x2)

inst_22086:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x363ffffffffffff; valaddr_reg:x3; val_offset:66258*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66258*0 + 3*582*FLEN/8, x4, x1, x2)

inst_22087:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x367ffffffffffff; valaddr_reg:x3; val_offset:66261*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66261*0 + 3*583*FLEN/8, x4, x1, x2)

inst_22088:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x368000000000000; valaddr_reg:x3; val_offset:66264*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66264*0 + 3*584*FLEN/8, x4, x1, x2)

inst_22089:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36c000000000000; valaddr_reg:x3; val_offset:66267*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66267*0 + 3*585*FLEN/8, x4, x1, x2)

inst_22090:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36e000000000000; valaddr_reg:x3; val_offset:66270*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66270*0 + 3*586*FLEN/8, x4, x1, x2)

inst_22091:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36f000000000000; valaddr_reg:x3; val_offset:66273*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66273*0 + 3*587*FLEN/8, x4, x1, x2)

inst_22092:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36f800000000000; valaddr_reg:x3; val_offset:66276*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66276*0 + 3*588*FLEN/8, x4, x1, x2)

inst_22093:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36fc00000000000; valaddr_reg:x3; val_offset:66279*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66279*0 + 3*589*FLEN/8, x4, x1, x2)

inst_22094:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36fe00000000000; valaddr_reg:x3; val_offset:66282*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66282*0 + 3*590*FLEN/8, x4, x1, x2)

inst_22095:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36ff00000000000; valaddr_reg:x3; val_offset:66285*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66285*0 + 3*591*FLEN/8, x4, x1, x2)

inst_22096:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36ff80000000000; valaddr_reg:x3; val_offset:66288*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66288*0 + 3*592*FLEN/8, x4, x1, x2)

inst_22097:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36ffc0000000000; valaddr_reg:x3; val_offset:66291*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66291*0 + 3*593*FLEN/8, x4, x1, x2)

inst_22098:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36ffe0000000000; valaddr_reg:x3; val_offset:66294*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66294*0 + 3*594*FLEN/8, x4, x1, x2)

inst_22099:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36fff0000000000; valaddr_reg:x3; val_offset:66297*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66297*0 + 3*595*FLEN/8, x4, x1, x2)

inst_22100:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36fff8000000000; valaddr_reg:x3; val_offset:66300*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66300*0 + 3*596*FLEN/8, x4, x1, x2)

inst_22101:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36fffc000000000; valaddr_reg:x3; val_offset:66303*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66303*0 + 3*597*FLEN/8, x4, x1, x2)

inst_22102:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36fffe000000000; valaddr_reg:x3; val_offset:66306*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66306*0 + 3*598*FLEN/8, x4, x1, x2)

inst_22103:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36ffff000000000; valaddr_reg:x3; val_offset:66309*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66309*0 + 3*599*FLEN/8, x4, x1, x2)

inst_22104:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36ffff800000000; valaddr_reg:x3; val_offset:66312*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66312*0 + 3*600*FLEN/8, x4, x1, x2)

inst_22105:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36ffffc00000000; valaddr_reg:x3; val_offset:66315*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66315*0 + 3*601*FLEN/8, x4, x1, x2)

inst_22106:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36ffffe00000000; valaddr_reg:x3; val_offset:66318*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66318*0 + 3*602*FLEN/8, x4, x1, x2)

inst_22107:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36fffff00000000; valaddr_reg:x3; val_offset:66321*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66321*0 + 3*603*FLEN/8, x4, x1, x2)

inst_22108:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36fffff80000000; valaddr_reg:x3; val_offset:66324*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66324*0 + 3*604*FLEN/8, x4, x1, x2)

inst_22109:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36fffffc0000000; valaddr_reg:x3; val_offset:66327*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66327*0 + 3*605*FLEN/8, x4, x1, x2)

inst_22110:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36fffffe0000000; valaddr_reg:x3; val_offset:66330*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66330*0 + 3*606*FLEN/8, x4, x1, x2)

inst_22111:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36ffffff0000000; valaddr_reg:x3; val_offset:66333*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66333*0 + 3*607*FLEN/8, x4, x1, x2)

inst_22112:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36ffffff8000000; valaddr_reg:x3; val_offset:66336*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66336*0 + 3*608*FLEN/8, x4, x1, x2)

inst_22113:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36ffffffc000000; valaddr_reg:x3; val_offset:66339*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66339*0 + 3*609*FLEN/8, x4, x1, x2)

inst_22114:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36ffffffe000000; valaddr_reg:x3; val_offset:66342*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66342*0 + 3*610*FLEN/8, x4, x1, x2)

inst_22115:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36fffffff000000; valaddr_reg:x3; val_offset:66345*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66345*0 + 3*611*FLEN/8, x4, x1, x2)

inst_22116:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36fffffff800000; valaddr_reg:x3; val_offset:66348*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66348*0 + 3*612*FLEN/8, x4, x1, x2)

inst_22117:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36fffffffc00000; valaddr_reg:x3; val_offset:66351*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66351*0 + 3*613*FLEN/8, x4, x1, x2)

inst_22118:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36fffffffe00000; valaddr_reg:x3; val_offset:66354*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66354*0 + 3*614*FLEN/8, x4, x1, x2)

inst_22119:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36ffffffff00000; valaddr_reg:x3; val_offset:66357*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66357*0 + 3*615*FLEN/8, x4, x1, x2)

inst_22120:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36ffffffff80000; valaddr_reg:x3; val_offset:66360*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66360*0 + 3*616*FLEN/8, x4, x1, x2)

inst_22121:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36ffffffffc0000; valaddr_reg:x3; val_offset:66363*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66363*0 + 3*617*FLEN/8, x4, x1, x2)

inst_22122:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36ffffffffe0000; valaddr_reg:x3; val_offset:66366*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66366*0 + 3*618*FLEN/8, x4, x1, x2)

inst_22123:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36fffffffff0000; valaddr_reg:x3; val_offset:66369*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66369*0 + 3*619*FLEN/8, x4, x1, x2)

inst_22124:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36fffffffff8000; valaddr_reg:x3; val_offset:66372*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66372*0 + 3*620*FLEN/8, x4, x1, x2)

inst_22125:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36fffffffffc000; valaddr_reg:x3; val_offset:66375*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66375*0 + 3*621*FLEN/8, x4, x1, x2)

inst_22126:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36fffffffffe000; valaddr_reg:x3; val_offset:66378*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66378*0 + 3*622*FLEN/8, x4, x1, x2)

inst_22127:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36ffffffffff000; valaddr_reg:x3; val_offset:66381*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66381*0 + 3*623*FLEN/8, x4, x1, x2)

inst_22128:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36ffffffffff800; valaddr_reg:x3; val_offset:66384*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66384*0 + 3*624*FLEN/8, x4, x1, x2)

inst_22129:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36ffffffffffc00; valaddr_reg:x3; val_offset:66387*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66387*0 + 3*625*FLEN/8, x4, x1, x2)

inst_22130:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36ffffffffffe00; valaddr_reg:x3; val_offset:66390*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66390*0 + 3*626*FLEN/8, x4, x1, x2)

inst_22131:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36fffffffffff00; valaddr_reg:x3; val_offset:66393*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66393*0 + 3*627*FLEN/8, x4, x1, x2)

inst_22132:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36fffffffffff80; valaddr_reg:x3; val_offset:66396*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66396*0 + 3*628*FLEN/8, x4, x1, x2)

inst_22133:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36fffffffffffc0; valaddr_reg:x3; val_offset:66399*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66399*0 + 3*629*FLEN/8, x4, x1, x2)

inst_22134:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36fffffffffffe0; valaddr_reg:x3; val_offset:66402*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66402*0 + 3*630*FLEN/8, x4, x1, x2)

inst_22135:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36ffffffffffff0; valaddr_reg:x3; val_offset:66405*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66405*0 + 3*631*FLEN/8, x4, x1, x2)

inst_22136:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36ffffffffffff8; valaddr_reg:x3; val_offset:66408*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66408*0 + 3*632*FLEN/8, x4, x1, x2)

inst_22137:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36ffffffffffffc; valaddr_reg:x3; val_offset:66411*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66411*0 + 3*633*FLEN/8, x4, x1, x2)

inst_22138:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36ffffffffffffe; valaddr_reg:x3; val_offset:66414*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66414*0 + 3*634*FLEN/8, x4, x1, x2)

inst_22139:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8af40456e9b77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88af40456e9b77; op2val:0x0;
op3val:0x36fffffffffffff; valaddr_reg:x3; val_offset:66417*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66417*0 + 3*635*FLEN/8, x4, x1, x2)

inst_22140:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:66420*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66420*0 + 3*636*FLEN/8, x4, x1, x2)

inst_22141:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:66423*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66423*0 + 3*637*FLEN/8, x4, x1, x2)

inst_22142:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:66426*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66426*0 + 3*638*FLEN/8, x4, x1, x2)

inst_22143:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:66429*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66429*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_22144:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:66432*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66432*0 + 3*640*FLEN/8, x4, x1, x2)

inst_22145:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:66435*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66435*0 + 3*641*FLEN/8, x4, x1, x2)

inst_22146:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:66438*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66438*0 + 3*642*FLEN/8, x4, x1, x2)

inst_22147:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:66441*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66441*0 + 3*643*FLEN/8, x4, x1, x2)

inst_22148:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:66444*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66444*0 + 3*644*FLEN/8, x4, x1, x2)

inst_22149:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:66447*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66447*0 + 3*645*FLEN/8, x4, x1, x2)

inst_22150:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:66450*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66450*0 + 3*646*FLEN/8, x4, x1, x2)

inst_22151:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:66453*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66453*0 + 3*647*FLEN/8, x4, x1, x2)

inst_22152:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:66456*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66456*0 + 3*648*FLEN/8, x4, x1, x2)

inst_22153:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:66459*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66459*0 + 3*649*FLEN/8, x4, x1, x2)

inst_22154:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:66462*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66462*0 + 3*650*FLEN/8, x4, x1, x2)

inst_22155:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:66465*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66465*0 + 3*651*FLEN/8, x4, x1, x2)

inst_22156:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:66468*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66468*0 + 3*652*FLEN/8, x4, x1, x2)

inst_22157:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:66471*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66471*0 + 3*653*FLEN/8, x4, x1, x2)

inst_22158:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:66474*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66474*0 + 3*654*FLEN/8, x4, x1, x2)

inst_22159:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:66477*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66477*0 + 3*655*FLEN/8, x4, x1, x2)

inst_22160:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:66480*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66480*0 + 3*656*FLEN/8, x4, x1, x2)

inst_22161:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:66483*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66483*0 + 3*657*FLEN/8, x4, x1, x2)

inst_22162:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1e0000000000000; valaddr_reg:x3; val_offset:66486*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66486*0 + 3*658*FLEN/8, x4, x1, x2)

inst_22163:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1e0000000000001; valaddr_reg:x3; val_offset:66489*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66489*0 + 3*659*FLEN/8, x4, x1, x2)

inst_22164:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1e0000000000003; valaddr_reg:x3; val_offset:66492*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66492*0 + 3*660*FLEN/8, x4, x1, x2)

inst_22165:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1e0000000000007; valaddr_reg:x3; val_offset:66495*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66495*0 + 3*661*FLEN/8, x4, x1, x2)

inst_22166:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1e000000000000f; valaddr_reg:x3; val_offset:66498*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66498*0 + 3*662*FLEN/8, x4, x1, x2)

inst_22167:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1e000000000001f; valaddr_reg:x3; val_offset:66501*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66501*0 + 3*663*FLEN/8, x4, x1, x2)

inst_22168:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1e000000000003f; valaddr_reg:x3; val_offset:66504*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66504*0 + 3*664*FLEN/8, x4, x1, x2)

inst_22169:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1e000000000007f; valaddr_reg:x3; val_offset:66507*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66507*0 + 3*665*FLEN/8, x4, x1, x2)

inst_22170:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1e00000000000ff; valaddr_reg:x3; val_offset:66510*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66510*0 + 3*666*FLEN/8, x4, x1, x2)

inst_22171:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1e00000000001ff; valaddr_reg:x3; val_offset:66513*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66513*0 + 3*667*FLEN/8, x4, x1, x2)

inst_22172:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1e00000000003ff; valaddr_reg:x3; val_offset:66516*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66516*0 + 3*668*FLEN/8, x4, x1, x2)

inst_22173:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1e00000000007ff; valaddr_reg:x3; val_offset:66519*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66519*0 + 3*669*FLEN/8, x4, x1, x2)

inst_22174:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1e0000000000fff; valaddr_reg:x3; val_offset:66522*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66522*0 + 3*670*FLEN/8, x4, x1, x2)

inst_22175:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1e0000000001fff; valaddr_reg:x3; val_offset:66525*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66525*0 + 3*671*FLEN/8, x4, x1, x2)

inst_22176:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1e0000000003fff; valaddr_reg:x3; val_offset:66528*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66528*0 + 3*672*FLEN/8, x4, x1, x2)

inst_22177:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1e0000000007fff; valaddr_reg:x3; val_offset:66531*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66531*0 + 3*673*FLEN/8, x4, x1, x2)

inst_22178:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1e000000000ffff; valaddr_reg:x3; val_offset:66534*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66534*0 + 3*674*FLEN/8, x4, x1, x2)

inst_22179:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1e000000001ffff; valaddr_reg:x3; val_offset:66537*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66537*0 + 3*675*FLEN/8, x4, x1, x2)

inst_22180:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1e000000003ffff; valaddr_reg:x3; val_offset:66540*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66540*0 + 3*676*FLEN/8, x4, x1, x2)

inst_22181:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1e000000007ffff; valaddr_reg:x3; val_offset:66543*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66543*0 + 3*677*FLEN/8, x4, x1, x2)

inst_22182:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1e00000000fffff; valaddr_reg:x3; val_offset:66546*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66546*0 + 3*678*FLEN/8, x4, x1, x2)

inst_22183:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1e00000001fffff; valaddr_reg:x3; val_offset:66549*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66549*0 + 3*679*FLEN/8, x4, x1, x2)

inst_22184:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1e00000003fffff; valaddr_reg:x3; val_offset:66552*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66552*0 + 3*680*FLEN/8, x4, x1, x2)

inst_22185:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1e00000007fffff; valaddr_reg:x3; val_offset:66555*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66555*0 + 3*681*FLEN/8, x4, x1, x2)

inst_22186:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1e0000000ffffff; valaddr_reg:x3; val_offset:66558*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66558*0 + 3*682*FLEN/8, x4, x1, x2)

inst_22187:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1e0000001ffffff; valaddr_reg:x3; val_offset:66561*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66561*0 + 3*683*FLEN/8, x4, x1, x2)

inst_22188:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1e0000003ffffff; valaddr_reg:x3; val_offset:66564*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66564*0 + 3*684*FLEN/8, x4, x1, x2)

inst_22189:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1e0000007ffffff; valaddr_reg:x3; val_offset:66567*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66567*0 + 3*685*FLEN/8, x4, x1, x2)

inst_22190:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1e000000fffffff; valaddr_reg:x3; val_offset:66570*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66570*0 + 3*686*FLEN/8, x4, x1, x2)

inst_22191:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1e000001fffffff; valaddr_reg:x3; val_offset:66573*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66573*0 + 3*687*FLEN/8, x4, x1, x2)

inst_22192:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1e000003fffffff; valaddr_reg:x3; val_offset:66576*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66576*0 + 3*688*FLEN/8, x4, x1, x2)

inst_22193:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1e000007fffffff; valaddr_reg:x3; val_offset:66579*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66579*0 + 3*689*FLEN/8, x4, x1, x2)

inst_22194:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1e00000ffffffff; valaddr_reg:x3; val_offset:66582*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66582*0 + 3*690*FLEN/8, x4, x1, x2)

inst_22195:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1e00001ffffffff; valaddr_reg:x3; val_offset:66585*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66585*0 + 3*691*FLEN/8, x4, x1, x2)

inst_22196:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1e00003ffffffff; valaddr_reg:x3; val_offset:66588*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66588*0 + 3*692*FLEN/8, x4, x1, x2)

inst_22197:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1e00007ffffffff; valaddr_reg:x3; val_offset:66591*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66591*0 + 3*693*FLEN/8, x4, x1, x2)

inst_22198:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1e0000fffffffff; valaddr_reg:x3; val_offset:66594*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66594*0 + 3*694*FLEN/8, x4, x1, x2)

inst_22199:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1e0001fffffffff; valaddr_reg:x3; val_offset:66597*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66597*0 + 3*695*FLEN/8, x4, x1, x2)

inst_22200:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1e0003fffffffff; valaddr_reg:x3; val_offset:66600*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66600*0 + 3*696*FLEN/8, x4, x1, x2)

inst_22201:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1e0007fffffffff; valaddr_reg:x3; val_offset:66603*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66603*0 + 3*697*FLEN/8, x4, x1, x2)

inst_22202:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1e000ffffffffff; valaddr_reg:x3; val_offset:66606*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66606*0 + 3*698*FLEN/8, x4, x1, x2)

inst_22203:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1e001ffffffffff; valaddr_reg:x3; val_offset:66609*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66609*0 + 3*699*FLEN/8, x4, x1, x2)

inst_22204:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1e003ffffffffff; valaddr_reg:x3; val_offset:66612*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66612*0 + 3*700*FLEN/8, x4, x1, x2)

inst_22205:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1e007ffffffffff; valaddr_reg:x3; val_offset:66615*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66615*0 + 3*701*FLEN/8, x4, x1, x2)

inst_22206:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1e00fffffffffff; valaddr_reg:x3; val_offset:66618*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66618*0 + 3*702*FLEN/8, x4, x1, x2)

inst_22207:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1e01fffffffffff; valaddr_reg:x3; val_offset:66621*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66621*0 + 3*703*FLEN/8, x4, x1, x2)

inst_22208:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1e03fffffffffff; valaddr_reg:x3; val_offset:66624*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66624*0 + 3*704*FLEN/8, x4, x1, x2)

inst_22209:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1e07fffffffffff; valaddr_reg:x3; val_offset:66627*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66627*0 + 3*705*FLEN/8, x4, x1, x2)

inst_22210:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1e0ffffffffffff; valaddr_reg:x3; val_offset:66630*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66630*0 + 3*706*FLEN/8, x4, x1, x2)

inst_22211:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1e1ffffffffffff; valaddr_reg:x3; val_offset:66633*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66633*0 + 3*707*FLEN/8, x4, x1, x2)

inst_22212:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1e3ffffffffffff; valaddr_reg:x3; val_offset:66636*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66636*0 + 3*708*FLEN/8, x4, x1, x2)

inst_22213:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1e7ffffffffffff; valaddr_reg:x3; val_offset:66639*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66639*0 + 3*709*FLEN/8, x4, x1, x2)

inst_22214:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1e8000000000000; valaddr_reg:x3; val_offset:66642*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66642*0 + 3*710*FLEN/8, x4, x1, x2)

inst_22215:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1ec000000000000; valaddr_reg:x3; val_offset:66645*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66645*0 + 3*711*FLEN/8, x4, x1, x2)

inst_22216:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1ee000000000000; valaddr_reg:x3; val_offset:66648*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66648*0 + 3*712*FLEN/8, x4, x1, x2)

inst_22217:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1ef000000000000; valaddr_reg:x3; val_offset:66651*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66651*0 + 3*713*FLEN/8, x4, x1, x2)

inst_22218:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1ef800000000000; valaddr_reg:x3; val_offset:66654*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66654*0 + 3*714*FLEN/8, x4, x1, x2)

inst_22219:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1efc00000000000; valaddr_reg:x3; val_offset:66657*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66657*0 + 3*715*FLEN/8, x4, x1, x2)

inst_22220:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1efe00000000000; valaddr_reg:x3; val_offset:66660*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66660*0 + 3*716*FLEN/8, x4, x1, x2)

inst_22221:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1eff00000000000; valaddr_reg:x3; val_offset:66663*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66663*0 + 3*717*FLEN/8, x4, x1, x2)

inst_22222:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1eff80000000000; valaddr_reg:x3; val_offset:66666*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66666*0 + 3*718*FLEN/8, x4, x1, x2)

inst_22223:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1effc0000000000; valaddr_reg:x3; val_offset:66669*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66669*0 + 3*719*FLEN/8, x4, x1, x2)

inst_22224:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1effe0000000000; valaddr_reg:x3; val_offset:66672*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66672*0 + 3*720*FLEN/8, x4, x1, x2)

inst_22225:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1efff0000000000; valaddr_reg:x3; val_offset:66675*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66675*0 + 3*721*FLEN/8, x4, x1, x2)

inst_22226:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1efff8000000000; valaddr_reg:x3; val_offset:66678*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66678*0 + 3*722*FLEN/8, x4, x1, x2)

inst_22227:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1efffc000000000; valaddr_reg:x3; val_offset:66681*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66681*0 + 3*723*FLEN/8, x4, x1, x2)

inst_22228:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1efffe000000000; valaddr_reg:x3; val_offset:66684*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66684*0 + 3*724*FLEN/8, x4, x1, x2)

inst_22229:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1effff000000000; valaddr_reg:x3; val_offset:66687*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66687*0 + 3*725*FLEN/8, x4, x1, x2)

inst_22230:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1effff800000000; valaddr_reg:x3; val_offset:66690*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66690*0 + 3*726*FLEN/8, x4, x1, x2)

inst_22231:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1effffc00000000; valaddr_reg:x3; val_offset:66693*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66693*0 + 3*727*FLEN/8, x4, x1, x2)

inst_22232:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1effffe00000000; valaddr_reg:x3; val_offset:66696*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66696*0 + 3*728*FLEN/8, x4, x1, x2)

inst_22233:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1efffff00000000; valaddr_reg:x3; val_offset:66699*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66699*0 + 3*729*FLEN/8, x4, x1, x2)

inst_22234:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1efffff80000000; valaddr_reg:x3; val_offset:66702*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66702*0 + 3*730*FLEN/8, x4, x1, x2)

inst_22235:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1efffffc0000000; valaddr_reg:x3; val_offset:66705*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66705*0 + 3*731*FLEN/8, x4, x1, x2)

inst_22236:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1efffffe0000000; valaddr_reg:x3; val_offset:66708*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66708*0 + 3*732*FLEN/8, x4, x1, x2)

inst_22237:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1effffff0000000; valaddr_reg:x3; val_offset:66711*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66711*0 + 3*733*FLEN/8, x4, x1, x2)

inst_22238:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1effffff8000000; valaddr_reg:x3; val_offset:66714*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66714*0 + 3*734*FLEN/8, x4, x1, x2)

inst_22239:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1effffffc000000; valaddr_reg:x3; val_offset:66717*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66717*0 + 3*735*FLEN/8, x4, x1, x2)

inst_22240:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1effffffe000000; valaddr_reg:x3; val_offset:66720*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66720*0 + 3*736*FLEN/8, x4, x1, x2)

inst_22241:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1efffffff000000; valaddr_reg:x3; val_offset:66723*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66723*0 + 3*737*FLEN/8, x4, x1, x2)

inst_22242:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1efffffff800000; valaddr_reg:x3; val_offset:66726*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66726*0 + 3*738*FLEN/8, x4, x1, x2)

inst_22243:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1efffffffc00000; valaddr_reg:x3; val_offset:66729*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66729*0 + 3*739*FLEN/8, x4, x1, x2)

inst_22244:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1efffffffe00000; valaddr_reg:x3; val_offset:66732*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66732*0 + 3*740*FLEN/8, x4, x1, x2)

inst_22245:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1effffffff00000; valaddr_reg:x3; val_offset:66735*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66735*0 + 3*741*FLEN/8, x4, x1, x2)

inst_22246:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1effffffff80000; valaddr_reg:x3; val_offset:66738*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66738*0 + 3*742*FLEN/8, x4, x1, x2)

inst_22247:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1effffffffc0000; valaddr_reg:x3; val_offset:66741*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66741*0 + 3*743*FLEN/8, x4, x1, x2)

inst_22248:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1effffffffe0000; valaddr_reg:x3; val_offset:66744*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66744*0 + 3*744*FLEN/8, x4, x1, x2)

inst_22249:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1efffffffff0000; valaddr_reg:x3; val_offset:66747*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66747*0 + 3*745*FLEN/8, x4, x1, x2)

inst_22250:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1efffffffff8000; valaddr_reg:x3; val_offset:66750*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66750*0 + 3*746*FLEN/8, x4, x1, x2)

inst_22251:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1efffffffffc000; valaddr_reg:x3; val_offset:66753*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66753*0 + 3*747*FLEN/8, x4, x1, x2)

inst_22252:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1efffffffffe000; valaddr_reg:x3; val_offset:66756*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66756*0 + 3*748*FLEN/8, x4, x1, x2)

inst_22253:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1effffffffff000; valaddr_reg:x3; val_offset:66759*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66759*0 + 3*749*FLEN/8, x4, x1, x2)

inst_22254:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1effffffffff800; valaddr_reg:x3; val_offset:66762*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66762*0 + 3*750*FLEN/8, x4, x1, x2)

inst_22255:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1effffffffffc00; valaddr_reg:x3; val_offset:66765*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66765*0 + 3*751*FLEN/8, x4, x1, x2)

inst_22256:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1effffffffffe00; valaddr_reg:x3; val_offset:66768*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66768*0 + 3*752*FLEN/8, x4, x1, x2)

inst_22257:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1efffffffffff00; valaddr_reg:x3; val_offset:66771*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66771*0 + 3*753*FLEN/8, x4, x1, x2)

inst_22258:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1efffffffffff80; valaddr_reg:x3; val_offset:66774*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66774*0 + 3*754*FLEN/8, x4, x1, x2)

inst_22259:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1efffffffffffc0; valaddr_reg:x3; val_offset:66777*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66777*0 + 3*755*FLEN/8, x4, x1, x2)

inst_22260:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1efffffffffffe0; valaddr_reg:x3; val_offset:66780*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66780*0 + 3*756*FLEN/8, x4, x1, x2)

inst_22261:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1effffffffffff0; valaddr_reg:x3; val_offset:66783*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66783*0 + 3*757*FLEN/8, x4, x1, x2)

inst_22262:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1effffffffffff8; valaddr_reg:x3; val_offset:66786*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66786*0 + 3*758*FLEN/8, x4, x1, x2)

inst_22263:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1effffffffffffc; valaddr_reg:x3; val_offset:66789*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66789*0 + 3*759*FLEN/8, x4, x1, x2)

inst_22264:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1effffffffffffe; valaddr_reg:x3; val_offset:66792*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66792*0 + 3*760*FLEN/8, x4, x1, x2)

inst_22265:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8f4e5462276c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f88f4e5462276c7; op2val:0x0;
op3val:0x1efffffffffffff; valaddr_reg:x3; val_offset:66795*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66795*0 + 3*761*FLEN/8, x4, x1, x2)

inst_22266:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbb0000000000000; valaddr_reg:x3; val_offset:66798*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66798*0 + 3*762*FLEN/8, x4, x1, x2)

inst_22267:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbb0000000000001; valaddr_reg:x3; val_offset:66801*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66801*0 + 3*763*FLEN/8, x4, x1, x2)

inst_22268:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbb0000000000003; valaddr_reg:x3; val_offset:66804*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66804*0 + 3*764*FLEN/8, x4, x1, x2)

inst_22269:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbb0000000000007; valaddr_reg:x3; val_offset:66807*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66807*0 + 3*765*FLEN/8, x4, x1, x2)

inst_22270:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbb000000000000f; valaddr_reg:x3; val_offset:66810*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66810*0 + 3*766*FLEN/8, x4, x1, x2)

inst_22271:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbb000000000001f; valaddr_reg:x3; val_offset:66813*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66813*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6883733717085571047,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831576064,64,FLEN)
NAN_BOXED(6883733717085571047,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831641600,64,FLEN)
NAN_BOXED(6883733717085571047,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831674368,64,FLEN)
NAN_BOXED(6883733717085571047,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831690752,64,FLEN)
NAN_BOXED(6883733717085571047,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831698944,64,FLEN)
NAN_BOXED(6883733717085571047,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831703040,64,FLEN)
NAN_BOXED(6883733717085571047,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831705088,64,FLEN)
NAN_BOXED(6883733717085571047,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831706112,64,FLEN)
NAN_BOXED(6883733717085571047,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831706624,64,FLEN)
NAN_BOXED(6883733717085571047,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831706880,64,FLEN)
NAN_BOXED(6883733717085571047,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707008,64,FLEN)
NAN_BOXED(6883733717085571047,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707072,64,FLEN)
NAN_BOXED(6883733717085571047,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707104,64,FLEN)
NAN_BOXED(6883733717085571047,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707120,64,FLEN)
NAN_BOXED(6883733717085571047,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707128,64,FLEN)
NAN_BOXED(6883733717085571047,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707132,64,FLEN)
NAN_BOXED(6883733717085571047,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707134,64,FLEN)
NAN_BOXED(6883733717085571047,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707135,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775935,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854776063,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854776319,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854776831,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854777855,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854779903,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854783999,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854792191,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854808575,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854841343,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854906879,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036855037951,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036855300095,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036855824383,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036856872959,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036858970111,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036863164415,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036871553023,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036888330239,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036921884671,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036988993535,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372037123211263,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372037391646719,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372037928517631,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372039002259455,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372041149743103,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372045444710399,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372054034644991,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372071214514175,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372105574252543,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372174293729279,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372311732682751,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372586610589695,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223373136366403583,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223374235878031359,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223376434901286911,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223380832947798015,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223389629040820223,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223407221226864639,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223442405598953471,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223512774343131135,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223653511831486463,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223934986808197119,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224497936761618431,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225623836668461055,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225623836668461056,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226749736575303680,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227312686528724992,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227594161505435648,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227734898993790976,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227805267737968640,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227840452110057472,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227858044296101888,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227866840389124096,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227871238435635200,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227873437458890752,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227874536970518528,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875086726332416,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875361604239360,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875499043192832,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875567762669568,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875602122407936,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875619302277120,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875627892211712,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875632187179008,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875634334662656,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875635408404480,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875635945275392,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636213710848,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636347928576,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636415037440,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636448591872,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636465369088,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636473757696,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636477952000,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636480049152,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636481097728,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636481622016,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636481884160,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482015232,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482080768,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482113536,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482129920,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482138112,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482142208,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482144256,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482145280,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482145792,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146048,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146176,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6883820172728384203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146303,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341248,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341249,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341251,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341255,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341263,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341279,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341311,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341375,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341503,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341759,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524342271,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524343295,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524345343,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524349439,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524357631,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524374015,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524406783,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524472319,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524603391,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524865535,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776525389823,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776526438399,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776528535551,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776532729855,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776541118463,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776557895679,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776591450111,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776658558975,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776792776703,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726777061212159,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726777598083071,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726778671824895,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726780819308543,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726785114275839,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726793704210431,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726810884079615,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726845243817983,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726913963294719,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283727051402248191,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283727326280155135,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283727876035969023,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283728975547596799,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283731174570852351,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283735572617363455,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283744368710385663,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283761960896430079,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283797145268518911,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283867514012696575,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(284008251501051903,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(284289726477762559,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(284852676431183871,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(285978576338026495,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(285978576338026496,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(287104476244869120,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(287667426198290432,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(287948901175001088,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288089638663356416,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288160007407534080,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288195191779622912,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288212783965667328,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288221580058689536,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288225978105200640,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288228177128456192,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288229276640083968,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288229826395897856,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230101273804800,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230238712758272,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230307432235008,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230341791973376,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230358971842560,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230367561777152,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230371856744448,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230374004228096,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230375077969920,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230375614840832,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230375883276288,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376017494016,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376084602880,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376118157312,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376134934528,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376143323136,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376147517440,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376149614592,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376150663168,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151187456,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151449600,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151580672,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151646208,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151678976,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151695360,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151703552,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151707648,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151709696,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151710720,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711232,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711488,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711616,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711680,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711712,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711728,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711736,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711740,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711742,64,FLEN)
NAN_BOXED(6883846849990899275,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711743,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4436045632959938560,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4436045632959938561,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4436045632959938563,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4436045632959938567,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4436045632959938575,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4436045632959938591,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4436045632959938623,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4436045632959938687,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4436045632959938815,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4436045632959939071,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4436045632959939583,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4436045632959940607,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4436045632959942655,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4436045632959946751,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4436045632959954943,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4436045632959971327,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4436045632960004095,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4436045632960069631,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4436045632960200703,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4436045632960462847,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4436045632960987135,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4436045632962035711,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4436045632964132863,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4436045632968327167,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4436045632976715775,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4436045632993492991,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4436045633027047423,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4436045633094156287,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4436045633228374015,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4436045633496809471,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4436045634033680383,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4436045635107422207,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4436045637254905855,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4436045641549873151,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4436045650139807743,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4436045667319676927,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4436045701679415295,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4436045770398892031,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4436045907837845503,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4436046182715752447,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4436046732471566335,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4436047831983194111,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4436050031006449663,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4436054429052960767,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4436063225145982975,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4436080817332027391,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4436116001704116223,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4436186370448293887,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4436327107936649215,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4436608582913359871,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4437171532866781183,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4438297432773623807,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4438297432773623808,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4439423332680466432,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4439986282633887744,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4440267757610598400,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4440408495098953728,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4440478863843131392,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4440514048215220224,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4440531640401264640,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4440540436494286848,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4440544834540797952,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4440547033564053504,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4440548133075681280,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4440548682831495168,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4440548957709402112,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4440549095148355584,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4440549163867832320,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4440549198227570688,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4440549215407439872,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4440549223997374464,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4440549228292341760,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4440549230439825408,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4440549231513567232,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4440549232050438144,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4440549232318873600,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4440549232453091328,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4440549232520200192,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4440549232553754624,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4440549232570531840,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4440549232578920448,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4440549232583114752,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4440549232585211904,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4440549232586260480,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4440549232586784768,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4440549232587046912,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4440549232587177984,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4440549232587243520,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4440549232587276288,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4440549232587292672,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4440549232587300864,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4440549232587304960,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4440549232587307008,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4440549232587308032,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4440549232587308544,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4440549232587308800,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4440549232587308928,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4440549232587308992,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4440549232587309024,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4440549232587309040,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4440549232587309048,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4440549232587309052,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4440549232587309054,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4440549232587309055,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6883858673163503555,64,FLEN)
NAN_BOXED(2329768886873216813,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377280,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377281,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377283,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377287,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377295,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377311,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377343,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377407,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377535,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377791,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505378303,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505379327,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505381375,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505385471,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505393663,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505410047,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505442815,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505508351,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505639423,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505901567,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979506425855,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979507474431,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979509571583,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979513765887,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979522154495,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979538931711,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979572486143,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979639595007,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979773812735,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697980042248191,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697980579119103,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697981652860927,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697983800344575,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697988095311871,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697996685246463,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247698013865115647,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247698048224854015,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247698116944330751,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247698254383284223,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247698529261191167,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247699079017005055,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247700178528632831,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247702377551888383,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247706775598399487,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247715571691421695,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247733163877466111,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247768348249554943,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247838716993732607,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247979454482087935,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(248260929458798591,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(248823879412219903,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(249949779319062527,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(249949779319062528,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(251075679225905152,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(251638629179326464,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(251920104156037120,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252060841644392448,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252131210388570112,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252166394760658944,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252183986946703360,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252192783039725568,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252197181086236672,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252199380109492224,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252200479621120000,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201029376933888,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201304254840832,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201441693794304,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201510413271040,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201544773009408,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201561952878592,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201570542813184,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201574837780480,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201576985264128,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201578059005952,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201578595876864,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201578864312320,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201578998530048,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579065638912,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579099193344,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579115970560,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579124359168,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579128553472,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579130650624,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579131699200,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132223488,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132485632,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132616704,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132682240,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132715008,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132731392,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132739584,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132743680,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132745728,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132746752,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747264,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747520,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747648,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747712,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747744,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747760,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747768,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747772,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747774,64,FLEN)
NAN_BOXED(6883859308372138791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747775,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006784,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006785,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006787,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006791,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006799,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006815,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006847,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006911,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878007039,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878007295,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878007807,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878008831,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878010879,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878014975,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878023167,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878039551,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878072319,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878137855,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878268927,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878531071,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379879055359,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379880103935,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379882201087,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379886395391,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379894783999,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379911561215,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379945115647,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194380012224511,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194380146442239,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194380414877695,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194380951748607,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194382025490431,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194384172974079,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194388467941375,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194397057875967,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194414237745151,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194448597483519,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194517316960255,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194654755913727,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194929633820671,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243195479389634559,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243196578901262335,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243198777924517887,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243203175971028991,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243211972064051199,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243229564250095615,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243264748622184447,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243335117366362111,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243475854854717439,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243757329831428095,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(244320279784849407,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(245446179691692031,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(245446179691692032,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(246572079598534656,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247135029551955968,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247416504528666624,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247557242017021952,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247627610761199616,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247662795133288448,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247680387319332864,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247689183412355072,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247693581458866176,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247695780482121728,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247696879993749504,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697429749563392,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697704627470336,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697842066423808,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697910785900544,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697945145638912,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697962325508096,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697970915442688,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697975210409984,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697977357893632,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697978431635456,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697978968506368,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979236941824,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979371159552,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979438268416,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979471822848,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979488600064,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979496988672,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979501182976,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979503280128,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979504328704,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979504852992,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505115136,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505246208,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505311744,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505344512,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505360896,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505369088,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505373184,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505375232,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505376256,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505376768,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377024,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377152,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377216,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377248,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377264,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377272,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377276,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377278,64,FLEN)
NAN_BOXED(6883944721013447543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377279,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114880,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114881,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114883,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114887,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114895,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114911,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114943,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821115007,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821115135,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821115391,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821115903,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821116927,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821118975,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821123071,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821131263,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821147647,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821180415,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821245951,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821377023,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821639167,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988822163455,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988823212031,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988825309183,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988829503487,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988837892095,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988854669311,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988888223743,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988955332607,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107989089550335,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107989357985791,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107989894856703,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107990968598527,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107993116082175,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107997411049471,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135108006000984063,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135108023180853247,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135108057540591615,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135108126260068351,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135108263699021823,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135108538576928767,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135109088332742655,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135110187844370431,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135112386867625983,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135116784914137087,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135125581007159295,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135143173193203711,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135178357565292543,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135248726309470207,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135389463797825535,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135670938774536191,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(136233888727957503,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(137359788634800127,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(137359788634800128,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(138485688541642752,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139048638495064064,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139330113471774720,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139470850960130048,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139541219704307712,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139576404076396544,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139593996262440960,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139602792355463168,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139607190401974272,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139609389425229824,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139610488936857600,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611038692671488,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611313570578432,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611451009531904,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611519729008640,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611554088747008,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611571268616192,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611579858550784,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611584153518080,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611586301001728,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611587374743552,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611587911614464,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588180049920,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588314267648,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588381376512,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588414930944,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588431708160,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588440096768,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588444291072,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588446388224,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588447436800,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588447961088,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448223232,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448354304,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448419840,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448452608,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448468992,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448477184,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448481280,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448483328,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448484352,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448484864,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485120,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485248,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485312,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485344,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485360,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485368,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485372,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485374,64,FLEN)
NAN_BOXED(6884021295997155015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485375,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13524309680993599488,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13524309680993599489,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13524309680993599491,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13524309680993599495,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13524309680993599503,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13524309680993599519,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
