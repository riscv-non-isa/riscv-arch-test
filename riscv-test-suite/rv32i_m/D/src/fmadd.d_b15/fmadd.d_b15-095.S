
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_72192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x691ae7e1929e8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa691ae7e1929e8; op2val:0x8000;
op3val:0x80efffffff800000; valaddr_reg:x3; val_offset:216576*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216576*0 + 3*0*FLEN/8, x4, x1, x2)

inst_72193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x691ae7e1929e8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa691ae7e1929e8; op2val:0x8000;
op3val:0x80efffffffc00000; valaddr_reg:x3; val_offset:216579*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216579*0 + 3*1*FLEN/8, x4, x1, x2)

inst_72194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x691ae7e1929e8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa691ae7e1929e8; op2val:0x8000;
op3val:0x80efffffffe00000; valaddr_reg:x3; val_offset:216582*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216582*0 + 3*2*FLEN/8, x4, x1, x2)

inst_72195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x691ae7e1929e8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa691ae7e1929e8; op2val:0x8000;
op3val:0x80effffffff00000; valaddr_reg:x3; val_offset:216585*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216585*0 + 3*3*FLEN/8, x4, x1, x2)

inst_72196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x691ae7e1929e8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa691ae7e1929e8; op2val:0x8000;
op3val:0x80effffffff80000; valaddr_reg:x3; val_offset:216588*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216588*0 + 3*4*FLEN/8, x4, x1, x2)

inst_72197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x691ae7e1929e8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa691ae7e1929e8; op2val:0x8000;
op3val:0x80effffffffc0000; valaddr_reg:x3; val_offset:216591*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216591*0 + 3*5*FLEN/8, x4, x1, x2)

inst_72198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x691ae7e1929e8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa691ae7e1929e8; op2val:0x8000;
op3val:0x80effffffffe0000; valaddr_reg:x3; val_offset:216594*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216594*0 + 3*6*FLEN/8, x4, x1, x2)

inst_72199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x691ae7e1929e8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa691ae7e1929e8; op2val:0x8000;
op3val:0x80efffffffff0000; valaddr_reg:x3; val_offset:216597*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216597*0 + 3*7*FLEN/8, x4, x1, x2)

inst_72200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x691ae7e1929e8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa691ae7e1929e8; op2val:0x8000;
op3val:0x80efffffffff8000; valaddr_reg:x3; val_offset:216600*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216600*0 + 3*8*FLEN/8, x4, x1, x2)

inst_72201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x691ae7e1929e8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa691ae7e1929e8; op2val:0x8000;
op3val:0x80efffffffffc000; valaddr_reg:x3; val_offset:216603*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216603*0 + 3*9*FLEN/8, x4, x1, x2)

inst_72202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x691ae7e1929e8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa691ae7e1929e8; op2val:0x8000;
op3val:0x80efffffffffe000; valaddr_reg:x3; val_offset:216606*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216606*0 + 3*10*FLEN/8, x4, x1, x2)

inst_72203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x691ae7e1929e8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa691ae7e1929e8; op2val:0x8000;
op3val:0x80effffffffff000; valaddr_reg:x3; val_offset:216609*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216609*0 + 3*11*FLEN/8, x4, x1, x2)

inst_72204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x691ae7e1929e8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa691ae7e1929e8; op2val:0x8000;
op3val:0x80effffffffff800; valaddr_reg:x3; val_offset:216612*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216612*0 + 3*12*FLEN/8, x4, x1, x2)

inst_72205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x691ae7e1929e8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa691ae7e1929e8; op2val:0x8000;
op3val:0x80effffffffffc00; valaddr_reg:x3; val_offset:216615*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216615*0 + 3*13*FLEN/8, x4, x1, x2)

inst_72206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x691ae7e1929e8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa691ae7e1929e8; op2val:0x8000;
op3val:0x80effffffffffe00; valaddr_reg:x3; val_offset:216618*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216618*0 + 3*14*FLEN/8, x4, x1, x2)

inst_72207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x691ae7e1929e8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa691ae7e1929e8; op2val:0x8000;
op3val:0x80efffffffffff00; valaddr_reg:x3; val_offset:216621*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216621*0 + 3*15*FLEN/8, x4, x1, x2)

inst_72208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x691ae7e1929e8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa691ae7e1929e8; op2val:0x8000;
op3val:0x80efffffffffff80; valaddr_reg:x3; val_offset:216624*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216624*0 + 3*16*FLEN/8, x4, x1, x2)

inst_72209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x691ae7e1929e8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa691ae7e1929e8; op2val:0x8000;
op3val:0x80efffffffffffc0; valaddr_reg:x3; val_offset:216627*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216627*0 + 3*17*FLEN/8, x4, x1, x2)

inst_72210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x691ae7e1929e8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa691ae7e1929e8; op2val:0x8000;
op3val:0x80efffffffffffe0; valaddr_reg:x3; val_offset:216630*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216630*0 + 3*18*FLEN/8, x4, x1, x2)

inst_72211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x691ae7e1929e8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa691ae7e1929e8; op2val:0x8000;
op3val:0x80effffffffffff0; valaddr_reg:x3; val_offset:216633*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216633*0 + 3*19*FLEN/8, x4, x1, x2)

inst_72212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x691ae7e1929e8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa691ae7e1929e8; op2val:0x8000;
op3val:0x80effffffffffff8; valaddr_reg:x3; val_offset:216636*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216636*0 + 3*20*FLEN/8, x4, x1, x2)

inst_72213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x691ae7e1929e8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa691ae7e1929e8; op2val:0x8000;
op3val:0x80effffffffffffc; valaddr_reg:x3; val_offset:216639*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216639*0 + 3*21*FLEN/8, x4, x1, x2)

inst_72214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x691ae7e1929e8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa691ae7e1929e8; op2val:0x8000;
op3val:0x80effffffffffffe; valaddr_reg:x3; val_offset:216642*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216642*0 + 3*22*FLEN/8, x4, x1, x2)

inst_72215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x691ae7e1929e8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa691ae7e1929e8; op2val:0x8000;
op3val:0x80efffffffffffff; valaddr_reg:x3; val_offset:216645*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216645*0 + 3*23*FLEN/8, x4, x1, x2)

inst_72216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bb0000000000000; valaddr_reg:x3; val_offset:216648*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216648*0 + 3*24*FLEN/8, x4, x1, x2)

inst_72217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bb0000000000001; valaddr_reg:x3; val_offset:216651*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216651*0 + 3*25*FLEN/8, x4, x1, x2)

inst_72218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bb0000000000003; valaddr_reg:x3; val_offset:216654*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216654*0 + 3*26*FLEN/8, x4, x1, x2)

inst_72219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bb0000000000007; valaddr_reg:x3; val_offset:216657*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216657*0 + 3*27*FLEN/8, x4, x1, x2)

inst_72220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bb000000000000f; valaddr_reg:x3; val_offset:216660*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216660*0 + 3*28*FLEN/8, x4, x1, x2)

inst_72221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bb000000000001f; valaddr_reg:x3; val_offset:216663*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216663*0 + 3*29*FLEN/8, x4, x1, x2)

inst_72222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bb000000000003f; valaddr_reg:x3; val_offset:216666*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216666*0 + 3*30*FLEN/8, x4, x1, x2)

inst_72223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bb000000000007f; valaddr_reg:x3; val_offset:216669*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216669*0 + 3*31*FLEN/8, x4, x1, x2)

inst_72224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bb00000000000ff; valaddr_reg:x3; val_offset:216672*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216672*0 + 3*32*FLEN/8, x4, x1, x2)

inst_72225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bb00000000001ff; valaddr_reg:x3; val_offset:216675*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216675*0 + 3*33*FLEN/8, x4, x1, x2)

inst_72226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bb00000000003ff; valaddr_reg:x3; val_offset:216678*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216678*0 + 3*34*FLEN/8, x4, x1, x2)

inst_72227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bb00000000007ff; valaddr_reg:x3; val_offset:216681*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216681*0 + 3*35*FLEN/8, x4, x1, x2)

inst_72228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bb0000000000fff; valaddr_reg:x3; val_offset:216684*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216684*0 + 3*36*FLEN/8, x4, x1, x2)

inst_72229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bb0000000001fff; valaddr_reg:x3; val_offset:216687*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216687*0 + 3*37*FLEN/8, x4, x1, x2)

inst_72230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bb0000000003fff; valaddr_reg:x3; val_offset:216690*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216690*0 + 3*38*FLEN/8, x4, x1, x2)

inst_72231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bb0000000007fff; valaddr_reg:x3; val_offset:216693*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216693*0 + 3*39*FLEN/8, x4, x1, x2)

inst_72232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bb000000000ffff; valaddr_reg:x3; val_offset:216696*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216696*0 + 3*40*FLEN/8, x4, x1, x2)

inst_72233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bb000000001ffff; valaddr_reg:x3; val_offset:216699*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216699*0 + 3*41*FLEN/8, x4, x1, x2)

inst_72234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bb000000003ffff; valaddr_reg:x3; val_offset:216702*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216702*0 + 3*42*FLEN/8, x4, x1, x2)

inst_72235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bb000000007ffff; valaddr_reg:x3; val_offset:216705*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216705*0 + 3*43*FLEN/8, x4, x1, x2)

inst_72236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bb00000000fffff; valaddr_reg:x3; val_offset:216708*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216708*0 + 3*44*FLEN/8, x4, x1, x2)

inst_72237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bb00000001fffff; valaddr_reg:x3; val_offset:216711*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216711*0 + 3*45*FLEN/8, x4, x1, x2)

inst_72238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bb00000003fffff; valaddr_reg:x3; val_offset:216714*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216714*0 + 3*46*FLEN/8, x4, x1, x2)

inst_72239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bb00000007fffff; valaddr_reg:x3; val_offset:216717*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216717*0 + 3*47*FLEN/8, x4, x1, x2)

inst_72240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bb0000000ffffff; valaddr_reg:x3; val_offset:216720*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216720*0 + 3*48*FLEN/8, x4, x1, x2)

inst_72241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bb0000001ffffff; valaddr_reg:x3; val_offset:216723*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216723*0 + 3*49*FLEN/8, x4, x1, x2)

inst_72242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bb0000003ffffff; valaddr_reg:x3; val_offset:216726*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216726*0 + 3*50*FLEN/8, x4, x1, x2)

inst_72243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bb0000007ffffff; valaddr_reg:x3; val_offset:216729*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216729*0 + 3*51*FLEN/8, x4, x1, x2)

inst_72244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bb000000fffffff; valaddr_reg:x3; val_offset:216732*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216732*0 + 3*52*FLEN/8, x4, x1, x2)

inst_72245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bb000001fffffff; valaddr_reg:x3; val_offset:216735*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216735*0 + 3*53*FLEN/8, x4, x1, x2)

inst_72246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bb000003fffffff; valaddr_reg:x3; val_offset:216738*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216738*0 + 3*54*FLEN/8, x4, x1, x2)

inst_72247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bb000007fffffff; valaddr_reg:x3; val_offset:216741*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216741*0 + 3*55*FLEN/8, x4, x1, x2)

inst_72248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bb00000ffffffff; valaddr_reg:x3; val_offset:216744*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216744*0 + 3*56*FLEN/8, x4, x1, x2)

inst_72249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bb00001ffffffff; valaddr_reg:x3; val_offset:216747*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216747*0 + 3*57*FLEN/8, x4, x1, x2)

inst_72250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bb00003ffffffff; valaddr_reg:x3; val_offset:216750*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216750*0 + 3*58*FLEN/8, x4, x1, x2)

inst_72251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bb00007ffffffff; valaddr_reg:x3; val_offset:216753*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216753*0 + 3*59*FLEN/8, x4, x1, x2)

inst_72252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bb0000fffffffff; valaddr_reg:x3; val_offset:216756*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216756*0 + 3*60*FLEN/8, x4, x1, x2)

inst_72253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bb0001fffffffff; valaddr_reg:x3; val_offset:216759*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216759*0 + 3*61*FLEN/8, x4, x1, x2)

inst_72254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bb0003fffffffff; valaddr_reg:x3; val_offset:216762*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216762*0 + 3*62*FLEN/8, x4, x1, x2)

inst_72255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bb0007fffffffff; valaddr_reg:x3; val_offset:216765*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216765*0 + 3*63*FLEN/8, x4, x1, x2)

inst_72256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bb000ffffffffff; valaddr_reg:x3; val_offset:216768*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216768*0 + 3*64*FLEN/8, x4, x1, x2)

inst_72257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bb001ffffffffff; valaddr_reg:x3; val_offset:216771*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216771*0 + 3*65*FLEN/8, x4, x1, x2)

inst_72258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bb003ffffffffff; valaddr_reg:x3; val_offset:216774*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216774*0 + 3*66*FLEN/8, x4, x1, x2)

inst_72259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bb007ffffffffff; valaddr_reg:x3; val_offset:216777*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216777*0 + 3*67*FLEN/8, x4, x1, x2)

inst_72260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bb00fffffffffff; valaddr_reg:x3; val_offset:216780*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216780*0 + 3*68*FLEN/8, x4, x1, x2)

inst_72261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bb01fffffffffff; valaddr_reg:x3; val_offset:216783*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216783*0 + 3*69*FLEN/8, x4, x1, x2)

inst_72262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bb03fffffffffff; valaddr_reg:x3; val_offset:216786*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216786*0 + 3*70*FLEN/8, x4, x1, x2)

inst_72263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bb07fffffffffff; valaddr_reg:x3; val_offset:216789*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216789*0 + 3*71*FLEN/8, x4, x1, x2)

inst_72264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bb0ffffffffffff; valaddr_reg:x3; val_offset:216792*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216792*0 + 3*72*FLEN/8, x4, x1, x2)

inst_72265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bb1ffffffffffff; valaddr_reg:x3; val_offset:216795*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216795*0 + 3*73*FLEN/8, x4, x1, x2)

inst_72266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bb3ffffffffffff; valaddr_reg:x3; val_offset:216798*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216798*0 + 3*74*FLEN/8, x4, x1, x2)

inst_72267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bb7ffffffffffff; valaddr_reg:x3; val_offset:216801*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216801*0 + 3*75*FLEN/8, x4, x1, x2)

inst_72268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bb8000000000000; valaddr_reg:x3; val_offset:216804*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216804*0 + 3*76*FLEN/8, x4, x1, x2)

inst_72269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bbc000000000000; valaddr_reg:x3; val_offset:216807*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216807*0 + 3*77*FLEN/8, x4, x1, x2)

inst_72270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bbe000000000000; valaddr_reg:x3; val_offset:216810*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216810*0 + 3*78*FLEN/8, x4, x1, x2)

inst_72271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bbf000000000000; valaddr_reg:x3; val_offset:216813*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216813*0 + 3*79*FLEN/8, x4, x1, x2)

inst_72272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bbf800000000000; valaddr_reg:x3; val_offset:216816*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216816*0 + 3*80*FLEN/8, x4, x1, x2)

inst_72273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bbfc00000000000; valaddr_reg:x3; val_offset:216819*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216819*0 + 3*81*FLEN/8, x4, x1, x2)

inst_72274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bbfe00000000000; valaddr_reg:x3; val_offset:216822*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216822*0 + 3*82*FLEN/8, x4, x1, x2)

inst_72275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bbff00000000000; valaddr_reg:x3; val_offset:216825*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216825*0 + 3*83*FLEN/8, x4, x1, x2)

inst_72276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bbff80000000000; valaddr_reg:x3; val_offset:216828*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216828*0 + 3*84*FLEN/8, x4, x1, x2)

inst_72277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bbffc0000000000; valaddr_reg:x3; val_offset:216831*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216831*0 + 3*85*FLEN/8, x4, x1, x2)

inst_72278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bbffe0000000000; valaddr_reg:x3; val_offset:216834*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216834*0 + 3*86*FLEN/8, x4, x1, x2)

inst_72279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bbfff0000000000; valaddr_reg:x3; val_offset:216837*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216837*0 + 3*87*FLEN/8, x4, x1, x2)

inst_72280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bbfff8000000000; valaddr_reg:x3; val_offset:216840*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216840*0 + 3*88*FLEN/8, x4, x1, x2)

inst_72281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bbfffc000000000; valaddr_reg:x3; val_offset:216843*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216843*0 + 3*89*FLEN/8, x4, x1, x2)

inst_72282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bbfffe000000000; valaddr_reg:x3; val_offset:216846*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216846*0 + 3*90*FLEN/8, x4, x1, x2)

inst_72283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bbffff000000000; valaddr_reg:x3; val_offset:216849*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216849*0 + 3*91*FLEN/8, x4, x1, x2)

inst_72284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bbffff800000000; valaddr_reg:x3; val_offset:216852*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216852*0 + 3*92*FLEN/8, x4, x1, x2)

inst_72285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bbffffc00000000; valaddr_reg:x3; val_offset:216855*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216855*0 + 3*93*FLEN/8, x4, x1, x2)

inst_72286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bbffffe00000000; valaddr_reg:x3; val_offset:216858*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216858*0 + 3*94*FLEN/8, x4, x1, x2)

inst_72287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bbfffff00000000; valaddr_reg:x3; val_offset:216861*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216861*0 + 3*95*FLEN/8, x4, x1, x2)

inst_72288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bbfffff80000000; valaddr_reg:x3; val_offset:216864*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216864*0 + 3*96*FLEN/8, x4, x1, x2)

inst_72289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bbfffffc0000000; valaddr_reg:x3; val_offset:216867*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216867*0 + 3*97*FLEN/8, x4, x1, x2)

inst_72290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bbfffffe0000000; valaddr_reg:x3; val_offset:216870*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216870*0 + 3*98*FLEN/8, x4, x1, x2)

inst_72291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bbffffff0000000; valaddr_reg:x3; val_offset:216873*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216873*0 + 3*99*FLEN/8, x4, x1, x2)

inst_72292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bbffffff8000000; valaddr_reg:x3; val_offset:216876*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216876*0 + 3*100*FLEN/8, x4, x1, x2)

inst_72293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bbffffffc000000; valaddr_reg:x3; val_offset:216879*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216879*0 + 3*101*FLEN/8, x4, x1, x2)

inst_72294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bbffffffe000000; valaddr_reg:x3; val_offset:216882*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216882*0 + 3*102*FLEN/8, x4, x1, x2)

inst_72295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bbfffffff000000; valaddr_reg:x3; val_offset:216885*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216885*0 + 3*103*FLEN/8, x4, x1, x2)

inst_72296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bbfffffff800000; valaddr_reg:x3; val_offset:216888*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216888*0 + 3*104*FLEN/8, x4, x1, x2)

inst_72297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bbfffffffc00000; valaddr_reg:x3; val_offset:216891*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216891*0 + 3*105*FLEN/8, x4, x1, x2)

inst_72298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bbfffffffe00000; valaddr_reg:x3; val_offset:216894*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216894*0 + 3*106*FLEN/8, x4, x1, x2)

inst_72299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bbffffffff00000; valaddr_reg:x3; val_offset:216897*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216897*0 + 3*107*FLEN/8, x4, x1, x2)

inst_72300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bbffffffff80000; valaddr_reg:x3; val_offset:216900*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216900*0 + 3*108*FLEN/8, x4, x1, x2)

inst_72301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bbffffffffc0000; valaddr_reg:x3; val_offset:216903*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216903*0 + 3*109*FLEN/8, x4, x1, x2)

inst_72302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bbffffffffe0000; valaddr_reg:x3; val_offset:216906*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216906*0 + 3*110*FLEN/8, x4, x1, x2)

inst_72303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bbfffffffff0000; valaddr_reg:x3; val_offset:216909*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216909*0 + 3*111*FLEN/8, x4, x1, x2)

inst_72304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bbfffffffff8000; valaddr_reg:x3; val_offset:216912*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216912*0 + 3*112*FLEN/8, x4, x1, x2)

inst_72305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bbfffffffffc000; valaddr_reg:x3; val_offset:216915*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216915*0 + 3*113*FLEN/8, x4, x1, x2)

inst_72306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bbfffffffffe000; valaddr_reg:x3; val_offset:216918*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216918*0 + 3*114*FLEN/8, x4, x1, x2)

inst_72307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bbffffffffff000; valaddr_reg:x3; val_offset:216921*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216921*0 + 3*115*FLEN/8, x4, x1, x2)

inst_72308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bbffffffffff800; valaddr_reg:x3; val_offset:216924*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216924*0 + 3*116*FLEN/8, x4, x1, x2)

inst_72309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bbffffffffffc00; valaddr_reg:x3; val_offset:216927*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216927*0 + 3*117*FLEN/8, x4, x1, x2)

inst_72310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bbffffffffffe00; valaddr_reg:x3; val_offset:216930*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216930*0 + 3*118*FLEN/8, x4, x1, x2)

inst_72311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bbfffffffffff00; valaddr_reg:x3; val_offset:216933*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216933*0 + 3*119*FLEN/8, x4, x1, x2)

inst_72312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bbfffffffffff80; valaddr_reg:x3; val_offset:216936*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216936*0 + 3*120*FLEN/8, x4, x1, x2)

inst_72313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bbfffffffffffc0; valaddr_reg:x3; val_offset:216939*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216939*0 + 3*121*FLEN/8, x4, x1, x2)

inst_72314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bbfffffffffffe0; valaddr_reg:x3; val_offset:216942*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216942*0 + 3*122*FLEN/8, x4, x1, x2)

inst_72315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bbffffffffffff0; valaddr_reg:x3; val_offset:216945*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216945*0 + 3*123*FLEN/8, x4, x1, x2)

inst_72316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bbffffffffffff8; valaddr_reg:x3; val_offset:216948*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216948*0 + 3*124*FLEN/8, x4, x1, x2)

inst_72317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bbffffffffffffc; valaddr_reg:x3; val_offset:216951*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216951*0 + 3*125*FLEN/8, x4, x1, x2)

inst_72318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bbffffffffffffe; valaddr_reg:x3; val_offset:216954*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216954*0 + 3*126*FLEN/8, x4, x1, x2)

inst_72319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3bb and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3bbfffffffffffff; valaddr_reg:x3; val_offset:216957*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216957*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_72320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:216960*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216960*0 + 3*128*FLEN/8, x4, x1, x2)

inst_72321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:216963*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216963*0 + 3*129*FLEN/8, x4, x1, x2)

inst_72322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:216966*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216966*0 + 3*130*FLEN/8, x4, x1, x2)

inst_72323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:216969*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216969*0 + 3*131*FLEN/8, x4, x1, x2)

inst_72324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:216972*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216972*0 + 3*132*FLEN/8, x4, x1, x2)

inst_72325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:216975*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216975*0 + 3*133*FLEN/8, x4, x1, x2)

inst_72326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:216978*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216978*0 + 3*134*FLEN/8, x4, x1, x2)

inst_72327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:216981*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216981*0 + 3*135*FLEN/8, x4, x1, x2)

inst_72328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:216984*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216984*0 + 3*136*FLEN/8, x4, x1, x2)

inst_72329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:216987*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216987*0 + 3*137*FLEN/8, x4, x1, x2)

inst_72330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:216990*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216990*0 + 3*138*FLEN/8, x4, x1, x2)

inst_72331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:216993*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216993*0 + 3*139*FLEN/8, x4, x1, x2)

inst_72332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:216996*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216996*0 + 3*140*FLEN/8, x4, x1, x2)

inst_72333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:216999*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216999*0 + 3*141*FLEN/8, x4, x1, x2)

inst_72334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:217002*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217002*0 + 3*142*FLEN/8, x4, x1, x2)

inst_72335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:217005*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217005*0 + 3*143*FLEN/8, x4, x1, x2)

inst_72336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:217008*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217008*0 + 3*144*FLEN/8, x4, x1, x2)

inst_72337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:217011*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217011*0 + 3*145*FLEN/8, x4, x1, x2)

inst_72338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:217014*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217014*0 + 3*146*FLEN/8, x4, x1, x2)

inst_72339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:217017*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217017*0 + 3*147*FLEN/8, x4, x1, x2)

inst_72340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:217020*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217020*0 + 3*148*FLEN/8, x4, x1, x2)

inst_72341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b02d6c2fe702 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6911a0c356a57 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b02d6c2fe702; op2val:0x2036911a0c356a57;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:217023*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217023*0 + 3*149*FLEN/8, x4, x1, x2)

inst_72342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:217026*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217026*0 + 3*150*FLEN/8, x4, x1, x2)

inst_72343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:217029*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217029*0 + 3*151*FLEN/8, x4, x1, x2)

inst_72344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:217032*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217032*0 + 3*152*FLEN/8, x4, x1, x2)

inst_72345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:217035*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217035*0 + 3*153*FLEN/8, x4, x1, x2)

inst_72346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:217038*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217038*0 + 3*154*FLEN/8, x4, x1, x2)

inst_72347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:217041*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217041*0 + 3*155*FLEN/8, x4, x1, x2)

inst_72348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:217044*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217044*0 + 3*156*FLEN/8, x4, x1, x2)

inst_72349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:217047*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217047*0 + 3*157*FLEN/8, x4, x1, x2)

inst_72350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:217050*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217050*0 + 3*158*FLEN/8, x4, x1, x2)

inst_72351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:217053*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217053*0 + 3*159*FLEN/8, x4, x1, x2)

inst_72352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:217056*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217056*0 + 3*160*FLEN/8, x4, x1, x2)

inst_72353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:217059*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217059*0 + 3*161*FLEN/8, x4, x1, x2)

inst_72354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:217062*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217062*0 + 3*162*FLEN/8, x4, x1, x2)

inst_72355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:217065*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217065*0 + 3*163*FLEN/8, x4, x1, x2)

inst_72356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:217068*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217068*0 + 3*164*FLEN/8, x4, x1, x2)

inst_72357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:217071*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217071*0 + 3*165*FLEN/8, x4, x1, x2)

inst_72358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:217074*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217074*0 + 3*166*FLEN/8, x4, x1, x2)

inst_72359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:217077*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217077*0 + 3*167*FLEN/8, x4, x1, x2)

inst_72360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:217080*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217080*0 + 3*168*FLEN/8, x4, x1, x2)

inst_72361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:217083*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217083*0 + 3*169*FLEN/8, x4, x1, x2)

inst_72362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:217086*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217086*0 + 3*170*FLEN/8, x4, x1, x2)

inst_72363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:217089*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217089*0 + 3*171*FLEN/8, x4, x1, x2)

inst_72364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f0000000000000; valaddr_reg:x3; val_offset:217092*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217092*0 + 3*172*FLEN/8, x4, x1, x2)

inst_72365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f0000000000001; valaddr_reg:x3; val_offset:217095*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217095*0 + 3*173*FLEN/8, x4, x1, x2)

inst_72366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f0000000000003; valaddr_reg:x3; val_offset:217098*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217098*0 + 3*174*FLEN/8, x4, x1, x2)

inst_72367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f0000000000007; valaddr_reg:x3; val_offset:217101*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217101*0 + 3*175*FLEN/8, x4, x1, x2)

inst_72368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f000000000000f; valaddr_reg:x3; val_offset:217104*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217104*0 + 3*176*FLEN/8, x4, x1, x2)

inst_72369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f000000000001f; valaddr_reg:x3; val_offset:217107*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217107*0 + 3*177*FLEN/8, x4, x1, x2)

inst_72370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f000000000003f; valaddr_reg:x3; val_offset:217110*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217110*0 + 3*178*FLEN/8, x4, x1, x2)

inst_72371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f000000000007f; valaddr_reg:x3; val_offset:217113*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217113*0 + 3*179*FLEN/8, x4, x1, x2)

inst_72372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f00000000000ff; valaddr_reg:x3; val_offset:217116*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217116*0 + 3*180*FLEN/8, x4, x1, x2)

inst_72373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f00000000001ff; valaddr_reg:x3; val_offset:217119*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217119*0 + 3*181*FLEN/8, x4, x1, x2)

inst_72374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f00000000003ff; valaddr_reg:x3; val_offset:217122*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217122*0 + 3*182*FLEN/8, x4, x1, x2)

inst_72375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f00000000007ff; valaddr_reg:x3; val_offset:217125*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217125*0 + 3*183*FLEN/8, x4, x1, x2)

inst_72376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f0000000000fff; valaddr_reg:x3; val_offset:217128*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217128*0 + 3*184*FLEN/8, x4, x1, x2)

inst_72377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f0000000001fff; valaddr_reg:x3; val_offset:217131*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217131*0 + 3*185*FLEN/8, x4, x1, x2)

inst_72378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f0000000003fff; valaddr_reg:x3; val_offset:217134*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217134*0 + 3*186*FLEN/8, x4, x1, x2)

inst_72379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f0000000007fff; valaddr_reg:x3; val_offset:217137*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217137*0 + 3*187*FLEN/8, x4, x1, x2)

inst_72380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f000000000ffff; valaddr_reg:x3; val_offset:217140*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217140*0 + 3*188*FLEN/8, x4, x1, x2)

inst_72381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f000000001ffff; valaddr_reg:x3; val_offset:217143*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217143*0 + 3*189*FLEN/8, x4, x1, x2)

inst_72382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f000000003ffff; valaddr_reg:x3; val_offset:217146*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217146*0 + 3*190*FLEN/8, x4, x1, x2)

inst_72383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f000000007ffff; valaddr_reg:x3; val_offset:217149*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217149*0 + 3*191*FLEN/8, x4, x1, x2)

inst_72384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f00000000fffff; valaddr_reg:x3; val_offset:217152*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217152*0 + 3*192*FLEN/8, x4, x1, x2)

inst_72385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f00000001fffff; valaddr_reg:x3; val_offset:217155*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217155*0 + 3*193*FLEN/8, x4, x1, x2)

inst_72386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f00000003fffff; valaddr_reg:x3; val_offset:217158*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217158*0 + 3*194*FLEN/8, x4, x1, x2)

inst_72387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f00000007fffff; valaddr_reg:x3; val_offset:217161*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217161*0 + 3*195*FLEN/8, x4, x1, x2)

inst_72388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f0000000ffffff; valaddr_reg:x3; val_offset:217164*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217164*0 + 3*196*FLEN/8, x4, x1, x2)

inst_72389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f0000001ffffff; valaddr_reg:x3; val_offset:217167*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217167*0 + 3*197*FLEN/8, x4, x1, x2)

inst_72390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f0000003ffffff; valaddr_reg:x3; val_offset:217170*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217170*0 + 3*198*FLEN/8, x4, x1, x2)

inst_72391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f0000007ffffff; valaddr_reg:x3; val_offset:217173*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217173*0 + 3*199*FLEN/8, x4, x1, x2)

inst_72392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f000000fffffff; valaddr_reg:x3; val_offset:217176*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217176*0 + 3*200*FLEN/8, x4, x1, x2)

inst_72393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f000001fffffff; valaddr_reg:x3; val_offset:217179*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217179*0 + 3*201*FLEN/8, x4, x1, x2)

inst_72394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f000003fffffff; valaddr_reg:x3; val_offset:217182*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217182*0 + 3*202*FLEN/8, x4, x1, x2)

inst_72395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f000007fffffff; valaddr_reg:x3; val_offset:217185*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217185*0 + 3*203*FLEN/8, x4, x1, x2)

inst_72396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f00000ffffffff; valaddr_reg:x3; val_offset:217188*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217188*0 + 3*204*FLEN/8, x4, x1, x2)

inst_72397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f00001ffffffff; valaddr_reg:x3; val_offset:217191*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217191*0 + 3*205*FLEN/8, x4, x1, x2)

inst_72398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f00003ffffffff; valaddr_reg:x3; val_offset:217194*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217194*0 + 3*206*FLEN/8, x4, x1, x2)

inst_72399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f00007ffffffff; valaddr_reg:x3; val_offset:217197*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217197*0 + 3*207*FLEN/8, x4, x1, x2)

inst_72400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f0000fffffffff; valaddr_reg:x3; val_offset:217200*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217200*0 + 3*208*FLEN/8, x4, x1, x2)

inst_72401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f0001fffffffff; valaddr_reg:x3; val_offset:217203*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217203*0 + 3*209*FLEN/8, x4, x1, x2)

inst_72402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f0003fffffffff; valaddr_reg:x3; val_offset:217206*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217206*0 + 3*210*FLEN/8, x4, x1, x2)

inst_72403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f0007fffffffff; valaddr_reg:x3; val_offset:217209*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217209*0 + 3*211*FLEN/8, x4, x1, x2)

inst_72404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f000ffffffffff; valaddr_reg:x3; val_offset:217212*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217212*0 + 3*212*FLEN/8, x4, x1, x2)

inst_72405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f001ffffffffff; valaddr_reg:x3; val_offset:217215*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217215*0 + 3*213*FLEN/8, x4, x1, x2)

inst_72406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f003ffffffffff; valaddr_reg:x3; val_offset:217218*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217218*0 + 3*214*FLEN/8, x4, x1, x2)

inst_72407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f007ffffffffff; valaddr_reg:x3; val_offset:217221*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217221*0 + 3*215*FLEN/8, x4, x1, x2)

inst_72408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f00fffffffffff; valaddr_reg:x3; val_offset:217224*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217224*0 + 3*216*FLEN/8, x4, x1, x2)

inst_72409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f01fffffffffff; valaddr_reg:x3; val_offset:217227*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217227*0 + 3*217*FLEN/8, x4, x1, x2)

inst_72410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f03fffffffffff; valaddr_reg:x3; val_offset:217230*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217230*0 + 3*218*FLEN/8, x4, x1, x2)

inst_72411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f07fffffffffff; valaddr_reg:x3; val_offset:217233*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217233*0 + 3*219*FLEN/8, x4, x1, x2)

inst_72412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f0ffffffffffff; valaddr_reg:x3; val_offset:217236*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217236*0 + 3*220*FLEN/8, x4, x1, x2)

inst_72413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f1ffffffffffff; valaddr_reg:x3; val_offset:217239*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217239*0 + 3*221*FLEN/8, x4, x1, x2)

inst_72414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f3ffffffffffff; valaddr_reg:x3; val_offset:217242*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217242*0 + 3*222*FLEN/8, x4, x1, x2)

inst_72415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f7ffffffffffff; valaddr_reg:x3; val_offset:217245*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217245*0 + 3*223*FLEN/8, x4, x1, x2)

inst_72416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3f8000000000000; valaddr_reg:x3; val_offset:217248*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217248*0 + 3*224*FLEN/8, x4, x1, x2)

inst_72417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3fc000000000000; valaddr_reg:x3; val_offset:217251*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217251*0 + 3*225*FLEN/8, x4, x1, x2)

inst_72418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3fe000000000000; valaddr_reg:x3; val_offset:217254*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217254*0 + 3*226*FLEN/8, x4, x1, x2)

inst_72419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3ff000000000000; valaddr_reg:x3; val_offset:217257*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217257*0 + 3*227*FLEN/8, x4, x1, x2)

inst_72420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3ff800000000000; valaddr_reg:x3; val_offset:217260*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217260*0 + 3*228*FLEN/8, x4, x1, x2)

inst_72421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3ffc00000000000; valaddr_reg:x3; val_offset:217263*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217263*0 + 3*229*FLEN/8, x4, x1, x2)

inst_72422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3ffe00000000000; valaddr_reg:x3; val_offset:217266*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217266*0 + 3*230*FLEN/8, x4, x1, x2)

inst_72423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3fff00000000000; valaddr_reg:x3; val_offset:217269*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217269*0 + 3*231*FLEN/8, x4, x1, x2)

inst_72424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3fff80000000000; valaddr_reg:x3; val_offset:217272*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217272*0 + 3*232*FLEN/8, x4, x1, x2)

inst_72425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3fffc0000000000; valaddr_reg:x3; val_offset:217275*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217275*0 + 3*233*FLEN/8, x4, x1, x2)

inst_72426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3fffe0000000000; valaddr_reg:x3; val_offset:217278*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217278*0 + 3*234*FLEN/8, x4, x1, x2)

inst_72427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3ffff0000000000; valaddr_reg:x3; val_offset:217281*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217281*0 + 3*235*FLEN/8, x4, x1, x2)

inst_72428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3ffff8000000000; valaddr_reg:x3; val_offset:217284*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217284*0 + 3*236*FLEN/8, x4, x1, x2)

inst_72429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3ffffc000000000; valaddr_reg:x3; val_offset:217287*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217287*0 + 3*237*FLEN/8, x4, x1, x2)

inst_72430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3ffffe000000000; valaddr_reg:x3; val_offset:217290*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217290*0 + 3*238*FLEN/8, x4, x1, x2)

inst_72431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3fffff000000000; valaddr_reg:x3; val_offset:217293*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217293*0 + 3*239*FLEN/8, x4, x1, x2)

inst_72432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3fffff800000000; valaddr_reg:x3; val_offset:217296*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217296*0 + 3*240*FLEN/8, x4, x1, x2)

inst_72433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3fffffc00000000; valaddr_reg:x3; val_offset:217299*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217299*0 + 3*241*FLEN/8, x4, x1, x2)

inst_72434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3fffffe00000000; valaddr_reg:x3; val_offset:217302*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217302*0 + 3*242*FLEN/8, x4, x1, x2)

inst_72435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3ffffff00000000; valaddr_reg:x3; val_offset:217305*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217305*0 + 3*243*FLEN/8, x4, x1, x2)

inst_72436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3ffffff80000000; valaddr_reg:x3; val_offset:217308*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217308*0 + 3*244*FLEN/8, x4, x1, x2)

inst_72437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3ffffffc0000000; valaddr_reg:x3; val_offset:217311*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217311*0 + 3*245*FLEN/8, x4, x1, x2)

inst_72438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3ffffffe0000000; valaddr_reg:x3; val_offset:217314*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217314*0 + 3*246*FLEN/8, x4, x1, x2)

inst_72439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3fffffff0000000; valaddr_reg:x3; val_offset:217317*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217317*0 + 3*247*FLEN/8, x4, x1, x2)

inst_72440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3fffffff8000000; valaddr_reg:x3; val_offset:217320*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217320*0 + 3*248*FLEN/8, x4, x1, x2)

inst_72441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3fffffffc000000; valaddr_reg:x3; val_offset:217323*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217323*0 + 3*249*FLEN/8, x4, x1, x2)

inst_72442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3fffffffe000000; valaddr_reg:x3; val_offset:217326*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217326*0 + 3*250*FLEN/8, x4, x1, x2)

inst_72443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3ffffffff000000; valaddr_reg:x3; val_offset:217329*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217329*0 + 3*251*FLEN/8, x4, x1, x2)

inst_72444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3ffffffff800000; valaddr_reg:x3; val_offset:217332*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217332*0 + 3*252*FLEN/8, x4, x1, x2)

inst_72445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3ffffffffc00000; valaddr_reg:x3; val_offset:217335*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217335*0 + 3*253*FLEN/8, x4, x1, x2)

inst_72446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3ffffffffe00000; valaddr_reg:x3; val_offset:217338*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217338*0 + 3*254*FLEN/8, x4, x1, x2)

inst_72447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3fffffffff00000; valaddr_reg:x3; val_offset:217341*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217341*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_72448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3fffffffff80000; valaddr_reg:x3; val_offset:217344*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217344*0 + 3*256*FLEN/8, x4, x1, x2)

inst_72449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3fffffffffc0000; valaddr_reg:x3; val_offset:217347*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217347*0 + 3*257*FLEN/8, x4, x1, x2)

inst_72450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3fffffffffe0000; valaddr_reg:x3; val_offset:217350*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217350*0 + 3*258*FLEN/8, x4, x1, x2)

inst_72451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3ffffffffff0000; valaddr_reg:x3; val_offset:217353*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217353*0 + 3*259*FLEN/8, x4, x1, x2)

inst_72452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3ffffffffff8000; valaddr_reg:x3; val_offset:217356*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217356*0 + 3*260*FLEN/8, x4, x1, x2)

inst_72453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3ffffffffffc000; valaddr_reg:x3; val_offset:217359*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217359*0 + 3*261*FLEN/8, x4, x1, x2)

inst_72454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3ffffffffffe000; valaddr_reg:x3; val_offset:217362*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217362*0 + 3*262*FLEN/8, x4, x1, x2)

inst_72455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3fffffffffff000; valaddr_reg:x3; val_offset:217365*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217365*0 + 3*263*FLEN/8, x4, x1, x2)

inst_72456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3fffffffffff800; valaddr_reg:x3; val_offset:217368*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217368*0 + 3*264*FLEN/8, x4, x1, x2)

inst_72457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3fffffffffffc00; valaddr_reg:x3; val_offset:217371*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217371*0 + 3*265*FLEN/8, x4, x1, x2)

inst_72458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3fffffffffffe00; valaddr_reg:x3; val_offset:217374*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217374*0 + 3*266*FLEN/8, x4, x1, x2)

inst_72459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3ffffffffffff00; valaddr_reg:x3; val_offset:217377*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217377*0 + 3*267*FLEN/8, x4, x1, x2)

inst_72460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3ffffffffffff80; valaddr_reg:x3; val_offset:217380*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217380*0 + 3*268*FLEN/8, x4, x1, x2)

inst_72461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3ffffffffffffc0; valaddr_reg:x3; val_offset:217383*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217383*0 + 3*269*FLEN/8, x4, x1, x2)

inst_72462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3ffffffffffffe0; valaddr_reg:x3; val_offset:217386*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217386*0 + 3*270*FLEN/8, x4, x1, x2)

inst_72463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3fffffffffffff0; valaddr_reg:x3; val_offset:217389*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217389*0 + 3*271*FLEN/8, x4, x1, x2)

inst_72464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3fffffffffffff8; valaddr_reg:x3; val_offset:217392*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217392*0 + 3*272*FLEN/8, x4, x1, x2)

inst_72465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3fffffffffffffc; valaddr_reg:x3; val_offset:217395*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217395*0 + 3*273*FLEN/8, x4, x1, x2)

inst_72466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3fffffffffffffe; valaddr_reg:x3; val_offset:217398*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217398*0 + 3*274*FLEN/8, x4, x1, x2)

inst_72467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b807ed95be9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b807ed95be9e; op2val:0x0;
op3val:0x3ffffffffffffff; valaddr_reg:x3; val_offset:217401*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217401*0 + 3*275*FLEN/8, x4, x1, x2)

inst_72468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:217404*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217404*0 + 3*276*FLEN/8, x4, x1, x2)

inst_72469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:217407*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217407*0 + 3*277*FLEN/8, x4, x1, x2)

inst_72470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:217410*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217410*0 + 3*278*FLEN/8, x4, x1, x2)

inst_72471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:217413*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217413*0 + 3*279*FLEN/8, x4, x1, x2)

inst_72472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:217416*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217416*0 + 3*280*FLEN/8, x4, x1, x2)

inst_72473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:217419*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217419*0 + 3*281*FLEN/8, x4, x1, x2)

inst_72474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:217422*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217422*0 + 3*282*FLEN/8, x4, x1, x2)

inst_72475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:217425*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217425*0 + 3*283*FLEN/8, x4, x1, x2)

inst_72476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:217428*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217428*0 + 3*284*FLEN/8, x4, x1, x2)

inst_72477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:217431*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217431*0 + 3*285*FLEN/8, x4, x1, x2)

inst_72478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:217434*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217434*0 + 3*286*FLEN/8, x4, x1, x2)

inst_72479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:217437*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217437*0 + 3*287*FLEN/8, x4, x1, x2)

inst_72480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:217440*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217440*0 + 3*288*FLEN/8, x4, x1, x2)

inst_72481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:217443*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217443*0 + 3*289*FLEN/8, x4, x1, x2)

inst_72482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:217446*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217446*0 + 3*290*FLEN/8, x4, x1, x2)

inst_72483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:217449*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217449*0 + 3*291*FLEN/8, x4, x1, x2)

inst_72484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:217452*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217452*0 + 3*292*FLEN/8, x4, x1, x2)

inst_72485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:217455*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217455*0 + 3*293*FLEN/8, x4, x1, x2)

inst_72486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:217458*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217458*0 + 3*294*FLEN/8, x4, x1, x2)

inst_72487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:217461*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217461*0 + 3*295*FLEN/8, x4, x1, x2)

inst_72488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:217464*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217464*0 + 3*296*FLEN/8, x4, x1, x2)

inst_72489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:217467*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217467*0 + 3*297*FLEN/8, x4, x1, x2)

inst_72490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x100000000000000; valaddr_reg:x3; val_offset:217470*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217470*0 + 3*298*FLEN/8, x4, x1, x2)

inst_72491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x100000000000001; valaddr_reg:x3; val_offset:217473*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217473*0 + 3*299*FLEN/8, x4, x1, x2)

inst_72492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x100000000000003; valaddr_reg:x3; val_offset:217476*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217476*0 + 3*300*FLEN/8, x4, x1, x2)

inst_72493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x100000000000007; valaddr_reg:x3; val_offset:217479*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217479*0 + 3*301*FLEN/8, x4, x1, x2)

inst_72494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10000000000000f; valaddr_reg:x3; val_offset:217482*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217482*0 + 3*302*FLEN/8, x4, x1, x2)

inst_72495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10000000000001f; valaddr_reg:x3; val_offset:217485*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217485*0 + 3*303*FLEN/8, x4, x1, x2)

inst_72496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10000000000003f; valaddr_reg:x3; val_offset:217488*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217488*0 + 3*304*FLEN/8, x4, x1, x2)

inst_72497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10000000000007f; valaddr_reg:x3; val_offset:217491*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217491*0 + 3*305*FLEN/8, x4, x1, x2)

inst_72498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x1000000000000ff; valaddr_reg:x3; val_offset:217494*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217494*0 + 3*306*FLEN/8, x4, x1, x2)

inst_72499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x1000000000001ff; valaddr_reg:x3; val_offset:217497*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217497*0 + 3*307*FLEN/8, x4, x1, x2)

inst_72500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x1000000000003ff; valaddr_reg:x3; val_offset:217500*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217500*0 + 3*308*FLEN/8, x4, x1, x2)

inst_72501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x1000000000007ff; valaddr_reg:x3; val_offset:217503*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217503*0 + 3*309*FLEN/8, x4, x1, x2)

inst_72502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x100000000000fff; valaddr_reg:x3; val_offset:217506*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217506*0 + 3*310*FLEN/8, x4, x1, x2)

inst_72503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x100000000001fff; valaddr_reg:x3; val_offset:217509*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217509*0 + 3*311*FLEN/8, x4, x1, x2)

inst_72504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x100000000003fff; valaddr_reg:x3; val_offset:217512*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217512*0 + 3*312*FLEN/8, x4, x1, x2)

inst_72505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x100000000007fff; valaddr_reg:x3; val_offset:217515*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217515*0 + 3*313*FLEN/8, x4, x1, x2)

inst_72506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10000000000ffff; valaddr_reg:x3; val_offset:217518*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217518*0 + 3*314*FLEN/8, x4, x1, x2)

inst_72507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10000000001ffff; valaddr_reg:x3; val_offset:217521*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217521*0 + 3*315*FLEN/8, x4, x1, x2)

inst_72508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10000000003ffff; valaddr_reg:x3; val_offset:217524*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217524*0 + 3*316*FLEN/8, x4, x1, x2)

inst_72509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10000000007ffff; valaddr_reg:x3; val_offset:217527*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217527*0 + 3*317*FLEN/8, x4, x1, x2)

inst_72510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x1000000000fffff; valaddr_reg:x3; val_offset:217530*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217530*0 + 3*318*FLEN/8, x4, x1, x2)

inst_72511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x1000000001fffff; valaddr_reg:x3; val_offset:217533*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217533*0 + 3*319*FLEN/8, x4, x1, x2)

inst_72512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x1000000003fffff; valaddr_reg:x3; val_offset:217536*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217536*0 + 3*320*FLEN/8, x4, x1, x2)

inst_72513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x1000000007fffff; valaddr_reg:x3; val_offset:217539*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217539*0 + 3*321*FLEN/8, x4, x1, x2)

inst_72514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x100000000ffffff; valaddr_reg:x3; val_offset:217542*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217542*0 + 3*322*FLEN/8, x4, x1, x2)

inst_72515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x100000001ffffff; valaddr_reg:x3; val_offset:217545*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217545*0 + 3*323*FLEN/8, x4, x1, x2)

inst_72516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x100000003ffffff; valaddr_reg:x3; val_offset:217548*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217548*0 + 3*324*FLEN/8, x4, x1, x2)

inst_72517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x100000007ffffff; valaddr_reg:x3; val_offset:217551*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217551*0 + 3*325*FLEN/8, x4, x1, x2)

inst_72518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10000000fffffff; valaddr_reg:x3; val_offset:217554*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217554*0 + 3*326*FLEN/8, x4, x1, x2)

inst_72519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10000001fffffff; valaddr_reg:x3; val_offset:217557*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217557*0 + 3*327*FLEN/8, x4, x1, x2)

inst_72520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10000003fffffff; valaddr_reg:x3; val_offset:217560*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217560*0 + 3*328*FLEN/8, x4, x1, x2)

inst_72521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10000007fffffff; valaddr_reg:x3; val_offset:217563*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217563*0 + 3*329*FLEN/8, x4, x1, x2)

inst_72522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x1000000ffffffff; valaddr_reg:x3; val_offset:217566*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217566*0 + 3*330*FLEN/8, x4, x1, x2)

inst_72523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x1000001ffffffff; valaddr_reg:x3; val_offset:217569*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217569*0 + 3*331*FLEN/8, x4, x1, x2)

inst_72524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x1000003ffffffff; valaddr_reg:x3; val_offset:217572*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217572*0 + 3*332*FLEN/8, x4, x1, x2)

inst_72525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x1000007ffffffff; valaddr_reg:x3; val_offset:217575*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217575*0 + 3*333*FLEN/8, x4, x1, x2)

inst_72526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x100000fffffffff; valaddr_reg:x3; val_offset:217578*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217578*0 + 3*334*FLEN/8, x4, x1, x2)

inst_72527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x100001fffffffff; valaddr_reg:x3; val_offset:217581*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217581*0 + 3*335*FLEN/8, x4, x1, x2)

inst_72528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x100003fffffffff; valaddr_reg:x3; val_offset:217584*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217584*0 + 3*336*FLEN/8, x4, x1, x2)

inst_72529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x100007fffffffff; valaddr_reg:x3; val_offset:217587*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217587*0 + 3*337*FLEN/8, x4, x1, x2)

inst_72530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10000ffffffffff; valaddr_reg:x3; val_offset:217590*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217590*0 + 3*338*FLEN/8, x4, x1, x2)

inst_72531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10001ffffffffff; valaddr_reg:x3; val_offset:217593*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217593*0 + 3*339*FLEN/8, x4, x1, x2)

inst_72532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10003ffffffffff; valaddr_reg:x3; val_offset:217596*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217596*0 + 3*340*FLEN/8, x4, x1, x2)

inst_72533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10007ffffffffff; valaddr_reg:x3; val_offset:217599*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217599*0 + 3*341*FLEN/8, x4, x1, x2)

inst_72534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x1000fffffffffff; valaddr_reg:x3; val_offset:217602*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217602*0 + 3*342*FLEN/8, x4, x1, x2)

inst_72535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x1001fffffffffff; valaddr_reg:x3; val_offset:217605*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217605*0 + 3*343*FLEN/8, x4, x1, x2)

inst_72536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x1003fffffffffff; valaddr_reg:x3; val_offset:217608*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217608*0 + 3*344*FLEN/8, x4, x1, x2)

inst_72537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x1007fffffffffff; valaddr_reg:x3; val_offset:217611*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217611*0 + 3*345*FLEN/8, x4, x1, x2)

inst_72538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x100ffffffffffff; valaddr_reg:x3; val_offset:217614*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217614*0 + 3*346*FLEN/8, x4, x1, x2)

inst_72539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x101ffffffffffff; valaddr_reg:x3; val_offset:217617*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217617*0 + 3*347*FLEN/8, x4, x1, x2)

inst_72540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x103ffffffffffff; valaddr_reg:x3; val_offset:217620*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217620*0 + 3*348*FLEN/8, x4, x1, x2)

inst_72541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x107ffffffffffff; valaddr_reg:x3; val_offset:217623*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217623*0 + 3*349*FLEN/8, x4, x1, x2)

inst_72542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x108000000000000; valaddr_reg:x3; val_offset:217626*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217626*0 + 3*350*FLEN/8, x4, x1, x2)

inst_72543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10c000000000000; valaddr_reg:x3; val_offset:217629*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217629*0 + 3*351*FLEN/8, x4, x1, x2)

inst_72544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10e000000000000; valaddr_reg:x3; val_offset:217632*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217632*0 + 3*352*FLEN/8, x4, x1, x2)

inst_72545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10f000000000000; valaddr_reg:x3; val_offset:217635*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217635*0 + 3*353*FLEN/8, x4, x1, x2)

inst_72546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10f800000000000; valaddr_reg:x3; val_offset:217638*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217638*0 + 3*354*FLEN/8, x4, x1, x2)

inst_72547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10fc00000000000; valaddr_reg:x3; val_offset:217641*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217641*0 + 3*355*FLEN/8, x4, x1, x2)

inst_72548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10fe00000000000; valaddr_reg:x3; val_offset:217644*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217644*0 + 3*356*FLEN/8, x4, x1, x2)

inst_72549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10ff00000000000; valaddr_reg:x3; val_offset:217647*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217647*0 + 3*357*FLEN/8, x4, x1, x2)

inst_72550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10ff80000000000; valaddr_reg:x3; val_offset:217650*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217650*0 + 3*358*FLEN/8, x4, x1, x2)

inst_72551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10ffc0000000000; valaddr_reg:x3; val_offset:217653*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217653*0 + 3*359*FLEN/8, x4, x1, x2)

inst_72552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10ffe0000000000; valaddr_reg:x3; val_offset:217656*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217656*0 + 3*360*FLEN/8, x4, x1, x2)

inst_72553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10fff0000000000; valaddr_reg:x3; val_offset:217659*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217659*0 + 3*361*FLEN/8, x4, x1, x2)

inst_72554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10fff8000000000; valaddr_reg:x3; val_offset:217662*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217662*0 + 3*362*FLEN/8, x4, x1, x2)

inst_72555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10fffc000000000; valaddr_reg:x3; val_offset:217665*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217665*0 + 3*363*FLEN/8, x4, x1, x2)

inst_72556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10fffe000000000; valaddr_reg:x3; val_offset:217668*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217668*0 + 3*364*FLEN/8, x4, x1, x2)

inst_72557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10ffff000000000; valaddr_reg:x3; val_offset:217671*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217671*0 + 3*365*FLEN/8, x4, x1, x2)

inst_72558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10ffff800000000; valaddr_reg:x3; val_offset:217674*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217674*0 + 3*366*FLEN/8, x4, x1, x2)

inst_72559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10ffffc00000000; valaddr_reg:x3; val_offset:217677*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217677*0 + 3*367*FLEN/8, x4, x1, x2)

inst_72560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10ffffe00000000; valaddr_reg:x3; val_offset:217680*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217680*0 + 3*368*FLEN/8, x4, x1, x2)

inst_72561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10fffff00000000; valaddr_reg:x3; val_offset:217683*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217683*0 + 3*369*FLEN/8, x4, x1, x2)

inst_72562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10fffff80000000; valaddr_reg:x3; val_offset:217686*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217686*0 + 3*370*FLEN/8, x4, x1, x2)

inst_72563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10fffffc0000000; valaddr_reg:x3; val_offset:217689*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217689*0 + 3*371*FLEN/8, x4, x1, x2)

inst_72564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10fffffe0000000; valaddr_reg:x3; val_offset:217692*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217692*0 + 3*372*FLEN/8, x4, x1, x2)

inst_72565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10ffffff0000000; valaddr_reg:x3; val_offset:217695*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217695*0 + 3*373*FLEN/8, x4, x1, x2)

inst_72566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10ffffff8000000; valaddr_reg:x3; val_offset:217698*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217698*0 + 3*374*FLEN/8, x4, x1, x2)

inst_72567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10ffffffc000000; valaddr_reg:x3; val_offset:217701*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217701*0 + 3*375*FLEN/8, x4, x1, x2)

inst_72568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10ffffffe000000; valaddr_reg:x3; val_offset:217704*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217704*0 + 3*376*FLEN/8, x4, x1, x2)

inst_72569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10fffffff000000; valaddr_reg:x3; val_offset:217707*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217707*0 + 3*377*FLEN/8, x4, x1, x2)

inst_72570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10fffffff800000; valaddr_reg:x3; val_offset:217710*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217710*0 + 3*378*FLEN/8, x4, x1, x2)

inst_72571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10fffffffc00000; valaddr_reg:x3; val_offset:217713*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217713*0 + 3*379*FLEN/8, x4, x1, x2)

inst_72572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10fffffffe00000; valaddr_reg:x3; val_offset:217716*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217716*0 + 3*380*FLEN/8, x4, x1, x2)

inst_72573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10ffffffff00000; valaddr_reg:x3; val_offset:217719*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217719*0 + 3*381*FLEN/8, x4, x1, x2)

inst_72574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10ffffffff80000; valaddr_reg:x3; val_offset:217722*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217722*0 + 3*382*FLEN/8, x4, x1, x2)

inst_72575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10ffffffffc0000; valaddr_reg:x3; val_offset:217725*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217725*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_72576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10ffffffffe0000; valaddr_reg:x3; val_offset:217728*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217728*0 + 3*384*FLEN/8, x4, x1, x2)

inst_72577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10fffffffff0000; valaddr_reg:x3; val_offset:217731*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217731*0 + 3*385*FLEN/8, x4, x1, x2)

inst_72578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10fffffffff8000; valaddr_reg:x3; val_offset:217734*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217734*0 + 3*386*FLEN/8, x4, x1, x2)

inst_72579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10fffffffffc000; valaddr_reg:x3; val_offset:217737*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217737*0 + 3*387*FLEN/8, x4, x1, x2)

inst_72580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10fffffffffe000; valaddr_reg:x3; val_offset:217740*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217740*0 + 3*388*FLEN/8, x4, x1, x2)

inst_72581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10ffffffffff000; valaddr_reg:x3; val_offset:217743*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217743*0 + 3*389*FLEN/8, x4, x1, x2)

inst_72582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10ffffffffff800; valaddr_reg:x3; val_offset:217746*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217746*0 + 3*390*FLEN/8, x4, x1, x2)

inst_72583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10ffffffffffc00; valaddr_reg:x3; val_offset:217749*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217749*0 + 3*391*FLEN/8, x4, x1, x2)

inst_72584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10ffffffffffe00; valaddr_reg:x3; val_offset:217752*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217752*0 + 3*392*FLEN/8, x4, x1, x2)

inst_72585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10fffffffffff00; valaddr_reg:x3; val_offset:217755*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217755*0 + 3*393*FLEN/8, x4, x1, x2)

inst_72586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10fffffffffff80; valaddr_reg:x3; val_offset:217758*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217758*0 + 3*394*FLEN/8, x4, x1, x2)

inst_72587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10fffffffffffc0; valaddr_reg:x3; val_offset:217761*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217761*0 + 3*395*FLEN/8, x4, x1, x2)

inst_72588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10fffffffffffe0; valaddr_reg:x3; val_offset:217764*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217764*0 + 3*396*FLEN/8, x4, x1, x2)

inst_72589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10ffffffffffff0; valaddr_reg:x3; val_offset:217767*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217767*0 + 3*397*FLEN/8, x4, x1, x2)

inst_72590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10ffffffffffff8; valaddr_reg:x3; val_offset:217770*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217770*0 + 3*398*FLEN/8, x4, x1, x2)

inst_72591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10ffffffffffffc; valaddr_reg:x3; val_offset:217773*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217773*0 + 3*399*FLEN/8, x4, x1, x2)

inst_72592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10ffffffffffffe; valaddr_reg:x3; val_offset:217776*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217776*0 + 3*400*FLEN/8, x4, x1, x2)

inst_72593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6b84ba832fd00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6b84ba832fd00; op2val:0x0;
op3val:0x10fffffffffffff; valaddr_reg:x3; val_offset:217779*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217779*0 + 3*401*FLEN/8, x4, x1, x2)

inst_72594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:217782*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217782*0 + 3*402*FLEN/8, x4, x1, x2)

inst_72595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:217785*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217785*0 + 3*403*FLEN/8, x4, x1, x2)

inst_72596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:217788*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217788*0 + 3*404*FLEN/8, x4, x1, x2)

inst_72597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:217791*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217791*0 + 3*405*FLEN/8, x4, x1, x2)

inst_72598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:217794*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217794*0 + 3*406*FLEN/8, x4, x1, x2)

inst_72599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:217797*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217797*0 + 3*407*FLEN/8, x4, x1, x2)

inst_72600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:217800*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217800*0 + 3*408*FLEN/8, x4, x1, x2)

inst_72601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:217803*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217803*0 + 3*409*FLEN/8, x4, x1, x2)

inst_72602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:217806*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217806*0 + 3*410*FLEN/8, x4, x1, x2)

inst_72603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:217809*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217809*0 + 3*411*FLEN/8, x4, x1, x2)

inst_72604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:217812*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217812*0 + 3*412*FLEN/8, x4, x1, x2)

inst_72605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:217815*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217815*0 + 3*413*FLEN/8, x4, x1, x2)

inst_72606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:217818*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217818*0 + 3*414*FLEN/8, x4, x1, x2)

inst_72607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:217821*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217821*0 + 3*415*FLEN/8, x4, x1, x2)

inst_72608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:217824*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217824*0 + 3*416*FLEN/8, x4, x1, x2)

inst_72609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:217827*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217827*0 + 3*417*FLEN/8, x4, x1, x2)

inst_72610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:217830*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217830*0 + 3*418*FLEN/8, x4, x1, x2)

inst_72611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:217833*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217833*0 + 3*419*FLEN/8, x4, x1, x2)

inst_72612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:217836*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217836*0 + 3*420*FLEN/8, x4, x1, x2)

inst_72613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:217839*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217839*0 + 3*421*FLEN/8, x4, x1, x2)

inst_72614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:217842*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217842*0 + 3*422*FLEN/8, x4, x1, x2)

inst_72615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:217845*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217845*0 + 3*423*FLEN/8, x4, x1, x2)

inst_72616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x230000000000000; valaddr_reg:x3; val_offset:217848*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217848*0 + 3*424*FLEN/8, x4, x1, x2)

inst_72617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x230000000000001; valaddr_reg:x3; val_offset:217851*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217851*0 + 3*425*FLEN/8, x4, x1, x2)

inst_72618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x230000000000003; valaddr_reg:x3; val_offset:217854*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217854*0 + 3*426*FLEN/8, x4, x1, x2)

inst_72619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x230000000000007; valaddr_reg:x3; val_offset:217857*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217857*0 + 3*427*FLEN/8, x4, x1, x2)

inst_72620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23000000000000f; valaddr_reg:x3; val_offset:217860*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217860*0 + 3*428*FLEN/8, x4, x1, x2)

inst_72621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23000000000001f; valaddr_reg:x3; val_offset:217863*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217863*0 + 3*429*FLEN/8, x4, x1, x2)

inst_72622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23000000000003f; valaddr_reg:x3; val_offset:217866*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217866*0 + 3*430*FLEN/8, x4, x1, x2)

inst_72623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23000000000007f; valaddr_reg:x3; val_offset:217869*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217869*0 + 3*431*FLEN/8, x4, x1, x2)

inst_72624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x2300000000000ff; valaddr_reg:x3; val_offset:217872*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217872*0 + 3*432*FLEN/8, x4, x1, x2)

inst_72625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x2300000000001ff; valaddr_reg:x3; val_offset:217875*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217875*0 + 3*433*FLEN/8, x4, x1, x2)

inst_72626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x2300000000003ff; valaddr_reg:x3; val_offset:217878*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217878*0 + 3*434*FLEN/8, x4, x1, x2)

inst_72627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x2300000000007ff; valaddr_reg:x3; val_offset:217881*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217881*0 + 3*435*FLEN/8, x4, x1, x2)

inst_72628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x230000000000fff; valaddr_reg:x3; val_offset:217884*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217884*0 + 3*436*FLEN/8, x4, x1, x2)

inst_72629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x230000000001fff; valaddr_reg:x3; val_offset:217887*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217887*0 + 3*437*FLEN/8, x4, x1, x2)

inst_72630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x230000000003fff; valaddr_reg:x3; val_offset:217890*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217890*0 + 3*438*FLEN/8, x4, x1, x2)

inst_72631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x230000000007fff; valaddr_reg:x3; val_offset:217893*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217893*0 + 3*439*FLEN/8, x4, x1, x2)

inst_72632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23000000000ffff; valaddr_reg:x3; val_offset:217896*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217896*0 + 3*440*FLEN/8, x4, x1, x2)

inst_72633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23000000001ffff; valaddr_reg:x3; val_offset:217899*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217899*0 + 3*441*FLEN/8, x4, x1, x2)

inst_72634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23000000003ffff; valaddr_reg:x3; val_offset:217902*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217902*0 + 3*442*FLEN/8, x4, x1, x2)

inst_72635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23000000007ffff; valaddr_reg:x3; val_offset:217905*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217905*0 + 3*443*FLEN/8, x4, x1, x2)

inst_72636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x2300000000fffff; valaddr_reg:x3; val_offset:217908*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217908*0 + 3*444*FLEN/8, x4, x1, x2)

inst_72637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x2300000001fffff; valaddr_reg:x3; val_offset:217911*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217911*0 + 3*445*FLEN/8, x4, x1, x2)

inst_72638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x2300000003fffff; valaddr_reg:x3; val_offset:217914*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217914*0 + 3*446*FLEN/8, x4, x1, x2)

inst_72639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x2300000007fffff; valaddr_reg:x3; val_offset:217917*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217917*0 + 3*447*FLEN/8, x4, x1, x2)

inst_72640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x230000000ffffff; valaddr_reg:x3; val_offset:217920*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217920*0 + 3*448*FLEN/8, x4, x1, x2)

inst_72641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x230000001ffffff; valaddr_reg:x3; val_offset:217923*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217923*0 + 3*449*FLEN/8, x4, x1, x2)

inst_72642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x230000003ffffff; valaddr_reg:x3; val_offset:217926*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217926*0 + 3*450*FLEN/8, x4, x1, x2)

inst_72643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x230000007ffffff; valaddr_reg:x3; val_offset:217929*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217929*0 + 3*451*FLEN/8, x4, x1, x2)

inst_72644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23000000fffffff; valaddr_reg:x3; val_offset:217932*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217932*0 + 3*452*FLEN/8, x4, x1, x2)

inst_72645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23000001fffffff; valaddr_reg:x3; val_offset:217935*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217935*0 + 3*453*FLEN/8, x4, x1, x2)

inst_72646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23000003fffffff; valaddr_reg:x3; val_offset:217938*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217938*0 + 3*454*FLEN/8, x4, x1, x2)

inst_72647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23000007fffffff; valaddr_reg:x3; val_offset:217941*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217941*0 + 3*455*FLEN/8, x4, x1, x2)

inst_72648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x2300000ffffffff; valaddr_reg:x3; val_offset:217944*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217944*0 + 3*456*FLEN/8, x4, x1, x2)

inst_72649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x2300001ffffffff; valaddr_reg:x3; val_offset:217947*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217947*0 + 3*457*FLEN/8, x4, x1, x2)

inst_72650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x2300003ffffffff; valaddr_reg:x3; val_offset:217950*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217950*0 + 3*458*FLEN/8, x4, x1, x2)

inst_72651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x2300007ffffffff; valaddr_reg:x3; val_offset:217953*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217953*0 + 3*459*FLEN/8, x4, x1, x2)

inst_72652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x230000fffffffff; valaddr_reg:x3; val_offset:217956*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217956*0 + 3*460*FLEN/8, x4, x1, x2)

inst_72653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x230001fffffffff; valaddr_reg:x3; val_offset:217959*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217959*0 + 3*461*FLEN/8, x4, x1, x2)

inst_72654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x230003fffffffff; valaddr_reg:x3; val_offset:217962*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217962*0 + 3*462*FLEN/8, x4, x1, x2)

inst_72655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x230007fffffffff; valaddr_reg:x3; val_offset:217965*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217965*0 + 3*463*FLEN/8, x4, x1, x2)

inst_72656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23000ffffffffff; valaddr_reg:x3; val_offset:217968*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217968*0 + 3*464*FLEN/8, x4, x1, x2)

inst_72657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23001ffffffffff; valaddr_reg:x3; val_offset:217971*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217971*0 + 3*465*FLEN/8, x4, x1, x2)

inst_72658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23003ffffffffff; valaddr_reg:x3; val_offset:217974*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217974*0 + 3*466*FLEN/8, x4, x1, x2)

inst_72659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23007ffffffffff; valaddr_reg:x3; val_offset:217977*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217977*0 + 3*467*FLEN/8, x4, x1, x2)

inst_72660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x2300fffffffffff; valaddr_reg:x3; val_offset:217980*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217980*0 + 3*468*FLEN/8, x4, x1, x2)

inst_72661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x2301fffffffffff; valaddr_reg:x3; val_offset:217983*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217983*0 + 3*469*FLEN/8, x4, x1, x2)

inst_72662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x2303fffffffffff; valaddr_reg:x3; val_offset:217986*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217986*0 + 3*470*FLEN/8, x4, x1, x2)

inst_72663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x2307fffffffffff; valaddr_reg:x3; val_offset:217989*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217989*0 + 3*471*FLEN/8, x4, x1, x2)

inst_72664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x230ffffffffffff; valaddr_reg:x3; val_offset:217992*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217992*0 + 3*472*FLEN/8, x4, x1, x2)

inst_72665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x231ffffffffffff; valaddr_reg:x3; val_offset:217995*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217995*0 + 3*473*FLEN/8, x4, x1, x2)

inst_72666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x233ffffffffffff; valaddr_reg:x3; val_offset:217998*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217998*0 + 3*474*FLEN/8, x4, x1, x2)

inst_72667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x237ffffffffffff; valaddr_reg:x3; val_offset:218001*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218001*0 + 3*475*FLEN/8, x4, x1, x2)

inst_72668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x238000000000000; valaddr_reg:x3; val_offset:218004*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218004*0 + 3*476*FLEN/8, x4, x1, x2)

inst_72669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23c000000000000; valaddr_reg:x3; val_offset:218007*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218007*0 + 3*477*FLEN/8, x4, x1, x2)

inst_72670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23e000000000000; valaddr_reg:x3; val_offset:218010*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218010*0 + 3*478*FLEN/8, x4, x1, x2)

inst_72671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23f000000000000; valaddr_reg:x3; val_offset:218013*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218013*0 + 3*479*FLEN/8, x4, x1, x2)

inst_72672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23f800000000000; valaddr_reg:x3; val_offset:218016*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218016*0 + 3*480*FLEN/8, x4, x1, x2)

inst_72673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23fc00000000000; valaddr_reg:x3; val_offset:218019*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218019*0 + 3*481*FLEN/8, x4, x1, x2)

inst_72674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23fe00000000000; valaddr_reg:x3; val_offset:218022*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218022*0 + 3*482*FLEN/8, x4, x1, x2)

inst_72675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23ff00000000000; valaddr_reg:x3; val_offset:218025*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218025*0 + 3*483*FLEN/8, x4, x1, x2)

inst_72676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23ff80000000000; valaddr_reg:x3; val_offset:218028*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218028*0 + 3*484*FLEN/8, x4, x1, x2)

inst_72677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23ffc0000000000; valaddr_reg:x3; val_offset:218031*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218031*0 + 3*485*FLEN/8, x4, x1, x2)

inst_72678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23ffe0000000000; valaddr_reg:x3; val_offset:218034*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218034*0 + 3*486*FLEN/8, x4, x1, x2)

inst_72679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23fff0000000000; valaddr_reg:x3; val_offset:218037*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218037*0 + 3*487*FLEN/8, x4, x1, x2)

inst_72680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23fff8000000000; valaddr_reg:x3; val_offset:218040*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218040*0 + 3*488*FLEN/8, x4, x1, x2)

inst_72681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23fffc000000000; valaddr_reg:x3; val_offset:218043*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218043*0 + 3*489*FLEN/8, x4, x1, x2)

inst_72682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23fffe000000000; valaddr_reg:x3; val_offset:218046*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218046*0 + 3*490*FLEN/8, x4, x1, x2)

inst_72683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23ffff000000000; valaddr_reg:x3; val_offset:218049*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218049*0 + 3*491*FLEN/8, x4, x1, x2)

inst_72684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23ffff800000000; valaddr_reg:x3; val_offset:218052*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218052*0 + 3*492*FLEN/8, x4, x1, x2)

inst_72685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23ffffc00000000; valaddr_reg:x3; val_offset:218055*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218055*0 + 3*493*FLEN/8, x4, x1, x2)

inst_72686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23ffffe00000000; valaddr_reg:x3; val_offset:218058*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218058*0 + 3*494*FLEN/8, x4, x1, x2)

inst_72687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23fffff00000000; valaddr_reg:x3; val_offset:218061*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218061*0 + 3*495*FLEN/8, x4, x1, x2)

inst_72688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23fffff80000000; valaddr_reg:x3; val_offset:218064*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218064*0 + 3*496*FLEN/8, x4, x1, x2)

inst_72689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23fffffc0000000; valaddr_reg:x3; val_offset:218067*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218067*0 + 3*497*FLEN/8, x4, x1, x2)

inst_72690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23fffffe0000000; valaddr_reg:x3; val_offset:218070*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218070*0 + 3*498*FLEN/8, x4, x1, x2)

inst_72691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23ffffff0000000; valaddr_reg:x3; val_offset:218073*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218073*0 + 3*499*FLEN/8, x4, x1, x2)

inst_72692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23ffffff8000000; valaddr_reg:x3; val_offset:218076*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218076*0 + 3*500*FLEN/8, x4, x1, x2)

inst_72693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23ffffffc000000; valaddr_reg:x3; val_offset:218079*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218079*0 + 3*501*FLEN/8, x4, x1, x2)

inst_72694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23ffffffe000000; valaddr_reg:x3; val_offset:218082*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218082*0 + 3*502*FLEN/8, x4, x1, x2)

inst_72695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23fffffff000000; valaddr_reg:x3; val_offset:218085*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218085*0 + 3*503*FLEN/8, x4, x1, x2)

inst_72696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23fffffff800000; valaddr_reg:x3; val_offset:218088*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218088*0 + 3*504*FLEN/8, x4, x1, x2)

inst_72697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23fffffffc00000; valaddr_reg:x3; val_offset:218091*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218091*0 + 3*505*FLEN/8, x4, x1, x2)

inst_72698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23fffffffe00000; valaddr_reg:x3; val_offset:218094*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218094*0 + 3*506*FLEN/8, x4, x1, x2)

inst_72699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23ffffffff00000; valaddr_reg:x3; val_offset:218097*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218097*0 + 3*507*FLEN/8, x4, x1, x2)

inst_72700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23ffffffff80000; valaddr_reg:x3; val_offset:218100*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218100*0 + 3*508*FLEN/8, x4, x1, x2)

inst_72701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23ffffffffc0000; valaddr_reg:x3; val_offset:218103*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218103*0 + 3*509*FLEN/8, x4, x1, x2)

inst_72702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23ffffffffe0000; valaddr_reg:x3; val_offset:218106*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218106*0 + 3*510*FLEN/8, x4, x1, x2)

inst_72703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23fffffffff0000; valaddr_reg:x3; val_offset:218109*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218109*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_72704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23fffffffff8000; valaddr_reg:x3; val_offset:218112*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218112*0 + 3*512*FLEN/8, x4, x1, x2)

inst_72705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23fffffffffc000; valaddr_reg:x3; val_offset:218115*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218115*0 + 3*513*FLEN/8, x4, x1, x2)

inst_72706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23fffffffffe000; valaddr_reg:x3; val_offset:218118*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218118*0 + 3*514*FLEN/8, x4, x1, x2)

inst_72707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23ffffffffff000; valaddr_reg:x3; val_offset:218121*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218121*0 + 3*515*FLEN/8, x4, x1, x2)

inst_72708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23ffffffffff800; valaddr_reg:x3; val_offset:218124*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218124*0 + 3*516*FLEN/8, x4, x1, x2)

inst_72709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23ffffffffffc00; valaddr_reg:x3; val_offset:218127*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218127*0 + 3*517*FLEN/8, x4, x1, x2)

inst_72710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23ffffffffffe00; valaddr_reg:x3; val_offset:218130*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218130*0 + 3*518*FLEN/8, x4, x1, x2)

inst_72711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23fffffffffff00; valaddr_reg:x3; val_offset:218133*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218133*0 + 3*519*FLEN/8, x4, x1, x2)

inst_72712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23fffffffffff80; valaddr_reg:x3; val_offset:218136*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218136*0 + 3*520*FLEN/8, x4, x1, x2)

inst_72713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23fffffffffffc0; valaddr_reg:x3; val_offset:218139*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218139*0 + 3*521*FLEN/8, x4, x1, x2)

inst_72714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23fffffffffffe0; valaddr_reg:x3; val_offset:218142*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218142*0 + 3*522*FLEN/8, x4, x1, x2)

inst_72715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23ffffffffffff0; valaddr_reg:x3; val_offset:218145*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218145*0 + 3*523*FLEN/8, x4, x1, x2)

inst_72716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23ffffffffffff8; valaddr_reg:x3; val_offset:218148*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218148*0 + 3*524*FLEN/8, x4, x1, x2)

inst_72717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23ffffffffffffc; valaddr_reg:x3; val_offset:218151*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218151*0 + 3*525*FLEN/8, x4, x1, x2)

inst_72718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23ffffffffffffe; valaddr_reg:x3; val_offset:218154*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218154*0 + 3*526*FLEN/8, x4, x1, x2)

inst_72719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6ba65634ca428 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6ba65634ca428; op2val:0x0;
op3val:0x23fffffffffffff; valaddr_reg:x3; val_offset:218157*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218157*0 + 3*527*FLEN/8, x4, x1, x2)

inst_72720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b40000000000000; valaddr_reg:x3; val_offset:218160*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218160*0 + 3*528*FLEN/8, x4, x1, x2)

inst_72721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b40000000000001; valaddr_reg:x3; val_offset:218163*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218163*0 + 3*529*FLEN/8, x4, x1, x2)

inst_72722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b40000000000003; valaddr_reg:x3; val_offset:218166*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218166*0 + 3*530*FLEN/8, x4, x1, x2)

inst_72723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b40000000000007; valaddr_reg:x3; val_offset:218169*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218169*0 + 3*531*FLEN/8, x4, x1, x2)

inst_72724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4000000000000f; valaddr_reg:x3; val_offset:218172*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218172*0 + 3*532*FLEN/8, x4, x1, x2)

inst_72725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4000000000001f; valaddr_reg:x3; val_offset:218175*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218175*0 + 3*533*FLEN/8, x4, x1, x2)

inst_72726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4000000000003f; valaddr_reg:x3; val_offset:218178*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218178*0 + 3*534*FLEN/8, x4, x1, x2)

inst_72727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4000000000007f; valaddr_reg:x3; val_offset:218181*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218181*0 + 3*535*FLEN/8, x4, x1, x2)

inst_72728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b400000000000ff; valaddr_reg:x3; val_offset:218184*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218184*0 + 3*536*FLEN/8, x4, x1, x2)

inst_72729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b400000000001ff; valaddr_reg:x3; val_offset:218187*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218187*0 + 3*537*FLEN/8, x4, x1, x2)

inst_72730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b400000000003ff; valaddr_reg:x3; val_offset:218190*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218190*0 + 3*538*FLEN/8, x4, x1, x2)

inst_72731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b400000000007ff; valaddr_reg:x3; val_offset:218193*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218193*0 + 3*539*FLEN/8, x4, x1, x2)

inst_72732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b40000000000fff; valaddr_reg:x3; val_offset:218196*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218196*0 + 3*540*FLEN/8, x4, x1, x2)

inst_72733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b40000000001fff; valaddr_reg:x3; val_offset:218199*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218199*0 + 3*541*FLEN/8, x4, x1, x2)

inst_72734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b40000000003fff; valaddr_reg:x3; val_offset:218202*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218202*0 + 3*542*FLEN/8, x4, x1, x2)

inst_72735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b40000000007fff; valaddr_reg:x3; val_offset:218205*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218205*0 + 3*543*FLEN/8, x4, x1, x2)

inst_72736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4000000000ffff; valaddr_reg:x3; val_offset:218208*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218208*0 + 3*544*FLEN/8, x4, x1, x2)

inst_72737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4000000001ffff; valaddr_reg:x3; val_offset:218211*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218211*0 + 3*545*FLEN/8, x4, x1, x2)

inst_72738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4000000003ffff; valaddr_reg:x3; val_offset:218214*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218214*0 + 3*546*FLEN/8, x4, x1, x2)

inst_72739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4000000007ffff; valaddr_reg:x3; val_offset:218217*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218217*0 + 3*547*FLEN/8, x4, x1, x2)

inst_72740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b400000000fffff; valaddr_reg:x3; val_offset:218220*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218220*0 + 3*548*FLEN/8, x4, x1, x2)

inst_72741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b400000001fffff; valaddr_reg:x3; val_offset:218223*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218223*0 + 3*549*FLEN/8, x4, x1, x2)

inst_72742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b400000003fffff; valaddr_reg:x3; val_offset:218226*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218226*0 + 3*550*FLEN/8, x4, x1, x2)

inst_72743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b400000007fffff; valaddr_reg:x3; val_offset:218229*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218229*0 + 3*551*FLEN/8, x4, x1, x2)

inst_72744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b40000000ffffff; valaddr_reg:x3; val_offset:218232*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218232*0 + 3*552*FLEN/8, x4, x1, x2)

inst_72745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b40000001ffffff; valaddr_reg:x3; val_offset:218235*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218235*0 + 3*553*FLEN/8, x4, x1, x2)

inst_72746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b40000003ffffff; valaddr_reg:x3; val_offset:218238*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218238*0 + 3*554*FLEN/8, x4, x1, x2)

inst_72747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b40000007ffffff; valaddr_reg:x3; val_offset:218241*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218241*0 + 3*555*FLEN/8, x4, x1, x2)

inst_72748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4000000fffffff; valaddr_reg:x3; val_offset:218244*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218244*0 + 3*556*FLEN/8, x4, x1, x2)

inst_72749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4000001fffffff; valaddr_reg:x3; val_offset:218247*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218247*0 + 3*557*FLEN/8, x4, x1, x2)

inst_72750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4000003fffffff; valaddr_reg:x3; val_offset:218250*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218250*0 + 3*558*FLEN/8, x4, x1, x2)

inst_72751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4000007fffffff; valaddr_reg:x3; val_offset:218253*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218253*0 + 3*559*FLEN/8, x4, x1, x2)

inst_72752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b400000ffffffff; valaddr_reg:x3; val_offset:218256*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218256*0 + 3*560*FLEN/8, x4, x1, x2)

inst_72753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b400001ffffffff; valaddr_reg:x3; val_offset:218259*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218259*0 + 3*561*FLEN/8, x4, x1, x2)

inst_72754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b400003ffffffff; valaddr_reg:x3; val_offset:218262*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218262*0 + 3*562*FLEN/8, x4, x1, x2)

inst_72755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b400007ffffffff; valaddr_reg:x3; val_offset:218265*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218265*0 + 3*563*FLEN/8, x4, x1, x2)

inst_72756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b40000fffffffff; valaddr_reg:x3; val_offset:218268*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218268*0 + 3*564*FLEN/8, x4, x1, x2)

inst_72757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b40001fffffffff; valaddr_reg:x3; val_offset:218271*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218271*0 + 3*565*FLEN/8, x4, x1, x2)

inst_72758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b40003fffffffff; valaddr_reg:x3; val_offset:218274*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218274*0 + 3*566*FLEN/8, x4, x1, x2)

inst_72759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b40007fffffffff; valaddr_reg:x3; val_offset:218277*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218277*0 + 3*567*FLEN/8, x4, x1, x2)

inst_72760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4000ffffffffff; valaddr_reg:x3; val_offset:218280*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218280*0 + 3*568*FLEN/8, x4, x1, x2)

inst_72761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4001ffffffffff; valaddr_reg:x3; val_offset:218283*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218283*0 + 3*569*FLEN/8, x4, x1, x2)

inst_72762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4003ffffffffff; valaddr_reg:x3; val_offset:218286*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218286*0 + 3*570*FLEN/8, x4, x1, x2)

inst_72763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4007ffffffffff; valaddr_reg:x3; val_offset:218289*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218289*0 + 3*571*FLEN/8, x4, x1, x2)

inst_72764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b400fffffffffff; valaddr_reg:x3; val_offset:218292*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218292*0 + 3*572*FLEN/8, x4, x1, x2)

inst_72765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b401fffffffffff; valaddr_reg:x3; val_offset:218295*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218295*0 + 3*573*FLEN/8, x4, x1, x2)

inst_72766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b403fffffffffff; valaddr_reg:x3; val_offset:218298*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218298*0 + 3*574*FLEN/8, x4, x1, x2)

inst_72767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b407fffffffffff; valaddr_reg:x3; val_offset:218301*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218301*0 + 3*575*FLEN/8, x4, x1, x2)

inst_72768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b40ffffffffffff; valaddr_reg:x3; val_offset:218304*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218304*0 + 3*576*FLEN/8, x4, x1, x2)

inst_72769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b41ffffffffffff; valaddr_reg:x3; val_offset:218307*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218307*0 + 3*577*FLEN/8, x4, x1, x2)

inst_72770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b43ffffffffffff; valaddr_reg:x3; val_offset:218310*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218310*0 + 3*578*FLEN/8, x4, x1, x2)

inst_72771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b47ffffffffffff; valaddr_reg:x3; val_offset:218313*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218313*0 + 3*579*FLEN/8, x4, x1, x2)

inst_72772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b48000000000000; valaddr_reg:x3; val_offset:218316*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218316*0 + 3*580*FLEN/8, x4, x1, x2)

inst_72773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4c000000000000; valaddr_reg:x3; val_offset:218319*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218319*0 + 3*581*FLEN/8, x4, x1, x2)

inst_72774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4e000000000000; valaddr_reg:x3; val_offset:218322*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218322*0 + 3*582*FLEN/8, x4, x1, x2)

inst_72775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4f000000000000; valaddr_reg:x3; val_offset:218325*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218325*0 + 3*583*FLEN/8, x4, x1, x2)

inst_72776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4f800000000000; valaddr_reg:x3; val_offset:218328*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218328*0 + 3*584*FLEN/8, x4, x1, x2)

inst_72777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4fc00000000000; valaddr_reg:x3; val_offset:218331*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218331*0 + 3*585*FLEN/8, x4, x1, x2)

inst_72778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4fe00000000000; valaddr_reg:x3; val_offset:218334*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218334*0 + 3*586*FLEN/8, x4, x1, x2)

inst_72779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4ff00000000000; valaddr_reg:x3; val_offset:218337*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218337*0 + 3*587*FLEN/8, x4, x1, x2)

inst_72780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4ff80000000000; valaddr_reg:x3; val_offset:218340*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218340*0 + 3*588*FLEN/8, x4, x1, x2)

inst_72781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4ffc0000000000; valaddr_reg:x3; val_offset:218343*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218343*0 + 3*589*FLEN/8, x4, x1, x2)

inst_72782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4ffe0000000000; valaddr_reg:x3; val_offset:218346*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218346*0 + 3*590*FLEN/8, x4, x1, x2)

inst_72783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4fff0000000000; valaddr_reg:x3; val_offset:218349*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218349*0 + 3*591*FLEN/8, x4, x1, x2)

inst_72784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4fff8000000000; valaddr_reg:x3; val_offset:218352*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218352*0 + 3*592*FLEN/8, x4, x1, x2)

inst_72785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4fffc000000000; valaddr_reg:x3; val_offset:218355*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218355*0 + 3*593*FLEN/8, x4, x1, x2)

inst_72786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4fffe000000000; valaddr_reg:x3; val_offset:218358*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218358*0 + 3*594*FLEN/8, x4, x1, x2)

inst_72787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4ffff000000000; valaddr_reg:x3; val_offset:218361*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218361*0 + 3*595*FLEN/8, x4, x1, x2)

inst_72788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4ffff800000000; valaddr_reg:x3; val_offset:218364*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218364*0 + 3*596*FLEN/8, x4, x1, x2)

inst_72789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4ffffc00000000; valaddr_reg:x3; val_offset:218367*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218367*0 + 3*597*FLEN/8, x4, x1, x2)

inst_72790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4ffffe00000000; valaddr_reg:x3; val_offset:218370*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218370*0 + 3*598*FLEN/8, x4, x1, x2)

inst_72791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4fffff00000000; valaddr_reg:x3; val_offset:218373*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218373*0 + 3*599*FLEN/8, x4, x1, x2)

inst_72792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4fffff80000000; valaddr_reg:x3; val_offset:218376*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218376*0 + 3*600*FLEN/8, x4, x1, x2)

inst_72793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4fffffc0000000; valaddr_reg:x3; val_offset:218379*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218379*0 + 3*601*FLEN/8, x4, x1, x2)

inst_72794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4fffffe0000000; valaddr_reg:x3; val_offset:218382*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218382*0 + 3*602*FLEN/8, x4, x1, x2)

inst_72795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4ffffff0000000; valaddr_reg:x3; val_offset:218385*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218385*0 + 3*603*FLEN/8, x4, x1, x2)

inst_72796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4ffffff8000000; valaddr_reg:x3; val_offset:218388*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218388*0 + 3*604*FLEN/8, x4, x1, x2)

inst_72797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4ffffffc000000; valaddr_reg:x3; val_offset:218391*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218391*0 + 3*605*FLEN/8, x4, x1, x2)

inst_72798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4ffffffe000000; valaddr_reg:x3; val_offset:218394*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218394*0 + 3*606*FLEN/8, x4, x1, x2)

inst_72799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4fffffff000000; valaddr_reg:x3; val_offset:218397*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218397*0 + 3*607*FLEN/8, x4, x1, x2)

inst_72800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4fffffff800000; valaddr_reg:x3; val_offset:218400*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218400*0 + 3*608*FLEN/8, x4, x1, x2)

inst_72801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4fffffffc00000; valaddr_reg:x3; val_offset:218403*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218403*0 + 3*609*FLEN/8, x4, x1, x2)

inst_72802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4fffffffe00000; valaddr_reg:x3; val_offset:218406*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218406*0 + 3*610*FLEN/8, x4, x1, x2)

inst_72803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4ffffffff00000; valaddr_reg:x3; val_offset:218409*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218409*0 + 3*611*FLEN/8, x4, x1, x2)

inst_72804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4ffffffff80000; valaddr_reg:x3; val_offset:218412*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218412*0 + 3*612*FLEN/8, x4, x1, x2)

inst_72805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4ffffffffc0000; valaddr_reg:x3; val_offset:218415*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218415*0 + 3*613*FLEN/8, x4, x1, x2)

inst_72806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4ffffffffe0000; valaddr_reg:x3; val_offset:218418*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218418*0 + 3*614*FLEN/8, x4, x1, x2)

inst_72807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4fffffffff0000; valaddr_reg:x3; val_offset:218421*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218421*0 + 3*615*FLEN/8, x4, x1, x2)

inst_72808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4fffffffff8000; valaddr_reg:x3; val_offset:218424*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218424*0 + 3*616*FLEN/8, x4, x1, x2)

inst_72809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4fffffffffc000; valaddr_reg:x3; val_offset:218427*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218427*0 + 3*617*FLEN/8, x4, x1, x2)

inst_72810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4fffffffffe000; valaddr_reg:x3; val_offset:218430*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218430*0 + 3*618*FLEN/8, x4, x1, x2)

inst_72811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4ffffffffff000; valaddr_reg:x3; val_offset:218433*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218433*0 + 3*619*FLEN/8, x4, x1, x2)

inst_72812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4ffffffffff800; valaddr_reg:x3; val_offset:218436*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218436*0 + 3*620*FLEN/8, x4, x1, x2)

inst_72813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4ffffffffffc00; valaddr_reg:x3; val_offset:218439*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218439*0 + 3*621*FLEN/8, x4, x1, x2)

inst_72814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4ffffffffffe00; valaddr_reg:x3; val_offset:218442*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218442*0 + 3*622*FLEN/8, x4, x1, x2)

inst_72815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4fffffffffff00; valaddr_reg:x3; val_offset:218445*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218445*0 + 3*623*FLEN/8, x4, x1, x2)

inst_72816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4fffffffffff80; valaddr_reg:x3; val_offset:218448*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218448*0 + 3*624*FLEN/8, x4, x1, x2)

inst_72817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4fffffffffffc0; valaddr_reg:x3; val_offset:218451*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218451*0 + 3*625*FLEN/8, x4, x1, x2)

inst_72818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4fffffffffffe0; valaddr_reg:x3; val_offset:218454*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218454*0 + 3*626*FLEN/8, x4, x1, x2)

inst_72819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4ffffffffffff0; valaddr_reg:x3; val_offset:218457*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218457*0 + 3*627*FLEN/8, x4, x1, x2)

inst_72820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4ffffffffffff8; valaddr_reg:x3; val_offset:218460*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218460*0 + 3*628*FLEN/8, x4, x1, x2)

inst_72821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4ffffffffffffc; valaddr_reg:x3; val_offset:218463*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218463*0 + 3*629*FLEN/8, x4, x1, x2)

inst_72822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4ffffffffffffe; valaddr_reg:x3; val_offset:218466*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218466*0 + 3*630*FLEN/8, x4, x1, x2)

inst_72823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3b4 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3b4fffffffffffff; valaddr_reg:x3; val_offset:218469*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218469*0 + 3*631*FLEN/8, x4, x1, x2)

inst_72824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:218472*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218472*0 + 3*632*FLEN/8, x4, x1, x2)

inst_72825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:218475*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218475*0 + 3*633*FLEN/8, x4, x1, x2)

inst_72826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:218478*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218478*0 + 3*634*FLEN/8, x4, x1, x2)

inst_72827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:218481*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218481*0 + 3*635*FLEN/8, x4, x1, x2)

inst_72828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:218484*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218484*0 + 3*636*FLEN/8, x4, x1, x2)

inst_72829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:218487*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218487*0 + 3*637*FLEN/8, x4, x1, x2)

inst_72830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:218490*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218490*0 + 3*638*FLEN/8, x4, x1, x2)

inst_72831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:218493*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218493*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_72832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:218496*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218496*0 + 3*640*FLEN/8, x4, x1, x2)

inst_72833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:218499*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218499*0 + 3*641*FLEN/8, x4, x1, x2)

inst_72834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:218502*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218502*0 + 3*642*FLEN/8, x4, x1, x2)

inst_72835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:218505*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218505*0 + 3*643*FLEN/8, x4, x1, x2)

inst_72836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:218508*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218508*0 + 3*644*FLEN/8, x4, x1, x2)

inst_72837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:218511*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218511*0 + 3*645*FLEN/8, x4, x1, x2)

inst_72838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:218514*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218514*0 + 3*646*FLEN/8, x4, x1, x2)

inst_72839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:218517*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218517*0 + 3*647*FLEN/8, x4, x1, x2)

inst_72840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:218520*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218520*0 + 3*648*FLEN/8, x4, x1, x2)

inst_72841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:218523*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218523*0 + 3*649*FLEN/8, x4, x1, x2)

inst_72842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:218526*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218526*0 + 3*650*FLEN/8, x4, x1, x2)

inst_72843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:218529*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218529*0 + 3*651*FLEN/8, x4, x1, x2)

inst_72844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:218532*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218532*0 + 3*652*FLEN/8, x4, x1, x2)

inst_72845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bb2fdf806efc and fs2 == 0 and fe2 == 0x203 and fm2 == 0x6862bfb0fc854 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6bb2fdf806efc; op2val:0x2036862bfb0fc854;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:218535*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218535*0 + 3*653*FLEN/8, x4, x1, x2)

inst_72846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:218538*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218538*0 + 3*654*FLEN/8, x4, x1, x2)

inst_72847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:218541*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218541*0 + 3*655*FLEN/8, x4, x1, x2)

inst_72848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:218544*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218544*0 + 3*656*FLEN/8, x4, x1, x2)

inst_72849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:218547*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218547*0 + 3*657*FLEN/8, x4, x1, x2)

inst_72850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:218550*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218550*0 + 3*658*FLEN/8, x4, x1, x2)

inst_72851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:218553*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218553*0 + 3*659*FLEN/8, x4, x1, x2)

inst_72852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:218556*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218556*0 + 3*660*FLEN/8, x4, x1, x2)

inst_72853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:218559*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218559*0 + 3*661*FLEN/8, x4, x1, x2)

inst_72854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:218562*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218562*0 + 3*662*FLEN/8, x4, x1, x2)

inst_72855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:218565*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218565*0 + 3*663*FLEN/8, x4, x1, x2)

inst_72856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:218568*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218568*0 + 3*664*FLEN/8, x4, x1, x2)

inst_72857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:218571*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218571*0 + 3*665*FLEN/8, x4, x1, x2)

inst_72858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:218574*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218574*0 + 3*666*FLEN/8, x4, x1, x2)

inst_72859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:218577*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218577*0 + 3*667*FLEN/8, x4, x1, x2)

inst_72860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:218580*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218580*0 + 3*668*FLEN/8, x4, x1, x2)

inst_72861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:218583*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218583*0 + 3*669*FLEN/8, x4, x1, x2)

inst_72862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:218586*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218586*0 + 3*670*FLEN/8, x4, x1, x2)

inst_72863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:218589*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218589*0 + 3*671*FLEN/8, x4, x1, x2)

inst_72864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:218592*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218592*0 + 3*672*FLEN/8, x4, x1, x2)

inst_72865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:218595*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218595*0 + 3*673*FLEN/8, x4, x1, x2)

inst_72866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:218598*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218598*0 + 3*674*FLEN/8, x4, x1, x2)

inst_72867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:218601*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218601*0 + 3*675*FLEN/8, x4, x1, x2)

inst_72868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x8060000000000000; valaddr_reg:x3; val_offset:218604*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218604*0 + 3*676*FLEN/8, x4, x1, x2)

inst_72869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x8060000000000001; valaddr_reg:x3; val_offset:218607*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218607*0 + 3*677*FLEN/8, x4, x1, x2)

inst_72870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x8060000000000003; valaddr_reg:x3; val_offset:218610*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218610*0 + 3*678*FLEN/8, x4, x1, x2)

inst_72871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x8060000000000007; valaddr_reg:x3; val_offset:218613*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218613*0 + 3*679*FLEN/8, x4, x1, x2)

inst_72872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806000000000000f; valaddr_reg:x3; val_offset:218616*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218616*0 + 3*680*FLEN/8, x4, x1, x2)

inst_72873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806000000000001f; valaddr_reg:x3; val_offset:218619*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218619*0 + 3*681*FLEN/8, x4, x1, x2)

inst_72874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806000000000003f; valaddr_reg:x3; val_offset:218622*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218622*0 + 3*682*FLEN/8, x4, x1, x2)

inst_72875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806000000000007f; valaddr_reg:x3; val_offset:218625*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218625*0 + 3*683*FLEN/8, x4, x1, x2)

inst_72876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x80600000000000ff; valaddr_reg:x3; val_offset:218628*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218628*0 + 3*684*FLEN/8, x4, x1, x2)

inst_72877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x80600000000001ff; valaddr_reg:x3; val_offset:218631*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218631*0 + 3*685*FLEN/8, x4, x1, x2)

inst_72878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x80600000000003ff; valaddr_reg:x3; val_offset:218634*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218634*0 + 3*686*FLEN/8, x4, x1, x2)

inst_72879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x80600000000007ff; valaddr_reg:x3; val_offset:218637*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218637*0 + 3*687*FLEN/8, x4, x1, x2)

inst_72880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x8060000000000fff; valaddr_reg:x3; val_offset:218640*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218640*0 + 3*688*FLEN/8, x4, x1, x2)

inst_72881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x8060000000001fff; valaddr_reg:x3; val_offset:218643*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218643*0 + 3*689*FLEN/8, x4, x1, x2)

inst_72882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x8060000000003fff; valaddr_reg:x3; val_offset:218646*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218646*0 + 3*690*FLEN/8, x4, x1, x2)

inst_72883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x8060000000007fff; valaddr_reg:x3; val_offset:218649*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218649*0 + 3*691*FLEN/8, x4, x1, x2)

inst_72884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806000000000ffff; valaddr_reg:x3; val_offset:218652*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218652*0 + 3*692*FLEN/8, x4, x1, x2)

inst_72885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806000000001ffff; valaddr_reg:x3; val_offset:218655*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218655*0 + 3*693*FLEN/8, x4, x1, x2)

inst_72886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806000000003ffff; valaddr_reg:x3; val_offset:218658*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218658*0 + 3*694*FLEN/8, x4, x1, x2)

inst_72887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806000000007ffff; valaddr_reg:x3; val_offset:218661*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218661*0 + 3*695*FLEN/8, x4, x1, x2)

inst_72888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x80600000000fffff; valaddr_reg:x3; val_offset:218664*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218664*0 + 3*696*FLEN/8, x4, x1, x2)

inst_72889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x80600000001fffff; valaddr_reg:x3; val_offset:218667*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218667*0 + 3*697*FLEN/8, x4, x1, x2)

inst_72890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x80600000003fffff; valaddr_reg:x3; val_offset:218670*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218670*0 + 3*698*FLEN/8, x4, x1, x2)

inst_72891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x80600000007fffff; valaddr_reg:x3; val_offset:218673*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218673*0 + 3*699*FLEN/8, x4, x1, x2)

inst_72892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x8060000000ffffff; valaddr_reg:x3; val_offset:218676*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218676*0 + 3*700*FLEN/8, x4, x1, x2)

inst_72893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x8060000001ffffff; valaddr_reg:x3; val_offset:218679*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218679*0 + 3*701*FLEN/8, x4, x1, x2)

inst_72894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x8060000003ffffff; valaddr_reg:x3; val_offset:218682*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218682*0 + 3*702*FLEN/8, x4, x1, x2)

inst_72895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x8060000007ffffff; valaddr_reg:x3; val_offset:218685*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218685*0 + 3*703*FLEN/8, x4, x1, x2)

inst_72896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806000000fffffff; valaddr_reg:x3; val_offset:218688*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218688*0 + 3*704*FLEN/8, x4, x1, x2)

inst_72897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806000001fffffff; valaddr_reg:x3; val_offset:218691*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218691*0 + 3*705*FLEN/8, x4, x1, x2)

inst_72898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806000003fffffff; valaddr_reg:x3; val_offset:218694*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218694*0 + 3*706*FLEN/8, x4, x1, x2)

inst_72899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806000007fffffff; valaddr_reg:x3; val_offset:218697*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218697*0 + 3*707*FLEN/8, x4, x1, x2)

inst_72900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x80600000ffffffff; valaddr_reg:x3; val_offset:218700*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218700*0 + 3*708*FLEN/8, x4, x1, x2)

inst_72901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x80600001ffffffff; valaddr_reg:x3; val_offset:218703*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218703*0 + 3*709*FLEN/8, x4, x1, x2)

inst_72902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x80600003ffffffff; valaddr_reg:x3; val_offset:218706*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218706*0 + 3*710*FLEN/8, x4, x1, x2)

inst_72903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x80600007ffffffff; valaddr_reg:x3; val_offset:218709*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218709*0 + 3*711*FLEN/8, x4, x1, x2)

inst_72904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x8060000fffffffff; valaddr_reg:x3; val_offset:218712*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218712*0 + 3*712*FLEN/8, x4, x1, x2)

inst_72905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x8060001fffffffff; valaddr_reg:x3; val_offset:218715*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218715*0 + 3*713*FLEN/8, x4, x1, x2)

inst_72906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x8060003fffffffff; valaddr_reg:x3; val_offset:218718*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218718*0 + 3*714*FLEN/8, x4, x1, x2)

inst_72907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x8060007fffffffff; valaddr_reg:x3; val_offset:218721*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218721*0 + 3*715*FLEN/8, x4, x1, x2)

inst_72908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806000ffffffffff; valaddr_reg:x3; val_offset:218724*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218724*0 + 3*716*FLEN/8, x4, x1, x2)

inst_72909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806001ffffffffff; valaddr_reg:x3; val_offset:218727*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218727*0 + 3*717*FLEN/8, x4, x1, x2)

inst_72910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806003ffffffffff; valaddr_reg:x3; val_offset:218730*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218730*0 + 3*718*FLEN/8, x4, x1, x2)

inst_72911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806007ffffffffff; valaddr_reg:x3; val_offset:218733*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218733*0 + 3*719*FLEN/8, x4, x1, x2)

inst_72912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x80600fffffffffff; valaddr_reg:x3; val_offset:218736*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218736*0 + 3*720*FLEN/8, x4, x1, x2)

inst_72913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x80601fffffffffff; valaddr_reg:x3; val_offset:218739*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218739*0 + 3*721*FLEN/8, x4, x1, x2)

inst_72914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x80603fffffffffff; valaddr_reg:x3; val_offset:218742*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218742*0 + 3*722*FLEN/8, x4, x1, x2)

inst_72915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x80607fffffffffff; valaddr_reg:x3; val_offset:218745*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218745*0 + 3*723*FLEN/8, x4, x1, x2)

inst_72916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x8060ffffffffffff; valaddr_reg:x3; val_offset:218748*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218748*0 + 3*724*FLEN/8, x4, x1, x2)

inst_72917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x8061ffffffffffff; valaddr_reg:x3; val_offset:218751*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218751*0 + 3*725*FLEN/8, x4, x1, x2)

inst_72918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x8063ffffffffffff; valaddr_reg:x3; val_offset:218754*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218754*0 + 3*726*FLEN/8, x4, x1, x2)

inst_72919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x8067ffffffffffff; valaddr_reg:x3; val_offset:218757*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218757*0 + 3*727*FLEN/8, x4, x1, x2)

inst_72920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x8068000000000000; valaddr_reg:x3; val_offset:218760*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218760*0 + 3*728*FLEN/8, x4, x1, x2)

inst_72921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806c000000000000; valaddr_reg:x3; val_offset:218763*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218763*0 + 3*729*FLEN/8, x4, x1, x2)

inst_72922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806e000000000000; valaddr_reg:x3; val_offset:218766*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218766*0 + 3*730*FLEN/8, x4, x1, x2)

inst_72923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806f000000000000; valaddr_reg:x3; val_offset:218769*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218769*0 + 3*731*FLEN/8, x4, x1, x2)

inst_72924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806f800000000000; valaddr_reg:x3; val_offset:218772*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218772*0 + 3*732*FLEN/8, x4, x1, x2)

inst_72925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806fc00000000000; valaddr_reg:x3; val_offset:218775*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218775*0 + 3*733*FLEN/8, x4, x1, x2)

inst_72926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806fe00000000000; valaddr_reg:x3; val_offset:218778*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218778*0 + 3*734*FLEN/8, x4, x1, x2)

inst_72927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806ff00000000000; valaddr_reg:x3; val_offset:218781*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218781*0 + 3*735*FLEN/8, x4, x1, x2)

inst_72928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806ff80000000000; valaddr_reg:x3; val_offset:218784*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218784*0 + 3*736*FLEN/8, x4, x1, x2)

inst_72929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806ffc0000000000; valaddr_reg:x3; val_offset:218787*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218787*0 + 3*737*FLEN/8, x4, x1, x2)

inst_72930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806ffe0000000000; valaddr_reg:x3; val_offset:218790*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218790*0 + 3*738*FLEN/8, x4, x1, x2)

inst_72931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806fff0000000000; valaddr_reg:x3; val_offset:218793*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218793*0 + 3*739*FLEN/8, x4, x1, x2)

inst_72932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806fff8000000000; valaddr_reg:x3; val_offset:218796*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218796*0 + 3*740*FLEN/8, x4, x1, x2)

inst_72933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806fffc000000000; valaddr_reg:x3; val_offset:218799*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218799*0 + 3*741*FLEN/8, x4, x1, x2)

inst_72934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806fffe000000000; valaddr_reg:x3; val_offset:218802*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218802*0 + 3*742*FLEN/8, x4, x1, x2)

inst_72935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806ffff000000000; valaddr_reg:x3; val_offset:218805*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218805*0 + 3*743*FLEN/8, x4, x1, x2)

inst_72936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806ffff800000000; valaddr_reg:x3; val_offset:218808*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218808*0 + 3*744*FLEN/8, x4, x1, x2)

inst_72937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806ffffc00000000; valaddr_reg:x3; val_offset:218811*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218811*0 + 3*745*FLEN/8, x4, x1, x2)

inst_72938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806ffffe00000000; valaddr_reg:x3; val_offset:218814*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218814*0 + 3*746*FLEN/8, x4, x1, x2)

inst_72939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806fffff00000000; valaddr_reg:x3; val_offset:218817*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218817*0 + 3*747*FLEN/8, x4, x1, x2)

inst_72940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806fffff80000000; valaddr_reg:x3; val_offset:218820*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218820*0 + 3*748*FLEN/8, x4, x1, x2)

inst_72941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806fffffc0000000; valaddr_reg:x3; val_offset:218823*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218823*0 + 3*749*FLEN/8, x4, x1, x2)

inst_72942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806fffffe0000000; valaddr_reg:x3; val_offset:218826*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218826*0 + 3*750*FLEN/8, x4, x1, x2)

inst_72943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806ffffff0000000; valaddr_reg:x3; val_offset:218829*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218829*0 + 3*751*FLEN/8, x4, x1, x2)

inst_72944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806ffffff8000000; valaddr_reg:x3; val_offset:218832*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218832*0 + 3*752*FLEN/8, x4, x1, x2)

inst_72945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806ffffffc000000; valaddr_reg:x3; val_offset:218835*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218835*0 + 3*753*FLEN/8, x4, x1, x2)

inst_72946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806ffffffe000000; valaddr_reg:x3; val_offset:218838*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218838*0 + 3*754*FLEN/8, x4, x1, x2)

inst_72947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806fffffff000000; valaddr_reg:x3; val_offset:218841*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218841*0 + 3*755*FLEN/8, x4, x1, x2)

inst_72948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806fffffff800000; valaddr_reg:x3; val_offset:218844*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218844*0 + 3*756*FLEN/8, x4, x1, x2)

inst_72949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806fffffffc00000; valaddr_reg:x3; val_offset:218847*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218847*0 + 3*757*FLEN/8, x4, x1, x2)

inst_72950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806fffffffe00000; valaddr_reg:x3; val_offset:218850*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218850*0 + 3*758*FLEN/8, x4, x1, x2)

inst_72951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806ffffffff00000; valaddr_reg:x3; val_offset:218853*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218853*0 + 3*759*FLEN/8, x4, x1, x2)

inst_72952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806ffffffff80000; valaddr_reg:x3; val_offset:218856*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218856*0 + 3*760*FLEN/8, x4, x1, x2)

inst_72953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806ffffffffc0000; valaddr_reg:x3; val_offset:218859*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218859*0 + 3*761*FLEN/8, x4, x1, x2)

inst_72954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806ffffffffe0000; valaddr_reg:x3; val_offset:218862*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218862*0 + 3*762*FLEN/8, x4, x1, x2)

inst_72955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806fffffffff0000; valaddr_reg:x3; val_offset:218865*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218865*0 + 3*763*FLEN/8, x4, x1, x2)

inst_72956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806fffffffff8000; valaddr_reg:x3; val_offset:218868*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218868*0 + 3*764*FLEN/8, x4, x1, x2)

inst_72957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806fffffffffc000; valaddr_reg:x3; val_offset:218871*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218871*0 + 3*765*FLEN/8, x4, x1, x2)

inst_72958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806fffffffffe000; valaddr_reg:x3; val_offset:218874*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218874*0 + 3*766*FLEN/8, x4, x1, x2)

inst_72959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6cca3acf5b898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6cca3acf5b898; op2val:0x8000;
op3val:0x806ffffffffff000; valaddr_reg:x3; val_offset:218877*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218877*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6892356458363038184,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031256944640,64,FLEN)
NAN_BOXED(6892356458363038184,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031261138944,64,FLEN)
NAN_BOXED(6892356458363038184,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031263236096,64,FLEN)
NAN_BOXED(6892356458363038184,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031264284672,64,FLEN)
NAN_BOXED(6892356458363038184,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031264808960,64,FLEN)
NAN_BOXED(6892356458363038184,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265071104,64,FLEN)
NAN_BOXED(6892356458363038184,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265202176,64,FLEN)
NAN_BOXED(6892356458363038184,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265267712,64,FLEN)
NAN_BOXED(6892356458363038184,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265300480,64,FLEN)
NAN_BOXED(6892356458363038184,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265316864,64,FLEN)
NAN_BOXED(6892356458363038184,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265325056,64,FLEN)
NAN_BOXED(6892356458363038184,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265329152,64,FLEN)
NAN_BOXED(6892356458363038184,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265331200,64,FLEN)
NAN_BOXED(6892356458363038184,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265332224,64,FLEN)
NAN_BOXED(6892356458363038184,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265332736,64,FLEN)
NAN_BOXED(6892356458363038184,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265332992,64,FLEN)
NAN_BOXED(6892356458363038184,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333120,64,FLEN)
NAN_BOXED(6892356458363038184,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333184,64,FLEN)
NAN_BOXED(6892356458363038184,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333216,64,FLEN)
NAN_BOXED(6892356458363038184,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333232,64,FLEN)
NAN_BOXED(6892356458363038184,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333240,64,FLEN)
NAN_BOXED(6892356458363038184,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333244,64,FLEN)
NAN_BOXED(6892356458363038184,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333246,64,FLEN)
NAN_BOXED(6892356458363038184,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333247,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4300937644138823680,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4300937644138823681,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4300937644138823683,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4300937644138823687,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4300937644138823695,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4300937644138823711,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4300937644138823743,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4300937644138823807,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4300937644138823935,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4300937644138824191,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4300937644138824703,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4300937644138825727,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4300937644138827775,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4300937644138831871,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4300937644138840063,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4300937644138856447,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4300937644138889215,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4300937644138954751,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4300937644139085823,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4300937644139347967,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4300937644139872255,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4300937644140920831,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4300937644143017983,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4300937644147212287,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4300937644155600895,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4300937644172378111,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4300937644205932543,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4300937644273041407,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4300937644407259135,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4300937644675694591,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4300937645212565503,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4300937646286307327,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4300937648433790975,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4300937652728758271,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4300937661318692863,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4300937678498562047,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4300937712858300415,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4300937781577777151,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4300937919016730623,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4300938193894637567,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4300938743650451455,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4300939843162079231,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4300942042185334783,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4300946440231845887,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4300955236324868095,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4300972828510912511,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4301008012883001343,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4301078381627179007,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4301219119115534335,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4301500594092244991,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4302063544045666303,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4303189443952508927,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4303189443952508928,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4304315343859351552,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4304878293812772864,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4305159768789483520,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4305300506277838848,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4305370875022016512,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4305406059394105344,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4305423651580149760,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4305432447673171968,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4305436845719683072,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4305439044742938624,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4305440144254566400,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4305440694010380288,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4305440968888287232,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4305441106327240704,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4305441175046717440,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4305441209406455808,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4305441226586324992,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4305441235176259584,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4305441239471226880,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4305441241618710528,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4305441242692452352,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4305441243229323264,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4305441243497758720,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4305441243631976448,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4305441243699085312,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4305441243732639744,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4305441243749416960,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4305441243757805568,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4305441243761999872,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4305441243764097024,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4305441243765145600,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4305441243765669888,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4305441243765932032,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4305441243766063104,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4305441243766128640,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4305441243766161408,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4305441243766177792,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4305441243766185984,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4305441243766190080,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4305441243766192128,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4305441243766193152,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4305441243766193664,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4305441243766193920,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4305441243766194048,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4305441243766194112,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4305441243766194144,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4305441243766194160,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4305441243766194168,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4305441243766194172,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4305441243766194174,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4305441243766194175,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6892389988872218370,64,FLEN)
NAN_BOXED(2321202199016073815,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341248,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341249,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341251,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341255,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341263,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341279,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341311,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341375,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341503,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341759,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524342271,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524343295,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524345343,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524349439,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524357631,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524374015,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524406783,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524472319,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524603391,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524865535,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776525389823,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776526438399,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776528535551,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776532729855,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776541118463,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776557895679,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776591450111,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776658558975,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776792776703,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726777061212159,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726777598083071,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726778671824895,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726780819308543,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726785114275839,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726793704210431,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726810884079615,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726845243817983,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726913963294719,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283727051402248191,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283727326280155135,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283727876035969023,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283728975547596799,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283731174570852351,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283735572617363455,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283744368710385663,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283761960896430079,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283797145268518911,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283867514012696575,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(284008251501051903,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(284289726477762559,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(284852676431183871,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(285978576338026495,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(285978576338026496,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(287104476244869120,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(287667426198290432,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(287948901175001088,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288089638663356416,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288160007407534080,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288195191779622912,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288212783965667328,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288221580058689536,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288225978105200640,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288228177128456192,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288229276640083968,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288229826395897856,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230101273804800,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230238712758272,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230307432235008,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230341791973376,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230358971842560,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230367561777152,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230371856744448,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230374004228096,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230375077969920,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230375614840832,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230375883276288,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376017494016,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376084602880,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376118157312,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376134934528,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376143323136,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376147517440,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376149614592,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376150663168,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151187456,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151449600,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151580672,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151646208,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151678976,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151695360,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151703552,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151707648,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151709696,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151710720,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711232,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711488,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711616,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711680,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711712,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711728,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711736,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711740,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711742,64,FLEN)
NAN_BOXED(6892398623927418526,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711743,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037927936,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037927937,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037927939,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037927943,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037927951,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037927967,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037927999,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037928063,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037928191,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037928447,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037928959,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037929983,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037932031,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037936127,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037944319,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037960703,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037993471,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594038059007,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594038190079,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594038452223,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594038976511,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594040025087,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594042122239,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594046316543,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594054705151,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594071482367,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594105036799,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594172145663,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594306363391,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594574798847,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057595111669759,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057596185411583,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057598332895231,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057602627862527,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057611217797119,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057628397666303,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057662757404671,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057731476881407,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057868915834879,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72058143793741823,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72058693549555711,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72059793061183487,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72061992084439039,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72066390130950143,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72075186223972351,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72092778410016767,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72127962782105599,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72198331526283263,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72339069014638591,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72620543991349247,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(73183493944770559,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(74309393851613183,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(74309393851613184,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(75435293758455808,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(75998243711877120,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76279718688587776,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76420456176943104,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76490824921120768,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76526009293209600,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76543601479254016,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76552397572276224,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76556795618787328,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76558994642042880,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76560094153670656,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76560643909484544,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76560918787391488,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561056226344960,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561124945821696,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561159305560064,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561176485429248,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561185075363840,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561189370331136,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561191517814784,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561192591556608,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193128427520,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193396862976,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193531080704,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193598189568,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193631744000,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193648521216,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193656909824,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193661104128,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193663201280,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193664249856,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193664774144,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665036288,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665167360,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665232896,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665265664,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665282048,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665290240,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665294336,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665296384,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665297408,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665297920,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298176,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298304,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298368,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298400,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298416,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298424,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298428,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298430,64,FLEN)
NAN_BOXED(6892398914821094656,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298431,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967360,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967361,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967363,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967367,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967375,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967391,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967423,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967487,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967615,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967871,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957968383,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957969407,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957971455,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957975551,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957983743,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986958000127,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986958032895,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986958098431,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986958229503,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986958491647,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986959015935,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986960064511,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986962161663,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986966355967,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986974744575,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986991521791,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625987025076223,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625987092185087,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625987226402815,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625987494838271,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625988031709183,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625989105451007,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625991252934655,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625995547901951,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157626004137836543,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157626021317705727,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157626055677444095,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157626124396920831,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157626261835874303,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157626536713781247,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157627086469595135,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157628185981222911,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157630385004478463,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157634783050989567,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157643579144011775,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157661171330056191,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157696355702145023,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157766724446322687,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157907461934678015,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(158188936911388671,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(158751886864809983,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(159877786771652607,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(159877786771652608,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(161003686678495232,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(161566636631916544,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(161848111608627200,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(161988849096982528,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162059217841160192,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162094402213249024,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162111994399293440,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162120790492315648,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162125188538826752,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162127387562082304,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162128487073710080,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129036829523968,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129311707430912,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129449146384384,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129517865861120,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129552225599488,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129569405468672,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129577995403264,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129582290370560,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129584437854208,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129585511596032,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586048466944,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586316902400,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586451120128,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586518228992,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586551783424,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586568560640,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586576949248,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586581143552,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586583240704,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586584289280,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586584813568,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585075712,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585206784,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585272320,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585305088,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585321472,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585329664,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585333760,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585335808,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585336832,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337344,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337600,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337728,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337792,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337824,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337840,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337848,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337852,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337854,64,FLEN)
NAN_BOXED(6892401224357553192,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337855,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4269412446747230208,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4269412446747230209,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4269412446747230211,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4269412446747230215,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4269412446747230223,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4269412446747230239,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4269412446747230271,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4269412446747230335,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4269412446747230463,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4269412446747230719,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4269412446747231231,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4269412446747232255,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4269412446747234303,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4269412446747238399,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4269412446747246591,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4269412446747262975,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4269412446747295743,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4269412446747361279,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4269412446747492351,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4269412446747754495,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4269412446748278783,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4269412446749327359,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4269412446751424511,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4269412446755618815,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4269412446764007423,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4269412446780784639,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4269412446814339071,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4269412446881447935,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4269412447015665663,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4269412447284101119,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4269412447820972031,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4269412448894713855,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4269412451042197503,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4269412455337164799,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4269412463927099391,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4269412481106968575,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4269412515466706943,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4269412584186183679,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4269412721625137151,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4269412996503044095,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4269413546258857983,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4269414645770485759,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4269416844793741311,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4269421242840252415,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4269430038933274623,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4269447631119319039,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4269482815491407871,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4269553184235585535,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4269693921723940863,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4269975396700651519,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4270538346654072831,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4271664246560915455,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4271664246560915456,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4272790146467758080,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4273353096421179392,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4273634571397890048,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4273775308886245376,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4273845677630423040,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4273880862002511872,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4273898454188556288,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4273907250281578496,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4273911648328089600,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4273913847351345152,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4273914946862972928,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4273915496618786816,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4273915771496693760,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4273915908935647232,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4273915977655123968,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4273916012014862336,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4273916029194731520,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4273916037784666112,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4273916042079633408,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4273916044227117056,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4273916045300858880,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4273916045837729792,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4273916046106165248,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4273916046240382976,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4273916046307491840,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4273916046341046272,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4273916046357823488,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4273916046366212096,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4273916046370406400,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4273916046372503552,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4273916046373552128,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4273916046374076416,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4273916046374338560,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4273916046374469632,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4273916046374535168,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4273916046374567936,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4273916046374584320,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4273916046374592512,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4273916046374596608,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4273916046374598656,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4273916046374599680,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4273916046374600192,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4273916046374600448,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4273916046374600576,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4273916046374600640,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4273916046374600672,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4273916046374600688,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4273916046374600696,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4273916046374600700,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4273916046374600702,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4273916046374600703,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6892402094024716028,64,FLEN)
NAN_BOXED(2321190181409900628,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998784,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998785,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998787,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998791,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998799,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998815,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998847,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998911,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618999039,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618999295,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618999807,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619000831,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619002879,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619006975,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619015167,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619031551,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619064319,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619129855,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619260927,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619523071,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634620047359,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634621095935,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634623193087,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634627387391,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634635775999,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634652553215,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634686107647,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634753216511,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634887434239,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393635155869695,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393635692740607,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393636766482431,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393638913966079,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393643208933375,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393651798867967,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393668978737151,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393703338475519,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393772057952255,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393909496905727,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250394184374812671,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250394734130626559,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250395833642254335,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250398032665509887,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250402430712020991,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250411226805043199,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250428818991087615,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250464003363176447,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250534372107354111,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250675109595709439,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250956584572420095,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9251519534525841407,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9252645434432684031,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9252645434432684032,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9253771334339526656,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254334284292947968,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254615759269658624,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254756496758013952,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254826865502191616,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254862049874280448,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254879642060324864,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254888438153347072,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254892836199858176,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254895035223113728,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254896134734741504,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254896684490555392,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254896959368462336,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897096807415808,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897165526892544,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897199886630912,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897217066500096,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897225656434688,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897229951401984,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897232098885632,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897233172627456,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897233709498368,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897233977933824,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234112151552,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234179260416,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234212814848,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234229592064,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234237980672,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234242174976,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234244272128,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234245320704,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234245844992,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246107136,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246238208,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246303744,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246336512,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246352896,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246361088,64,FLEN)
NAN_BOXED(6892421283090643096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246365184,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
