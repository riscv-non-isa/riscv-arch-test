
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:48 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmsub.d_b18 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmsub.d_b18)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:
// rs1 == rs2 == rs3 == rd, rs1==f23, rs2==f23, rs3==f23, rd==f23,fs1 == 0 and fe1 == 0x7f7 and fm1 == 0x3c3264d5f00ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f23; op2:f23; op3:f23; dest:f23; op1val:0x7f73c3264d5f00ff; op2val:0x7f73c3264d5f00ff;
op3val:0x7f73c3264d5f00ff; valaddr_reg:x3; val_offset:0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f23, f23, f23, f23, dyn, 0, 0, x3, 0*FLEN/8, x4, x1, x2)

inst_1:
// rd == rs2 == rs3 != rs1, rs1==f26, rs2==f7, rs3==f7, rd==f7,fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x0197267f1985f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f26; op2:f7; op3:f7; dest:f7; op1val:0x7f90197267f1985f; op2val:0x8000;
op3val:0x8000; valaddr_reg:x3; val_offset:3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f7, f26, f7, f7, dyn, 0, 0, x3, 3*FLEN/8, x4, x1, x2)

inst_2:
// rs1 == rd == rs3 != rs2, rs1==f29, rs2==f20, rs3==f29, rd==f29,fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x2774cd9885b7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f29; op2:f20; op3:f29; dest:f29; op1val:0x7f92774cd9885b7f; op2val:0x8000;
op3val:0x7f92774cd9885b7f; valaddr_reg:x3; val_offset:6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f29, f29, f20, f29, dyn, 0, 0, x3, 6*FLEN/8, x4, x1, x2)

inst_3:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==f20, rs2==f17, rs3==f21, rd==f22,fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x3832e6fea9a3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f20; op2:f17; op3:f21; dest:f22; op1val:0x7f93832e6fea9a3f; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f22, f20, f17, f21, dyn, 0, 0, x3, 9*FLEN/8, x4, x1, x2)

inst_4:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==f2, rs2==f22, rs3==f2, rd==f20,fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x5a7002fc1a6bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f2; op2:f22; op3:f2; dest:f20; op1val:0x7f95a7002fc1a6bf; op2val:0x0;
op3val:0x7f95a7002fc1a6bf; valaddr_reg:x3; val_offset:12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f20, f2, f22, f2, dyn, 0, 0, x3, 12*FLEN/8, x4, x1, x2)

inst_5:
// rs1 == rs2 == rs3 != rd, rs1==f10, rs2==f10, rs3==f10, rd==f1,fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x86e40969ec29f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f10; op2:f10; op3:f10; dest:f1; op1val:0x7f986e40969ec29f; op2val:0x7f986e40969ec29f;
op3val:0x7f986e40969ec29f; valaddr_reg:x3; val_offset:15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f1, f10, f10, f10, dyn, 0, 0, x3, 15*FLEN/8, x4, x1, x2)

inst_6:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==f22, rs2==f0, rs3==f0, rd==f27,fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x942c54f20963f and fs2 == 0 and fe2 == 0x404 and fm2 == 0x444bf05fc8dc2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f22; op2:f0; op3:f0; dest:f27; op1val:0x7f9942c54f20963f; op2val:0x404444bf05fc8dc2;
op3val:0x404444bf05fc8dc2; valaddr_reg:x3; val_offset:18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f27, f22, f0, f0, dyn, 0, 0, x3, 18*FLEN/8, x4, x1, x2)

inst_7:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==f25, rs2==f2, rs3==f11, rd==f2,fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x9f3f7053b60bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f25; op2:f2; op3:f11; dest:f2; op1val:0x7f99f3f7053b60bf; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f2, f25, f2, f11, dyn, 0, 0, x3, 21*FLEN/8, x4, x1, x2)

inst_8:
// rs1 == rs2 == rd != rs3, rs1==f19, rs2==f19, rs3==f26, rd==f19,fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f19; op2:f19; op3:f26; dest:f19; op1val:0x7f9c1a812e98063f; op2val:0x7f9c1a812e98063f;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f19, f19, f19, f26, dyn, 0, 0, x3, 24*FLEN/8, x4, x1, x2)

inst_9:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==f4, rs2==f4, rs3==f15, rd==f9,fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xf8ce1a7792dff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f4; op2:f4; op3:f15; dest:f9; op1val:0x7f9f8ce1a7792dff; op2val:0x7f9f8ce1a7792dff;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f9, f4, f4, f15, dyn, 0, 0, x3, 27*FLEN/8, x4, x1, x2)

inst_10:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==f13, rs2==f14, rs3==f4, rd==f13,fs1 == 0 and fe1 == 0x7fa and fm1 == 0x051aac3a28d5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f13; op2:f14; op3:f4; dest:f13; op1val:0x7fa051aac3a28d5f; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f13, f13, f14, f4, dyn, 0, 0, x3, 30*FLEN/8, x4, x1, x2)

inst_11:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==f21, rs2==f3, rs3==f18, rd==f18,fs1 == 0 and fe1 == 0x7fa and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f21; op2:f3; op3:f18; dest:f18; op1val:0x7fa12e48c86dcddf; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f18, f21, f3, f18, dyn, 0, 0, x3, 33*FLEN/8, x4, x1, x2)

inst_12:
// rs1==f31, rs2==f18, rs3==f20, rd==f8,fs1 == 0 and fe1 == 0x7fa and fm1 == 0x22cfa989fca0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f31; op2:f18; op3:f20; dest:f8; op1val:0x7fa22cfa989fca0f; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f8, f31, f18, f20, dyn, 0, 0, x3, 36*FLEN/8, x4, x1, x2)

inst_13:
// rs1==f15, rs2==f28, rs3==f16, rd==f0,fs1 == 0 and fe1 == 0x7fa and fm1 == 0x264ac77bf010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f15; op2:f28; op3:f16; dest:f0; op1val:0x7fa264ac77bf010f; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f0, f15, f28, f16, dyn, 0, 0, x3, 39*FLEN/8, x4, x1, x2)

inst_14:
// rs1==f28, rs2==f6, rs3==f8, rd==f5,fs1 == 0 and fe1 == 0x7fa and fm1 == 0x291d98044bfbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f28; op2:f6; op3:f8; dest:f5; op1val:0x7fa291d98044bfbf; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f5, f28, f6, f8, dyn, 0, 0, x3, 42*FLEN/8, x4, x1, x2)

inst_15:
// rs1==f11, rs2==f12, rs3==f19, rd==f17,fs1 == 0 and fe1 == 0x7fa and fm1 == 0x61932b2d37baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f11; op2:f12; op3:f19; dest:f17; op1val:0x7fa61932b2d37baf; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f17, f11, f12, f19, dyn, 0, 0, x3, 45*FLEN/8, x4, x1, x2)

inst_16:
// rs1==f24, rs2==f15, rs3==f12, rd==f14,fs1 == 0 and fe1 == 0x7fa and fm1 == 0xa3b70b86976df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f24; op2:f15; op3:f12; dest:f14; op1val:0x7faa3b70b86976df; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f14, f24, f15, f12, dyn, 0, 0, x3, 48*FLEN/8, x4, x1, x2)

inst_17:
// rs1==f27, rs2==f1, rs3==f13, rd==f21,fs1 == 0 and fe1 == 0x7fa and fm1 == 0xcf44d05dc866f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f27; op2:f1; op3:f13; dest:f21; op1val:0x7facf44d05dc866f; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f21, f27, f1, f13, dyn, 0, 0, x3, 51*FLEN/8, x4, x1, x2)

inst_18:
// rs1==f18, rs2==f21, rs3==f24, rd==f30,fs1 == 0 and fe1 == 0x7fa and fm1 == 0xd126610309c1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f18; op2:f21; op3:f24; dest:f30; op1val:0x7fad126610309c1f; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f30, f18, f21, f24, dyn, 0, 0, x3, 54*FLEN/8, x4, x1, x2)

inst_19:
// rs1==f9, rs2==f5, rs3==f31, rd==f15,fs1 == 0 and fe1 == 0x7fa and fm1 == 0xe15a564c336ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f9; op2:f5; op3:f31; dest:f15; op1val:0x7fae15a564c336ef; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f15, f9, f5, f31, dyn, 0, 0, x3, 57*FLEN/8, x4, x1, x2)

inst_20:
// rs1==f12, rs2==f27, rs3==f3, rd==f28,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x11c62f98de3bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f12; op2:f27; op3:f3; dest:f28; op1val:0x7fb11c62f98de3bf; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f28, f12, f27, f3, dyn, 0, 0, x3, 60*FLEN/8, x4, x1, x2)

inst_21:
// rs1==f7, rs2==f16, rs3==f17, rd==f6,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x2e3db402ba61f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f7; op2:f16; op3:f17; dest:f6; op1val:0x7fb2e3db402ba61f; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f6, f7, f16, f17, dyn, 0, 0, x3, 63*FLEN/8, x4, x1, x2)

inst_22:
// rs1==f5, rs2==f30, rs3==f25, rd==f10,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x34bccd918d207 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f5; op2:f30; op3:f25; dest:f10; op1val:0x7fb34bccd918d207; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f10, f5, f30, f25, dyn, 0, 0, x3, 66*FLEN/8, x4, x1, x2)

inst_23:
// rs1==f6, rs2==f29, rs3==f9, rd==f3,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x398aa070366df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f6; op2:f29; op3:f9; dest:f3; op1val:0x7fb398aa070366df; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f3, f6, f29, f9, dyn, 0, 0, x3, 69*FLEN/8, x4, x1, x2)

inst_24:
// rs1==f30, rs2==f9, rs3==f5, rd==f11,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x8d766d9988549 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f9; op3:f5; dest:f11; op1val:0x7fb49c59b3bab527; op2val:0x4028d766d9988549;
op3val:0x7fefffffffffffff; valaddr_reg:x3; val_offset:72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f11, f30, f9, f5, dyn, 0, 0, x3, 72*FLEN/8, x4, x1, x2)

inst_25:
// rs1==f3, rs2==f11, rs3==f22, rd==f16,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x5392483afe847 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f3; op2:f11; op3:f22; dest:f16; op1val:0x7fb5392483afe847; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f16, f3, f11, f22, dyn, 0, 0, x3, 75*FLEN/8, x4, x1, x2)

inst_26:
// rs1==f8, rs2==f31, rs3==f6, rd==f4,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f8; op2:f31; op3:f6; dest:f4; op1val:0x7fb5ba2bcb8dc85f; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f4, f8, f31, f6, dyn, 0, 0, x3, 78*FLEN/8, x4, x1, x2)

inst_27:
// rs1==f0, rs2==f25, rs3==f27, rd==f31,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f0; op2:f25; op3:f27; dest:f31; op1val:0x7fb60de25d29e92f; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f0, f25, f27, dyn, 0, 0, x3, 81*FLEN/8, x4, x1, x2)

inst_28:
// rs1==f17, rs2==f8, rs3==f28, rd==f26,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f17; op2:f8; op3:f28; dest:f26; op1val:0x7fb802693539b05f; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f26, f17, f8, f28, dyn, 0, 0, x3, 84*FLEN/8, x4, x1, x2)

inst_29:
// rs1==f16, rs2==f13, rs3==f1, rd==f24,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f16; op2:f13; op3:f1; dest:f24; op1val:0x7fb88b104e822b8f; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f24, f16, f13, f1, dyn, 0, 0, x3, 87*FLEN/8, x4, x1, x2)

inst_30:
// rs1==f14, rs2==f24, rs3==f30, rd==f25,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f14; op2:f24; op3:f30; dest:f25; op1val:0x7fb89000c246f107; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f25, f14, f24, f30, dyn, 0, 0, x3, 90*FLEN/8, x4, x1, x2)

inst_31:
// rs1==f1, rs2==f26, rs3==f14, rd==f12,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x98abaa0a23757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f1; op2:f26; op3:f14; dest:f12; op1val:0x7fb98abaa0a23757; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f12, f1, f26, f14, dyn, 0, 0, x3, 93*FLEN/8, x4, x1, x2)

inst_32:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x9e5bea35c4b97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fb9e5bea35c4b97; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96*FLEN/8, x4, x1, x2)

inst_33:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fba1fe3e0c64717; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99*FLEN/8, x4, x1, x2)

inst_34:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xb343f5823cc17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fbb343f5823cc17; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102*FLEN/8, x4, x1, x2)

inst_35:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xc75f67062f96f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fbc75f67062f96f; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105*FLEN/8, x4, x1, x2)

inst_36:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xcf5192927214f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fbcf5192927214f; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108*FLEN/8, x4, x1, x2)

inst_37:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xf29a9c82218e7 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x06e0c3619b0dc and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fbf29a9c82218e7; op2val:0x40206e0c3619b0dc;
op3val:0x7fefffffffffffff; valaddr_reg:x3; val_offset:111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111*FLEN/8, x4, x1, x2)

inst_38:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xf2c5343ef46b7 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x06ca508af30d6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fbf2c5343ef46b7; op2val:0x40206ca508af30d6;
op3val:0x7feffffffffffffe; valaddr_reg:x3; val_offset:114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114*FLEN/8, x4, x1, x2)

inst_39:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x0531d684ae65b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fc0531d684ae65b; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117*FLEN/8, x4, x1, x2)

inst_40:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x0732dff952787 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fc0732dff952787; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120*FLEN/8, x4, x1, x2)

inst_41:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fc17f4cd829a48b; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123*FLEN/8, x4, x1, x2)

inst_42:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x1fe2d6aba9e77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fc1fe2d6aba9e77; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126*FLEN/8, x4, x1, x2)

inst_43:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fc26900fdfdb837; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 129*FLEN/8, x4, x1, x2)

inst_44:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fc2c08bdce69f77; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132*FLEN/8, x4, x1, x2)

inst_45:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x361bbef8877ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fc361bbef8877ab; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135*FLEN/8, x4, x1, x2)

inst_46:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x41c73bbc1b00b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fc41c73bbc1b00b; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138*FLEN/8, x4, x1, x2)

inst_47:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fc445e3cffed91f; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141*FLEN/8, x4, x1, x2)

inst_48:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fc4a10e22bb3b33; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144*FLEN/8, x4, x1, x2)

inst_49:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fc4a1b2df4767ef; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147*FLEN/8, x4, x1, x2)

inst_50:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x541c57e06f28f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fc541c57e06f28f; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150*FLEN/8, x4, x1, x2)

inst_51:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x6003243fdf57b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fc6003243fdf57b; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153*FLEN/8, x4, x1, x2)

inst_52:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x73261febad82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fc73261febad82f; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156*FLEN/8, x4, x1, x2)

inst_53:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x743ea0c02659b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fc743ea0c02659b; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159*FLEN/8, x4, x1, x2)

inst_54:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x746a5cfec3f67 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fc746a5cfec3f67; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162*FLEN/8, x4, x1, x2)

inst_55:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x784c0d85e9517 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fc784c0d85e9517; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165*FLEN/8, x4, x1, x2)

inst_56:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x87fe27ff3fe2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fc87fe27ff3fe2f; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168*FLEN/8, x4, x1, x2)

inst_57:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fc89f3951da2feb; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171*FLEN/8, x4, x1, x2)

inst_58:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xa99cbb7d28f8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fca99cbb7d28f8f; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174*FLEN/8, x4, x1, x2)

inst_59:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xaa7d58e3b9047 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fcaa7d58e3b9047; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177*FLEN/8, x4, x1, x2)

inst_60:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xaf0f94f18e857 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fcaf0f94f18e857; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180*FLEN/8, x4, x1, x2)

inst_61:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xb318d9af479ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fcb318d9af479ef; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183*FLEN/8, x4, x1, x2)

inst_62:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xbd23e70641b4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fcbd23e70641b4b; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186*FLEN/8, x4, x1, x2)

inst_63:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc644d9f0caeeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fcc644d9f0caeeb; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189*FLEN/8, x4, x1, x2)

inst_64:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xcde16617ec93f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fccde16617ec93f; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192*FLEN/8, x4, x1, x2)

inst_65:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xd01c53aeb6daf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fcd01c53aeb6daf; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195*FLEN/8, x4, x1, x2)

inst_66:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xda2a011aeffab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fcda2a011aeffab; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198*FLEN/8, x4, x1, x2)

inst_67:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xda5f722809cc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fcda5f722809cc7; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201*FLEN/8, x4, x1, x2)

inst_68:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xdc1b3eb6c004b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fcdc1b3eb6c004b; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204*FLEN/8, x4, x1, x2)

inst_69:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe394ab3b08c6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fce394ab3b08c6b; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207*FLEN/8, x4, x1, x2)

inst_70:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xed4ae61a16dab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fced4ae61a16dab; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210*FLEN/8, x4, x1, x2)

inst_71:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xf56a77d322a6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fcf56a77d322a6f; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213*FLEN/8, x4, x1, x2)

inst_72:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x00ccac0a4b811 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd00ccac0a4b811; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216*FLEN/8, x4, x1, x2)

inst_73:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x05d39d105b541 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd05d39d105b541; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219*FLEN/8, x4, x1, x2)

inst_74:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x06c495d79fae9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd06c495d79fae9; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222*FLEN/8, x4, x1, x2)

inst_75:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x095092a183e33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd095092a183e33; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225*FLEN/8, x4, x1, x2)

inst_76:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x09a18dc6373ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd09a18dc6373ff; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228*FLEN/8, x4, x1, x2)

inst_77:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd1292a3e2f1241; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231*FLEN/8, x4, x1, x2)

inst_78:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd12adb3735ac6d; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234*FLEN/8, x4, x1, x2)

inst_79:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd1365a93dfa50f; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237*FLEN/8, x4, x1, x2)

inst_80:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x17a774cbbcd5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd17a774cbbcd5f; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240*FLEN/8, x4, x1, x2)

inst_81:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x232f190317157 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd232f190317157; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243*FLEN/8, x4, x1, x2)

inst_82:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x2887dc585eda5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd2887dc585eda5; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246*FLEN/8, x4, x1, x2)

inst_83:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x2fe2d0b2849b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd2fe2d0b2849b1; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249*FLEN/8, x4, x1, x2)

inst_84:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3943b61964e33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd3943b61964e33; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252*FLEN/8, x4, x1, x2)

inst_85:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3b881fa033e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd3b881fa033e19; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:255*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255*FLEN/8, x4, x1, x2)

inst_86:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3cfe1da6d26d5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd3cfe1da6d26d5; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258*FLEN/8, x4, x1, x2)

inst_87:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3d28d4c48c5b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd3d28d4c48c5b3; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261*FLEN/8, x4, x1, x2)

inst_88:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3f541e5d8f1c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd3f541e5d8f1c1; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264*FLEN/8, x4, x1, x2)

inst_89:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x43e5b36b50bcd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd43e5b36b50bcd; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267*FLEN/8, x4, x1, x2)

inst_90:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x461bb8f43127b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd461bb8f43127b; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270*FLEN/8, x4, x1, x2)

inst_91:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x4c7591e8478db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd4c7591e8478db; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273*FLEN/8, x4, x1, x2)

inst_92:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x4cf244963827f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd4cf244963827f; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276*FLEN/8, x4, x1, x2)

inst_93:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x594e913e8fb89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd594e913e8fb89; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279*FLEN/8, x4, x1, x2)

inst_94:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x60763a781f969 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd60763a781f969; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282*FLEN/8, x4, x1, x2)

inst_95:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6a47222e524ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd6a47222e524ad; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285*FLEN/8, x4, x1, x2)

inst_96:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6a6b1b54b21cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd6a6b1b54b21cf; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288*FLEN/8, x4, x1, x2)

inst_97:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6c9a44168b923 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd6c9a44168b923; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291*FLEN/8, x4, x1, x2)

inst_98:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6e2aa97ad4287 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd6e2aa97ad4287; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294*FLEN/8, x4, x1, x2)

inst_99:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x730db0ae1ba39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd730db0ae1ba39; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297*FLEN/8, x4, x1, x2)

inst_100:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x76f8ee027e6a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd76f8ee027e6a3; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300*FLEN/8, x4, x1, x2)

inst_101:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7d28ffa77589f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd7d28ffa77589f; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 303*FLEN/8, x4, x1, x2)

inst_102:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7dda0ca725279 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd7dda0ca725279; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 306*FLEN/8, x4, x1, x2)

inst_103:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8522a1b638e23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd8522a1b638e23; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 309*FLEN/8, x4, x1, x2)

inst_104:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8ad1c84b735e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd8ad1c84b735e1; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 312*FLEN/8, x4, x1, x2)

inst_105:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x46b691d85ed50 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd912f07dba36b5; op2val:0x40046b691d85ed50;
op3val:0x7fefffffffffffff; valaddr_reg:x3; val_offset:315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 315*FLEN/8, x4, x1, x2)

inst_106:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x9262273e53737 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd9262273e53737; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 318*FLEN/8, x4, x1, x2)

inst_107:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x92fa0166dea3d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd92fa0166dea3d; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 321*FLEN/8, x4, x1, x2)

inst_108:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x948609719fe17 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x4404064c838b4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd948609719fe17; op2val:0x4004404064c838b4;
op3val:0x7feffffffffffffe; valaddr_reg:x3; val_offset:324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 324*FLEN/8, x4, x1, x2)

inst_109:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fda2892d94829ad; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 327*FLEN/8, x4, x1, x2)

inst_110:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fda487d2d192e03; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 330*FLEN/8, x4, x1, x2)

inst_111:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xaac53df2f85fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fdaac53df2f85fd; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 333*FLEN/8, x4, x1, x2)

inst_112:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xac0c7cf6e58fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fdac0c7cf6e58fb; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 336*FLEN/8, x4, x1, x2)

inst_113:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fdadd465d39fd03; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 339*FLEN/8, x4, x1, x2)

inst_114:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb11152f2f09c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fdb11152f2f09c5; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 342*FLEN/8, x4, x1, x2)

inst_115:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fdb12b5923ada87; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 345*FLEN/8, x4, x1, x2)

inst_116:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fdb5eae2d90a071; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 348*FLEN/8, x4, x1, x2)

inst_117:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fdb9017651b96db; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 351*FLEN/8, x4, x1, x2)

inst_118:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fdbc24bb367a06b; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 354*FLEN/8, x4, x1, x2)

inst_119:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc75ec5096a027 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fdc75ec5096a027; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 357*FLEN/8, x4, x1, x2)

inst_120:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc787db4043bd9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fdc787db4043bd9; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 360*FLEN/8, x4, x1, x2)

inst_121:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xca91d064ea98b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fdca91d064ea98b; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 363*FLEN/8, x4, x1, x2)

inst_122:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xcb6bc2c697a91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fdcb6bc2c697a91; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 366*FLEN/8, x4, x1, x2)

inst_123:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xce41f387adc6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fdce41f387adc6f; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 369*FLEN/8, x4, x1, x2)

inst_124:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fdd4012b921b92d; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 372*FLEN/8, x4, x1, x2)

inst_125:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd81392ace6303 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fdd81392ace6303; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 375*FLEN/8, x4, x1, x2)

inst_126:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd87aff53d41f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fdd87aff53d41f5; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 378*FLEN/8, x4, x1, x2)

inst_127:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xda577e11e08d7 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x1452efa7a9aec and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fdda577e11e08d7; op2val:0x4001452efa7a9aec;
op3val:0x7feffffffffffffe; valaddr_reg:x3; val_offset:381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 381*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_128:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xdb8c7d3a18027 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fddb8c7d3a18027; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 384*FLEN/8, x4, x1, x2)

inst_129:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xdc0d22f746bf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fddc0d22f746bf5; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 387*FLEN/8, x4, x1, x2)

inst_130:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe4204ffab96f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fde4204ffab96f7; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 390*FLEN/8, x4, x1, x2)

inst_131:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe9055e5c1a1c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fde9055e5c1a1c1; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 393*FLEN/8, x4, x1, x2)

inst_132:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fdf1860e3b4eb81; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 396*FLEN/8, x4, x1, x2)

inst_133:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fdf2498354565a7; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 399*FLEN/8, x4, x1, x2)

inst_134:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fdf4853a4c5bef9; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 402*FLEN/8, x4, x1, x2)

inst_135:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fdf5c635a3b99f3; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 405*FLEN/8, x4, x1, x2)

inst_136:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fdfde67aa537639; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 408*FLEN/8, x4, x1, x2)

inst_137:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x006e3d60fc2f8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe006e3d60fc2f8; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 411*FLEN/8, x4, x1, x2)

inst_138:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x022ce6a3fae64 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe022ce6a3fae64; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 414*FLEN/8, x4, x1, x2)

inst_139:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x043a8c3aa6439 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe043a8c3aa6439; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 417*FLEN/8, x4, x1, x2)

inst_140:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x053c0f57052f0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe053c0f57052f0; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 420*FLEN/8, x4, x1, x2)

inst_141:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe05e381015d598; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 423*FLEN/8, x4, x1, x2)

inst_142:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0616a9d776586 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe0616a9d776586; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 426*FLEN/8, x4, x1, x2)

inst_143:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe07943814fd4f4; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 429*FLEN/8, x4, x1, x2)

inst_144:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x09163be078882 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe09163be078882; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 432*FLEN/8, x4, x1, x2)

inst_145:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe09d5da3d7b9db; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 435*FLEN/8, x4, x1, x2)

inst_146:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0a9df4ead8eb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe0a9df4ead8eb3; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 438*FLEN/8, x4, x1, x2)

inst_147:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0b731e88bc69f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe0b731e88bc69f; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 441*FLEN/8, x4, x1, x2)

inst_148:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0cd5422534b0d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe0cd5422534b0d; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 444*FLEN/8, x4, x1, x2)

inst_149:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0d2f778a86fa6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe0d2f778a86fa6; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 447*FLEN/8, x4, x1, x2)

inst_150:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0d68c4b00b1ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe0d68c4b00b1ad; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 450*FLEN/8, x4, x1, x2)

inst_151:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0d77af376928b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe0d77af376928b; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 453*FLEN/8, x4, x1, x2)

inst_152:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0f8ac8cffe63e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe0f8ac8cffe63e; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 456*FLEN/8, x4, x1, x2)

inst_153:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x169e5fbbe2b33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe169e5fbbe2b33; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 459*FLEN/8, x4, x1, x2)

inst_154:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1daba37d60414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe1daba37d60414; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 462*FLEN/8, x4, x1, x2)

inst_155:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe1efb36cb5b1e4; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 465*FLEN/8, x4, x1, x2)

inst_156:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe22aa3d2e74e72; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 468*FLEN/8, x4, x1, x2)

inst_157:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x24a28f97e5b1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe24a28f97e5b1f; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 471*FLEN/8, x4, x1, x2)

inst_158:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe2982d565d88fc; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 474*FLEN/8, x4, x1, x2)

inst_159:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe299392ab99898; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 477*FLEN/8, x4, x1, x2)

inst_160:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe2b7f5031fce17; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 480*FLEN/8, x4, x1, x2)

inst_161:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe2bfb292e944a1; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 483*FLEN/8, x4, x1, x2)

inst_162:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2d0716da06e3c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe2d0716da06e3c; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 486*FLEN/8, x4, x1, x2)

inst_163:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe2d6ffe274482f; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 489*FLEN/8, x4, x1, x2)

inst_164:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2eb6a94e9ae19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe2eb6a94e9ae19; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 492*FLEN/8, x4, x1, x2)

inst_165:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe363e504d94fe2; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 495*FLEN/8, x4, x1, x2)

inst_166:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe364fd8fe1fae1; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 498*FLEN/8, x4, x1, x2)

inst_167:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe36aeb78249790; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 501*FLEN/8, x4, x1, x2)

inst_168:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3894cf9774745 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe3894cf9774745; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 504*FLEN/8, x4, x1, x2)

inst_169:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3b00ab682d289 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe3b00ab682d289; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 507*FLEN/8, x4, x1, x2)

inst_170:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3f1c99f873d3c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe3f1c99f873d3c; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 510*FLEN/8, x4, x1, x2)

inst_171:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3f926e32a94e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe3f926e32a94e1; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 513*FLEN/8, x4, x1, x2)

inst_172:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe4528a44ed36fb; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 516*FLEN/8, x4, x1, x2)

inst_173:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x48300cd907da9 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x8f619725da69b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe48300cd907da9; op2val:0x3ff8f619725da69b;
op3val:0x7fefffffffffffff; valaddr_reg:x3; val_offset:519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 519*FLEN/8, x4, x1, x2)

inst_174:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x48949a9851f6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe48949a9851f6d; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 522*FLEN/8, x4, x1, x2)

inst_175:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4bd16a0267938 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe4bd16a0267938; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 525*FLEN/8, x4, x1, x2)

inst_176:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4d8630276966c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe4d8630276966c; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 528*FLEN/8, x4, x1, x2)

inst_177:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4e4a35c32157e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe4e4a35c32157e; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 531*FLEN/8, x4, x1, x2)

inst_178:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x517d601e1a9d8 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x845f8f359b61a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe517d601e1a9d8; op2val:0x3ff845f8f359b61a;
op3val:0x7fefffffffffffff; valaddr_reg:x3; val_offset:534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 534*FLEN/8, x4, x1, x2)

inst_179:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x52581cebfe497 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe52581cebfe497; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 537*FLEN/8, x4, x1, x2)

inst_180:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x56e6e736a538e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe56e6e736a538e; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 540*FLEN/8, x4, x1, x2)

inst_181:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe585b5334d3411; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 543*FLEN/8, x4, x1, x2)

inst_182:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5874b6418015b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe5874b6418015b; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 546*FLEN/8, x4, x1, x2)

inst_183:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe59556723d53e2; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 549*FLEN/8, x4, x1, x2)

inst_184:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe5bb8442cbfc28; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 552*FLEN/8, x4, x1, x2)

inst_185:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5ee10a5a625fc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe5ee10a5a625fc; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 555*FLEN/8, x4, x1, x2)

inst_186:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x620bb0401fb92 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe620bb0401fb92; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 558*FLEN/8, x4, x1, x2)

inst_187:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x7197fb1078d83 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe62a35ac6bee41; op2val:0x3ff7197fb1078d83;
op3val:0x7fefffffffffffff; valaddr_reg:x3; val_offset:561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 561*FLEN/8, x4, x1, x2)

inst_188:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe662e40f571128; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 564*FLEN/8, x4, x1, x2)

inst_189:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6922ff89d2373 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe6922ff89d2373; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 567*FLEN/8, x4, x1, x2)

inst_190:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6993ceb530371 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe6993ceb530371; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 570*FLEN/8, x4, x1, x2)

inst_191:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6b435c9707703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe6b435c9707703; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 573*FLEN/8, x4, x1, x2)

inst_192:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6e28422f450fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe6e28422f450fd; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 576*FLEN/8, x4, x1, x2)

inst_193:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6f1586709a287 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe6f1586709a287; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 579*FLEN/8, x4, x1, x2)

inst_194:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x722ea3b70e3d3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe722ea3b70e3d3; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 582*FLEN/8, x4, x1, x2)

inst_195:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7270fced2be29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe7270fced2be29; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 585*FLEN/8, x4, x1, x2)

inst_196:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7291f0459edd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe7291f0459edd6; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 588*FLEN/8, x4, x1, x2)

inst_197:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x72925e5d38221 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe72925e5d38221; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 591*FLEN/8, x4, x1, x2)

inst_198:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x73afa00089fb9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe73afa00089fb9; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 594*FLEN/8, x4, x1, x2)

inst_199:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7536733396cf8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe7536733396cf8; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 597*FLEN/8, x4, x1, x2)

inst_200:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7576ff7acad59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe7576ff7acad59; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 600*FLEN/8, x4, x1, x2)

inst_201:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe78037fa19f977; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 603*FLEN/8, x4, x1, x2)

inst_202:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe78d10ef3c608a; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 606*FLEN/8, x4, x1, x2)

inst_203:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7ada4a02edef8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe7ada4a02edef8; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 609*FLEN/8, x4, x1, x2)

inst_204:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7c23aaefd9f67 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe7c23aaefd9f67; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 612*FLEN/8, x4, x1, x2)

inst_205:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7d542946cb465 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe7d542946cb465; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 615*FLEN/8, x4, x1, x2)

inst_206:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x81d54dd6137b5 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x53b627ff3cd41 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe81d54dd6137b5; op2val:0x3ff53b627ff3cd41;
op3val:0x7fefffffffffffff; valaddr_reg:x3; val_offset:618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 618*FLEN/8, x4, x1, x2)

inst_207:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x820cd259975cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe820cd259975cf; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 621*FLEN/8, x4, x1, x2)

inst_208:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x828d471f63750 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe828d471f63750; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 624*FLEN/8, x4, x1, x2)

inst_209:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x82e62659b7f9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe82e62659b7f9b; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 627*FLEN/8, x4, x1, x2)

inst_210:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe8698ed174ff65; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 630*FLEN/8, x4, x1, x2)

inst_211:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x882d3626badfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe882d3626badfd; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 633*FLEN/8, x4, x1, x2)

inst_212:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4961eaabdb7c7 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe8deeb902c377e; op2val:0x3ff4961eaabdb7c7;
op3val:0x7feffffffffffffe; valaddr_reg:x3; val_offset:636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 636*FLEN/8, x4, x1, x2)

inst_213:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe9459cd65fbaac; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 639*FLEN/8, x4, x1, x2)

inst_214:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe97f0ea9a89f82; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 642*FLEN/8, x4, x1, x2)

inst_215:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x98f219d7fe90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe98f219d7fe90f; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 645*FLEN/8, x4, x1, x2)

inst_216:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x99b4caa7ee21f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe99b4caa7ee21f; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 648*FLEN/8, x4, x1, x2)

inst_217:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9af59f9eb5168 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe9af59f9eb5168; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 651*FLEN/8, x4, x1, x2)

inst_218:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9bd3c29ad0568 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe9bd3c29ad0568; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 654*FLEN/8, x4, x1, x2)

inst_219:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa06ffc7be6dae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fea06ffc7be6dae; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 657*FLEN/8, x4, x1, x2)

inst_220:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fea2bda964d91ae; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 660*FLEN/8, x4, x1, x2)

inst_221:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa40b77d5da767 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fea40b77d5da767; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 663*FLEN/8, x4, x1, x2)

inst_222:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa9bd93f2f534e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fea9bd93f2f534e; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 666*FLEN/8, x4, x1, x2)

inst_223:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xabc6824ad2440 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7feabc6824ad2440; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 669*FLEN/8, x4, x1, x2)

inst_224:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xac08ec2b88c86 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7feac08ec2b88c86; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 672*FLEN/8, x4, x1, x2)

inst_225:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7feae64a7b19f21e; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 675*FLEN/8, x4, x1, x2)

inst_226:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb33c7d55682c1 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x2d26bf8be5ad6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7feb33c7d55682c1; op2val:0x3ff2d26bf8be5ad6;
op3val:0x7feffffffffffffe; valaddr_reg:x3; val_offset:678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 678*FLEN/8, x4, x1, x2)

inst_227:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb5380491038ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7feb5380491038ac; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 681*FLEN/8, x4, x1, x2)

inst_228:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb9927e27c836d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7feb9927e27c836d; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 684*FLEN/8, x4, x1, x2)

inst_229:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xbfe0f0fcad936 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7febfe0f0fcad936; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 687*FLEN/8, x4, x1, x2)

inst_230:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc04060fa9d235 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fec04060fa9d235; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 690*FLEN/8, x4, x1, x2)

inst_231:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc2db9cc3dd583 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fec2db9cc3dd583; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 693*FLEN/8, x4, x1, x2)

inst_232:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc405091d199ee and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fec405091d199ee; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 696*FLEN/8, x4, x1, x2)

inst_233:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fec898a0b894837; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 699*FLEN/8, x4, x1, x2)

inst_234:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fec982355c85538; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 702*FLEN/8, x4, x1, x2)

inst_235:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7feca7f05ab9b50e; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 705*FLEN/8, x4, x1, x2)

inst_236:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fecca58e39cda56; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 708*FLEN/8, x4, x1, x2)

inst_237:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcdd59610e46da and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fecdd59610e46da; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 711*FLEN/8, x4, x1, x2)

inst_238:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fed028fbb0ac708; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 714*FLEN/8, x4, x1, x2)

inst_239:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fed02d0afa24812; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 717*FLEN/8, x4, x1, x2)

inst_240:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd0b7f9b429ef3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fed0b7f9b429ef3; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 720*FLEN/8, x4, x1, x2)

inst_241:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fed0dd93a77236c; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 723*FLEN/8, x4, x1, x2)

inst_242:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd2a01d9eb47d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fed2a01d9eb47d0; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 726*FLEN/8, x4, x1, x2)

inst_243:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd65025c565597 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fed65025c565597; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 729*FLEN/8, x4, x1, x2)

inst_244:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd7358d23af6fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fed7358d23af6fe; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 732*FLEN/8, x4, x1, x2)

inst_245:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd7c8570796fe8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fed7c8570796fe8; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 735*FLEN/8, x4, x1, x2)

inst_246:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd98396dfe04dc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fed98396dfe04dc; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 738*FLEN/8, x4, x1, x2)

inst_247:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xdd3629df7eeb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fedd3629df7eeb5; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 741*FLEN/8, x4, x1, x2)

inst_248:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xde465442027aa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fede465442027aa; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 744*FLEN/8, x4, x1, x2)

inst_249:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xde497aebca743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fede497aebca743; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 747*FLEN/8, x4, x1, x2)

inst_250:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xdedbc42e4ee38 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fededbc42e4ee38; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 750*FLEN/8, x4, x1, x2)

inst_251:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe549a4f656ebe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fee549a4f656ebe; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 753*FLEN/8, x4, x1, x2)

inst_252:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fee61729d7cfd5e; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 756*FLEN/8, x4, x1, x2)

inst_253:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe8bc5f44515f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fee8bc5f44515f5; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 759*FLEN/8, x4, x1, x2)

inst_254:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fee8ce066e96229; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 762*FLEN/8, x4, x1, x2)

inst_255:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fee97d52f73d2ed; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 765*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_256:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xea2b5073270ea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7feea2b5073270ea; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:768*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 768*FLEN/8, x4, x1, x2)

inst_257:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0ac23e5ea5f16 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7feeb59ad8d9191d; op2val:0x3ff0ac23e5ea5f16;
op3val:0x7feffffffffffffe; valaddr_reg:x3; val_offset:771*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 771*FLEN/8, x4, x1, x2)

inst_258:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7feeb61e2d5d3c7a; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:774*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 774*FLEN/8, x4, x1, x2)

inst_259:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7feec7e479c877a7; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:777*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 777*FLEN/8, x4, x1, x2)

inst_260:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xed1da04d72f12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7feed1da04d72f12; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:780*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 780*FLEN/8, x4, x1, x2)

inst_261:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fef6428fb6f94fe; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:783*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 783*FLEN/8, x4, x1, x2)

inst_262:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fef788de2d51675; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:786*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 786*FLEN/8, x4, x1, x2)

inst_263:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fef79012fbad378; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:789*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 789*FLEN/8, x4, x1, x2)

inst_264:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfa2ea1f3d3ef9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fefa2ea1f3d3ef9; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:792*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 792*FLEN/8, x4, x1, x2)

inst_265:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfae17b8fdc65b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fefae17b8fdc65b; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:795*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 795*FLEN/8, x4, x1, x2)

inst_266:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfd32694fcaecb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fefd32694fcaecb; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:798*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 798*FLEN/8, x4, x1, x2)

inst_267:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfd58fd60948f9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fefd58fd60948f9; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:801*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 801*FLEN/8, x4, x1, x2)

inst_268:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfed8d422e59b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fefed8d422e59b9; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:804*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 804*FLEN/8, x4, x1, x2)

inst_269:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xff5373e0e112c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7feff5373e0e112c; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:807*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 807*FLEN/8, x4, x1, x2)

inst_270:
// fs1 == 0 and fe1 == 0x7f7 and fm1 == 0x3c3264d5f00ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f73c3264d5f00ff; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:810*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 810*FLEN/8, x4, x1, x2)

inst_271:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x0197267f1985f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f90197267f1985f; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:813*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 813*FLEN/8, x4, x1, x2)

inst_272:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x2774cd9885b7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f92774cd9885b7f; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:816*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 816*FLEN/8, x4, x1, x2)

inst_273:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x5a7002fc1a6bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f95a7002fc1a6bf; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:819*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 819*FLEN/8, x4, x1, x2)

inst_274:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x86e40969ec29f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f986e40969ec29f; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:822*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 822*FLEN/8, x4, x1, x2)

inst_275:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x942c54f20963f and fs2 == 0 and fe2 == 0x404 and fm2 == 0x444bf05fc8dc2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f9942c54f20963f; op2val:0x404444bf05fc8dc2;
op3val:0x7feffffffffffffe; valaddr_reg:x3; val_offset:825*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 825*FLEN/8, x4, x1, x2)

inst_276:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x9f3f7053b60bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f99f3f7053b60bf; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:828*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 828*FLEN/8, x4, x1, x2)

inst_277:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f9c1a812e98063f; op2val:0x0;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:831*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 831*FLEN/8, x4, x1, x2)

inst_278:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xf8ce1a7792dff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f9f8ce1a7792dff; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:834*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 834*FLEN/8, x4, x1, x2)

inst_279:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x051aac3a28d5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fa051aac3a28d5f; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:837*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 837*FLEN/8, x4, x1, x2)

inst_280:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fa12e48c86dcddf; op2val:0x8000;
op3val:0xc637ffff00000000; valaddr_reg:x3; val_offset:840*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 840*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(9183898634412818687,64,FLEN)
NAN_BOXED(9183898634412818687,64,FLEN)
NAN_BOXED(9183898634412818687,64,FLEN)
NAN_BOXED(9191874818624034911,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9192540961367415679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9192540961367415679,64,FLEN)
NAN_BOXED(9192835499862694463,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9193437833589794495,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9193437833589794495,64,FLEN)
NAN_BOXED(9194219862960816799,64,FLEN)
NAN_BOXED(9194219862960816799,64,FLEN)
NAN_BOXED(9194219862960816799,64,FLEN)
NAN_BOXED(9194453529457104447,64,FLEN)
NAN_BOXED(4630901904073592258,64,FLEN)
NAN_BOXED(4630901904073592258,64,FLEN)
NAN_BOXED(9194648356523827391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9195253681318528575,64,FLEN)
NAN_BOXED(9195253681318528575,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9196223864919109119,64,FLEN)
NAN_BOXED(9196223864919109119,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9196440232959053151,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9196682804202425823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9196962843858029071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9197024080950133007,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9197073752389894079,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9198066994490080175,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9199230544173954783,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9199996750459078255,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9200029843355376671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9200314888868804335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9201166725113832383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9201667519485290015,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9201781806835749383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9201866319677581023,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9202151847706146087,64,FLEN)
NAN_BOXED(4623181854233101641,64,FLEN)
NAN_BOXED(9218868437227405311,64,FLEN)
NAN_BOXED(9202324242592426055,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9202466110862903391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9202558154454985007,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9203108489419403359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9203258740684499855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9203264171465437447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9203539847671854935,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9203639920455601047,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9203703852074157847,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9204007710128065559,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9204361439746390383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9204501226851869007,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9205121972552472807,64,FLEN)
NAN_BOXED(4620814216408445148,64,FLEN)
NAN_BOXED(9218868437227405311,64,FLEN)
NAN_BOXED(9205124899502245559,64,FLEN)
NAN_BOXED(4620812673753231574,64,FLEN)
NAN_BOXED(9218868437227405310,64,FLEN)
NAN_BOXED(9205449024114189915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9205484279743981447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9205779081342854283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9205918584339603063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9206036041280895031,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9206132295237803895,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9206309523080902571,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9206514821648986123,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9206560383001614623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9206660620336446259,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9206661327874385903,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9206837329707594383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9207046704094639483,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9207383359649142831,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9207402635685160347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9207405641154183015,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9207473926980932887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9207750048945012271,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9207784506694184939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9208341488353841039,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9208356923768541255,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9208437341676955735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9208508347348974063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9208685028704525131,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9208845622609489643,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9208979525772167487,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9209018759651225007,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9209195621417680811,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9209199293896891591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9209229791535562827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9209361281024298091,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9209532133446610347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9209675040355920495,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9209875302927611921,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9209963740873995585,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9209980300329351913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9210025104566140467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9210030669540062207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9210187974358012481,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9210189833961843821,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9210202475605239055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9210277365756448095,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9210480201013752151,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9210574261692263845,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9210703657340258737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9210868645664017971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9210908531287604761,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9210934231841973973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9210937167214855603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9210975326280675777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9211055699360287693,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9211094596069823099,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9211206323457521883,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9211214892636537471,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9211432341638544265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9211558212426398057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9211730897951597741,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9211733370013950415,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9211771795142129955,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9211799310149960327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9211885280148175417,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9211954222246389411,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9212063078633920671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9212075245470634617,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9212203378587962915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9212303375783638497,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9212415336873866933,64,FLEN)
NAN_BOXED(4612930017545284944,64,FLEN)
NAN_BOXED(9218868437227405311,64,FLEN)
NAN_BOXED(9212436442178205495,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9212446877380635197,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9212474092452183575,64,FLEN)
NAN_BOXED(4612882563647158452,64,FLEN)
NAN_BOXED(9218868437227405310,64,FLEN)
NAN_BOXED(9212720598915492269,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9212755690204507651,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9212865463966467581,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9212887952150911227,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9212919282021301507,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9212976245400078789,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9212978033768192647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9213061564898254961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9213115892871435995,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9213171093104730219,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9213368595517972519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9213371418979613657,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9213424879818156427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9213439857008409233,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9213489760435887215,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9213590861829486893,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9213662495201190659,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9213669602473361909,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9213702346966436055,64,FLEN)
NAN_BOXED(4612043561477249772,64,FLEN)
NAN_BOXED(9218868437227405310,64,FLEN)
NAN_BOXED(9213723581058482215,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9213732421641726965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9213874476883351287,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9213960586247905729,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9214110167039536001,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9214123598770693543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9214162886707232505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9214184944408697331,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9214327899443918393,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9214372413218734840,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9214403107541200484,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9214439229716325433,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9214456925816640240,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9214468432481080728,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9214471948136310150,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9214498168439297268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9214524695175989378,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9214537863106378203,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9214551614162833075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9214566262582789791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9214590598836865805,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9214596797923094438,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9214600735642137005,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9214601760670651019,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9214638257583679038,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9214762749068716851,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9214886805912290324,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9214909866478776804,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9214974670659866226,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9215009327398411039,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9215095108043376892,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9215096258362448024,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9215130050500742679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9215138561243301025,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9215156973142568508,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9215164182057732143,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9215186630550859289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9215319097810178018,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9215320302733621985,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9215326822095689616,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9215360226226030405,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9215402822588355209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9215475110797327676,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9215483207945458913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9215581491322238715,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9215634776978914729,64,FLEN)
NAN_BOXED(4609704807767058075,64,FLEN)
NAN_BOXED(9218868437227405311,64,FLEN)
NAN_BOXED(9215641686976569197,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9215698642380683576,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9215728657261565548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9215742127784465790,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9215798420405594584,64,FLEN)
NAN_BOXED(4609511154150651418,64,FLEN)
NAN_BOXED(9218868437227405311,64,FLEN)
NAN_BOXED(9215813451933279383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9215893633145394062,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9215919225779860497,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9215920970355179867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9215936410999935970,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9215978389214329896,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9216033967749604860,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9216089675058510738,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9216100097474686529,64,FLEN)
NAN_BOXED(4609180779858595203,64,FLEN)
NAN_BOXED(9218868437227405311,64,FLEN)
NAN_BOXED(9216162419109728552,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9216214422192464755,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9216222174385472369,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9216251830566156035,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9216302744610296061,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9216319049448399495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9216373551851955155,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9216378111284919849,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9216380375630736854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9216380405183382049,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9216400007853809593,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9216426865143147768,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9216431300845284697,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9216476140344572279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9216490266309714058,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9216526085010677496,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9216548719736758119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9216569644371719269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9216648887742314421,64,FLEN)
NAN_BOXED(4608655087923088705,64,FLEN)
NAN_BOXED(9218868437227405311,64,FLEN)
NAN_BOXED(9216652702884918735,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9216661530323859280,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9216667637560082331,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9216732699534098277,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9216760481814654461,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9216861740731217790,64,FLEN)
NAN_BOXED(4608473377164605383,64,FLEN)
NAN_BOXED(9218868437227405310,64,FLEN)
NAN_BOXED(9216974652304243372,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9217037813343100802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9217055486929529103,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9217068865970692639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9217090913370329448,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9217106178485323112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9217187283004714414,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9217227805191672238,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9217250744193623911,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9217350944737416014,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9217386742845088832,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9217391306751904902,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9217432794934407710,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9217517995714577089,64,FLEN)
NAN_BOXED(4607976729929997014,64,FLEN)
NAN_BOXED(9218868437227405310,64,FLEN)
NAN_BOXED(9217552872790571180,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9217629458926437229,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9217740402986768694,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9217746961399665205,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9217792813339366787,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9217813252108556782,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9217893763312601143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9217909814851032376,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9217927188076672270,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9217965020445203030,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9217985913270716122,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9218026828638897928,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9218027107620374546,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9218036654990860019,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9218039238937224044,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9218070199736682448,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9218135073110775191,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9218150837618669310,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9218160924856774632,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9218191384723195100,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9218256432807800501,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9218275135883061162,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9218275352420067139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9218285405129207352,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9218398509007728318,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9218412632170364254,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9218459169596970485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9218460382701117993,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9218472429153932013,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9218484385667510506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9218505163941681437,64,FLEN)
NAN_BOXED(4607371688981192470,64,FLEN)
NAN_BOXED(9218868437227405310,64,FLEN)
NAN_BOXED(9218505728000343162,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9218525271383635879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9218536221588270866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9218697089430557950,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9218719513042032245,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9218720008253395832,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9218766088680849145,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9218778379161814619,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9218819124912500427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9218821775998667001,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9218848153207200185,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9218856579863810348,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9183898634412818687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9191874818624034911,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9192540961367415679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9193437833589794495,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9194219862960816799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9194453529457104447,64,FLEN)
NAN_BOXED(4630901904073592258,64,FLEN)
NAN_BOXED(9218868437227405310,64,FLEN)
NAN_BOXED(9194648356523827391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9195253681318528575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9196223864919109119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9196440232959053151,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
NAN_BOXED(9196682804202425823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(14283166213910560768,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 50*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

RVMODEL_DATA_END
