
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:39 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_89856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2fffff80000000; valaddr_reg:x3; val_offset:269568*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269568*0 + 3*0*FLEN/8, x4, x1, x2)

inst_89857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2fffffc0000000; valaddr_reg:x3; val_offset:269571*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269571*0 + 3*1*FLEN/8, x4, x1, x2)

inst_89858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2fffffe0000000; valaddr_reg:x3; val_offset:269574*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269574*0 + 3*2*FLEN/8, x4, x1, x2)

inst_89859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2ffffff0000000; valaddr_reg:x3; val_offset:269577*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269577*0 + 3*3*FLEN/8, x4, x1, x2)

inst_89860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2ffffff8000000; valaddr_reg:x3; val_offset:269580*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269580*0 + 3*4*FLEN/8, x4, x1, x2)

inst_89861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2ffffffc000000; valaddr_reg:x3; val_offset:269583*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269583*0 + 3*5*FLEN/8, x4, x1, x2)

inst_89862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2ffffffe000000; valaddr_reg:x3; val_offset:269586*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269586*0 + 3*6*FLEN/8, x4, x1, x2)

inst_89863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2fffffff000000; valaddr_reg:x3; val_offset:269589*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269589*0 + 3*7*FLEN/8, x4, x1, x2)

inst_89864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2fffffff800000; valaddr_reg:x3; val_offset:269592*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269592*0 + 3*8*FLEN/8, x4, x1, x2)

inst_89865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2fffffffc00000; valaddr_reg:x3; val_offset:269595*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269595*0 + 3*9*FLEN/8, x4, x1, x2)

inst_89866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2fffffffe00000; valaddr_reg:x3; val_offset:269598*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269598*0 + 3*10*FLEN/8, x4, x1, x2)

inst_89867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2ffffffff00000; valaddr_reg:x3; val_offset:269601*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269601*0 + 3*11*FLEN/8, x4, x1, x2)

inst_89868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2ffffffff80000; valaddr_reg:x3; val_offset:269604*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269604*0 + 3*12*FLEN/8, x4, x1, x2)

inst_89869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2ffffffffc0000; valaddr_reg:x3; val_offset:269607*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269607*0 + 3*13*FLEN/8, x4, x1, x2)

inst_89870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2ffffffffe0000; valaddr_reg:x3; val_offset:269610*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269610*0 + 3*14*FLEN/8, x4, x1, x2)

inst_89871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2fffffffff0000; valaddr_reg:x3; val_offset:269613*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269613*0 + 3*15*FLEN/8, x4, x1, x2)

inst_89872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2fffffffff8000; valaddr_reg:x3; val_offset:269616*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269616*0 + 3*16*FLEN/8, x4, x1, x2)

inst_89873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2fffffffffc000; valaddr_reg:x3; val_offset:269619*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269619*0 + 3*17*FLEN/8, x4, x1, x2)

inst_89874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2fffffffffe000; valaddr_reg:x3; val_offset:269622*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269622*0 + 3*18*FLEN/8, x4, x1, x2)

inst_89875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2ffffffffff000; valaddr_reg:x3; val_offset:269625*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269625*0 + 3*19*FLEN/8, x4, x1, x2)

inst_89876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2ffffffffff800; valaddr_reg:x3; val_offset:269628*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269628*0 + 3*20*FLEN/8, x4, x1, x2)

inst_89877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2ffffffffffc00; valaddr_reg:x3; val_offset:269631*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269631*0 + 3*21*FLEN/8, x4, x1, x2)

inst_89878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2ffffffffffe00; valaddr_reg:x3; val_offset:269634*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269634*0 + 3*22*FLEN/8, x4, x1, x2)

inst_89879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2fffffffffff00; valaddr_reg:x3; val_offset:269637*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269637*0 + 3*23*FLEN/8, x4, x1, x2)

inst_89880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2fffffffffff80; valaddr_reg:x3; val_offset:269640*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269640*0 + 3*24*FLEN/8, x4, x1, x2)

inst_89881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2fffffffffffc0; valaddr_reg:x3; val_offset:269643*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269643*0 + 3*25*FLEN/8, x4, x1, x2)

inst_89882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2fffffffffffe0; valaddr_reg:x3; val_offset:269646*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269646*0 + 3*26*FLEN/8, x4, x1, x2)

inst_89883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2ffffffffffff0; valaddr_reg:x3; val_offset:269649*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269649*0 + 3*27*FLEN/8, x4, x1, x2)

inst_89884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2ffffffffffff8; valaddr_reg:x3; val_offset:269652*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269652*0 + 3*28*FLEN/8, x4, x1, x2)

inst_89885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2ffffffffffffc; valaddr_reg:x3; val_offset:269655*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269655*0 + 3*29*FLEN/8, x4, x1, x2)

inst_89886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2ffffffffffffe; valaddr_reg:x3; val_offset:269658*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269658*0 + 3*30*FLEN/8, x4, x1, x2)

inst_89887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3f2fffffffffffff; valaddr_reg:x3; val_offset:269661*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269661*0 + 3*31*FLEN/8, x4, x1, x2)

inst_89888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:269664*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269664*0 + 3*32*FLEN/8, x4, x1, x2)

inst_89889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:269667*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269667*0 + 3*33*FLEN/8, x4, x1, x2)

inst_89890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:269670*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269670*0 + 3*34*FLEN/8, x4, x1, x2)

inst_89891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:269673*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269673*0 + 3*35*FLEN/8, x4, x1, x2)

inst_89892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:269676*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269676*0 + 3*36*FLEN/8, x4, x1, x2)

inst_89893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:269679*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269679*0 + 3*37*FLEN/8, x4, x1, x2)

inst_89894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:269682*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269682*0 + 3*38*FLEN/8, x4, x1, x2)

inst_89895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:269685*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269685*0 + 3*39*FLEN/8, x4, x1, x2)

inst_89896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:269688*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269688*0 + 3*40*FLEN/8, x4, x1, x2)

inst_89897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:269691*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269691*0 + 3*41*FLEN/8, x4, x1, x2)

inst_89898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:269694*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269694*0 + 3*42*FLEN/8, x4, x1, x2)

inst_89899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:269697*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269697*0 + 3*43*FLEN/8, x4, x1, x2)

inst_89900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:269700*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269700*0 + 3*44*FLEN/8, x4, x1, x2)

inst_89901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:269703*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269703*0 + 3*45*FLEN/8, x4, x1, x2)

inst_89902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:269706*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269706*0 + 3*46*FLEN/8, x4, x1, x2)

inst_89903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:269709*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269709*0 + 3*47*FLEN/8, x4, x1, x2)

inst_89904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:269712*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269712*0 + 3*48*FLEN/8, x4, x1, x2)

inst_89905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:269715*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269715*0 + 3*49*FLEN/8, x4, x1, x2)

inst_89906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:269718*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269718*0 + 3*50*FLEN/8, x4, x1, x2)

inst_89907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:269721*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269721*0 + 3*51*FLEN/8, x4, x1, x2)

inst_89908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:269724*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269724*0 + 3*52*FLEN/8, x4, x1, x2)

inst_89909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb240cd1bd5cb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1d78eaa3aab9d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb240cd1bd5cb; op2val:0x2031d78eaa3aab9d;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:269727*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269727*0 + 3*53*FLEN/8, x4, x1, x2)

inst_89910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:269730*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269730*0 + 3*54*FLEN/8, x4, x1, x2)

inst_89911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:269733*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269733*0 + 3*55*FLEN/8, x4, x1, x2)

inst_89912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:269736*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269736*0 + 3*56*FLEN/8, x4, x1, x2)

inst_89913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:269739*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269739*0 + 3*57*FLEN/8, x4, x1, x2)

inst_89914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:269742*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269742*0 + 3*58*FLEN/8, x4, x1, x2)

inst_89915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:269745*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269745*0 + 3*59*FLEN/8, x4, x1, x2)

inst_89916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:269748*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269748*0 + 3*60*FLEN/8, x4, x1, x2)

inst_89917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:269751*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269751*0 + 3*61*FLEN/8, x4, x1, x2)

inst_89918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:269754*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269754*0 + 3*62*FLEN/8, x4, x1, x2)

inst_89919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:269757*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269757*0 + 3*63*FLEN/8, x4, x1, x2)

inst_89920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:269760*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269760*0 + 3*64*FLEN/8, x4, x1, x2)

inst_89921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:269763*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269763*0 + 3*65*FLEN/8, x4, x1, x2)

inst_89922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:269766*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269766*0 + 3*66*FLEN/8, x4, x1, x2)

inst_89923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:269769*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269769*0 + 3*67*FLEN/8, x4, x1, x2)

inst_89924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:269772*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269772*0 + 3*68*FLEN/8, x4, x1, x2)

inst_89925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:269775*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269775*0 + 3*69*FLEN/8, x4, x1, x2)

inst_89926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:269778*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269778*0 + 3*70*FLEN/8, x4, x1, x2)

inst_89927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:269781*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269781*0 + 3*71*FLEN/8, x4, x1, x2)

inst_89928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:269784*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269784*0 + 3*72*FLEN/8, x4, x1, x2)

inst_89929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:269787*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269787*0 + 3*73*FLEN/8, x4, x1, x2)

inst_89930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:269790*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269790*0 + 3*74*FLEN/8, x4, x1, x2)

inst_89931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:269793*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269793*0 + 3*75*FLEN/8, x4, x1, x2)

inst_89932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x8150000000000000; valaddr_reg:x3; val_offset:269796*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269796*0 + 3*76*FLEN/8, x4, x1, x2)

inst_89933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x8150000000000001; valaddr_reg:x3; val_offset:269799*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269799*0 + 3*77*FLEN/8, x4, x1, x2)

inst_89934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x8150000000000003; valaddr_reg:x3; val_offset:269802*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269802*0 + 3*78*FLEN/8, x4, x1, x2)

inst_89935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x8150000000000007; valaddr_reg:x3; val_offset:269805*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269805*0 + 3*79*FLEN/8, x4, x1, x2)

inst_89936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815000000000000f; valaddr_reg:x3; val_offset:269808*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269808*0 + 3*80*FLEN/8, x4, x1, x2)

inst_89937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815000000000001f; valaddr_reg:x3; val_offset:269811*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269811*0 + 3*81*FLEN/8, x4, x1, x2)

inst_89938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815000000000003f; valaddr_reg:x3; val_offset:269814*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269814*0 + 3*82*FLEN/8, x4, x1, x2)

inst_89939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815000000000007f; valaddr_reg:x3; val_offset:269817*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269817*0 + 3*83*FLEN/8, x4, x1, x2)

inst_89940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x81500000000000ff; valaddr_reg:x3; val_offset:269820*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269820*0 + 3*84*FLEN/8, x4, x1, x2)

inst_89941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x81500000000001ff; valaddr_reg:x3; val_offset:269823*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269823*0 + 3*85*FLEN/8, x4, x1, x2)

inst_89942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x81500000000003ff; valaddr_reg:x3; val_offset:269826*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269826*0 + 3*86*FLEN/8, x4, x1, x2)

inst_89943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x81500000000007ff; valaddr_reg:x3; val_offset:269829*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269829*0 + 3*87*FLEN/8, x4, x1, x2)

inst_89944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x8150000000000fff; valaddr_reg:x3; val_offset:269832*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269832*0 + 3*88*FLEN/8, x4, x1, x2)

inst_89945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x8150000000001fff; valaddr_reg:x3; val_offset:269835*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269835*0 + 3*89*FLEN/8, x4, x1, x2)

inst_89946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x8150000000003fff; valaddr_reg:x3; val_offset:269838*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269838*0 + 3*90*FLEN/8, x4, x1, x2)

inst_89947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x8150000000007fff; valaddr_reg:x3; val_offset:269841*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269841*0 + 3*91*FLEN/8, x4, x1, x2)

inst_89948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815000000000ffff; valaddr_reg:x3; val_offset:269844*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269844*0 + 3*92*FLEN/8, x4, x1, x2)

inst_89949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815000000001ffff; valaddr_reg:x3; val_offset:269847*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269847*0 + 3*93*FLEN/8, x4, x1, x2)

inst_89950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815000000003ffff; valaddr_reg:x3; val_offset:269850*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269850*0 + 3*94*FLEN/8, x4, x1, x2)

inst_89951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815000000007ffff; valaddr_reg:x3; val_offset:269853*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269853*0 + 3*95*FLEN/8, x4, x1, x2)

inst_89952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x81500000000fffff; valaddr_reg:x3; val_offset:269856*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269856*0 + 3*96*FLEN/8, x4, x1, x2)

inst_89953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x81500000001fffff; valaddr_reg:x3; val_offset:269859*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269859*0 + 3*97*FLEN/8, x4, x1, x2)

inst_89954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x81500000003fffff; valaddr_reg:x3; val_offset:269862*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269862*0 + 3*98*FLEN/8, x4, x1, x2)

inst_89955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x81500000007fffff; valaddr_reg:x3; val_offset:269865*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269865*0 + 3*99*FLEN/8, x4, x1, x2)

inst_89956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x8150000000ffffff; valaddr_reg:x3; val_offset:269868*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269868*0 + 3*100*FLEN/8, x4, x1, x2)

inst_89957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x8150000001ffffff; valaddr_reg:x3; val_offset:269871*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269871*0 + 3*101*FLEN/8, x4, x1, x2)

inst_89958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x8150000003ffffff; valaddr_reg:x3; val_offset:269874*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269874*0 + 3*102*FLEN/8, x4, x1, x2)

inst_89959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x8150000007ffffff; valaddr_reg:x3; val_offset:269877*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269877*0 + 3*103*FLEN/8, x4, x1, x2)

inst_89960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815000000fffffff; valaddr_reg:x3; val_offset:269880*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269880*0 + 3*104*FLEN/8, x4, x1, x2)

inst_89961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815000001fffffff; valaddr_reg:x3; val_offset:269883*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269883*0 + 3*105*FLEN/8, x4, x1, x2)

inst_89962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815000003fffffff; valaddr_reg:x3; val_offset:269886*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269886*0 + 3*106*FLEN/8, x4, x1, x2)

inst_89963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815000007fffffff; valaddr_reg:x3; val_offset:269889*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269889*0 + 3*107*FLEN/8, x4, x1, x2)

inst_89964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x81500000ffffffff; valaddr_reg:x3; val_offset:269892*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269892*0 + 3*108*FLEN/8, x4, x1, x2)

inst_89965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x81500001ffffffff; valaddr_reg:x3; val_offset:269895*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269895*0 + 3*109*FLEN/8, x4, x1, x2)

inst_89966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x81500003ffffffff; valaddr_reg:x3; val_offset:269898*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269898*0 + 3*110*FLEN/8, x4, x1, x2)

inst_89967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x81500007ffffffff; valaddr_reg:x3; val_offset:269901*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269901*0 + 3*111*FLEN/8, x4, x1, x2)

inst_89968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x8150000fffffffff; valaddr_reg:x3; val_offset:269904*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269904*0 + 3*112*FLEN/8, x4, x1, x2)

inst_89969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x8150001fffffffff; valaddr_reg:x3; val_offset:269907*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269907*0 + 3*113*FLEN/8, x4, x1, x2)

inst_89970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x8150003fffffffff; valaddr_reg:x3; val_offset:269910*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269910*0 + 3*114*FLEN/8, x4, x1, x2)

inst_89971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x8150007fffffffff; valaddr_reg:x3; val_offset:269913*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269913*0 + 3*115*FLEN/8, x4, x1, x2)

inst_89972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815000ffffffffff; valaddr_reg:x3; val_offset:269916*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269916*0 + 3*116*FLEN/8, x4, x1, x2)

inst_89973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815001ffffffffff; valaddr_reg:x3; val_offset:269919*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269919*0 + 3*117*FLEN/8, x4, x1, x2)

inst_89974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815003ffffffffff; valaddr_reg:x3; val_offset:269922*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269922*0 + 3*118*FLEN/8, x4, x1, x2)

inst_89975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815007ffffffffff; valaddr_reg:x3; val_offset:269925*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269925*0 + 3*119*FLEN/8, x4, x1, x2)

inst_89976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x81500fffffffffff; valaddr_reg:x3; val_offset:269928*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269928*0 + 3*120*FLEN/8, x4, x1, x2)

inst_89977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x81501fffffffffff; valaddr_reg:x3; val_offset:269931*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269931*0 + 3*121*FLEN/8, x4, x1, x2)

inst_89978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x81503fffffffffff; valaddr_reg:x3; val_offset:269934*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269934*0 + 3*122*FLEN/8, x4, x1, x2)

inst_89979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x81507fffffffffff; valaddr_reg:x3; val_offset:269937*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269937*0 + 3*123*FLEN/8, x4, x1, x2)

inst_89980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x8150ffffffffffff; valaddr_reg:x3; val_offset:269940*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269940*0 + 3*124*FLEN/8, x4, x1, x2)

inst_89981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x8151ffffffffffff; valaddr_reg:x3; val_offset:269943*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269943*0 + 3*125*FLEN/8, x4, x1, x2)

inst_89982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x8153ffffffffffff; valaddr_reg:x3; val_offset:269946*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269946*0 + 3*126*FLEN/8, x4, x1, x2)

inst_89983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x8157ffffffffffff; valaddr_reg:x3; val_offset:269949*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269949*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_89984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x8158000000000000; valaddr_reg:x3; val_offset:269952*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269952*0 + 3*128*FLEN/8, x4, x1, x2)

inst_89985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815c000000000000; valaddr_reg:x3; val_offset:269955*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269955*0 + 3*129*FLEN/8, x4, x1, x2)

inst_89986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815e000000000000; valaddr_reg:x3; val_offset:269958*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269958*0 + 3*130*FLEN/8, x4, x1, x2)

inst_89987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815f000000000000; valaddr_reg:x3; val_offset:269961*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269961*0 + 3*131*FLEN/8, x4, x1, x2)

inst_89988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815f800000000000; valaddr_reg:x3; val_offset:269964*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269964*0 + 3*132*FLEN/8, x4, x1, x2)

inst_89989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815fc00000000000; valaddr_reg:x3; val_offset:269967*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269967*0 + 3*133*FLEN/8, x4, x1, x2)

inst_89990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815fe00000000000; valaddr_reg:x3; val_offset:269970*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269970*0 + 3*134*FLEN/8, x4, x1, x2)

inst_89991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815ff00000000000; valaddr_reg:x3; val_offset:269973*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269973*0 + 3*135*FLEN/8, x4, x1, x2)

inst_89992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815ff80000000000; valaddr_reg:x3; val_offset:269976*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269976*0 + 3*136*FLEN/8, x4, x1, x2)

inst_89993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815ffc0000000000; valaddr_reg:x3; val_offset:269979*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269979*0 + 3*137*FLEN/8, x4, x1, x2)

inst_89994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815ffe0000000000; valaddr_reg:x3; val_offset:269982*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269982*0 + 3*138*FLEN/8, x4, x1, x2)

inst_89995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815fff0000000000; valaddr_reg:x3; val_offset:269985*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269985*0 + 3*139*FLEN/8, x4, x1, x2)

inst_89996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815fff8000000000; valaddr_reg:x3; val_offset:269988*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269988*0 + 3*140*FLEN/8, x4, x1, x2)

inst_89997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815fffc000000000; valaddr_reg:x3; val_offset:269991*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269991*0 + 3*141*FLEN/8, x4, x1, x2)

inst_89998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815fffe000000000; valaddr_reg:x3; val_offset:269994*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269994*0 + 3*142*FLEN/8, x4, x1, x2)

inst_89999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815ffff000000000; valaddr_reg:x3; val_offset:269997*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 269997*0 + 3*143*FLEN/8, x4, x1, x2)

inst_90000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815ffff800000000; valaddr_reg:x3; val_offset:270000*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270000*0 + 3*144*FLEN/8, x4, x1, x2)

inst_90001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815ffffc00000000; valaddr_reg:x3; val_offset:270003*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270003*0 + 3*145*FLEN/8, x4, x1, x2)

inst_90002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815ffffe00000000; valaddr_reg:x3; val_offset:270006*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270006*0 + 3*146*FLEN/8, x4, x1, x2)

inst_90003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815fffff00000000; valaddr_reg:x3; val_offset:270009*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270009*0 + 3*147*FLEN/8, x4, x1, x2)

inst_90004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815fffff80000000; valaddr_reg:x3; val_offset:270012*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270012*0 + 3*148*FLEN/8, x4, x1, x2)

inst_90005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815fffffc0000000; valaddr_reg:x3; val_offset:270015*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270015*0 + 3*149*FLEN/8, x4, x1, x2)

inst_90006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815fffffe0000000; valaddr_reg:x3; val_offset:270018*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270018*0 + 3*150*FLEN/8, x4, x1, x2)

inst_90007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815ffffff0000000; valaddr_reg:x3; val_offset:270021*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270021*0 + 3*151*FLEN/8, x4, x1, x2)

inst_90008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815ffffff8000000; valaddr_reg:x3; val_offset:270024*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270024*0 + 3*152*FLEN/8, x4, x1, x2)

inst_90009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815ffffffc000000; valaddr_reg:x3; val_offset:270027*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270027*0 + 3*153*FLEN/8, x4, x1, x2)

inst_90010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815ffffffe000000; valaddr_reg:x3; val_offset:270030*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270030*0 + 3*154*FLEN/8, x4, x1, x2)

inst_90011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815fffffff000000; valaddr_reg:x3; val_offset:270033*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270033*0 + 3*155*FLEN/8, x4, x1, x2)

inst_90012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815fffffff800000; valaddr_reg:x3; val_offset:270036*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270036*0 + 3*156*FLEN/8, x4, x1, x2)

inst_90013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815fffffffc00000; valaddr_reg:x3; val_offset:270039*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270039*0 + 3*157*FLEN/8, x4, x1, x2)

inst_90014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815fffffffe00000; valaddr_reg:x3; val_offset:270042*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270042*0 + 3*158*FLEN/8, x4, x1, x2)

inst_90015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815ffffffff00000; valaddr_reg:x3; val_offset:270045*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270045*0 + 3*159*FLEN/8, x4, x1, x2)

inst_90016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815ffffffff80000; valaddr_reg:x3; val_offset:270048*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270048*0 + 3*160*FLEN/8, x4, x1, x2)

inst_90017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815ffffffffc0000; valaddr_reg:x3; val_offset:270051*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270051*0 + 3*161*FLEN/8, x4, x1, x2)

inst_90018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815ffffffffe0000; valaddr_reg:x3; val_offset:270054*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270054*0 + 3*162*FLEN/8, x4, x1, x2)

inst_90019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815fffffffff0000; valaddr_reg:x3; val_offset:270057*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270057*0 + 3*163*FLEN/8, x4, x1, x2)

inst_90020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815fffffffff8000; valaddr_reg:x3; val_offset:270060*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270060*0 + 3*164*FLEN/8, x4, x1, x2)

inst_90021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815fffffffffc000; valaddr_reg:x3; val_offset:270063*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270063*0 + 3*165*FLEN/8, x4, x1, x2)

inst_90022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815fffffffffe000; valaddr_reg:x3; val_offset:270066*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270066*0 + 3*166*FLEN/8, x4, x1, x2)

inst_90023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815ffffffffff000; valaddr_reg:x3; val_offset:270069*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270069*0 + 3*167*FLEN/8, x4, x1, x2)

inst_90024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815ffffffffff800; valaddr_reg:x3; val_offset:270072*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270072*0 + 3*168*FLEN/8, x4, x1, x2)

inst_90025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815ffffffffffc00; valaddr_reg:x3; val_offset:270075*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270075*0 + 3*169*FLEN/8, x4, x1, x2)

inst_90026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815ffffffffffe00; valaddr_reg:x3; val_offset:270078*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270078*0 + 3*170*FLEN/8, x4, x1, x2)

inst_90027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815fffffffffff00; valaddr_reg:x3; val_offset:270081*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270081*0 + 3*171*FLEN/8, x4, x1, x2)

inst_90028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815fffffffffff80; valaddr_reg:x3; val_offset:270084*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270084*0 + 3*172*FLEN/8, x4, x1, x2)

inst_90029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815fffffffffffc0; valaddr_reg:x3; val_offset:270087*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270087*0 + 3*173*FLEN/8, x4, x1, x2)

inst_90030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815fffffffffffe0; valaddr_reg:x3; val_offset:270090*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270090*0 + 3*174*FLEN/8, x4, x1, x2)

inst_90031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815ffffffffffff0; valaddr_reg:x3; val_offset:270093*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270093*0 + 3*175*FLEN/8, x4, x1, x2)

inst_90032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815ffffffffffff8; valaddr_reg:x3; val_offset:270096*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270096*0 + 3*176*FLEN/8, x4, x1, x2)

inst_90033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815ffffffffffffc; valaddr_reg:x3; val_offset:270099*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270099*0 + 3*177*FLEN/8, x4, x1, x2)

inst_90034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815ffffffffffffe; valaddr_reg:x3; val_offset:270102*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270102*0 + 3*178*FLEN/8, x4, x1, x2)

inst_90035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb2bc7beb4cb1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facb2bc7beb4cb1; op2val:0x8000;
op3val:0x815fffffffffffff; valaddr_reg:x3; val_offset:270105*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270105*0 + 3*179*FLEN/8, x4, x1, x2)

inst_90036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:270108*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270108*0 + 3*180*FLEN/8, x4, x1, x2)

inst_90037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:270111*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270111*0 + 3*181*FLEN/8, x4, x1, x2)

inst_90038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:270114*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270114*0 + 3*182*FLEN/8, x4, x1, x2)

inst_90039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:270117*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270117*0 + 3*183*FLEN/8, x4, x1, x2)

inst_90040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:270120*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270120*0 + 3*184*FLEN/8, x4, x1, x2)

inst_90041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:270123*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270123*0 + 3*185*FLEN/8, x4, x1, x2)

inst_90042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:270126*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270126*0 + 3*186*FLEN/8, x4, x1, x2)

inst_90043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:270129*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270129*0 + 3*187*FLEN/8, x4, x1, x2)

inst_90044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:270132*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270132*0 + 3*188*FLEN/8, x4, x1, x2)

inst_90045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:270135*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270135*0 + 3*189*FLEN/8, x4, x1, x2)

inst_90046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:270138*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270138*0 + 3*190*FLEN/8, x4, x1, x2)

inst_90047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:270141*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270141*0 + 3*191*FLEN/8, x4, x1, x2)

inst_90048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:270144*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270144*0 + 3*192*FLEN/8, x4, x1, x2)

inst_90049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:270147*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270147*0 + 3*193*FLEN/8, x4, x1, x2)

inst_90050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:270150*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270150*0 + 3*194*FLEN/8, x4, x1, x2)

inst_90051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:270153*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270153*0 + 3*195*FLEN/8, x4, x1, x2)

inst_90052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:270156*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270156*0 + 3*196*FLEN/8, x4, x1, x2)

inst_90053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:270159*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270159*0 + 3*197*FLEN/8, x4, x1, x2)

inst_90054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:270162*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270162*0 + 3*198*FLEN/8, x4, x1, x2)

inst_90055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:270165*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270165*0 + 3*199*FLEN/8, x4, x1, x2)

inst_90056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:270168*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270168*0 + 3*200*FLEN/8, x4, x1, x2)

inst_90057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:270171*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270171*0 + 3*201*FLEN/8, x4, x1, x2)

inst_90058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83f0000000000000; valaddr_reg:x3; val_offset:270174*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270174*0 + 3*202*FLEN/8, x4, x1, x2)

inst_90059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83f0000000000001; valaddr_reg:x3; val_offset:270177*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270177*0 + 3*203*FLEN/8, x4, x1, x2)

inst_90060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83f0000000000003; valaddr_reg:x3; val_offset:270180*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270180*0 + 3*204*FLEN/8, x4, x1, x2)

inst_90061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83f0000000000007; valaddr_reg:x3; val_offset:270183*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270183*0 + 3*205*FLEN/8, x4, x1, x2)

inst_90062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83f000000000000f; valaddr_reg:x3; val_offset:270186*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270186*0 + 3*206*FLEN/8, x4, x1, x2)

inst_90063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83f000000000001f; valaddr_reg:x3; val_offset:270189*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270189*0 + 3*207*FLEN/8, x4, x1, x2)

inst_90064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83f000000000003f; valaddr_reg:x3; val_offset:270192*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270192*0 + 3*208*FLEN/8, x4, x1, x2)

inst_90065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83f000000000007f; valaddr_reg:x3; val_offset:270195*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270195*0 + 3*209*FLEN/8, x4, x1, x2)

inst_90066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83f00000000000ff; valaddr_reg:x3; val_offset:270198*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270198*0 + 3*210*FLEN/8, x4, x1, x2)

inst_90067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83f00000000001ff; valaddr_reg:x3; val_offset:270201*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270201*0 + 3*211*FLEN/8, x4, x1, x2)

inst_90068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83f00000000003ff; valaddr_reg:x3; val_offset:270204*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270204*0 + 3*212*FLEN/8, x4, x1, x2)

inst_90069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83f00000000007ff; valaddr_reg:x3; val_offset:270207*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270207*0 + 3*213*FLEN/8, x4, x1, x2)

inst_90070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83f0000000000fff; valaddr_reg:x3; val_offset:270210*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270210*0 + 3*214*FLEN/8, x4, x1, x2)

inst_90071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83f0000000001fff; valaddr_reg:x3; val_offset:270213*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270213*0 + 3*215*FLEN/8, x4, x1, x2)

inst_90072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83f0000000003fff; valaddr_reg:x3; val_offset:270216*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270216*0 + 3*216*FLEN/8, x4, x1, x2)

inst_90073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83f0000000007fff; valaddr_reg:x3; val_offset:270219*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270219*0 + 3*217*FLEN/8, x4, x1, x2)

inst_90074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83f000000000ffff; valaddr_reg:x3; val_offset:270222*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270222*0 + 3*218*FLEN/8, x4, x1, x2)

inst_90075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83f000000001ffff; valaddr_reg:x3; val_offset:270225*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270225*0 + 3*219*FLEN/8, x4, x1, x2)

inst_90076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83f000000003ffff; valaddr_reg:x3; val_offset:270228*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270228*0 + 3*220*FLEN/8, x4, x1, x2)

inst_90077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83f000000007ffff; valaddr_reg:x3; val_offset:270231*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270231*0 + 3*221*FLEN/8, x4, x1, x2)

inst_90078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83f00000000fffff; valaddr_reg:x3; val_offset:270234*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270234*0 + 3*222*FLEN/8, x4, x1, x2)

inst_90079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83f00000001fffff; valaddr_reg:x3; val_offset:270237*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270237*0 + 3*223*FLEN/8, x4, x1, x2)

inst_90080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83f00000003fffff; valaddr_reg:x3; val_offset:270240*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270240*0 + 3*224*FLEN/8, x4, x1, x2)

inst_90081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83f00000007fffff; valaddr_reg:x3; val_offset:270243*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270243*0 + 3*225*FLEN/8, x4, x1, x2)

inst_90082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83f0000000ffffff; valaddr_reg:x3; val_offset:270246*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270246*0 + 3*226*FLEN/8, x4, x1, x2)

inst_90083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83f0000001ffffff; valaddr_reg:x3; val_offset:270249*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270249*0 + 3*227*FLEN/8, x4, x1, x2)

inst_90084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83f0000003ffffff; valaddr_reg:x3; val_offset:270252*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270252*0 + 3*228*FLEN/8, x4, x1, x2)

inst_90085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83f0000007ffffff; valaddr_reg:x3; val_offset:270255*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270255*0 + 3*229*FLEN/8, x4, x1, x2)

inst_90086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83f000000fffffff; valaddr_reg:x3; val_offset:270258*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270258*0 + 3*230*FLEN/8, x4, x1, x2)

inst_90087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83f000001fffffff; valaddr_reg:x3; val_offset:270261*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270261*0 + 3*231*FLEN/8, x4, x1, x2)

inst_90088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83f000003fffffff; valaddr_reg:x3; val_offset:270264*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270264*0 + 3*232*FLEN/8, x4, x1, x2)

inst_90089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83f000007fffffff; valaddr_reg:x3; val_offset:270267*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270267*0 + 3*233*FLEN/8, x4, x1, x2)

inst_90090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83f00000ffffffff; valaddr_reg:x3; val_offset:270270*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270270*0 + 3*234*FLEN/8, x4, x1, x2)

inst_90091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83f00001ffffffff; valaddr_reg:x3; val_offset:270273*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270273*0 + 3*235*FLEN/8, x4, x1, x2)

inst_90092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83f00003ffffffff; valaddr_reg:x3; val_offset:270276*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270276*0 + 3*236*FLEN/8, x4, x1, x2)

inst_90093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83f00007ffffffff; valaddr_reg:x3; val_offset:270279*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270279*0 + 3*237*FLEN/8, x4, x1, x2)

inst_90094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83f0000fffffffff; valaddr_reg:x3; val_offset:270282*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270282*0 + 3*238*FLEN/8, x4, x1, x2)

inst_90095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83f0001fffffffff; valaddr_reg:x3; val_offset:270285*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270285*0 + 3*239*FLEN/8, x4, x1, x2)

inst_90096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83f0003fffffffff; valaddr_reg:x3; val_offset:270288*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270288*0 + 3*240*FLEN/8, x4, x1, x2)

inst_90097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83f0007fffffffff; valaddr_reg:x3; val_offset:270291*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270291*0 + 3*241*FLEN/8, x4, x1, x2)

inst_90098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83f000ffffffffff; valaddr_reg:x3; val_offset:270294*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270294*0 + 3*242*FLEN/8, x4, x1, x2)

inst_90099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83f001ffffffffff; valaddr_reg:x3; val_offset:270297*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270297*0 + 3*243*FLEN/8, x4, x1, x2)

inst_90100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83f003ffffffffff; valaddr_reg:x3; val_offset:270300*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270300*0 + 3*244*FLEN/8, x4, x1, x2)

inst_90101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83f007ffffffffff; valaddr_reg:x3; val_offset:270303*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270303*0 + 3*245*FLEN/8, x4, x1, x2)

inst_90102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83f00fffffffffff; valaddr_reg:x3; val_offset:270306*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270306*0 + 3*246*FLEN/8, x4, x1, x2)

inst_90103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83f01fffffffffff; valaddr_reg:x3; val_offset:270309*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270309*0 + 3*247*FLEN/8, x4, x1, x2)

inst_90104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83f03fffffffffff; valaddr_reg:x3; val_offset:270312*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270312*0 + 3*248*FLEN/8, x4, x1, x2)

inst_90105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83f07fffffffffff; valaddr_reg:x3; val_offset:270315*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270315*0 + 3*249*FLEN/8, x4, x1, x2)

inst_90106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83f0ffffffffffff; valaddr_reg:x3; val_offset:270318*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270318*0 + 3*250*FLEN/8, x4, x1, x2)

inst_90107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83f1ffffffffffff; valaddr_reg:x3; val_offset:270321*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270321*0 + 3*251*FLEN/8, x4, x1, x2)

inst_90108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83f3ffffffffffff; valaddr_reg:x3; val_offset:270324*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270324*0 + 3*252*FLEN/8, x4, x1, x2)

inst_90109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83f7ffffffffffff; valaddr_reg:x3; val_offset:270327*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270327*0 + 3*253*FLEN/8, x4, x1, x2)

inst_90110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83f8000000000000; valaddr_reg:x3; val_offset:270330*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270330*0 + 3*254*FLEN/8, x4, x1, x2)

inst_90111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83fc000000000000; valaddr_reg:x3; val_offset:270333*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270333*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_90112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83fe000000000000; valaddr_reg:x3; val_offset:270336*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270336*0 + 3*256*FLEN/8, x4, x1, x2)

inst_90113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83ff000000000000; valaddr_reg:x3; val_offset:270339*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270339*0 + 3*257*FLEN/8, x4, x1, x2)

inst_90114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83ff800000000000; valaddr_reg:x3; val_offset:270342*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270342*0 + 3*258*FLEN/8, x4, x1, x2)

inst_90115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83ffc00000000000; valaddr_reg:x3; val_offset:270345*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270345*0 + 3*259*FLEN/8, x4, x1, x2)

inst_90116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83ffe00000000000; valaddr_reg:x3; val_offset:270348*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270348*0 + 3*260*FLEN/8, x4, x1, x2)

inst_90117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83fff00000000000; valaddr_reg:x3; val_offset:270351*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270351*0 + 3*261*FLEN/8, x4, x1, x2)

inst_90118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83fff80000000000; valaddr_reg:x3; val_offset:270354*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270354*0 + 3*262*FLEN/8, x4, x1, x2)

inst_90119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83fffc0000000000; valaddr_reg:x3; val_offset:270357*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270357*0 + 3*263*FLEN/8, x4, x1, x2)

inst_90120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83fffe0000000000; valaddr_reg:x3; val_offset:270360*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270360*0 + 3*264*FLEN/8, x4, x1, x2)

inst_90121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83ffff0000000000; valaddr_reg:x3; val_offset:270363*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270363*0 + 3*265*FLEN/8, x4, x1, x2)

inst_90122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83ffff8000000000; valaddr_reg:x3; val_offset:270366*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270366*0 + 3*266*FLEN/8, x4, x1, x2)

inst_90123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83ffffc000000000; valaddr_reg:x3; val_offset:270369*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270369*0 + 3*267*FLEN/8, x4, x1, x2)

inst_90124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83ffffe000000000; valaddr_reg:x3; val_offset:270372*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270372*0 + 3*268*FLEN/8, x4, x1, x2)

inst_90125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83fffff000000000; valaddr_reg:x3; val_offset:270375*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270375*0 + 3*269*FLEN/8, x4, x1, x2)

inst_90126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83fffff800000000; valaddr_reg:x3; val_offset:270378*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270378*0 + 3*270*FLEN/8, x4, x1, x2)

inst_90127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83fffffc00000000; valaddr_reg:x3; val_offset:270381*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270381*0 + 3*271*FLEN/8, x4, x1, x2)

inst_90128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83fffffe00000000; valaddr_reg:x3; val_offset:270384*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270384*0 + 3*272*FLEN/8, x4, x1, x2)

inst_90129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83ffffff00000000; valaddr_reg:x3; val_offset:270387*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270387*0 + 3*273*FLEN/8, x4, x1, x2)

inst_90130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83ffffff80000000; valaddr_reg:x3; val_offset:270390*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270390*0 + 3*274*FLEN/8, x4, x1, x2)

inst_90131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83ffffffc0000000; valaddr_reg:x3; val_offset:270393*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270393*0 + 3*275*FLEN/8, x4, x1, x2)

inst_90132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83ffffffe0000000; valaddr_reg:x3; val_offset:270396*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270396*0 + 3*276*FLEN/8, x4, x1, x2)

inst_90133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83fffffff0000000; valaddr_reg:x3; val_offset:270399*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270399*0 + 3*277*FLEN/8, x4, x1, x2)

inst_90134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83fffffff8000000; valaddr_reg:x3; val_offset:270402*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270402*0 + 3*278*FLEN/8, x4, x1, x2)

inst_90135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83fffffffc000000; valaddr_reg:x3; val_offset:270405*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270405*0 + 3*279*FLEN/8, x4, x1, x2)

inst_90136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83fffffffe000000; valaddr_reg:x3; val_offset:270408*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270408*0 + 3*280*FLEN/8, x4, x1, x2)

inst_90137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83ffffffff000000; valaddr_reg:x3; val_offset:270411*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270411*0 + 3*281*FLEN/8, x4, x1, x2)

inst_90138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83ffffffff800000; valaddr_reg:x3; val_offset:270414*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270414*0 + 3*282*FLEN/8, x4, x1, x2)

inst_90139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83ffffffffc00000; valaddr_reg:x3; val_offset:270417*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270417*0 + 3*283*FLEN/8, x4, x1, x2)

inst_90140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83ffffffffe00000; valaddr_reg:x3; val_offset:270420*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270420*0 + 3*284*FLEN/8, x4, x1, x2)

inst_90141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83fffffffff00000; valaddr_reg:x3; val_offset:270423*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270423*0 + 3*285*FLEN/8, x4, x1, x2)

inst_90142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83fffffffff80000; valaddr_reg:x3; val_offset:270426*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270426*0 + 3*286*FLEN/8, x4, x1, x2)

inst_90143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83fffffffffc0000; valaddr_reg:x3; val_offset:270429*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270429*0 + 3*287*FLEN/8, x4, x1, x2)

inst_90144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83fffffffffe0000; valaddr_reg:x3; val_offset:270432*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270432*0 + 3*288*FLEN/8, x4, x1, x2)

inst_90145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83ffffffffff0000; valaddr_reg:x3; val_offset:270435*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270435*0 + 3*289*FLEN/8, x4, x1, x2)

inst_90146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83ffffffffff8000; valaddr_reg:x3; val_offset:270438*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270438*0 + 3*290*FLEN/8, x4, x1, x2)

inst_90147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83ffffffffffc000; valaddr_reg:x3; val_offset:270441*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270441*0 + 3*291*FLEN/8, x4, x1, x2)

inst_90148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83ffffffffffe000; valaddr_reg:x3; val_offset:270444*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270444*0 + 3*292*FLEN/8, x4, x1, x2)

inst_90149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83fffffffffff000; valaddr_reg:x3; val_offset:270447*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270447*0 + 3*293*FLEN/8, x4, x1, x2)

inst_90150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83fffffffffff800; valaddr_reg:x3; val_offset:270450*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270450*0 + 3*294*FLEN/8, x4, x1, x2)

inst_90151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83fffffffffffc00; valaddr_reg:x3; val_offset:270453*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270453*0 + 3*295*FLEN/8, x4, x1, x2)

inst_90152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83fffffffffffe00; valaddr_reg:x3; val_offset:270456*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270456*0 + 3*296*FLEN/8, x4, x1, x2)

inst_90153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83ffffffffffff00; valaddr_reg:x3; val_offset:270459*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270459*0 + 3*297*FLEN/8, x4, x1, x2)

inst_90154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83ffffffffffff80; valaddr_reg:x3; val_offset:270462*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270462*0 + 3*298*FLEN/8, x4, x1, x2)

inst_90155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83ffffffffffffc0; valaddr_reg:x3; val_offset:270465*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270465*0 + 3*299*FLEN/8, x4, x1, x2)

inst_90156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83ffffffffffffe0; valaddr_reg:x3; val_offset:270468*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270468*0 + 3*300*FLEN/8, x4, x1, x2)

inst_90157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83fffffffffffff0; valaddr_reg:x3; val_offset:270471*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270471*0 + 3*301*FLEN/8, x4, x1, x2)

inst_90158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83fffffffffffff8; valaddr_reg:x3; val_offset:270474*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270474*0 + 3*302*FLEN/8, x4, x1, x2)

inst_90159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83fffffffffffffc; valaddr_reg:x3; val_offset:270477*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270477*0 + 3*303*FLEN/8, x4, x1, x2)

inst_90160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83fffffffffffffe; valaddr_reg:x3; val_offset:270480*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270480*0 + 3*304*FLEN/8, x4, x1, x2)

inst_90161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbbac03deb701 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facbbac03deb701; op2val:0x8000;
op3val:0x83ffffffffffffff; valaddr_reg:x3; val_offset:270483*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270483*0 + 3*305*FLEN/8, x4, x1, x2)

inst_90162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:270486*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270486*0 + 3*306*FLEN/8, x4, x1, x2)

inst_90163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:270489*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270489*0 + 3*307*FLEN/8, x4, x1, x2)

inst_90164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:270492*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270492*0 + 3*308*FLEN/8, x4, x1, x2)

inst_90165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:270495*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270495*0 + 3*309*FLEN/8, x4, x1, x2)

inst_90166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:270498*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270498*0 + 3*310*FLEN/8, x4, x1, x2)

inst_90167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:270501*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270501*0 + 3*311*FLEN/8, x4, x1, x2)

inst_90168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:270504*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270504*0 + 3*312*FLEN/8, x4, x1, x2)

inst_90169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:270507*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270507*0 + 3*313*FLEN/8, x4, x1, x2)

inst_90170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:270510*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270510*0 + 3*314*FLEN/8, x4, x1, x2)

inst_90171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:270513*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270513*0 + 3*315*FLEN/8, x4, x1, x2)

inst_90172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:270516*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270516*0 + 3*316*FLEN/8, x4, x1, x2)

inst_90173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:270519*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270519*0 + 3*317*FLEN/8, x4, x1, x2)

inst_90174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:270522*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270522*0 + 3*318*FLEN/8, x4, x1, x2)

inst_90175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:270525*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270525*0 + 3*319*FLEN/8, x4, x1, x2)

inst_90176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:270528*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270528*0 + 3*320*FLEN/8, x4, x1, x2)

inst_90177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:270531*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270531*0 + 3*321*FLEN/8, x4, x1, x2)

inst_90178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:270534*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270534*0 + 3*322*FLEN/8, x4, x1, x2)

inst_90179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:270537*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270537*0 + 3*323*FLEN/8, x4, x1, x2)

inst_90180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:270540*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270540*0 + 3*324*FLEN/8, x4, x1, x2)

inst_90181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:270543*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270543*0 + 3*325*FLEN/8, x4, x1, x2)

inst_90182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:270546*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270546*0 + 3*326*FLEN/8, x4, x1, x2)

inst_90183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:270549*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270549*0 + 3*327*FLEN/8, x4, x1, x2)

inst_90184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3a0000000000000; valaddr_reg:x3; val_offset:270552*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270552*0 + 3*328*FLEN/8, x4, x1, x2)

inst_90185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3a0000000000001; valaddr_reg:x3; val_offset:270555*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270555*0 + 3*329*FLEN/8, x4, x1, x2)

inst_90186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3a0000000000003; valaddr_reg:x3; val_offset:270558*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270558*0 + 3*330*FLEN/8, x4, x1, x2)

inst_90187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3a0000000000007; valaddr_reg:x3; val_offset:270561*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270561*0 + 3*331*FLEN/8, x4, x1, x2)

inst_90188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3a000000000000f; valaddr_reg:x3; val_offset:270564*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270564*0 + 3*332*FLEN/8, x4, x1, x2)

inst_90189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3a000000000001f; valaddr_reg:x3; val_offset:270567*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270567*0 + 3*333*FLEN/8, x4, x1, x2)

inst_90190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3a000000000003f; valaddr_reg:x3; val_offset:270570*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270570*0 + 3*334*FLEN/8, x4, x1, x2)

inst_90191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3a000000000007f; valaddr_reg:x3; val_offset:270573*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270573*0 + 3*335*FLEN/8, x4, x1, x2)

inst_90192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3a00000000000ff; valaddr_reg:x3; val_offset:270576*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270576*0 + 3*336*FLEN/8, x4, x1, x2)

inst_90193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3a00000000001ff; valaddr_reg:x3; val_offset:270579*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270579*0 + 3*337*FLEN/8, x4, x1, x2)

inst_90194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3a00000000003ff; valaddr_reg:x3; val_offset:270582*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270582*0 + 3*338*FLEN/8, x4, x1, x2)

inst_90195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3a00000000007ff; valaddr_reg:x3; val_offset:270585*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270585*0 + 3*339*FLEN/8, x4, x1, x2)

inst_90196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3a0000000000fff; valaddr_reg:x3; val_offset:270588*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270588*0 + 3*340*FLEN/8, x4, x1, x2)

inst_90197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3a0000000001fff; valaddr_reg:x3; val_offset:270591*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270591*0 + 3*341*FLEN/8, x4, x1, x2)

inst_90198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3a0000000003fff; valaddr_reg:x3; val_offset:270594*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270594*0 + 3*342*FLEN/8, x4, x1, x2)

inst_90199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3a0000000007fff; valaddr_reg:x3; val_offset:270597*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270597*0 + 3*343*FLEN/8, x4, x1, x2)

inst_90200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3a000000000ffff; valaddr_reg:x3; val_offset:270600*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270600*0 + 3*344*FLEN/8, x4, x1, x2)

inst_90201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3a000000001ffff; valaddr_reg:x3; val_offset:270603*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270603*0 + 3*345*FLEN/8, x4, x1, x2)

inst_90202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3a000000003ffff; valaddr_reg:x3; val_offset:270606*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270606*0 + 3*346*FLEN/8, x4, x1, x2)

inst_90203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3a000000007ffff; valaddr_reg:x3; val_offset:270609*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270609*0 + 3*347*FLEN/8, x4, x1, x2)

inst_90204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3a00000000fffff; valaddr_reg:x3; val_offset:270612*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270612*0 + 3*348*FLEN/8, x4, x1, x2)

inst_90205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3a00000001fffff; valaddr_reg:x3; val_offset:270615*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270615*0 + 3*349*FLEN/8, x4, x1, x2)

inst_90206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3a00000003fffff; valaddr_reg:x3; val_offset:270618*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270618*0 + 3*350*FLEN/8, x4, x1, x2)

inst_90207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3a00000007fffff; valaddr_reg:x3; val_offset:270621*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270621*0 + 3*351*FLEN/8, x4, x1, x2)

inst_90208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3a0000000ffffff; valaddr_reg:x3; val_offset:270624*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270624*0 + 3*352*FLEN/8, x4, x1, x2)

inst_90209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3a0000001ffffff; valaddr_reg:x3; val_offset:270627*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270627*0 + 3*353*FLEN/8, x4, x1, x2)

inst_90210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3a0000003ffffff; valaddr_reg:x3; val_offset:270630*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270630*0 + 3*354*FLEN/8, x4, x1, x2)

inst_90211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3a0000007ffffff; valaddr_reg:x3; val_offset:270633*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270633*0 + 3*355*FLEN/8, x4, x1, x2)

inst_90212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3a000000fffffff; valaddr_reg:x3; val_offset:270636*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270636*0 + 3*356*FLEN/8, x4, x1, x2)

inst_90213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3a000001fffffff; valaddr_reg:x3; val_offset:270639*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270639*0 + 3*357*FLEN/8, x4, x1, x2)

inst_90214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3a000003fffffff; valaddr_reg:x3; val_offset:270642*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270642*0 + 3*358*FLEN/8, x4, x1, x2)

inst_90215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3a000007fffffff; valaddr_reg:x3; val_offset:270645*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270645*0 + 3*359*FLEN/8, x4, x1, x2)

inst_90216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3a00000ffffffff; valaddr_reg:x3; val_offset:270648*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270648*0 + 3*360*FLEN/8, x4, x1, x2)

inst_90217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3a00001ffffffff; valaddr_reg:x3; val_offset:270651*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270651*0 + 3*361*FLEN/8, x4, x1, x2)

inst_90218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3a00003ffffffff; valaddr_reg:x3; val_offset:270654*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270654*0 + 3*362*FLEN/8, x4, x1, x2)

inst_90219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3a00007ffffffff; valaddr_reg:x3; val_offset:270657*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270657*0 + 3*363*FLEN/8, x4, x1, x2)

inst_90220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3a0000fffffffff; valaddr_reg:x3; val_offset:270660*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270660*0 + 3*364*FLEN/8, x4, x1, x2)

inst_90221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3a0001fffffffff; valaddr_reg:x3; val_offset:270663*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270663*0 + 3*365*FLEN/8, x4, x1, x2)

inst_90222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3a0003fffffffff; valaddr_reg:x3; val_offset:270666*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270666*0 + 3*366*FLEN/8, x4, x1, x2)

inst_90223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3a0007fffffffff; valaddr_reg:x3; val_offset:270669*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270669*0 + 3*367*FLEN/8, x4, x1, x2)

inst_90224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3a000ffffffffff; valaddr_reg:x3; val_offset:270672*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270672*0 + 3*368*FLEN/8, x4, x1, x2)

inst_90225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3a001ffffffffff; valaddr_reg:x3; val_offset:270675*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270675*0 + 3*369*FLEN/8, x4, x1, x2)

inst_90226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3a003ffffffffff; valaddr_reg:x3; val_offset:270678*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270678*0 + 3*370*FLEN/8, x4, x1, x2)

inst_90227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3a007ffffffffff; valaddr_reg:x3; val_offset:270681*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270681*0 + 3*371*FLEN/8, x4, x1, x2)

inst_90228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3a00fffffffffff; valaddr_reg:x3; val_offset:270684*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270684*0 + 3*372*FLEN/8, x4, x1, x2)

inst_90229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3a01fffffffffff; valaddr_reg:x3; val_offset:270687*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270687*0 + 3*373*FLEN/8, x4, x1, x2)

inst_90230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3a03fffffffffff; valaddr_reg:x3; val_offset:270690*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270690*0 + 3*374*FLEN/8, x4, x1, x2)

inst_90231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3a07fffffffffff; valaddr_reg:x3; val_offset:270693*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270693*0 + 3*375*FLEN/8, x4, x1, x2)

inst_90232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3a0ffffffffffff; valaddr_reg:x3; val_offset:270696*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270696*0 + 3*376*FLEN/8, x4, x1, x2)

inst_90233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3a1ffffffffffff; valaddr_reg:x3; val_offset:270699*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270699*0 + 3*377*FLEN/8, x4, x1, x2)

inst_90234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3a3ffffffffffff; valaddr_reg:x3; val_offset:270702*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270702*0 + 3*378*FLEN/8, x4, x1, x2)

inst_90235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3a7ffffffffffff; valaddr_reg:x3; val_offset:270705*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270705*0 + 3*379*FLEN/8, x4, x1, x2)

inst_90236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3a8000000000000; valaddr_reg:x3; val_offset:270708*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270708*0 + 3*380*FLEN/8, x4, x1, x2)

inst_90237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3ac000000000000; valaddr_reg:x3; val_offset:270711*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270711*0 + 3*381*FLEN/8, x4, x1, x2)

inst_90238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3ae000000000000; valaddr_reg:x3; val_offset:270714*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270714*0 + 3*382*FLEN/8, x4, x1, x2)

inst_90239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3af000000000000; valaddr_reg:x3; val_offset:270717*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270717*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_90240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3af800000000000; valaddr_reg:x3; val_offset:270720*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270720*0 + 3*384*FLEN/8, x4, x1, x2)

inst_90241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3afc00000000000; valaddr_reg:x3; val_offset:270723*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270723*0 + 3*385*FLEN/8, x4, x1, x2)

inst_90242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3afe00000000000; valaddr_reg:x3; val_offset:270726*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270726*0 + 3*386*FLEN/8, x4, x1, x2)

inst_90243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3aff00000000000; valaddr_reg:x3; val_offset:270729*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270729*0 + 3*387*FLEN/8, x4, x1, x2)

inst_90244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3aff80000000000; valaddr_reg:x3; val_offset:270732*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270732*0 + 3*388*FLEN/8, x4, x1, x2)

inst_90245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3affc0000000000; valaddr_reg:x3; val_offset:270735*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270735*0 + 3*389*FLEN/8, x4, x1, x2)

inst_90246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3affe0000000000; valaddr_reg:x3; val_offset:270738*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270738*0 + 3*390*FLEN/8, x4, x1, x2)

inst_90247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3afff0000000000; valaddr_reg:x3; val_offset:270741*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270741*0 + 3*391*FLEN/8, x4, x1, x2)

inst_90248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3afff8000000000; valaddr_reg:x3; val_offset:270744*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270744*0 + 3*392*FLEN/8, x4, x1, x2)

inst_90249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3afffc000000000; valaddr_reg:x3; val_offset:270747*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270747*0 + 3*393*FLEN/8, x4, x1, x2)

inst_90250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3afffe000000000; valaddr_reg:x3; val_offset:270750*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270750*0 + 3*394*FLEN/8, x4, x1, x2)

inst_90251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3affff000000000; valaddr_reg:x3; val_offset:270753*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270753*0 + 3*395*FLEN/8, x4, x1, x2)

inst_90252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3affff800000000; valaddr_reg:x3; val_offset:270756*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270756*0 + 3*396*FLEN/8, x4, x1, x2)

inst_90253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3affffc00000000; valaddr_reg:x3; val_offset:270759*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270759*0 + 3*397*FLEN/8, x4, x1, x2)

inst_90254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3affffe00000000; valaddr_reg:x3; val_offset:270762*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270762*0 + 3*398*FLEN/8, x4, x1, x2)

inst_90255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3afffff00000000; valaddr_reg:x3; val_offset:270765*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270765*0 + 3*399*FLEN/8, x4, x1, x2)

inst_90256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3afffff80000000; valaddr_reg:x3; val_offset:270768*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270768*0 + 3*400*FLEN/8, x4, x1, x2)

inst_90257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3afffffc0000000; valaddr_reg:x3; val_offset:270771*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270771*0 + 3*401*FLEN/8, x4, x1, x2)

inst_90258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3afffffe0000000; valaddr_reg:x3; val_offset:270774*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270774*0 + 3*402*FLEN/8, x4, x1, x2)

inst_90259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3affffff0000000; valaddr_reg:x3; val_offset:270777*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270777*0 + 3*403*FLEN/8, x4, x1, x2)

inst_90260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3affffff8000000; valaddr_reg:x3; val_offset:270780*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270780*0 + 3*404*FLEN/8, x4, x1, x2)

inst_90261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3affffffc000000; valaddr_reg:x3; val_offset:270783*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270783*0 + 3*405*FLEN/8, x4, x1, x2)

inst_90262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3affffffe000000; valaddr_reg:x3; val_offset:270786*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270786*0 + 3*406*FLEN/8, x4, x1, x2)

inst_90263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3afffffff000000; valaddr_reg:x3; val_offset:270789*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270789*0 + 3*407*FLEN/8, x4, x1, x2)

inst_90264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3afffffff800000; valaddr_reg:x3; val_offset:270792*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270792*0 + 3*408*FLEN/8, x4, x1, x2)

inst_90265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3afffffffc00000; valaddr_reg:x3; val_offset:270795*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270795*0 + 3*409*FLEN/8, x4, x1, x2)

inst_90266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3afffffffe00000; valaddr_reg:x3; val_offset:270798*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270798*0 + 3*410*FLEN/8, x4, x1, x2)

inst_90267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3affffffff00000; valaddr_reg:x3; val_offset:270801*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270801*0 + 3*411*FLEN/8, x4, x1, x2)

inst_90268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3affffffff80000; valaddr_reg:x3; val_offset:270804*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270804*0 + 3*412*FLEN/8, x4, x1, x2)

inst_90269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3affffffffc0000; valaddr_reg:x3; val_offset:270807*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270807*0 + 3*413*FLEN/8, x4, x1, x2)

inst_90270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3affffffffe0000; valaddr_reg:x3; val_offset:270810*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270810*0 + 3*414*FLEN/8, x4, x1, x2)

inst_90271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3afffffffff0000; valaddr_reg:x3; val_offset:270813*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270813*0 + 3*415*FLEN/8, x4, x1, x2)

inst_90272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3afffffffff8000; valaddr_reg:x3; val_offset:270816*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270816*0 + 3*416*FLEN/8, x4, x1, x2)

inst_90273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3afffffffffc000; valaddr_reg:x3; val_offset:270819*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270819*0 + 3*417*FLEN/8, x4, x1, x2)

inst_90274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3afffffffffe000; valaddr_reg:x3; val_offset:270822*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270822*0 + 3*418*FLEN/8, x4, x1, x2)

inst_90275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3affffffffff000; valaddr_reg:x3; val_offset:270825*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270825*0 + 3*419*FLEN/8, x4, x1, x2)

inst_90276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3affffffffff800; valaddr_reg:x3; val_offset:270828*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270828*0 + 3*420*FLEN/8, x4, x1, x2)

inst_90277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3affffffffffc00; valaddr_reg:x3; val_offset:270831*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270831*0 + 3*421*FLEN/8, x4, x1, x2)

inst_90278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3affffffffffe00; valaddr_reg:x3; val_offset:270834*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270834*0 + 3*422*FLEN/8, x4, x1, x2)

inst_90279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3afffffffffff00; valaddr_reg:x3; val_offset:270837*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270837*0 + 3*423*FLEN/8, x4, x1, x2)

inst_90280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3afffffffffff80; valaddr_reg:x3; val_offset:270840*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270840*0 + 3*424*FLEN/8, x4, x1, x2)

inst_90281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3afffffffffffc0; valaddr_reg:x3; val_offset:270843*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270843*0 + 3*425*FLEN/8, x4, x1, x2)

inst_90282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3afffffffffffe0; valaddr_reg:x3; val_offset:270846*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270846*0 + 3*426*FLEN/8, x4, x1, x2)

inst_90283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3affffffffffff0; valaddr_reg:x3; val_offset:270849*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270849*0 + 3*427*FLEN/8, x4, x1, x2)

inst_90284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3affffffffffff8; valaddr_reg:x3; val_offset:270852*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270852*0 + 3*428*FLEN/8, x4, x1, x2)

inst_90285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3affffffffffffc; valaddr_reg:x3; val_offset:270855*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270855*0 + 3*429*FLEN/8, x4, x1, x2)

inst_90286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3affffffffffffe; valaddr_reg:x3; val_offset:270858*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270858*0 + 3*430*FLEN/8, x4, x1, x2)

inst_90287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc2a837877dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facc2a837877dbd; op2val:0x0;
op3val:0x3afffffffffffff; valaddr_reg:x3; val_offset:270861*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270861*0 + 3*431*FLEN/8, x4, x1, x2)

inst_90288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ac0000000000000; valaddr_reg:x3; val_offset:270864*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270864*0 + 3*432*FLEN/8, x4, x1, x2)

inst_90289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ac0000000000001; valaddr_reg:x3; val_offset:270867*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270867*0 + 3*433*FLEN/8, x4, x1, x2)

inst_90290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ac0000000000003; valaddr_reg:x3; val_offset:270870*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270870*0 + 3*434*FLEN/8, x4, x1, x2)

inst_90291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ac0000000000007; valaddr_reg:x3; val_offset:270873*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270873*0 + 3*435*FLEN/8, x4, x1, x2)

inst_90292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ac000000000000f; valaddr_reg:x3; val_offset:270876*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270876*0 + 3*436*FLEN/8, x4, x1, x2)

inst_90293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ac000000000001f; valaddr_reg:x3; val_offset:270879*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270879*0 + 3*437*FLEN/8, x4, x1, x2)

inst_90294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ac000000000003f; valaddr_reg:x3; val_offset:270882*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270882*0 + 3*438*FLEN/8, x4, x1, x2)

inst_90295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ac000000000007f; valaddr_reg:x3; val_offset:270885*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270885*0 + 3*439*FLEN/8, x4, x1, x2)

inst_90296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ac00000000000ff; valaddr_reg:x3; val_offset:270888*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270888*0 + 3*440*FLEN/8, x4, x1, x2)

inst_90297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ac00000000001ff; valaddr_reg:x3; val_offset:270891*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270891*0 + 3*441*FLEN/8, x4, x1, x2)

inst_90298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ac00000000003ff; valaddr_reg:x3; val_offset:270894*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270894*0 + 3*442*FLEN/8, x4, x1, x2)

inst_90299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ac00000000007ff; valaddr_reg:x3; val_offset:270897*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270897*0 + 3*443*FLEN/8, x4, x1, x2)

inst_90300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ac0000000000fff; valaddr_reg:x3; val_offset:270900*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270900*0 + 3*444*FLEN/8, x4, x1, x2)

inst_90301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ac0000000001fff; valaddr_reg:x3; val_offset:270903*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270903*0 + 3*445*FLEN/8, x4, x1, x2)

inst_90302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ac0000000003fff; valaddr_reg:x3; val_offset:270906*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270906*0 + 3*446*FLEN/8, x4, x1, x2)

inst_90303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ac0000000007fff; valaddr_reg:x3; val_offset:270909*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270909*0 + 3*447*FLEN/8, x4, x1, x2)

inst_90304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ac000000000ffff; valaddr_reg:x3; val_offset:270912*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270912*0 + 3*448*FLEN/8, x4, x1, x2)

inst_90305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ac000000001ffff; valaddr_reg:x3; val_offset:270915*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270915*0 + 3*449*FLEN/8, x4, x1, x2)

inst_90306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ac000000003ffff; valaddr_reg:x3; val_offset:270918*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270918*0 + 3*450*FLEN/8, x4, x1, x2)

inst_90307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ac000000007ffff; valaddr_reg:x3; val_offset:270921*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270921*0 + 3*451*FLEN/8, x4, x1, x2)

inst_90308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ac00000000fffff; valaddr_reg:x3; val_offset:270924*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270924*0 + 3*452*FLEN/8, x4, x1, x2)

inst_90309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ac00000001fffff; valaddr_reg:x3; val_offset:270927*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270927*0 + 3*453*FLEN/8, x4, x1, x2)

inst_90310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ac00000003fffff; valaddr_reg:x3; val_offset:270930*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270930*0 + 3*454*FLEN/8, x4, x1, x2)

inst_90311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ac00000007fffff; valaddr_reg:x3; val_offset:270933*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270933*0 + 3*455*FLEN/8, x4, x1, x2)

inst_90312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ac0000000ffffff; valaddr_reg:x3; val_offset:270936*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270936*0 + 3*456*FLEN/8, x4, x1, x2)

inst_90313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ac0000001ffffff; valaddr_reg:x3; val_offset:270939*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270939*0 + 3*457*FLEN/8, x4, x1, x2)

inst_90314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ac0000003ffffff; valaddr_reg:x3; val_offset:270942*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270942*0 + 3*458*FLEN/8, x4, x1, x2)

inst_90315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ac0000007ffffff; valaddr_reg:x3; val_offset:270945*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270945*0 + 3*459*FLEN/8, x4, x1, x2)

inst_90316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ac000000fffffff; valaddr_reg:x3; val_offset:270948*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270948*0 + 3*460*FLEN/8, x4, x1, x2)

inst_90317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ac000001fffffff; valaddr_reg:x3; val_offset:270951*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270951*0 + 3*461*FLEN/8, x4, x1, x2)

inst_90318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ac000003fffffff; valaddr_reg:x3; val_offset:270954*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270954*0 + 3*462*FLEN/8, x4, x1, x2)

inst_90319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ac000007fffffff; valaddr_reg:x3; val_offset:270957*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270957*0 + 3*463*FLEN/8, x4, x1, x2)

inst_90320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ac00000ffffffff; valaddr_reg:x3; val_offset:270960*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270960*0 + 3*464*FLEN/8, x4, x1, x2)

inst_90321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ac00001ffffffff; valaddr_reg:x3; val_offset:270963*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270963*0 + 3*465*FLEN/8, x4, x1, x2)

inst_90322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ac00003ffffffff; valaddr_reg:x3; val_offset:270966*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270966*0 + 3*466*FLEN/8, x4, x1, x2)

inst_90323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ac00007ffffffff; valaddr_reg:x3; val_offset:270969*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270969*0 + 3*467*FLEN/8, x4, x1, x2)

inst_90324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ac0000fffffffff; valaddr_reg:x3; val_offset:270972*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270972*0 + 3*468*FLEN/8, x4, x1, x2)

inst_90325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ac0001fffffffff; valaddr_reg:x3; val_offset:270975*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270975*0 + 3*469*FLEN/8, x4, x1, x2)

inst_90326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ac0003fffffffff; valaddr_reg:x3; val_offset:270978*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270978*0 + 3*470*FLEN/8, x4, x1, x2)

inst_90327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ac0007fffffffff; valaddr_reg:x3; val_offset:270981*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270981*0 + 3*471*FLEN/8, x4, x1, x2)

inst_90328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ac000ffffffffff; valaddr_reg:x3; val_offset:270984*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270984*0 + 3*472*FLEN/8, x4, x1, x2)

inst_90329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ac001ffffffffff; valaddr_reg:x3; val_offset:270987*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270987*0 + 3*473*FLEN/8, x4, x1, x2)

inst_90330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ac003ffffffffff; valaddr_reg:x3; val_offset:270990*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270990*0 + 3*474*FLEN/8, x4, x1, x2)

inst_90331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ac007ffffffffff; valaddr_reg:x3; val_offset:270993*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270993*0 + 3*475*FLEN/8, x4, x1, x2)

inst_90332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ac00fffffffffff; valaddr_reg:x3; val_offset:270996*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270996*0 + 3*476*FLEN/8, x4, x1, x2)

inst_90333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ac01fffffffffff; valaddr_reg:x3; val_offset:270999*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270999*0 + 3*477*FLEN/8, x4, x1, x2)

inst_90334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ac03fffffffffff; valaddr_reg:x3; val_offset:271002*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271002*0 + 3*478*FLEN/8, x4, x1, x2)

inst_90335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ac07fffffffffff; valaddr_reg:x3; val_offset:271005*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271005*0 + 3*479*FLEN/8, x4, x1, x2)

inst_90336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ac0ffffffffffff; valaddr_reg:x3; val_offset:271008*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271008*0 + 3*480*FLEN/8, x4, x1, x2)

inst_90337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ac1ffffffffffff; valaddr_reg:x3; val_offset:271011*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271011*0 + 3*481*FLEN/8, x4, x1, x2)

inst_90338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ac3ffffffffffff; valaddr_reg:x3; val_offset:271014*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271014*0 + 3*482*FLEN/8, x4, x1, x2)

inst_90339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ac7ffffffffffff; valaddr_reg:x3; val_offset:271017*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271017*0 + 3*483*FLEN/8, x4, x1, x2)

inst_90340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ac8000000000000; valaddr_reg:x3; val_offset:271020*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271020*0 + 3*484*FLEN/8, x4, x1, x2)

inst_90341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3acc000000000000; valaddr_reg:x3; val_offset:271023*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271023*0 + 3*485*FLEN/8, x4, x1, x2)

inst_90342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ace000000000000; valaddr_reg:x3; val_offset:271026*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271026*0 + 3*486*FLEN/8, x4, x1, x2)

inst_90343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3acf000000000000; valaddr_reg:x3; val_offset:271029*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271029*0 + 3*487*FLEN/8, x4, x1, x2)

inst_90344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3acf800000000000; valaddr_reg:x3; val_offset:271032*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271032*0 + 3*488*FLEN/8, x4, x1, x2)

inst_90345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3acfc00000000000; valaddr_reg:x3; val_offset:271035*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271035*0 + 3*489*FLEN/8, x4, x1, x2)

inst_90346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3acfe00000000000; valaddr_reg:x3; val_offset:271038*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271038*0 + 3*490*FLEN/8, x4, x1, x2)

inst_90347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3acff00000000000; valaddr_reg:x3; val_offset:271041*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271041*0 + 3*491*FLEN/8, x4, x1, x2)

inst_90348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3acff80000000000; valaddr_reg:x3; val_offset:271044*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271044*0 + 3*492*FLEN/8, x4, x1, x2)

inst_90349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3acffc0000000000; valaddr_reg:x3; val_offset:271047*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271047*0 + 3*493*FLEN/8, x4, x1, x2)

inst_90350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3acffe0000000000; valaddr_reg:x3; val_offset:271050*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271050*0 + 3*494*FLEN/8, x4, x1, x2)

inst_90351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3acfff0000000000; valaddr_reg:x3; val_offset:271053*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271053*0 + 3*495*FLEN/8, x4, x1, x2)

inst_90352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3acfff8000000000; valaddr_reg:x3; val_offset:271056*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271056*0 + 3*496*FLEN/8, x4, x1, x2)

inst_90353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3acfffc000000000; valaddr_reg:x3; val_offset:271059*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271059*0 + 3*497*FLEN/8, x4, x1, x2)

inst_90354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3acfffe000000000; valaddr_reg:x3; val_offset:271062*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271062*0 + 3*498*FLEN/8, x4, x1, x2)

inst_90355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3acffff000000000; valaddr_reg:x3; val_offset:271065*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271065*0 + 3*499*FLEN/8, x4, x1, x2)

inst_90356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3acffff800000000; valaddr_reg:x3; val_offset:271068*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271068*0 + 3*500*FLEN/8, x4, x1, x2)

inst_90357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3acffffc00000000; valaddr_reg:x3; val_offset:271071*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271071*0 + 3*501*FLEN/8, x4, x1, x2)

inst_90358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3acffffe00000000; valaddr_reg:x3; val_offset:271074*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271074*0 + 3*502*FLEN/8, x4, x1, x2)

inst_90359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3acfffff00000000; valaddr_reg:x3; val_offset:271077*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271077*0 + 3*503*FLEN/8, x4, x1, x2)

inst_90360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3acfffff80000000; valaddr_reg:x3; val_offset:271080*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271080*0 + 3*504*FLEN/8, x4, x1, x2)

inst_90361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3acfffffc0000000; valaddr_reg:x3; val_offset:271083*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271083*0 + 3*505*FLEN/8, x4, x1, x2)

inst_90362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3acfffffe0000000; valaddr_reg:x3; val_offset:271086*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271086*0 + 3*506*FLEN/8, x4, x1, x2)

inst_90363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3acffffff0000000; valaddr_reg:x3; val_offset:271089*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271089*0 + 3*507*FLEN/8, x4, x1, x2)

inst_90364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3acffffff8000000; valaddr_reg:x3; val_offset:271092*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271092*0 + 3*508*FLEN/8, x4, x1, x2)

inst_90365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3acffffffc000000; valaddr_reg:x3; val_offset:271095*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271095*0 + 3*509*FLEN/8, x4, x1, x2)

inst_90366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3acffffffe000000; valaddr_reg:x3; val_offset:271098*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271098*0 + 3*510*FLEN/8, x4, x1, x2)

inst_90367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3acfffffff000000; valaddr_reg:x3; val_offset:271101*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271101*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_90368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3acfffffff800000; valaddr_reg:x3; val_offset:271104*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271104*0 + 3*512*FLEN/8, x4, x1, x2)

inst_90369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3acfffffffc00000; valaddr_reg:x3; val_offset:271107*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271107*0 + 3*513*FLEN/8, x4, x1, x2)

inst_90370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3acfffffffe00000; valaddr_reg:x3; val_offset:271110*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271110*0 + 3*514*FLEN/8, x4, x1, x2)

inst_90371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3acffffffff00000; valaddr_reg:x3; val_offset:271113*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271113*0 + 3*515*FLEN/8, x4, x1, x2)

inst_90372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3acffffffff80000; valaddr_reg:x3; val_offset:271116*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271116*0 + 3*516*FLEN/8, x4, x1, x2)

inst_90373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3acffffffffc0000; valaddr_reg:x3; val_offset:271119*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271119*0 + 3*517*FLEN/8, x4, x1, x2)

inst_90374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3acffffffffe0000; valaddr_reg:x3; val_offset:271122*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271122*0 + 3*518*FLEN/8, x4, x1, x2)

inst_90375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3acfffffffff0000; valaddr_reg:x3; val_offset:271125*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271125*0 + 3*519*FLEN/8, x4, x1, x2)

inst_90376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3acfffffffff8000; valaddr_reg:x3; val_offset:271128*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271128*0 + 3*520*FLEN/8, x4, x1, x2)

inst_90377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3acfffffffffc000; valaddr_reg:x3; val_offset:271131*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271131*0 + 3*521*FLEN/8, x4, x1, x2)

inst_90378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3acfffffffffe000; valaddr_reg:x3; val_offset:271134*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271134*0 + 3*522*FLEN/8, x4, x1, x2)

inst_90379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3acffffffffff000; valaddr_reg:x3; val_offset:271137*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271137*0 + 3*523*FLEN/8, x4, x1, x2)

inst_90380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3acffffffffff800; valaddr_reg:x3; val_offset:271140*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271140*0 + 3*524*FLEN/8, x4, x1, x2)

inst_90381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3acffffffffffc00; valaddr_reg:x3; val_offset:271143*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271143*0 + 3*525*FLEN/8, x4, x1, x2)

inst_90382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3acffffffffffe00; valaddr_reg:x3; val_offset:271146*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271146*0 + 3*526*FLEN/8, x4, x1, x2)

inst_90383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3acfffffffffff00; valaddr_reg:x3; val_offset:271149*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271149*0 + 3*527*FLEN/8, x4, x1, x2)

inst_90384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3acfffffffffff80; valaddr_reg:x3; val_offset:271152*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271152*0 + 3*528*FLEN/8, x4, x1, x2)

inst_90385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3acfffffffffffc0; valaddr_reg:x3; val_offset:271155*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271155*0 + 3*529*FLEN/8, x4, x1, x2)

inst_90386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3acfffffffffffe0; valaddr_reg:x3; val_offset:271158*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271158*0 + 3*530*FLEN/8, x4, x1, x2)

inst_90387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3acffffffffffff0; valaddr_reg:x3; val_offset:271161*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271161*0 + 3*531*FLEN/8, x4, x1, x2)

inst_90388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3acffffffffffff8; valaddr_reg:x3; val_offset:271164*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271164*0 + 3*532*FLEN/8, x4, x1, x2)

inst_90389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3acffffffffffffc; valaddr_reg:x3; val_offset:271167*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271167*0 + 3*533*FLEN/8, x4, x1, x2)

inst_90390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3acffffffffffffe; valaddr_reg:x3; val_offset:271170*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271170*0 + 3*534*FLEN/8, x4, x1, x2)

inst_90391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ac and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3acfffffffffffff; valaddr_reg:x3; val_offset:271173*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271173*0 + 3*535*FLEN/8, x4, x1, x2)

inst_90392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:271176*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271176*0 + 3*536*FLEN/8, x4, x1, x2)

inst_90393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:271179*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271179*0 + 3*537*FLEN/8, x4, x1, x2)

inst_90394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:271182*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271182*0 + 3*538*FLEN/8, x4, x1, x2)

inst_90395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:271185*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271185*0 + 3*539*FLEN/8, x4, x1, x2)

inst_90396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:271188*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271188*0 + 3*540*FLEN/8, x4, x1, x2)

inst_90397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:271191*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271191*0 + 3*541*FLEN/8, x4, x1, x2)

inst_90398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:271194*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271194*0 + 3*542*FLEN/8, x4, x1, x2)

inst_90399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:271197*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271197*0 + 3*543*FLEN/8, x4, x1, x2)

inst_90400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:271200*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271200*0 + 3*544*FLEN/8, x4, x1, x2)

inst_90401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:271203*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271203*0 + 3*545*FLEN/8, x4, x1, x2)

inst_90402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:271206*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271206*0 + 3*546*FLEN/8, x4, x1, x2)

inst_90403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:271209*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271209*0 + 3*547*FLEN/8, x4, x1, x2)

inst_90404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:271212*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271212*0 + 3*548*FLEN/8, x4, x1, x2)

inst_90405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:271215*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271215*0 + 3*549*FLEN/8, x4, x1, x2)

inst_90406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:271218*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271218*0 + 3*550*FLEN/8, x4, x1, x2)

inst_90407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:271221*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271221*0 + 3*551*FLEN/8, x4, x1, x2)

inst_90408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:271224*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271224*0 + 3*552*FLEN/8, x4, x1, x2)

inst_90409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:271227*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271227*0 + 3*553*FLEN/8, x4, x1, x2)

inst_90410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:271230*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271230*0 + 3*554*FLEN/8, x4, x1, x2)

inst_90411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:271233*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271233*0 + 3*555*FLEN/8, x4, x1, x2)

inst_90412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:271236*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271236*0 + 3*556*FLEN/8, x4, x1, x2)

inst_90413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd375c647f7a0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1c300f0dd8335 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facd375c647f7a0; op2val:0x2031c300f0dd8335;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:271239*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271239*0 + 3*557*FLEN/8, x4, x1, x2)

inst_90414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc90000000000000; valaddr_reg:x3; val_offset:271242*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271242*0 + 3*558*FLEN/8, x4, x1, x2)

inst_90415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc90000000000001; valaddr_reg:x3; val_offset:271245*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271245*0 + 3*559*FLEN/8, x4, x1, x2)

inst_90416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc90000000000003; valaddr_reg:x3; val_offset:271248*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271248*0 + 3*560*FLEN/8, x4, x1, x2)

inst_90417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc90000000000007; valaddr_reg:x3; val_offset:271251*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271251*0 + 3*561*FLEN/8, x4, x1, x2)

inst_90418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9000000000000f; valaddr_reg:x3; val_offset:271254*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271254*0 + 3*562*FLEN/8, x4, x1, x2)

inst_90419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9000000000001f; valaddr_reg:x3; val_offset:271257*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271257*0 + 3*563*FLEN/8, x4, x1, x2)

inst_90420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9000000000003f; valaddr_reg:x3; val_offset:271260*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271260*0 + 3*564*FLEN/8, x4, x1, x2)

inst_90421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9000000000007f; valaddr_reg:x3; val_offset:271263*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271263*0 + 3*565*FLEN/8, x4, x1, x2)

inst_90422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc900000000000ff; valaddr_reg:x3; val_offset:271266*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271266*0 + 3*566*FLEN/8, x4, x1, x2)

inst_90423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc900000000001ff; valaddr_reg:x3; val_offset:271269*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271269*0 + 3*567*FLEN/8, x4, x1, x2)

inst_90424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc900000000003ff; valaddr_reg:x3; val_offset:271272*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271272*0 + 3*568*FLEN/8, x4, x1, x2)

inst_90425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc900000000007ff; valaddr_reg:x3; val_offset:271275*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271275*0 + 3*569*FLEN/8, x4, x1, x2)

inst_90426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc90000000000fff; valaddr_reg:x3; val_offset:271278*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271278*0 + 3*570*FLEN/8, x4, x1, x2)

inst_90427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc90000000001fff; valaddr_reg:x3; val_offset:271281*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271281*0 + 3*571*FLEN/8, x4, x1, x2)

inst_90428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc90000000003fff; valaddr_reg:x3; val_offset:271284*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271284*0 + 3*572*FLEN/8, x4, x1, x2)

inst_90429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc90000000007fff; valaddr_reg:x3; val_offset:271287*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271287*0 + 3*573*FLEN/8, x4, x1, x2)

inst_90430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9000000000ffff; valaddr_reg:x3; val_offset:271290*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271290*0 + 3*574*FLEN/8, x4, x1, x2)

inst_90431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9000000001ffff; valaddr_reg:x3; val_offset:271293*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271293*0 + 3*575*FLEN/8, x4, x1, x2)

inst_90432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9000000003ffff; valaddr_reg:x3; val_offset:271296*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271296*0 + 3*576*FLEN/8, x4, x1, x2)

inst_90433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9000000007ffff; valaddr_reg:x3; val_offset:271299*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271299*0 + 3*577*FLEN/8, x4, x1, x2)

inst_90434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc900000000fffff; valaddr_reg:x3; val_offset:271302*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271302*0 + 3*578*FLEN/8, x4, x1, x2)

inst_90435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc900000001fffff; valaddr_reg:x3; val_offset:271305*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271305*0 + 3*579*FLEN/8, x4, x1, x2)

inst_90436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc900000003fffff; valaddr_reg:x3; val_offset:271308*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271308*0 + 3*580*FLEN/8, x4, x1, x2)

inst_90437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc900000007fffff; valaddr_reg:x3; val_offset:271311*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271311*0 + 3*581*FLEN/8, x4, x1, x2)

inst_90438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc90000000ffffff; valaddr_reg:x3; val_offset:271314*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271314*0 + 3*582*FLEN/8, x4, x1, x2)

inst_90439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc90000001ffffff; valaddr_reg:x3; val_offset:271317*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271317*0 + 3*583*FLEN/8, x4, x1, x2)

inst_90440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc90000003ffffff; valaddr_reg:x3; val_offset:271320*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271320*0 + 3*584*FLEN/8, x4, x1, x2)

inst_90441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc90000007ffffff; valaddr_reg:x3; val_offset:271323*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271323*0 + 3*585*FLEN/8, x4, x1, x2)

inst_90442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9000000fffffff; valaddr_reg:x3; val_offset:271326*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271326*0 + 3*586*FLEN/8, x4, x1, x2)

inst_90443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9000001fffffff; valaddr_reg:x3; val_offset:271329*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271329*0 + 3*587*FLEN/8, x4, x1, x2)

inst_90444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9000003fffffff; valaddr_reg:x3; val_offset:271332*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271332*0 + 3*588*FLEN/8, x4, x1, x2)

inst_90445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9000007fffffff; valaddr_reg:x3; val_offset:271335*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271335*0 + 3*589*FLEN/8, x4, x1, x2)

inst_90446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc900000ffffffff; valaddr_reg:x3; val_offset:271338*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271338*0 + 3*590*FLEN/8, x4, x1, x2)

inst_90447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc900001ffffffff; valaddr_reg:x3; val_offset:271341*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271341*0 + 3*591*FLEN/8, x4, x1, x2)

inst_90448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc900003ffffffff; valaddr_reg:x3; val_offset:271344*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271344*0 + 3*592*FLEN/8, x4, x1, x2)

inst_90449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc900007ffffffff; valaddr_reg:x3; val_offset:271347*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271347*0 + 3*593*FLEN/8, x4, x1, x2)

inst_90450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc90000fffffffff; valaddr_reg:x3; val_offset:271350*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271350*0 + 3*594*FLEN/8, x4, x1, x2)

inst_90451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc90001fffffffff; valaddr_reg:x3; val_offset:271353*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271353*0 + 3*595*FLEN/8, x4, x1, x2)

inst_90452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc90003fffffffff; valaddr_reg:x3; val_offset:271356*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271356*0 + 3*596*FLEN/8, x4, x1, x2)

inst_90453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc90007fffffffff; valaddr_reg:x3; val_offset:271359*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271359*0 + 3*597*FLEN/8, x4, x1, x2)

inst_90454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9000ffffffffff; valaddr_reg:x3; val_offset:271362*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271362*0 + 3*598*FLEN/8, x4, x1, x2)

inst_90455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9001ffffffffff; valaddr_reg:x3; val_offset:271365*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271365*0 + 3*599*FLEN/8, x4, x1, x2)

inst_90456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9003ffffffffff; valaddr_reg:x3; val_offset:271368*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271368*0 + 3*600*FLEN/8, x4, x1, x2)

inst_90457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9007ffffffffff; valaddr_reg:x3; val_offset:271371*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271371*0 + 3*601*FLEN/8, x4, x1, x2)

inst_90458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc900fffffffffff; valaddr_reg:x3; val_offset:271374*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271374*0 + 3*602*FLEN/8, x4, x1, x2)

inst_90459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc901fffffffffff; valaddr_reg:x3; val_offset:271377*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271377*0 + 3*603*FLEN/8, x4, x1, x2)

inst_90460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc903fffffffffff; valaddr_reg:x3; val_offset:271380*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271380*0 + 3*604*FLEN/8, x4, x1, x2)

inst_90461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc907fffffffffff; valaddr_reg:x3; val_offset:271383*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271383*0 + 3*605*FLEN/8, x4, x1, x2)

inst_90462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc90ffffffffffff; valaddr_reg:x3; val_offset:271386*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271386*0 + 3*606*FLEN/8, x4, x1, x2)

inst_90463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc91ffffffffffff; valaddr_reg:x3; val_offset:271389*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271389*0 + 3*607*FLEN/8, x4, x1, x2)

inst_90464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc93ffffffffffff; valaddr_reg:x3; val_offset:271392*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271392*0 + 3*608*FLEN/8, x4, x1, x2)

inst_90465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc97ffffffffffff; valaddr_reg:x3; val_offset:271395*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271395*0 + 3*609*FLEN/8, x4, x1, x2)

inst_90466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc98000000000000; valaddr_reg:x3; val_offset:271398*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271398*0 + 3*610*FLEN/8, x4, x1, x2)

inst_90467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9c000000000000; valaddr_reg:x3; val_offset:271401*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271401*0 + 3*611*FLEN/8, x4, x1, x2)

inst_90468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9e000000000000; valaddr_reg:x3; val_offset:271404*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271404*0 + 3*612*FLEN/8, x4, x1, x2)

inst_90469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9f000000000000; valaddr_reg:x3; val_offset:271407*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271407*0 + 3*613*FLEN/8, x4, x1, x2)

inst_90470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9f800000000000; valaddr_reg:x3; val_offset:271410*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271410*0 + 3*614*FLEN/8, x4, x1, x2)

inst_90471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9fc00000000000; valaddr_reg:x3; val_offset:271413*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271413*0 + 3*615*FLEN/8, x4, x1, x2)

inst_90472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9fe00000000000; valaddr_reg:x3; val_offset:271416*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271416*0 + 3*616*FLEN/8, x4, x1, x2)

inst_90473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9ff00000000000; valaddr_reg:x3; val_offset:271419*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271419*0 + 3*617*FLEN/8, x4, x1, x2)

inst_90474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9ff80000000000; valaddr_reg:x3; val_offset:271422*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271422*0 + 3*618*FLEN/8, x4, x1, x2)

inst_90475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9ffc0000000000; valaddr_reg:x3; val_offset:271425*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271425*0 + 3*619*FLEN/8, x4, x1, x2)

inst_90476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9ffe0000000000; valaddr_reg:x3; val_offset:271428*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271428*0 + 3*620*FLEN/8, x4, x1, x2)

inst_90477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9fff0000000000; valaddr_reg:x3; val_offset:271431*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271431*0 + 3*621*FLEN/8, x4, x1, x2)

inst_90478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9fff8000000000; valaddr_reg:x3; val_offset:271434*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271434*0 + 3*622*FLEN/8, x4, x1, x2)

inst_90479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9fffc000000000; valaddr_reg:x3; val_offset:271437*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271437*0 + 3*623*FLEN/8, x4, x1, x2)

inst_90480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9fffe000000000; valaddr_reg:x3; val_offset:271440*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271440*0 + 3*624*FLEN/8, x4, x1, x2)

inst_90481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9ffff000000000; valaddr_reg:x3; val_offset:271443*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271443*0 + 3*625*FLEN/8, x4, x1, x2)

inst_90482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9ffff800000000; valaddr_reg:x3; val_offset:271446*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271446*0 + 3*626*FLEN/8, x4, x1, x2)

inst_90483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9ffffc00000000; valaddr_reg:x3; val_offset:271449*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271449*0 + 3*627*FLEN/8, x4, x1, x2)

inst_90484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9ffffe00000000; valaddr_reg:x3; val_offset:271452*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271452*0 + 3*628*FLEN/8, x4, x1, x2)

inst_90485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9fffff00000000; valaddr_reg:x3; val_offset:271455*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271455*0 + 3*629*FLEN/8, x4, x1, x2)

inst_90486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9fffff80000000; valaddr_reg:x3; val_offset:271458*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271458*0 + 3*630*FLEN/8, x4, x1, x2)

inst_90487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9fffffc0000000; valaddr_reg:x3; val_offset:271461*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271461*0 + 3*631*FLEN/8, x4, x1, x2)

inst_90488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9fffffe0000000; valaddr_reg:x3; val_offset:271464*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271464*0 + 3*632*FLEN/8, x4, x1, x2)

inst_90489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9ffffff0000000; valaddr_reg:x3; val_offset:271467*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271467*0 + 3*633*FLEN/8, x4, x1, x2)

inst_90490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9ffffff8000000; valaddr_reg:x3; val_offset:271470*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271470*0 + 3*634*FLEN/8, x4, x1, x2)

inst_90491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9ffffffc000000; valaddr_reg:x3; val_offset:271473*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271473*0 + 3*635*FLEN/8, x4, x1, x2)

inst_90492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9ffffffe000000; valaddr_reg:x3; val_offset:271476*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271476*0 + 3*636*FLEN/8, x4, x1, x2)

inst_90493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9fffffff000000; valaddr_reg:x3; val_offset:271479*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271479*0 + 3*637*FLEN/8, x4, x1, x2)

inst_90494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9fffffff800000; valaddr_reg:x3; val_offset:271482*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271482*0 + 3*638*FLEN/8, x4, x1, x2)

inst_90495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9fffffffc00000; valaddr_reg:x3; val_offset:271485*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271485*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_90496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9fffffffe00000; valaddr_reg:x3; val_offset:271488*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271488*0 + 3*640*FLEN/8, x4, x1, x2)

inst_90497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9ffffffff00000; valaddr_reg:x3; val_offset:271491*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271491*0 + 3*641*FLEN/8, x4, x1, x2)

inst_90498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9ffffffff80000; valaddr_reg:x3; val_offset:271494*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271494*0 + 3*642*FLEN/8, x4, x1, x2)

inst_90499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9ffffffffc0000; valaddr_reg:x3; val_offset:271497*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271497*0 + 3*643*FLEN/8, x4, x1, x2)

inst_90500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9ffffffffe0000; valaddr_reg:x3; val_offset:271500*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271500*0 + 3*644*FLEN/8, x4, x1, x2)

inst_90501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9fffffffff0000; valaddr_reg:x3; val_offset:271503*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271503*0 + 3*645*FLEN/8, x4, x1, x2)

inst_90502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9fffffffff8000; valaddr_reg:x3; val_offset:271506*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271506*0 + 3*646*FLEN/8, x4, x1, x2)

inst_90503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9fffffffffc000; valaddr_reg:x3; val_offset:271509*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271509*0 + 3*647*FLEN/8, x4, x1, x2)

inst_90504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9fffffffffe000; valaddr_reg:x3; val_offset:271512*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271512*0 + 3*648*FLEN/8, x4, x1, x2)

inst_90505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9ffffffffff000; valaddr_reg:x3; val_offset:271515*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271515*0 + 3*649*FLEN/8, x4, x1, x2)

inst_90506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9ffffffffff800; valaddr_reg:x3; val_offset:271518*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271518*0 + 3*650*FLEN/8, x4, x1, x2)

inst_90507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9ffffffffffc00; valaddr_reg:x3; val_offset:271521*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271521*0 + 3*651*FLEN/8, x4, x1, x2)

inst_90508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9ffffffffffe00; valaddr_reg:x3; val_offset:271524*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271524*0 + 3*652*FLEN/8, x4, x1, x2)

inst_90509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9fffffffffff00; valaddr_reg:x3; val_offset:271527*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271527*0 + 3*653*FLEN/8, x4, x1, x2)

inst_90510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9fffffffffff80; valaddr_reg:x3; val_offset:271530*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271530*0 + 3*654*FLEN/8, x4, x1, x2)

inst_90511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9fffffffffffc0; valaddr_reg:x3; val_offset:271533*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271533*0 + 3*655*FLEN/8, x4, x1, x2)

inst_90512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9fffffffffffe0; valaddr_reg:x3; val_offset:271536*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271536*0 + 3*656*FLEN/8, x4, x1, x2)

inst_90513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9ffffffffffff0; valaddr_reg:x3; val_offset:271539*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271539*0 + 3*657*FLEN/8, x4, x1, x2)

inst_90514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9ffffffffffff8; valaddr_reg:x3; val_offset:271542*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271542*0 + 3*658*FLEN/8, x4, x1, x2)

inst_90515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9ffffffffffffc; valaddr_reg:x3; val_offset:271545*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271545*0 + 3*659*FLEN/8, x4, x1, x2)

inst_90516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9ffffffffffffe; valaddr_reg:x3; val_offset:271548*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271548*0 + 3*660*FLEN/8, x4, x1, x2)

inst_90517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbc9fffffffffffff; valaddr_reg:x3; val_offset:271551*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271551*0 + 3*661*FLEN/8, x4, x1, x2)

inst_90518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:271554*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271554*0 + 3*662*FLEN/8, x4, x1, x2)

inst_90519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:271557*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271557*0 + 3*663*FLEN/8, x4, x1, x2)

inst_90520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:271560*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271560*0 + 3*664*FLEN/8, x4, x1, x2)

inst_90521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:271563*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271563*0 + 3*665*FLEN/8, x4, x1, x2)

inst_90522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:271566*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271566*0 + 3*666*FLEN/8, x4, x1, x2)

inst_90523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:271569*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271569*0 + 3*667*FLEN/8, x4, x1, x2)

inst_90524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:271572*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271572*0 + 3*668*FLEN/8, x4, x1, x2)

inst_90525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:271575*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271575*0 + 3*669*FLEN/8, x4, x1, x2)

inst_90526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:271578*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271578*0 + 3*670*FLEN/8, x4, x1, x2)

inst_90527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:271581*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271581*0 + 3*671*FLEN/8, x4, x1, x2)

inst_90528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:271584*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271584*0 + 3*672*FLEN/8, x4, x1, x2)

inst_90529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:271587*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271587*0 + 3*673*FLEN/8, x4, x1, x2)

inst_90530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:271590*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271590*0 + 3*674*FLEN/8, x4, x1, x2)

inst_90531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:271593*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271593*0 + 3*675*FLEN/8, x4, x1, x2)

inst_90532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:271596*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271596*0 + 3*676*FLEN/8, x4, x1, x2)

inst_90533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:271599*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271599*0 + 3*677*FLEN/8, x4, x1, x2)

inst_90534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:271602*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271602*0 + 3*678*FLEN/8, x4, x1, x2)

inst_90535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:271605*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271605*0 + 3*679*FLEN/8, x4, x1, x2)

inst_90536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:271608*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271608*0 + 3*680*FLEN/8, x4, x1, x2)

inst_90537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:271611*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271611*0 + 3*681*FLEN/8, x4, x1, x2)

inst_90538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:271614*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271614*0 + 3*682*FLEN/8, x4, x1, x2)

inst_90539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1b78c36ee5787 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face619667e7e02; op2val:0x9fc1b78c36ee5787;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:271617*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271617*0 + 3*683*FLEN/8, x4, x1, x2)

inst_90540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:271620*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271620*0 + 3*684*FLEN/8, x4, x1, x2)

inst_90541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:271623*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271623*0 + 3*685*FLEN/8, x4, x1, x2)

inst_90542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:271626*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271626*0 + 3*686*FLEN/8, x4, x1, x2)

inst_90543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:271629*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271629*0 + 3*687*FLEN/8, x4, x1, x2)

inst_90544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:271632*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271632*0 + 3*688*FLEN/8, x4, x1, x2)

inst_90545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:271635*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271635*0 + 3*689*FLEN/8, x4, x1, x2)

inst_90546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:271638*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271638*0 + 3*690*FLEN/8, x4, x1, x2)

inst_90547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:271641*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271641*0 + 3*691*FLEN/8, x4, x1, x2)

inst_90548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:271644*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271644*0 + 3*692*FLEN/8, x4, x1, x2)

inst_90549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:271647*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271647*0 + 3*693*FLEN/8, x4, x1, x2)

inst_90550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:271650*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271650*0 + 3*694*FLEN/8, x4, x1, x2)

inst_90551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:271653*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271653*0 + 3*695*FLEN/8, x4, x1, x2)

inst_90552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:271656*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271656*0 + 3*696*FLEN/8, x4, x1, x2)

inst_90553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:271659*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271659*0 + 3*697*FLEN/8, x4, x1, x2)

inst_90554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:271662*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271662*0 + 3*698*FLEN/8, x4, x1, x2)

inst_90555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:271665*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271665*0 + 3*699*FLEN/8, x4, x1, x2)

inst_90556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:271668*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271668*0 + 3*700*FLEN/8, x4, x1, x2)

inst_90557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:271671*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271671*0 + 3*701*FLEN/8, x4, x1, x2)

inst_90558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:271674*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271674*0 + 3*702*FLEN/8, x4, x1, x2)

inst_90559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:271677*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271677*0 + 3*703*FLEN/8, x4, x1, x2)

inst_90560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:271680*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271680*0 + 3*704*FLEN/8, x4, x1, x2)

inst_90561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:271683*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271683*0 + 3*705*FLEN/8, x4, x1, x2)

inst_90562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2b0000000000000; valaddr_reg:x3; val_offset:271686*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271686*0 + 3*706*FLEN/8, x4, x1, x2)

inst_90563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2b0000000000001; valaddr_reg:x3; val_offset:271689*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271689*0 + 3*707*FLEN/8, x4, x1, x2)

inst_90564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2b0000000000003; valaddr_reg:x3; val_offset:271692*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271692*0 + 3*708*FLEN/8, x4, x1, x2)

inst_90565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2b0000000000007; valaddr_reg:x3; val_offset:271695*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271695*0 + 3*709*FLEN/8, x4, x1, x2)

inst_90566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2b000000000000f; valaddr_reg:x3; val_offset:271698*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271698*0 + 3*710*FLEN/8, x4, x1, x2)

inst_90567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2b000000000001f; valaddr_reg:x3; val_offset:271701*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271701*0 + 3*711*FLEN/8, x4, x1, x2)

inst_90568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2b000000000003f; valaddr_reg:x3; val_offset:271704*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271704*0 + 3*712*FLEN/8, x4, x1, x2)

inst_90569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2b000000000007f; valaddr_reg:x3; val_offset:271707*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271707*0 + 3*713*FLEN/8, x4, x1, x2)

inst_90570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2b00000000000ff; valaddr_reg:x3; val_offset:271710*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271710*0 + 3*714*FLEN/8, x4, x1, x2)

inst_90571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2b00000000001ff; valaddr_reg:x3; val_offset:271713*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271713*0 + 3*715*FLEN/8, x4, x1, x2)

inst_90572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2b00000000003ff; valaddr_reg:x3; val_offset:271716*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271716*0 + 3*716*FLEN/8, x4, x1, x2)

inst_90573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2b00000000007ff; valaddr_reg:x3; val_offset:271719*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271719*0 + 3*717*FLEN/8, x4, x1, x2)

inst_90574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2b0000000000fff; valaddr_reg:x3; val_offset:271722*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271722*0 + 3*718*FLEN/8, x4, x1, x2)

inst_90575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2b0000000001fff; valaddr_reg:x3; val_offset:271725*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271725*0 + 3*719*FLEN/8, x4, x1, x2)

inst_90576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2b0000000003fff; valaddr_reg:x3; val_offset:271728*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271728*0 + 3*720*FLEN/8, x4, x1, x2)

inst_90577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2b0000000007fff; valaddr_reg:x3; val_offset:271731*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271731*0 + 3*721*FLEN/8, x4, x1, x2)

inst_90578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2b000000000ffff; valaddr_reg:x3; val_offset:271734*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271734*0 + 3*722*FLEN/8, x4, x1, x2)

inst_90579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2b000000001ffff; valaddr_reg:x3; val_offset:271737*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271737*0 + 3*723*FLEN/8, x4, x1, x2)

inst_90580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2b000000003ffff; valaddr_reg:x3; val_offset:271740*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271740*0 + 3*724*FLEN/8, x4, x1, x2)

inst_90581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2b000000007ffff; valaddr_reg:x3; val_offset:271743*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271743*0 + 3*725*FLEN/8, x4, x1, x2)

inst_90582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2b00000000fffff; valaddr_reg:x3; val_offset:271746*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271746*0 + 3*726*FLEN/8, x4, x1, x2)

inst_90583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2b00000001fffff; valaddr_reg:x3; val_offset:271749*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271749*0 + 3*727*FLEN/8, x4, x1, x2)

inst_90584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2b00000003fffff; valaddr_reg:x3; val_offset:271752*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271752*0 + 3*728*FLEN/8, x4, x1, x2)

inst_90585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2b00000007fffff; valaddr_reg:x3; val_offset:271755*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271755*0 + 3*729*FLEN/8, x4, x1, x2)

inst_90586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2b0000000ffffff; valaddr_reg:x3; val_offset:271758*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271758*0 + 3*730*FLEN/8, x4, x1, x2)

inst_90587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2b0000001ffffff; valaddr_reg:x3; val_offset:271761*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271761*0 + 3*731*FLEN/8, x4, x1, x2)

inst_90588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2b0000003ffffff; valaddr_reg:x3; val_offset:271764*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271764*0 + 3*732*FLEN/8, x4, x1, x2)

inst_90589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2b0000007ffffff; valaddr_reg:x3; val_offset:271767*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271767*0 + 3*733*FLEN/8, x4, x1, x2)

inst_90590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2b000000fffffff; valaddr_reg:x3; val_offset:271770*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271770*0 + 3*734*FLEN/8, x4, x1, x2)

inst_90591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2b000001fffffff; valaddr_reg:x3; val_offset:271773*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271773*0 + 3*735*FLEN/8, x4, x1, x2)

inst_90592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2b000003fffffff; valaddr_reg:x3; val_offset:271776*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271776*0 + 3*736*FLEN/8, x4, x1, x2)

inst_90593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2b000007fffffff; valaddr_reg:x3; val_offset:271779*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271779*0 + 3*737*FLEN/8, x4, x1, x2)

inst_90594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2b00000ffffffff; valaddr_reg:x3; val_offset:271782*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271782*0 + 3*738*FLEN/8, x4, x1, x2)

inst_90595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2b00001ffffffff; valaddr_reg:x3; val_offset:271785*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271785*0 + 3*739*FLEN/8, x4, x1, x2)

inst_90596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2b00003ffffffff; valaddr_reg:x3; val_offset:271788*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271788*0 + 3*740*FLEN/8, x4, x1, x2)

inst_90597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2b00007ffffffff; valaddr_reg:x3; val_offset:271791*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271791*0 + 3*741*FLEN/8, x4, x1, x2)

inst_90598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2b0000fffffffff; valaddr_reg:x3; val_offset:271794*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271794*0 + 3*742*FLEN/8, x4, x1, x2)

inst_90599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2b0001fffffffff; valaddr_reg:x3; val_offset:271797*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271797*0 + 3*743*FLEN/8, x4, x1, x2)

inst_90600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2b0003fffffffff; valaddr_reg:x3; val_offset:271800*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271800*0 + 3*744*FLEN/8, x4, x1, x2)

inst_90601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2b0007fffffffff; valaddr_reg:x3; val_offset:271803*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271803*0 + 3*745*FLEN/8, x4, x1, x2)

inst_90602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2b000ffffffffff; valaddr_reg:x3; val_offset:271806*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271806*0 + 3*746*FLEN/8, x4, x1, x2)

inst_90603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2b001ffffffffff; valaddr_reg:x3; val_offset:271809*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271809*0 + 3*747*FLEN/8, x4, x1, x2)

inst_90604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2b003ffffffffff; valaddr_reg:x3; val_offset:271812*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271812*0 + 3*748*FLEN/8, x4, x1, x2)

inst_90605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2b007ffffffffff; valaddr_reg:x3; val_offset:271815*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271815*0 + 3*749*FLEN/8, x4, x1, x2)

inst_90606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2b00fffffffffff; valaddr_reg:x3; val_offset:271818*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271818*0 + 3*750*FLEN/8, x4, x1, x2)

inst_90607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2b01fffffffffff; valaddr_reg:x3; val_offset:271821*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271821*0 + 3*751*FLEN/8, x4, x1, x2)

inst_90608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2b03fffffffffff; valaddr_reg:x3; val_offset:271824*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271824*0 + 3*752*FLEN/8, x4, x1, x2)

inst_90609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2b07fffffffffff; valaddr_reg:x3; val_offset:271827*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271827*0 + 3*753*FLEN/8, x4, x1, x2)

inst_90610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2b0ffffffffffff; valaddr_reg:x3; val_offset:271830*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271830*0 + 3*754*FLEN/8, x4, x1, x2)

inst_90611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2b1ffffffffffff; valaddr_reg:x3; val_offset:271833*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271833*0 + 3*755*FLEN/8, x4, x1, x2)

inst_90612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2b3ffffffffffff; valaddr_reg:x3; val_offset:271836*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271836*0 + 3*756*FLEN/8, x4, x1, x2)

inst_90613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2b7ffffffffffff; valaddr_reg:x3; val_offset:271839*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271839*0 + 3*757*FLEN/8, x4, x1, x2)

inst_90614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2b8000000000000; valaddr_reg:x3; val_offset:271842*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271842*0 + 3*758*FLEN/8, x4, x1, x2)

inst_90615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2bc000000000000; valaddr_reg:x3; val_offset:271845*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271845*0 + 3*759*FLEN/8, x4, x1, x2)

inst_90616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2be000000000000; valaddr_reg:x3; val_offset:271848*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271848*0 + 3*760*FLEN/8, x4, x1, x2)

inst_90617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2bf000000000000; valaddr_reg:x3; val_offset:271851*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271851*0 + 3*761*FLEN/8, x4, x1, x2)

inst_90618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2bf800000000000; valaddr_reg:x3; val_offset:271854*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271854*0 + 3*762*FLEN/8, x4, x1, x2)

inst_90619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2bfc00000000000; valaddr_reg:x3; val_offset:271857*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271857*0 + 3*763*FLEN/8, x4, x1, x2)

inst_90620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2bfe00000000000; valaddr_reg:x3; val_offset:271860*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271860*0 + 3*764*FLEN/8, x4, x1, x2)

inst_90621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2bff00000000000; valaddr_reg:x3; val_offset:271863*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271863*0 + 3*765*FLEN/8, x4, x1, x2)

inst_90622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2bff80000000000; valaddr_reg:x3; val_offset:271866*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271866*0 + 3*766*FLEN/8, x4, x1, x2)

inst_90623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce8dd7dbb4fcb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face8dd7dbb4fcb; op2val:0x0;
op3val:0x2bffc0000000000; valaddr_reg:x3; val_offset:271869*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271869*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4553139221124087808,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4553139222197829632,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4553139222734700544,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4553139223003136000,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4553139223137353728,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4553139223204462592,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4553139223238017024,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4553139223254794240,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4553139223263182848,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4553139223267377152,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4553139223269474304,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4553139223270522880,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4553139223271047168,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4553139223271309312,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4553139223271440384,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4553139223271505920,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4553139223271538688,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4553139223271555072,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4553139223271563264,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4553139223271567360,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4553139223271569408,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4553139223271570432,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4553139223271570944,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4553139223271571200,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4553139223271571328,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4553139223271571392,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4553139223271571424,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4553139223271571440,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4553139223271571448,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4553139223271571452,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4553139223271571454,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4553139223271571455,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6894081120986191307,64,FLEN)
NAN_BOXED(2319872290813815709,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556224,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556225,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556227,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556231,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556239,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556255,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556287,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556351,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556479,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556735,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029557247,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029558271,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029560319,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029564415,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029572607,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029588991,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029621759,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029687295,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029818367,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629030080511,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629030604799,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629031653375,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629033750527,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629037944831,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629046333439,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629063110655,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629096665087,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629163773951,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629297991679,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629566427135,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947630103298047,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947631177039871,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947633324523519,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947637619490815,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947646209425407,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947663389294591,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947697749032959,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947766468509695,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947903907463167,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317948178785370111,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317948728541183999,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317949828052811775,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317952027076067327,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317956425122578431,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317965221215600639,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317982813401645055,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9318017997773733887,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9318088366517911551,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9318229104006266879,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9318510578982977535,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9319073528936398847,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9320199428843241471,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9320199428843241472,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9321325328750084096,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9321888278703505408,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322169753680216064,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322310491168571392,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322380859912749056,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322416044284837888,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322433636470882304,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322442432563904512,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322446830610415616,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322449029633671168,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322450129145298944,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322450678901112832,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322450953779019776,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451091217973248,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451159937449984,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451194297188352,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451211477057536,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451220066992128,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451224361959424,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451226509443072,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451227583184896,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228120055808,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228388491264,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228522708992,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228589817856,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228623372288,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228640149504,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228648538112,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228652732416,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228654829568,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228655878144,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656402432,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656664576,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656795648,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656861184,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656893952,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656910336,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656918528,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656922624,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656924672,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656925696,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926208,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926464,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926592,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926656,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926688,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926704,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926712,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926716,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926718,64,FLEN)
NAN_BOXED(6894081652200000689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926719,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117056,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117057,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117059,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117063,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117071,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117087,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117119,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117183,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117311,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117567,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379118079,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379119103,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379121151,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379125247,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379133439,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379149823,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379182591,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379248127,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379379199,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379641343,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813380165631,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813381214207,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813383311359,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813387505663,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813395894271,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813412671487,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813446225919,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813513334783,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813647552511,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813915987967,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098814452858879,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098815526600703,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098817674084351,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098821969051647,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098830558986239,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098847738855423,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098882098593791,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098950818070527,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507099088257023999,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507099363134930943,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507099912890744831,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507101012402372607,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507103211425628159,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507107609472139263,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507116405565161471,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507133997751205887,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507169182123294719,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507239550867472383,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507380288355827711,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507661763332538367,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9508224713285959679,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9509350613192802303,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9509350613192802304,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9510476513099644928,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511039463053066240,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511320938029776896,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511461675518132224,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511532044262309888,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511567228634398720,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511584820820443136,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511593616913465344,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511598014959976448,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511600213983232000,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511601313494859776,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511601863250673664,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602138128580608,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602275567534080,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602344287010816,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602378646749184,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602395826618368,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602404416552960,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602408711520256,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602410859003904,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602411932745728,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412469616640,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412738052096,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412872269824,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412939378688,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412972933120,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412989710336,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412998098944,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413002293248,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413004390400,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413005438976,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413005963264,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006225408,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006356480,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006422016,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006454784,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006471168,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006479360,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006483456,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006485504,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006486528,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487040,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487296,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487424,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487488,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487520,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487536,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487544,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487548,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487550,64,FLEN)
NAN_BOXED(6894091477071083265,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487551,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488768,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488769,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488771,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488775,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488783,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488799,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488831,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488895,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387489023,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387489279,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387489791,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387490815,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387492863,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387496959,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387505151,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387521535,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387554303,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387619839,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387750911,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778388013055,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778388537343,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778389585919,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778391683071,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778395877375,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778404265983,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778421043199,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778454597631,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778521706495,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778655924223,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778924359679,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208779461230591,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208780534972415,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208782682456063,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208786977423359,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208795567357951,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208812747227135,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208847106965503,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208915826442239,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261209053265395711,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261209328143302655,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261209877899116543,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261210977410744319,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261213176433999871,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261217574480510975,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261226370573533183,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261243962759577599,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261279147131666431,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261349515875844095,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261490253364199423,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261771728340910079,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(262334678294331391,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(263460578201174015,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(263460578201174016,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(264586478108016640,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265149428061437952,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265430903038148608,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265571640526503936,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265642009270681600,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265677193642770432,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265694785828814848,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265703581921837056,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265707979968348160,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265710178991603712,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265711278503231488,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265711828259045376,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712103136952320,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712240575905792,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712309295382528,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712343655120896,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712360834990080,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712369424924672,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712373719891968,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712375867375616,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712376941117440,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712377477988352,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712377746423808,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712377880641536,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712377947750400,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712377981304832,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712377998082048,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378006470656,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378010664960,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378012762112,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378013810688,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014334976,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014597120,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014728192,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014793728,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014826496,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014842880,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014851072,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014855168,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014857216,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014858240,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014858752,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859008,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859136,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859200,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859232,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859248,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859256,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859260,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859262,64,FLEN)
NAN_BOXED(6894099157339307453,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859263,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4233383649728266240,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4233383649728266241,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4233383649728266243,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4233383649728266247,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4233383649728266255,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4233383649728266271,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4233383649728266303,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4233383649728266367,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4233383649728266495,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4233383649728266751,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4233383649728267263,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4233383649728268287,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4233383649728270335,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4233383649728274431,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4233383649728282623,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4233383649728299007,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4233383649728331775,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4233383649728397311,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4233383649728528383,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4233383649728790527,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4233383649729314815,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4233383649730363391,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4233383649732460543,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4233383649736654847,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4233383649745043455,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4233383649761820671,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4233383649795375103,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4233383649862483967,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4233383649996701695,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4233383650265137151,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4233383650802008063,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4233383651875749887,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4233383654023233535,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4233383658318200831,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4233383666908135423,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4233383684088004607,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4233383718447742975,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4233383787167219711,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4233383924606173183,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4233384199484080127,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4233384749239894015,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4233385848751521791,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4233388047774777343,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4233392445821288447,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4233401241914310655,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4233418834100355071,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4233454018472443903,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4233524387216621567,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4233665124704976895,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4233946599681687551,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4234509549635108863,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4235635449541951487,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4235635449541951488,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4236761349448794112,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4237324299402215424,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4237605774378926080,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4237746511867281408,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4237816880611459072,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4237852064983547904,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4237869657169592320,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4237878453262614528,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4237882851309125632,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4237885050332381184,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4237886149844008960,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4237886699599822848,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4237886974477729792,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4237887111916683264,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4237887180636160000,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4237887214995898368,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4237887232175767552,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4237887240765702144,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4237887245060669440,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4237887247208153088,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4237887248281894912,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4237887248818765824,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4237887249087201280,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4237887249221419008,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4237887249288527872,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4237887249322082304,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4237887249338859520,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4237887249347248128,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4237887249351442432,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4237887249353539584,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4237887249354588160,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4237887249355112448,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4237887249355374592,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4237887249355505664,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4237887249355571200,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4237887249355603968,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4237887249355620352,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4237887249355628544,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4237887249355632640,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4237887249355634688,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4237887249355635712,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4237887249355636224,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4237887249355636480,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4237887249355636608,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4237887249355636672,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4237887249355636704,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4237887249355636720,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4237887249355636728,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4237887249355636732,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4237887249355636734,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4237887249355636735,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6894117632388626336,64,FLEN)
NAN_BOXED(2319849691880981301,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13587360075776786432,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13587360075776786433,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13587360075776786435,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13587360075776786439,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13587360075776786447,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13587360075776786463,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13587360075776786495,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13587360075776786559,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13587360075776786687,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13587360075776786943,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13587360075776787455,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13587360075776788479,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13587360075776790527,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13587360075776794623,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13587360075776802815,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13587360075776819199,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13587360075776851967,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13587360075776917503,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13587360075777048575,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13587360075777310719,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13587360075777835007,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13587360075778883583,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13587360075780980735,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13587360075785175039,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13587360075793563647,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13587360075810340863,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13587360075843895295,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13587360075911004159,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13587360076045221887,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13587360076313657343,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13587360076850528255,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13587360077924270079,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13587360080071753727,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13587360084366721023,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13587360092956655615,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13587360110136524799,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13587360144496263167,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13587360213215739903,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13587360350654693375,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13587360625532600319,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13587361175288414207,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13587362274800041983,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13587364473823297535,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13587368871869808639,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13587377667962830847,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13587395260148875263,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13587430444520964095,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13587500813265141759,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13587641550753497087,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13587923025730207743,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13588485975683629055,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13589611875590471679,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13589611875590471680,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13590737775497314304,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13591300725450735616,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13591582200427446272,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13591722937915801600,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13591793306659979264,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13591828491032068096,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13591846083218112512,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13591854879311134720,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13591859277357645824,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13591861476380901376,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13591862575892529152,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13591863125648343040,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13591863400526249984,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13591863537965203456,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13591863606684680192,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13591863641044418560,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13591863658224287744,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13591863666814222336,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13591863671109189632,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13591863673256673280,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13591863674330415104,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13591863674867286016,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13591863675135721472,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13591863675269939200,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13591863675337048064,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13591863675370602496,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13591863675387379712,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13591863675395768320,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13591863675399962624,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13591863675402059776,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13591863675403108352,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13591863675403632640,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13591863675403894784,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13591863675404025856,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13591863675404091392,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13591863675404124160,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13591863675404140544,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13591863675404148736,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13591863675404152832,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13591863675404154880,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13591863675404155904,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13591863675404156416,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13591863675404156672,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13591863675404156800,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13591863675404156864,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13591863675404156896,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13591863675404156912,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13591863675404156920,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13591863675404156924,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13591863675404156926,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13591863675404156927,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6894138126365523458,64,FLEN)
NAN_BOXED(11511683935380592519,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931328,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931329,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931331,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931335,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931343,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931359,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931391,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931455,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931583,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931839,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976932351,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976933375,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976935423,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976939519,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976947711,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976964095,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976996863,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783977062399,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783977193471,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783977455615,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783977979903,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783979028479,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783981125631,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783985319935,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783993708543,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654784010485759,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654784044040191,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654784111149055,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654784245366783,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654784513802239,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654785050673151,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654786124414975,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654788271898623,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654792566865919,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654801156800511,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654818336669695,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654852696408063,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654921415884799,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193655058854838271,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193655333732745215,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193655883488559103,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193656983000186879,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193659182023442431,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193663580069953535,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193672376162975743,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193689968349020159,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193725152721108991,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193795521465286655,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193936258953641983,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(194217733930352639,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(194780683883773951,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(195906583790616575,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(195906583790616576,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(197032483697459200,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(197595433650880512,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(197876908627591168,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198017646115946496,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198088014860124160,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198123199232212992,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198140791418257408,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198149587511279616,64,FLEN)
NAN_BOXED(6894141167592230859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198153985557790720,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
