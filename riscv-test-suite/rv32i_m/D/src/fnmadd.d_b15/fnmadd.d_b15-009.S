
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:39 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_6144:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x19fe68e75421f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f719fe68e75421f; op2val:0x8000;
op3val:0x82cffffffffe0000; valaddr_reg:x3; val_offset:18432*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18432*0 + 3*0*FLEN/8, x4, x1, x2)

inst_6145:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x19fe68e75421f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f719fe68e75421f; op2val:0x8000;
op3val:0x82cfffffffff0000; valaddr_reg:x3; val_offset:18435*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18435*0 + 3*1*FLEN/8, x4, x1, x2)

inst_6146:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x19fe68e75421f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f719fe68e75421f; op2val:0x8000;
op3val:0x82cfffffffff8000; valaddr_reg:x3; val_offset:18438*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18438*0 + 3*2*FLEN/8, x4, x1, x2)

inst_6147:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x19fe68e75421f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f719fe68e75421f; op2val:0x8000;
op3val:0x82cfffffffffc000; valaddr_reg:x3; val_offset:18441*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18441*0 + 3*3*FLEN/8, x4, x1, x2)

inst_6148:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x19fe68e75421f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f719fe68e75421f; op2val:0x8000;
op3val:0x82cfffffffffe000; valaddr_reg:x3; val_offset:18444*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18444*0 + 3*4*FLEN/8, x4, x1, x2)

inst_6149:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x19fe68e75421f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f719fe68e75421f; op2val:0x8000;
op3val:0x82cffffffffff000; valaddr_reg:x3; val_offset:18447*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18447*0 + 3*5*FLEN/8, x4, x1, x2)

inst_6150:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x19fe68e75421f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f719fe68e75421f; op2val:0x8000;
op3val:0x82cffffffffff800; valaddr_reg:x3; val_offset:18450*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18450*0 + 3*6*FLEN/8, x4, x1, x2)

inst_6151:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x19fe68e75421f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f719fe68e75421f; op2val:0x8000;
op3val:0x82cffffffffffc00; valaddr_reg:x3; val_offset:18453*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18453*0 + 3*7*FLEN/8, x4, x1, x2)

inst_6152:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x19fe68e75421f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f719fe68e75421f; op2val:0x8000;
op3val:0x82cffffffffffe00; valaddr_reg:x3; val_offset:18456*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18456*0 + 3*8*FLEN/8, x4, x1, x2)

inst_6153:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x19fe68e75421f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f719fe68e75421f; op2val:0x8000;
op3val:0x82cfffffffffff00; valaddr_reg:x3; val_offset:18459*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18459*0 + 3*9*FLEN/8, x4, x1, x2)

inst_6154:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x19fe68e75421f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f719fe68e75421f; op2val:0x8000;
op3val:0x82cfffffffffff80; valaddr_reg:x3; val_offset:18462*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18462*0 + 3*10*FLEN/8, x4, x1, x2)

inst_6155:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x19fe68e75421f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f719fe68e75421f; op2val:0x8000;
op3val:0x82cfffffffffffc0; valaddr_reg:x3; val_offset:18465*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18465*0 + 3*11*FLEN/8, x4, x1, x2)

inst_6156:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x19fe68e75421f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f719fe68e75421f; op2val:0x8000;
op3val:0x82cfffffffffffe0; valaddr_reg:x3; val_offset:18468*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18468*0 + 3*12*FLEN/8, x4, x1, x2)

inst_6157:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x19fe68e75421f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f719fe68e75421f; op2val:0x8000;
op3val:0x82cffffffffffff0; valaddr_reg:x3; val_offset:18471*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18471*0 + 3*13*FLEN/8, x4, x1, x2)

inst_6158:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x19fe68e75421f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f719fe68e75421f; op2val:0x8000;
op3val:0x82cffffffffffff8; valaddr_reg:x3; val_offset:18474*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18474*0 + 3*14*FLEN/8, x4, x1, x2)

inst_6159:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x19fe68e75421f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f719fe68e75421f; op2val:0x8000;
op3val:0x82cffffffffffffc; valaddr_reg:x3; val_offset:18477*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18477*0 + 3*15*FLEN/8, x4, x1, x2)

inst_6160:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x19fe68e75421f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f719fe68e75421f; op2val:0x8000;
op3val:0x82cffffffffffffe; valaddr_reg:x3; val_offset:18480*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18480*0 + 3*16*FLEN/8, x4, x1, x2)

inst_6161:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x19fe68e75421f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f719fe68e75421f; op2val:0x8000;
op3val:0x82cfffffffffffff; valaddr_reg:x3; val_offset:18483*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18483*0 + 3*17*FLEN/8, x4, x1, x2)

inst_6162:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:18486*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18486*0 + 3*18*FLEN/8, x4, x1, x2)

inst_6163:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:18489*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18489*0 + 3*19*FLEN/8, x4, x1, x2)

inst_6164:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:18492*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18492*0 + 3*20*FLEN/8, x4, x1, x2)

inst_6165:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:18495*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18495*0 + 3*21*FLEN/8, x4, x1, x2)

inst_6166:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:18498*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18498*0 + 3*22*FLEN/8, x4, x1, x2)

inst_6167:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:18501*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18501*0 + 3*23*FLEN/8, x4, x1, x2)

inst_6168:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:18504*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18504*0 + 3*24*FLEN/8, x4, x1, x2)

inst_6169:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:18507*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18507*0 + 3*25*FLEN/8, x4, x1, x2)

inst_6170:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:18510*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18510*0 + 3*26*FLEN/8, x4, x1, x2)

inst_6171:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:18513*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18513*0 + 3*27*FLEN/8, x4, x1, x2)

inst_6172:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:18516*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18516*0 + 3*28*FLEN/8, x4, x1, x2)

inst_6173:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:18519*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18519*0 + 3*29*FLEN/8, x4, x1, x2)

inst_6174:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:18522*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18522*0 + 3*30*FLEN/8, x4, x1, x2)

inst_6175:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:18525*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18525*0 + 3*31*FLEN/8, x4, x1, x2)

inst_6176:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:18528*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18528*0 + 3*32*FLEN/8, x4, x1, x2)

inst_6177:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:18531*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18531*0 + 3*33*FLEN/8, x4, x1, x2)

inst_6178:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:18534*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18534*0 + 3*34*FLEN/8, x4, x1, x2)

inst_6179:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:18537*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18537*0 + 3*35*FLEN/8, x4, x1, x2)

inst_6180:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:18540*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18540*0 + 3*36*FLEN/8, x4, x1, x2)

inst_6181:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:18543*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18543*0 + 3*37*FLEN/8, x4, x1, x2)

inst_6182:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:18546*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18546*0 + 3*38*FLEN/8, x4, x1, x2)

inst_6183:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:18549*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18549*0 + 3*39*FLEN/8, x4, x1, x2)

inst_6184:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83d0000000000000; valaddr_reg:x3; val_offset:18552*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18552*0 + 3*40*FLEN/8, x4, x1, x2)

inst_6185:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83d0000000000001; valaddr_reg:x3; val_offset:18555*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18555*0 + 3*41*FLEN/8, x4, x1, x2)

inst_6186:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83d0000000000003; valaddr_reg:x3; val_offset:18558*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18558*0 + 3*42*FLEN/8, x4, x1, x2)

inst_6187:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83d0000000000007; valaddr_reg:x3; val_offset:18561*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18561*0 + 3*43*FLEN/8, x4, x1, x2)

inst_6188:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83d000000000000f; valaddr_reg:x3; val_offset:18564*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18564*0 + 3*44*FLEN/8, x4, x1, x2)

inst_6189:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83d000000000001f; valaddr_reg:x3; val_offset:18567*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18567*0 + 3*45*FLEN/8, x4, x1, x2)

inst_6190:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83d000000000003f; valaddr_reg:x3; val_offset:18570*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18570*0 + 3*46*FLEN/8, x4, x1, x2)

inst_6191:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83d000000000007f; valaddr_reg:x3; val_offset:18573*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18573*0 + 3*47*FLEN/8, x4, x1, x2)

inst_6192:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83d00000000000ff; valaddr_reg:x3; val_offset:18576*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18576*0 + 3*48*FLEN/8, x4, x1, x2)

inst_6193:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83d00000000001ff; valaddr_reg:x3; val_offset:18579*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18579*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6194:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83d00000000003ff; valaddr_reg:x3; val_offset:18582*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18582*0 + 3*50*FLEN/8, x4, x1, x2)

inst_6195:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83d00000000007ff; valaddr_reg:x3; val_offset:18585*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18585*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6196:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83d0000000000fff; valaddr_reg:x3; val_offset:18588*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18588*0 + 3*52*FLEN/8, x4, x1, x2)

inst_6197:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83d0000000001fff; valaddr_reg:x3; val_offset:18591*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18591*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6198:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83d0000000003fff; valaddr_reg:x3; val_offset:18594*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18594*0 + 3*54*FLEN/8, x4, x1, x2)

inst_6199:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83d0000000007fff; valaddr_reg:x3; val_offset:18597*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18597*0 + 3*55*FLEN/8, x4, x1, x2)

inst_6200:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83d000000000ffff; valaddr_reg:x3; val_offset:18600*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18600*0 + 3*56*FLEN/8, x4, x1, x2)

inst_6201:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83d000000001ffff; valaddr_reg:x3; val_offset:18603*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18603*0 + 3*57*FLEN/8, x4, x1, x2)

inst_6202:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83d000000003ffff; valaddr_reg:x3; val_offset:18606*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18606*0 + 3*58*FLEN/8, x4, x1, x2)

inst_6203:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83d000000007ffff; valaddr_reg:x3; val_offset:18609*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18609*0 + 3*59*FLEN/8, x4, x1, x2)

inst_6204:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83d00000000fffff; valaddr_reg:x3; val_offset:18612*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18612*0 + 3*60*FLEN/8, x4, x1, x2)

inst_6205:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83d00000001fffff; valaddr_reg:x3; val_offset:18615*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18615*0 + 3*61*FLEN/8, x4, x1, x2)

inst_6206:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83d00000003fffff; valaddr_reg:x3; val_offset:18618*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18618*0 + 3*62*FLEN/8, x4, x1, x2)

inst_6207:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83d00000007fffff; valaddr_reg:x3; val_offset:18621*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18621*0 + 3*63*FLEN/8, x4, x1, x2)

inst_6208:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83d0000000ffffff; valaddr_reg:x3; val_offset:18624*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18624*0 + 3*64*FLEN/8, x4, x1, x2)

inst_6209:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83d0000001ffffff; valaddr_reg:x3; val_offset:18627*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18627*0 + 3*65*FLEN/8, x4, x1, x2)

inst_6210:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83d0000003ffffff; valaddr_reg:x3; val_offset:18630*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18630*0 + 3*66*FLEN/8, x4, x1, x2)

inst_6211:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83d0000007ffffff; valaddr_reg:x3; val_offset:18633*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18633*0 + 3*67*FLEN/8, x4, x1, x2)

inst_6212:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83d000000fffffff; valaddr_reg:x3; val_offset:18636*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18636*0 + 3*68*FLEN/8, x4, x1, x2)

inst_6213:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83d000001fffffff; valaddr_reg:x3; val_offset:18639*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18639*0 + 3*69*FLEN/8, x4, x1, x2)

inst_6214:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83d000003fffffff; valaddr_reg:x3; val_offset:18642*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18642*0 + 3*70*FLEN/8, x4, x1, x2)

inst_6215:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83d000007fffffff; valaddr_reg:x3; val_offset:18645*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18645*0 + 3*71*FLEN/8, x4, x1, x2)

inst_6216:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83d00000ffffffff; valaddr_reg:x3; val_offset:18648*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18648*0 + 3*72*FLEN/8, x4, x1, x2)

inst_6217:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83d00001ffffffff; valaddr_reg:x3; val_offset:18651*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18651*0 + 3*73*FLEN/8, x4, x1, x2)

inst_6218:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83d00003ffffffff; valaddr_reg:x3; val_offset:18654*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18654*0 + 3*74*FLEN/8, x4, x1, x2)

inst_6219:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83d00007ffffffff; valaddr_reg:x3; val_offset:18657*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18657*0 + 3*75*FLEN/8, x4, x1, x2)

inst_6220:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83d0000fffffffff; valaddr_reg:x3; val_offset:18660*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18660*0 + 3*76*FLEN/8, x4, x1, x2)

inst_6221:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83d0001fffffffff; valaddr_reg:x3; val_offset:18663*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18663*0 + 3*77*FLEN/8, x4, x1, x2)

inst_6222:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83d0003fffffffff; valaddr_reg:x3; val_offset:18666*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18666*0 + 3*78*FLEN/8, x4, x1, x2)

inst_6223:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83d0007fffffffff; valaddr_reg:x3; val_offset:18669*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18669*0 + 3*79*FLEN/8, x4, x1, x2)

inst_6224:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83d000ffffffffff; valaddr_reg:x3; val_offset:18672*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18672*0 + 3*80*FLEN/8, x4, x1, x2)

inst_6225:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83d001ffffffffff; valaddr_reg:x3; val_offset:18675*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18675*0 + 3*81*FLEN/8, x4, x1, x2)

inst_6226:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83d003ffffffffff; valaddr_reg:x3; val_offset:18678*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18678*0 + 3*82*FLEN/8, x4, x1, x2)

inst_6227:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83d007ffffffffff; valaddr_reg:x3; val_offset:18681*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18681*0 + 3*83*FLEN/8, x4, x1, x2)

inst_6228:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83d00fffffffffff; valaddr_reg:x3; val_offset:18684*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18684*0 + 3*84*FLEN/8, x4, x1, x2)

inst_6229:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83d01fffffffffff; valaddr_reg:x3; val_offset:18687*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18687*0 + 3*85*FLEN/8, x4, x1, x2)

inst_6230:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83d03fffffffffff; valaddr_reg:x3; val_offset:18690*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18690*0 + 3*86*FLEN/8, x4, x1, x2)

inst_6231:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83d07fffffffffff; valaddr_reg:x3; val_offset:18693*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18693*0 + 3*87*FLEN/8, x4, x1, x2)

inst_6232:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83d0ffffffffffff; valaddr_reg:x3; val_offset:18696*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18696*0 + 3*88*FLEN/8, x4, x1, x2)

inst_6233:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83d1ffffffffffff; valaddr_reg:x3; val_offset:18699*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18699*0 + 3*89*FLEN/8, x4, x1, x2)

inst_6234:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83d3ffffffffffff; valaddr_reg:x3; val_offset:18702*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18702*0 + 3*90*FLEN/8, x4, x1, x2)

inst_6235:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83d7ffffffffffff; valaddr_reg:x3; val_offset:18705*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18705*0 + 3*91*FLEN/8, x4, x1, x2)

inst_6236:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83d8000000000000; valaddr_reg:x3; val_offset:18708*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18708*0 + 3*92*FLEN/8, x4, x1, x2)

inst_6237:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83dc000000000000; valaddr_reg:x3; val_offset:18711*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18711*0 + 3*93*FLEN/8, x4, x1, x2)

inst_6238:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83de000000000000; valaddr_reg:x3; val_offset:18714*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18714*0 + 3*94*FLEN/8, x4, x1, x2)

inst_6239:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83df000000000000; valaddr_reg:x3; val_offset:18717*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18717*0 + 3*95*FLEN/8, x4, x1, x2)

inst_6240:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83df800000000000; valaddr_reg:x3; val_offset:18720*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18720*0 + 3*96*FLEN/8, x4, x1, x2)

inst_6241:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83dfc00000000000; valaddr_reg:x3; val_offset:18723*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18723*0 + 3*97*FLEN/8, x4, x1, x2)

inst_6242:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83dfe00000000000; valaddr_reg:x3; val_offset:18726*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18726*0 + 3*98*FLEN/8, x4, x1, x2)

inst_6243:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83dff00000000000; valaddr_reg:x3; val_offset:18729*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18729*0 + 3*99*FLEN/8, x4, x1, x2)

inst_6244:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83dff80000000000; valaddr_reg:x3; val_offset:18732*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18732*0 + 3*100*FLEN/8, x4, x1, x2)

inst_6245:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83dffc0000000000; valaddr_reg:x3; val_offset:18735*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18735*0 + 3*101*FLEN/8, x4, x1, x2)

inst_6246:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83dffe0000000000; valaddr_reg:x3; val_offset:18738*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18738*0 + 3*102*FLEN/8, x4, x1, x2)

inst_6247:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83dfff0000000000; valaddr_reg:x3; val_offset:18741*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18741*0 + 3*103*FLEN/8, x4, x1, x2)

inst_6248:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83dfff8000000000; valaddr_reg:x3; val_offset:18744*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18744*0 + 3*104*FLEN/8, x4, x1, x2)

inst_6249:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83dfffc000000000; valaddr_reg:x3; val_offset:18747*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18747*0 + 3*105*FLEN/8, x4, x1, x2)

inst_6250:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83dfffe000000000; valaddr_reg:x3; val_offset:18750*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18750*0 + 3*106*FLEN/8, x4, x1, x2)

inst_6251:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83dffff000000000; valaddr_reg:x3; val_offset:18753*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18753*0 + 3*107*FLEN/8, x4, x1, x2)

inst_6252:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83dffff800000000; valaddr_reg:x3; val_offset:18756*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18756*0 + 3*108*FLEN/8, x4, x1, x2)

inst_6253:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83dffffc00000000; valaddr_reg:x3; val_offset:18759*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18759*0 + 3*109*FLEN/8, x4, x1, x2)

inst_6254:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83dffffe00000000; valaddr_reg:x3; val_offset:18762*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18762*0 + 3*110*FLEN/8, x4, x1, x2)

inst_6255:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83dfffff00000000; valaddr_reg:x3; val_offset:18765*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18765*0 + 3*111*FLEN/8, x4, x1, x2)

inst_6256:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83dfffff80000000; valaddr_reg:x3; val_offset:18768*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18768*0 + 3*112*FLEN/8, x4, x1, x2)

inst_6257:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83dfffffc0000000; valaddr_reg:x3; val_offset:18771*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18771*0 + 3*113*FLEN/8, x4, x1, x2)

inst_6258:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83dfffffe0000000; valaddr_reg:x3; val_offset:18774*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18774*0 + 3*114*FLEN/8, x4, x1, x2)

inst_6259:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83dffffff0000000; valaddr_reg:x3; val_offset:18777*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18777*0 + 3*115*FLEN/8, x4, x1, x2)

inst_6260:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83dffffff8000000; valaddr_reg:x3; val_offset:18780*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18780*0 + 3*116*FLEN/8, x4, x1, x2)

inst_6261:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83dffffffc000000; valaddr_reg:x3; val_offset:18783*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18783*0 + 3*117*FLEN/8, x4, x1, x2)

inst_6262:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83dffffffe000000; valaddr_reg:x3; val_offset:18786*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18786*0 + 3*118*FLEN/8, x4, x1, x2)

inst_6263:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83dfffffff000000; valaddr_reg:x3; val_offset:18789*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18789*0 + 3*119*FLEN/8, x4, x1, x2)

inst_6264:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83dfffffff800000; valaddr_reg:x3; val_offset:18792*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18792*0 + 3*120*FLEN/8, x4, x1, x2)

inst_6265:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83dfffffffc00000; valaddr_reg:x3; val_offset:18795*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18795*0 + 3*121*FLEN/8, x4, x1, x2)

inst_6266:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83dfffffffe00000; valaddr_reg:x3; val_offset:18798*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18798*0 + 3*122*FLEN/8, x4, x1, x2)

inst_6267:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83dffffffff00000; valaddr_reg:x3; val_offset:18801*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18801*0 + 3*123*FLEN/8, x4, x1, x2)

inst_6268:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83dffffffff80000; valaddr_reg:x3; val_offset:18804*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18804*0 + 3*124*FLEN/8, x4, x1, x2)

inst_6269:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83dffffffffc0000; valaddr_reg:x3; val_offset:18807*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18807*0 + 3*125*FLEN/8, x4, x1, x2)

inst_6270:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83dffffffffe0000; valaddr_reg:x3; val_offset:18810*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18810*0 + 3*126*FLEN/8, x4, x1, x2)

inst_6271:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83dfffffffff0000; valaddr_reg:x3; val_offset:18813*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18813*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_6272:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83dfffffffff8000; valaddr_reg:x3; val_offset:18816*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18816*0 + 3*128*FLEN/8, x4, x1, x2)

inst_6273:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83dfffffffffc000; valaddr_reg:x3; val_offset:18819*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18819*0 + 3*129*FLEN/8, x4, x1, x2)

inst_6274:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83dfffffffffe000; valaddr_reg:x3; val_offset:18822*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18822*0 + 3*130*FLEN/8, x4, x1, x2)

inst_6275:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83dffffffffff000; valaddr_reg:x3; val_offset:18825*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18825*0 + 3*131*FLEN/8, x4, x1, x2)

inst_6276:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83dffffffffff800; valaddr_reg:x3; val_offset:18828*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18828*0 + 3*132*FLEN/8, x4, x1, x2)

inst_6277:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83dffffffffffc00; valaddr_reg:x3; val_offset:18831*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18831*0 + 3*133*FLEN/8, x4, x1, x2)

inst_6278:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83dffffffffffe00; valaddr_reg:x3; val_offset:18834*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18834*0 + 3*134*FLEN/8, x4, x1, x2)

inst_6279:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83dfffffffffff00; valaddr_reg:x3; val_offset:18837*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18837*0 + 3*135*FLEN/8, x4, x1, x2)

inst_6280:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83dfffffffffff80; valaddr_reg:x3; val_offset:18840*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18840*0 + 3*136*FLEN/8, x4, x1, x2)

inst_6281:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83dfffffffffffc0; valaddr_reg:x3; val_offset:18843*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18843*0 + 3*137*FLEN/8, x4, x1, x2)

inst_6282:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83dfffffffffffe0; valaddr_reg:x3; val_offset:18846*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18846*0 + 3*138*FLEN/8, x4, x1, x2)

inst_6283:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83dffffffffffff0; valaddr_reg:x3; val_offset:18849*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18849*0 + 3*139*FLEN/8, x4, x1, x2)

inst_6284:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83dffffffffffff8; valaddr_reg:x3; val_offset:18852*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18852*0 + 3*140*FLEN/8, x4, x1, x2)

inst_6285:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83dffffffffffffc; valaddr_reg:x3; val_offset:18855*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18855*0 + 3*141*FLEN/8, x4, x1, x2)

inst_6286:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83dffffffffffffe; valaddr_reg:x3; val_offset:18858*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18858*0 + 3*142*FLEN/8, x4, x1, x2)

inst_6287:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1cbc2855beaaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71cbc2855beaaf; op2val:0x8000;
op3val:0x83dfffffffffffff; valaddr_reg:x3; val_offset:18861*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18861*0 + 3*143*FLEN/8, x4, x1, x2)

inst_6288:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:18864*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18864*0 + 3*144*FLEN/8, x4, x1, x2)

inst_6289:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:18867*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18867*0 + 3*145*FLEN/8, x4, x1, x2)

inst_6290:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:18870*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18870*0 + 3*146*FLEN/8, x4, x1, x2)

inst_6291:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:18873*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18873*0 + 3*147*FLEN/8, x4, x1, x2)

inst_6292:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:18876*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18876*0 + 3*148*FLEN/8, x4, x1, x2)

inst_6293:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:18879*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18879*0 + 3*149*FLEN/8, x4, x1, x2)

inst_6294:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:18882*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18882*0 + 3*150*FLEN/8, x4, x1, x2)

inst_6295:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:18885*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18885*0 + 3*151*FLEN/8, x4, x1, x2)

inst_6296:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:18888*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18888*0 + 3*152*FLEN/8, x4, x1, x2)

inst_6297:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:18891*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18891*0 + 3*153*FLEN/8, x4, x1, x2)

inst_6298:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:18894*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18894*0 + 3*154*FLEN/8, x4, x1, x2)

inst_6299:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:18897*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18897*0 + 3*155*FLEN/8, x4, x1, x2)

inst_6300:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:18900*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18900*0 + 3*156*FLEN/8, x4, x1, x2)

inst_6301:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:18903*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18903*0 + 3*157*FLEN/8, x4, x1, x2)

inst_6302:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:18906*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18906*0 + 3*158*FLEN/8, x4, x1, x2)

inst_6303:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:18909*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18909*0 + 3*159*FLEN/8, x4, x1, x2)

inst_6304:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:18912*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18912*0 + 3*160*FLEN/8, x4, x1, x2)

inst_6305:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:18915*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18915*0 + 3*161*FLEN/8, x4, x1, x2)

inst_6306:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:18918*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18918*0 + 3*162*FLEN/8, x4, x1, x2)

inst_6307:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:18921*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18921*0 + 3*163*FLEN/8, x4, x1, x2)

inst_6308:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:18924*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18924*0 + 3*164*FLEN/8, x4, x1, x2)

inst_6309:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:18927*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18927*0 + 3*165*FLEN/8, x4, x1, x2)

inst_6310:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x180000000000000; valaddr_reg:x3; val_offset:18930*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18930*0 + 3*166*FLEN/8, x4, x1, x2)

inst_6311:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x180000000000001; valaddr_reg:x3; val_offset:18933*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18933*0 + 3*167*FLEN/8, x4, x1, x2)

inst_6312:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x180000000000003; valaddr_reg:x3; val_offset:18936*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18936*0 + 3*168*FLEN/8, x4, x1, x2)

inst_6313:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x180000000000007; valaddr_reg:x3; val_offset:18939*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18939*0 + 3*169*FLEN/8, x4, x1, x2)

inst_6314:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18000000000000f; valaddr_reg:x3; val_offset:18942*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18942*0 + 3*170*FLEN/8, x4, x1, x2)

inst_6315:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18000000000001f; valaddr_reg:x3; val_offset:18945*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18945*0 + 3*171*FLEN/8, x4, x1, x2)

inst_6316:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18000000000003f; valaddr_reg:x3; val_offset:18948*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18948*0 + 3*172*FLEN/8, x4, x1, x2)

inst_6317:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18000000000007f; valaddr_reg:x3; val_offset:18951*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18951*0 + 3*173*FLEN/8, x4, x1, x2)

inst_6318:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x1800000000000ff; valaddr_reg:x3; val_offset:18954*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18954*0 + 3*174*FLEN/8, x4, x1, x2)

inst_6319:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x1800000000001ff; valaddr_reg:x3; val_offset:18957*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18957*0 + 3*175*FLEN/8, x4, x1, x2)

inst_6320:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x1800000000003ff; valaddr_reg:x3; val_offset:18960*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18960*0 + 3*176*FLEN/8, x4, x1, x2)

inst_6321:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x1800000000007ff; valaddr_reg:x3; val_offset:18963*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18963*0 + 3*177*FLEN/8, x4, x1, x2)

inst_6322:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x180000000000fff; valaddr_reg:x3; val_offset:18966*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18966*0 + 3*178*FLEN/8, x4, x1, x2)

inst_6323:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x180000000001fff; valaddr_reg:x3; val_offset:18969*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18969*0 + 3*179*FLEN/8, x4, x1, x2)

inst_6324:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x180000000003fff; valaddr_reg:x3; val_offset:18972*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18972*0 + 3*180*FLEN/8, x4, x1, x2)

inst_6325:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x180000000007fff; valaddr_reg:x3; val_offset:18975*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18975*0 + 3*181*FLEN/8, x4, x1, x2)

inst_6326:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18000000000ffff; valaddr_reg:x3; val_offset:18978*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18978*0 + 3*182*FLEN/8, x4, x1, x2)

inst_6327:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18000000001ffff; valaddr_reg:x3; val_offset:18981*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18981*0 + 3*183*FLEN/8, x4, x1, x2)

inst_6328:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18000000003ffff; valaddr_reg:x3; val_offset:18984*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18984*0 + 3*184*FLEN/8, x4, x1, x2)

inst_6329:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18000000007ffff; valaddr_reg:x3; val_offset:18987*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18987*0 + 3*185*FLEN/8, x4, x1, x2)

inst_6330:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x1800000000fffff; valaddr_reg:x3; val_offset:18990*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18990*0 + 3*186*FLEN/8, x4, x1, x2)

inst_6331:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x1800000001fffff; valaddr_reg:x3; val_offset:18993*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18993*0 + 3*187*FLEN/8, x4, x1, x2)

inst_6332:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x1800000003fffff; valaddr_reg:x3; val_offset:18996*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18996*0 + 3*188*FLEN/8, x4, x1, x2)

inst_6333:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x1800000007fffff; valaddr_reg:x3; val_offset:18999*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18999*0 + 3*189*FLEN/8, x4, x1, x2)

inst_6334:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x180000000ffffff; valaddr_reg:x3; val_offset:19002*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19002*0 + 3*190*FLEN/8, x4, x1, x2)

inst_6335:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x180000001ffffff; valaddr_reg:x3; val_offset:19005*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19005*0 + 3*191*FLEN/8, x4, x1, x2)

inst_6336:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x180000003ffffff; valaddr_reg:x3; val_offset:19008*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19008*0 + 3*192*FLEN/8, x4, x1, x2)

inst_6337:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x180000007ffffff; valaddr_reg:x3; val_offset:19011*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19011*0 + 3*193*FLEN/8, x4, x1, x2)

inst_6338:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18000000fffffff; valaddr_reg:x3; val_offset:19014*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19014*0 + 3*194*FLEN/8, x4, x1, x2)

inst_6339:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18000001fffffff; valaddr_reg:x3; val_offset:19017*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19017*0 + 3*195*FLEN/8, x4, x1, x2)

inst_6340:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18000003fffffff; valaddr_reg:x3; val_offset:19020*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19020*0 + 3*196*FLEN/8, x4, x1, x2)

inst_6341:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18000007fffffff; valaddr_reg:x3; val_offset:19023*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19023*0 + 3*197*FLEN/8, x4, x1, x2)

inst_6342:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x1800000ffffffff; valaddr_reg:x3; val_offset:19026*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19026*0 + 3*198*FLEN/8, x4, x1, x2)

inst_6343:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x1800001ffffffff; valaddr_reg:x3; val_offset:19029*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19029*0 + 3*199*FLEN/8, x4, x1, x2)

inst_6344:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x1800003ffffffff; valaddr_reg:x3; val_offset:19032*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19032*0 + 3*200*FLEN/8, x4, x1, x2)

inst_6345:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x1800007ffffffff; valaddr_reg:x3; val_offset:19035*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19035*0 + 3*201*FLEN/8, x4, x1, x2)

inst_6346:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x180000fffffffff; valaddr_reg:x3; val_offset:19038*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19038*0 + 3*202*FLEN/8, x4, x1, x2)

inst_6347:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x180001fffffffff; valaddr_reg:x3; val_offset:19041*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19041*0 + 3*203*FLEN/8, x4, x1, x2)

inst_6348:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x180003fffffffff; valaddr_reg:x3; val_offset:19044*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19044*0 + 3*204*FLEN/8, x4, x1, x2)

inst_6349:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x180007fffffffff; valaddr_reg:x3; val_offset:19047*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19047*0 + 3*205*FLEN/8, x4, x1, x2)

inst_6350:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18000ffffffffff; valaddr_reg:x3; val_offset:19050*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19050*0 + 3*206*FLEN/8, x4, x1, x2)

inst_6351:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18001ffffffffff; valaddr_reg:x3; val_offset:19053*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19053*0 + 3*207*FLEN/8, x4, x1, x2)

inst_6352:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18003ffffffffff; valaddr_reg:x3; val_offset:19056*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19056*0 + 3*208*FLEN/8, x4, x1, x2)

inst_6353:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18007ffffffffff; valaddr_reg:x3; val_offset:19059*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19059*0 + 3*209*FLEN/8, x4, x1, x2)

inst_6354:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x1800fffffffffff; valaddr_reg:x3; val_offset:19062*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19062*0 + 3*210*FLEN/8, x4, x1, x2)

inst_6355:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x1801fffffffffff; valaddr_reg:x3; val_offset:19065*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19065*0 + 3*211*FLEN/8, x4, x1, x2)

inst_6356:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x1803fffffffffff; valaddr_reg:x3; val_offset:19068*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19068*0 + 3*212*FLEN/8, x4, x1, x2)

inst_6357:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x1807fffffffffff; valaddr_reg:x3; val_offset:19071*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19071*0 + 3*213*FLEN/8, x4, x1, x2)

inst_6358:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x180ffffffffffff; valaddr_reg:x3; val_offset:19074*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19074*0 + 3*214*FLEN/8, x4, x1, x2)

inst_6359:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x181ffffffffffff; valaddr_reg:x3; val_offset:19077*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19077*0 + 3*215*FLEN/8, x4, x1, x2)

inst_6360:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x183ffffffffffff; valaddr_reg:x3; val_offset:19080*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19080*0 + 3*216*FLEN/8, x4, x1, x2)

inst_6361:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x187ffffffffffff; valaddr_reg:x3; val_offset:19083*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19083*0 + 3*217*FLEN/8, x4, x1, x2)

inst_6362:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x188000000000000; valaddr_reg:x3; val_offset:19086*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19086*0 + 3*218*FLEN/8, x4, x1, x2)

inst_6363:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18c000000000000; valaddr_reg:x3; val_offset:19089*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19089*0 + 3*219*FLEN/8, x4, x1, x2)

inst_6364:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18e000000000000; valaddr_reg:x3; val_offset:19092*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19092*0 + 3*220*FLEN/8, x4, x1, x2)

inst_6365:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18f000000000000; valaddr_reg:x3; val_offset:19095*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19095*0 + 3*221*FLEN/8, x4, x1, x2)

inst_6366:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18f800000000000; valaddr_reg:x3; val_offset:19098*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19098*0 + 3*222*FLEN/8, x4, x1, x2)

inst_6367:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18fc00000000000; valaddr_reg:x3; val_offset:19101*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19101*0 + 3*223*FLEN/8, x4, x1, x2)

inst_6368:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18fe00000000000; valaddr_reg:x3; val_offset:19104*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19104*0 + 3*224*FLEN/8, x4, x1, x2)

inst_6369:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18ff00000000000; valaddr_reg:x3; val_offset:19107*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19107*0 + 3*225*FLEN/8, x4, x1, x2)

inst_6370:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18ff80000000000; valaddr_reg:x3; val_offset:19110*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19110*0 + 3*226*FLEN/8, x4, x1, x2)

inst_6371:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18ffc0000000000; valaddr_reg:x3; val_offset:19113*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19113*0 + 3*227*FLEN/8, x4, x1, x2)

inst_6372:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18ffe0000000000; valaddr_reg:x3; val_offset:19116*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19116*0 + 3*228*FLEN/8, x4, x1, x2)

inst_6373:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18fff0000000000; valaddr_reg:x3; val_offset:19119*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19119*0 + 3*229*FLEN/8, x4, x1, x2)

inst_6374:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18fff8000000000; valaddr_reg:x3; val_offset:19122*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19122*0 + 3*230*FLEN/8, x4, x1, x2)

inst_6375:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18fffc000000000; valaddr_reg:x3; val_offset:19125*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19125*0 + 3*231*FLEN/8, x4, x1, x2)

inst_6376:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18fffe000000000; valaddr_reg:x3; val_offset:19128*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19128*0 + 3*232*FLEN/8, x4, x1, x2)

inst_6377:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18ffff000000000; valaddr_reg:x3; val_offset:19131*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19131*0 + 3*233*FLEN/8, x4, x1, x2)

inst_6378:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18ffff800000000; valaddr_reg:x3; val_offset:19134*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19134*0 + 3*234*FLEN/8, x4, x1, x2)

inst_6379:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18ffffc00000000; valaddr_reg:x3; val_offset:19137*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19137*0 + 3*235*FLEN/8, x4, x1, x2)

inst_6380:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18ffffe00000000; valaddr_reg:x3; val_offset:19140*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19140*0 + 3*236*FLEN/8, x4, x1, x2)

inst_6381:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18fffff00000000; valaddr_reg:x3; val_offset:19143*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19143*0 + 3*237*FLEN/8, x4, x1, x2)

inst_6382:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18fffff80000000; valaddr_reg:x3; val_offset:19146*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19146*0 + 3*238*FLEN/8, x4, x1, x2)

inst_6383:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18fffffc0000000; valaddr_reg:x3; val_offset:19149*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19149*0 + 3*239*FLEN/8, x4, x1, x2)

inst_6384:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18fffffe0000000; valaddr_reg:x3; val_offset:19152*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19152*0 + 3*240*FLEN/8, x4, x1, x2)

inst_6385:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18ffffff0000000; valaddr_reg:x3; val_offset:19155*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19155*0 + 3*241*FLEN/8, x4, x1, x2)

inst_6386:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18ffffff8000000; valaddr_reg:x3; val_offset:19158*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19158*0 + 3*242*FLEN/8, x4, x1, x2)

inst_6387:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18ffffffc000000; valaddr_reg:x3; val_offset:19161*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19161*0 + 3*243*FLEN/8, x4, x1, x2)

inst_6388:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18ffffffe000000; valaddr_reg:x3; val_offset:19164*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19164*0 + 3*244*FLEN/8, x4, x1, x2)

inst_6389:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18fffffff000000; valaddr_reg:x3; val_offset:19167*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19167*0 + 3*245*FLEN/8, x4, x1, x2)

inst_6390:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18fffffff800000; valaddr_reg:x3; val_offset:19170*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19170*0 + 3*246*FLEN/8, x4, x1, x2)

inst_6391:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18fffffffc00000; valaddr_reg:x3; val_offset:19173*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19173*0 + 3*247*FLEN/8, x4, x1, x2)

inst_6392:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18fffffffe00000; valaddr_reg:x3; val_offset:19176*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19176*0 + 3*248*FLEN/8, x4, x1, x2)

inst_6393:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18ffffffff00000; valaddr_reg:x3; val_offset:19179*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19179*0 + 3*249*FLEN/8, x4, x1, x2)

inst_6394:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18ffffffff80000; valaddr_reg:x3; val_offset:19182*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19182*0 + 3*250*FLEN/8, x4, x1, x2)

inst_6395:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18ffffffffc0000; valaddr_reg:x3; val_offset:19185*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19185*0 + 3*251*FLEN/8, x4, x1, x2)

inst_6396:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18ffffffffe0000; valaddr_reg:x3; val_offset:19188*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19188*0 + 3*252*FLEN/8, x4, x1, x2)

inst_6397:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18fffffffff0000; valaddr_reg:x3; val_offset:19191*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19191*0 + 3*253*FLEN/8, x4, x1, x2)

inst_6398:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18fffffffff8000; valaddr_reg:x3; val_offset:19194*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19194*0 + 3*254*FLEN/8, x4, x1, x2)

inst_6399:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18fffffffffc000; valaddr_reg:x3; val_offset:19197*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19197*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_6400:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18fffffffffe000; valaddr_reg:x3; val_offset:19200*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19200*0 + 3*256*FLEN/8, x4, x1, x2)

inst_6401:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18ffffffffff000; valaddr_reg:x3; val_offset:19203*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19203*0 + 3*257*FLEN/8, x4, x1, x2)

inst_6402:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18ffffffffff800; valaddr_reg:x3; val_offset:19206*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19206*0 + 3*258*FLEN/8, x4, x1, x2)

inst_6403:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18ffffffffffc00; valaddr_reg:x3; val_offset:19209*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19209*0 + 3*259*FLEN/8, x4, x1, x2)

inst_6404:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18ffffffffffe00; valaddr_reg:x3; val_offset:19212*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19212*0 + 3*260*FLEN/8, x4, x1, x2)

inst_6405:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18fffffffffff00; valaddr_reg:x3; val_offset:19215*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19215*0 + 3*261*FLEN/8, x4, x1, x2)

inst_6406:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18fffffffffff80; valaddr_reg:x3; val_offset:19218*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19218*0 + 3*262*FLEN/8, x4, x1, x2)

inst_6407:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18fffffffffffc0; valaddr_reg:x3; val_offset:19221*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19221*0 + 3*263*FLEN/8, x4, x1, x2)

inst_6408:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18fffffffffffe0; valaddr_reg:x3; val_offset:19224*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19224*0 + 3*264*FLEN/8, x4, x1, x2)

inst_6409:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18ffffffffffff0; valaddr_reg:x3; val_offset:19227*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19227*0 + 3*265*FLEN/8, x4, x1, x2)

inst_6410:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18ffffffffffff8; valaddr_reg:x3; val_offset:19230*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19230*0 + 3*266*FLEN/8, x4, x1, x2)

inst_6411:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18ffffffffffffc; valaddr_reg:x3; val_offset:19233*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19233*0 + 3*267*FLEN/8, x4, x1, x2)

inst_6412:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18ffffffffffffe; valaddr_reg:x3; val_offset:19236*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19236*0 + 3*268*FLEN/8, x4, x1, x2)

inst_6413:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1db6acb5d9ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71db6acb5d9ccf; op2val:0x0;
op3val:0x18fffffffffffff; valaddr_reg:x3; val_offset:19239*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19239*0 + 3*269*FLEN/8, x4, x1, x2)

inst_6414:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:19242*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19242*0 + 3*270*FLEN/8, x4, x1, x2)

inst_6415:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:19245*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19245*0 + 3*271*FLEN/8, x4, x1, x2)

inst_6416:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:19248*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19248*0 + 3*272*FLEN/8, x4, x1, x2)

inst_6417:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:19251*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19251*0 + 3*273*FLEN/8, x4, x1, x2)

inst_6418:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:19254*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19254*0 + 3*274*FLEN/8, x4, x1, x2)

inst_6419:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:19257*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19257*0 + 3*275*FLEN/8, x4, x1, x2)

inst_6420:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:19260*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19260*0 + 3*276*FLEN/8, x4, x1, x2)

inst_6421:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:19263*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19263*0 + 3*277*FLEN/8, x4, x1, x2)

inst_6422:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:19266*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19266*0 + 3*278*FLEN/8, x4, x1, x2)

inst_6423:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:19269*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19269*0 + 3*279*FLEN/8, x4, x1, x2)

inst_6424:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:19272*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19272*0 + 3*280*FLEN/8, x4, x1, x2)

inst_6425:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:19275*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19275*0 + 3*281*FLEN/8, x4, x1, x2)

inst_6426:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:19278*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19278*0 + 3*282*FLEN/8, x4, x1, x2)

inst_6427:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:19281*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19281*0 + 3*283*FLEN/8, x4, x1, x2)

inst_6428:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:19284*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19284*0 + 3*284*FLEN/8, x4, x1, x2)

inst_6429:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:19287*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19287*0 + 3*285*FLEN/8, x4, x1, x2)

inst_6430:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:19290*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19290*0 + 3*286*FLEN/8, x4, x1, x2)

inst_6431:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:19293*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19293*0 + 3*287*FLEN/8, x4, x1, x2)

inst_6432:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:19296*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19296*0 + 3*288*FLEN/8, x4, x1, x2)

inst_6433:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:19299*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19299*0 + 3*289*FLEN/8, x4, x1, x2)

inst_6434:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:19302*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19302*0 + 3*290*FLEN/8, x4, x1, x2)

inst_6435:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:19305*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19305*0 + 3*291*FLEN/8, x4, x1, x2)

inst_6436:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x240000000000000; valaddr_reg:x3; val_offset:19308*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19308*0 + 3*292*FLEN/8, x4, x1, x2)

inst_6437:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x240000000000001; valaddr_reg:x3; val_offset:19311*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19311*0 + 3*293*FLEN/8, x4, x1, x2)

inst_6438:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x240000000000003; valaddr_reg:x3; val_offset:19314*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19314*0 + 3*294*FLEN/8, x4, x1, x2)

inst_6439:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x240000000000007; valaddr_reg:x3; val_offset:19317*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19317*0 + 3*295*FLEN/8, x4, x1, x2)

inst_6440:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24000000000000f; valaddr_reg:x3; val_offset:19320*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19320*0 + 3*296*FLEN/8, x4, x1, x2)

inst_6441:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24000000000001f; valaddr_reg:x3; val_offset:19323*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19323*0 + 3*297*FLEN/8, x4, x1, x2)

inst_6442:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24000000000003f; valaddr_reg:x3; val_offset:19326*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19326*0 + 3*298*FLEN/8, x4, x1, x2)

inst_6443:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24000000000007f; valaddr_reg:x3; val_offset:19329*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19329*0 + 3*299*FLEN/8, x4, x1, x2)

inst_6444:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x2400000000000ff; valaddr_reg:x3; val_offset:19332*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19332*0 + 3*300*FLEN/8, x4, x1, x2)

inst_6445:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x2400000000001ff; valaddr_reg:x3; val_offset:19335*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19335*0 + 3*301*FLEN/8, x4, x1, x2)

inst_6446:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x2400000000003ff; valaddr_reg:x3; val_offset:19338*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19338*0 + 3*302*FLEN/8, x4, x1, x2)

inst_6447:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x2400000000007ff; valaddr_reg:x3; val_offset:19341*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19341*0 + 3*303*FLEN/8, x4, x1, x2)

inst_6448:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x240000000000fff; valaddr_reg:x3; val_offset:19344*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19344*0 + 3*304*FLEN/8, x4, x1, x2)

inst_6449:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x240000000001fff; valaddr_reg:x3; val_offset:19347*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19347*0 + 3*305*FLEN/8, x4, x1, x2)

inst_6450:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x240000000003fff; valaddr_reg:x3; val_offset:19350*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19350*0 + 3*306*FLEN/8, x4, x1, x2)

inst_6451:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x240000000007fff; valaddr_reg:x3; val_offset:19353*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19353*0 + 3*307*FLEN/8, x4, x1, x2)

inst_6452:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24000000000ffff; valaddr_reg:x3; val_offset:19356*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19356*0 + 3*308*FLEN/8, x4, x1, x2)

inst_6453:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24000000001ffff; valaddr_reg:x3; val_offset:19359*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19359*0 + 3*309*FLEN/8, x4, x1, x2)

inst_6454:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24000000003ffff; valaddr_reg:x3; val_offset:19362*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19362*0 + 3*310*FLEN/8, x4, x1, x2)

inst_6455:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24000000007ffff; valaddr_reg:x3; val_offset:19365*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19365*0 + 3*311*FLEN/8, x4, x1, x2)

inst_6456:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x2400000000fffff; valaddr_reg:x3; val_offset:19368*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19368*0 + 3*312*FLEN/8, x4, x1, x2)

inst_6457:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x2400000001fffff; valaddr_reg:x3; val_offset:19371*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19371*0 + 3*313*FLEN/8, x4, x1, x2)

inst_6458:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x2400000003fffff; valaddr_reg:x3; val_offset:19374*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19374*0 + 3*314*FLEN/8, x4, x1, x2)

inst_6459:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x2400000007fffff; valaddr_reg:x3; val_offset:19377*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19377*0 + 3*315*FLEN/8, x4, x1, x2)

inst_6460:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x240000000ffffff; valaddr_reg:x3; val_offset:19380*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19380*0 + 3*316*FLEN/8, x4, x1, x2)

inst_6461:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x240000001ffffff; valaddr_reg:x3; val_offset:19383*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19383*0 + 3*317*FLEN/8, x4, x1, x2)

inst_6462:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x240000003ffffff; valaddr_reg:x3; val_offset:19386*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19386*0 + 3*318*FLEN/8, x4, x1, x2)

inst_6463:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x240000007ffffff; valaddr_reg:x3; val_offset:19389*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19389*0 + 3*319*FLEN/8, x4, x1, x2)

inst_6464:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24000000fffffff; valaddr_reg:x3; val_offset:19392*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19392*0 + 3*320*FLEN/8, x4, x1, x2)

inst_6465:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24000001fffffff; valaddr_reg:x3; val_offset:19395*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19395*0 + 3*321*FLEN/8, x4, x1, x2)

inst_6466:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24000003fffffff; valaddr_reg:x3; val_offset:19398*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19398*0 + 3*322*FLEN/8, x4, x1, x2)

inst_6467:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24000007fffffff; valaddr_reg:x3; val_offset:19401*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19401*0 + 3*323*FLEN/8, x4, x1, x2)

inst_6468:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x2400000ffffffff; valaddr_reg:x3; val_offset:19404*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19404*0 + 3*324*FLEN/8, x4, x1, x2)

inst_6469:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x2400001ffffffff; valaddr_reg:x3; val_offset:19407*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19407*0 + 3*325*FLEN/8, x4, x1, x2)

inst_6470:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x2400003ffffffff; valaddr_reg:x3; val_offset:19410*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19410*0 + 3*326*FLEN/8, x4, x1, x2)

inst_6471:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x2400007ffffffff; valaddr_reg:x3; val_offset:19413*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19413*0 + 3*327*FLEN/8, x4, x1, x2)

inst_6472:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x240000fffffffff; valaddr_reg:x3; val_offset:19416*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19416*0 + 3*328*FLEN/8, x4, x1, x2)

inst_6473:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x240001fffffffff; valaddr_reg:x3; val_offset:19419*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19419*0 + 3*329*FLEN/8, x4, x1, x2)

inst_6474:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x240003fffffffff; valaddr_reg:x3; val_offset:19422*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19422*0 + 3*330*FLEN/8, x4, x1, x2)

inst_6475:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x240007fffffffff; valaddr_reg:x3; val_offset:19425*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19425*0 + 3*331*FLEN/8, x4, x1, x2)

inst_6476:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24000ffffffffff; valaddr_reg:x3; val_offset:19428*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19428*0 + 3*332*FLEN/8, x4, x1, x2)

inst_6477:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24001ffffffffff; valaddr_reg:x3; val_offset:19431*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19431*0 + 3*333*FLEN/8, x4, x1, x2)

inst_6478:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24003ffffffffff; valaddr_reg:x3; val_offset:19434*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19434*0 + 3*334*FLEN/8, x4, x1, x2)

inst_6479:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24007ffffffffff; valaddr_reg:x3; val_offset:19437*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19437*0 + 3*335*FLEN/8, x4, x1, x2)

inst_6480:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x2400fffffffffff; valaddr_reg:x3; val_offset:19440*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19440*0 + 3*336*FLEN/8, x4, x1, x2)

inst_6481:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x2401fffffffffff; valaddr_reg:x3; val_offset:19443*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19443*0 + 3*337*FLEN/8, x4, x1, x2)

inst_6482:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x2403fffffffffff; valaddr_reg:x3; val_offset:19446*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19446*0 + 3*338*FLEN/8, x4, x1, x2)

inst_6483:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x2407fffffffffff; valaddr_reg:x3; val_offset:19449*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19449*0 + 3*339*FLEN/8, x4, x1, x2)

inst_6484:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x240ffffffffffff; valaddr_reg:x3; val_offset:19452*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19452*0 + 3*340*FLEN/8, x4, x1, x2)

inst_6485:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x241ffffffffffff; valaddr_reg:x3; val_offset:19455*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19455*0 + 3*341*FLEN/8, x4, x1, x2)

inst_6486:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x243ffffffffffff; valaddr_reg:x3; val_offset:19458*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19458*0 + 3*342*FLEN/8, x4, x1, x2)

inst_6487:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x247ffffffffffff; valaddr_reg:x3; val_offset:19461*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19461*0 + 3*343*FLEN/8, x4, x1, x2)

inst_6488:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x248000000000000; valaddr_reg:x3; val_offset:19464*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19464*0 + 3*344*FLEN/8, x4, x1, x2)

inst_6489:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24c000000000000; valaddr_reg:x3; val_offset:19467*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19467*0 + 3*345*FLEN/8, x4, x1, x2)

inst_6490:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24e000000000000; valaddr_reg:x3; val_offset:19470*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19470*0 + 3*346*FLEN/8, x4, x1, x2)

inst_6491:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24f000000000000; valaddr_reg:x3; val_offset:19473*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19473*0 + 3*347*FLEN/8, x4, x1, x2)

inst_6492:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24f800000000000; valaddr_reg:x3; val_offset:19476*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19476*0 + 3*348*FLEN/8, x4, x1, x2)

inst_6493:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24fc00000000000; valaddr_reg:x3; val_offset:19479*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19479*0 + 3*349*FLEN/8, x4, x1, x2)

inst_6494:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24fe00000000000; valaddr_reg:x3; val_offset:19482*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19482*0 + 3*350*FLEN/8, x4, x1, x2)

inst_6495:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24ff00000000000; valaddr_reg:x3; val_offset:19485*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19485*0 + 3*351*FLEN/8, x4, x1, x2)

inst_6496:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24ff80000000000; valaddr_reg:x3; val_offset:19488*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19488*0 + 3*352*FLEN/8, x4, x1, x2)

inst_6497:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24ffc0000000000; valaddr_reg:x3; val_offset:19491*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19491*0 + 3*353*FLEN/8, x4, x1, x2)

inst_6498:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24ffe0000000000; valaddr_reg:x3; val_offset:19494*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19494*0 + 3*354*FLEN/8, x4, x1, x2)

inst_6499:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24fff0000000000; valaddr_reg:x3; val_offset:19497*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19497*0 + 3*355*FLEN/8, x4, x1, x2)

inst_6500:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24fff8000000000; valaddr_reg:x3; val_offset:19500*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19500*0 + 3*356*FLEN/8, x4, x1, x2)

inst_6501:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24fffc000000000; valaddr_reg:x3; val_offset:19503*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19503*0 + 3*357*FLEN/8, x4, x1, x2)

inst_6502:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24fffe000000000; valaddr_reg:x3; val_offset:19506*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19506*0 + 3*358*FLEN/8, x4, x1, x2)

inst_6503:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24ffff000000000; valaddr_reg:x3; val_offset:19509*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19509*0 + 3*359*FLEN/8, x4, x1, x2)

inst_6504:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24ffff800000000; valaddr_reg:x3; val_offset:19512*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19512*0 + 3*360*FLEN/8, x4, x1, x2)

inst_6505:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24ffffc00000000; valaddr_reg:x3; val_offset:19515*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19515*0 + 3*361*FLEN/8, x4, x1, x2)

inst_6506:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24ffffe00000000; valaddr_reg:x3; val_offset:19518*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19518*0 + 3*362*FLEN/8, x4, x1, x2)

inst_6507:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24fffff00000000; valaddr_reg:x3; val_offset:19521*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19521*0 + 3*363*FLEN/8, x4, x1, x2)

inst_6508:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24fffff80000000; valaddr_reg:x3; val_offset:19524*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19524*0 + 3*364*FLEN/8, x4, x1, x2)

inst_6509:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24fffffc0000000; valaddr_reg:x3; val_offset:19527*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19527*0 + 3*365*FLEN/8, x4, x1, x2)

inst_6510:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24fffffe0000000; valaddr_reg:x3; val_offset:19530*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19530*0 + 3*366*FLEN/8, x4, x1, x2)

inst_6511:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24ffffff0000000; valaddr_reg:x3; val_offset:19533*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19533*0 + 3*367*FLEN/8, x4, x1, x2)

inst_6512:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24ffffff8000000; valaddr_reg:x3; val_offset:19536*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19536*0 + 3*368*FLEN/8, x4, x1, x2)

inst_6513:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24ffffffc000000; valaddr_reg:x3; val_offset:19539*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19539*0 + 3*369*FLEN/8, x4, x1, x2)

inst_6514:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24ffffffe000000; valaddr_reg:x3; val_offset:19542*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19542*0 + 3*370*FLEN/8, x4, x1, x2)

inst_6515:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24fffffff000000; valaddr_reg:x3; val_offset:19545*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19545*0 + 3*371*FLEN/8, x4, x1, x2)

inst_6516:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24fffffff800000; valaddr_reg:x3; val_offset:19548*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19548*0 + 3*372*FLEN/8, x4, x1, x2)

inst_6517:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24fffffffc00000; valaddr_reg:x3; val_offset:19551*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19551*0 + 3*373*FLEN/8, x4, x1, x2)

inst_6518:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24fffffffe00000; valaddr_reg:x3; val_offset:19554*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19554*0 + 3*374*FLEN/8, x4, x1, x2)

inst_6519:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24ffffffff00000; valaddr_reg:x3; val_offset:19557*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19557*0 + 3*375*FLEN/8, x4, x1, x2)

inst_6520:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24ffffffff80000; valaddr_reg:x3; val_offset:19560*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19560*0 + 3*376*FLEN/8, x4, x1, x2)

inst_6521:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24ffffffffc0000; valaddr_reg:x3; val_offset:19563*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19563*0 + 3*377*FLEN/8, x4, x1, x2)

inst_6522:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24ffffffffe0000; valaddr_reg:x3; val_offset:19566*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19566*0 + 3*378*FLEN/8, x4, x1, x2)

inst_6523:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24fffffffff0000; valaddr_reg:x3; val_offset:19569*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19569*0 + 3*379*FLEN/8, x4, x1, x2)

inst_6524:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24fffffffff8000; valaddr_reg:x3; val_offset:19572*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19572*0 + 3*380*FLEN/8, x4, x1, x2)

inst_6525:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24fffffffffc000; valaddr_reg:x3; val_offset:19575*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19575*0 + 3*381*FLEN/8, x4, x1, x2)

inst_6526:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24fffffffffe000; valaddr_reg:x3; val_offset:19578*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19578*0 + 3*382*FLEN/8, x4, x1, x2)

inst_6527:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24ffffffffff000; valaddr_reg:x3; val_offset:19581*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19581*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_6528:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24ffffffffff800; valaddr_reg:x3; val_offset:19584*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19584*0 + 3*384*FLEN/8, x4, x1, x2)

inst_6529:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24ffffffffffc00; valaddr_reg:x3; val_offset:19587*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19587*0 + 3*385*FLEN/8, x4, x1, x2)

inst_6530:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24ffffffffffe00; valaddr_reg:x3; val_offset:19590*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19590*0 + 3*386*FLEN/8, x4, x1, x2)

inst_6531:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24fffffffffff00; valaddr_reg:x3; val_offset:19593*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19593*0 + 3*387*FLEN/8, x4, x1, x2)

inst_6532:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24fffffffffff80; valaddr_reg:x3; val_offset:19596*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19596*0 + 3*388*FLEN/8, x4, x1, x2)

inst_6533:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24fffffffffffc0; valaddr_reg:x3; val_offset:19599*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19599*0 + 3*389*FLEN/8, x4, x1, x2)

inst_6534:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24fffffffffffe0; valaddr_reg:x3; val_offset:19602*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19602*0 + 3*390*FLEN/8, x4, x1, x2)

inst_6535:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24ffffffffffff0; valaddr_reg:x3; val_offset:19605*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19605*0 + 3*391*FLEN/8, x4, x1, x2)

inst_6536:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24ffffffffffff8; valaddr_reg:x3; val_offset:19608*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19608*0 + 3*392*FLEN/8, x4, x1, x2)

inst_6537:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24ffffffffffffc; valaddr_reg:x3; val_offset:19611*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19611*0 + 3*393*FLEN/8, x4, x1, x2)

inst_6538:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24ffffffffffffe; valaddr_reg:x3; val_offset:19614*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19614*0 + 3*394*FLEN/8, x4, x1, x2)

inst_6539:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x1f10c76d55f57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f71f10c76d55f57; op2val:0x0;
op3val:0x24fffffffffffff; valaddr_reg:x3; val_offset:19617*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19617*0 + 3*395*FLEN/8, x4, x1, x2)

inst_6540:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a10000000000000; valaddr_reg:x3; val_offset:19620*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19620*0 + 3*396*FLEN/8, x4, x1, x2)

inst_6541:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a10000000000001; valaddr_reg:x3; val_offset:19623*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19623*0 + 3*397*FLEN/8, x4, x1, x2)

inst_6542:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a10000000000003; valaddr_reg:x3; val_offset:19626*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19626*0 + 3*398*FLEN/8, x4, x1, x2)

inst_6543:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a10000000000007; valaddr_reg:x3; val_offset:19629*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19629*0 + 3*399*FLEN/8, x4, x1, x2)

inst_6544:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1000000000000f; valaddr_reg:x3; val_offset:19632*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19632*0 + 3*400*FLEN/8, x4, x1, x2)

inst_6545:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1000000000001f; valaddr_reg:x3; val_offset:19635*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19635*0 + 3*401*FLEN/8, x4, x1, x2)

inst_6546:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1000000000003f; valaddr_reg:x3; val_offset:19638*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19638*0 + 3*402*FLEN/8, x4, x1, x2)

inst_6547:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1000000000007f; valaddr_reg:x3; val_offset:19641*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19641*0 + 3*403*FLEN/8, x4, x1, x2)

inst_6548:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a100000000000ff; valaddr_reg:x3; val_offset:19644*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19644*0 + 3*404*FLEN/8, x4, x1, x2)

inst_6549:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a100000000001ff; valaddr_reg:x3; val_offset:19647*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19647*0 + 3*405*FLEN/8, x4, x1, x2)

inst_6550:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a100000000003ff; valaddr_reg:x3; val_offset:19650*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19650*0 + 3*406*FLEN/8, x4, x1, x2)

inst_6551:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a100000000007ff; valaddr_reg:x3; val_offset:19653*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19653*0 + 3*407*FLEN/8, x4, x1, x2)

inst_6552:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a10000000000fff; valaddr_reg:x3; val_offset:19656*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19656*0 + 3*408*FLEN/8, x4, x1, x2)

inst_6553:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a10000000001fff; valaddr_reg:x3; val_offset:19659*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19659*0 + 3*409*FLEN/8, x4, x1, x2)

inst_6554:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a10000000003fff; valaddr_reg:x3; val_offset:19662*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19662*0 + 3*410*FLEN/8, x4, x1, x2)

inst_6555:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a10000000007fff; valaddr_reg:x3; val_offset:19665*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19665*0 + 3*411*FLEN/8, x4, x1, x2)

inst_6556:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1000000000ffff; valaddr_reg:x3; val_offset:19668*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19668*0 + 3*412*FLEN/8, x4, x1, x2)

inst_6557:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1000000001ffff; valaddr_reg:x3; val_offset:19671*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19671*0 + 3*413*FLEN/8, x4, x1, x2)

inst_6558:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1000000003ffff; valaddr_reg:x3; val_offset:19674*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19674*0 + 3*414*FLEN/8, x4, x1, x2)

inst_6559:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1000000007ffff; valaddr_reg:x3; val_offset:19677*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19677*0 + 3*415*FLEN/8, x4, x1, x2)

inst_6560:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a100000000fffff; valaddr_reg:x3; val_offset:19680*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19680*0 + 3*416*FLEN/8, x4, x1, x2)

inst_6561:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a100000001fffff; valaddr_reg:x3; val_offset:19683*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19683*0 + 3*417*FLEN/8, x4, x1, x2)

inst_6562:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a100000003fffff; valaddr_reg:x3; val_offset:19686*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19686*0 + 3*418*FLEN/8, x4, x1, x2)

inst_6563:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a100000007fffff; valaddr_reg:x3; val_offset:19689*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19689*0 + 3*419*FLEN/8, x4, x1, x2)

inst_6564:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a10000000ffffff; valaddr_reg:x3; val_offset:19692*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19692*0 + 3*420*FLEN/8, x4, x1, x2)

inst_6565:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a10000001ffffff; valaddr_reg:x3; val_offset:19695*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19695*0 + 3*421*FLEN/8, x4, x1, x2)

inst_6566:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a10000003ffffff; valaddr_reg:x3; val_offset:19698*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19698*0 + 3*422*FLEN/8, x4, x1, x2)

inst_6567:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a10000007ffffff; valaddr_reg:x3; val_offset:19701*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19701*0 + 3*423*FLEN/8, x4, x1, x2)

inst_6568:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1000000fffffff; valaddr_reg:x3; val_offset:19704*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19704*0 + 3*424*FLEN/8, x4, x1, x2)

inst_6569:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1000001fffffff; valaddr_reg:x3; val_offset:19707*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19707*0 + 3*425*FLEN/8, x4, x1, x2)

inst_6570:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1000003fffffff; valaddr_reg:x3; val_offset:19710*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19710*0 + 3*426*FLEN/8, x4, x1, x2)

inst_6571:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1000007fffffff; valaddr_reg:x3; val_offset:19713*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19713*0 + 3*427*FLEN/8, x4, x1, x2)

inst_6572:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a100000ffffffff; valaddr_reg:x3; val_offset:19716*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19716*0 + 3*428*FLEN/8, x4, x1, x2)

inst_6573:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a100001ffffffff; valaddr_reg:x3; val_offset:19719*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19719*0 + 3*429*FLEN/8, x4, x1, x2)

inst_6574:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a100003ffffffff; valaddr_reg:x3; val_offset:19722*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19722*0 + 3*430*FLEN/8, x4, x1, x2)

inst_6575:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a100007ffffffff; valaddr_reg:x3; val_offset:19725*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19725*0 + 3*431*FLEN/8, x4, x1, x2)

inst_6576:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a10000fffffffff; valaddr_reg:x3; val_offset:19728*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19728*0 + 3*432*FLEN/8, x4, x1, x2)

inst_6577:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a10001fffffffff; valaddr_reg:x3; val_offset:19731*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19731*0 + 3*433*FLEN/8, x4, x1, x2)

inst_6578:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a10003fffffffff; valaddr_reg:x3; val_offset:19734*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19734*0 + 3*434*FLEN/8, x4, x1, x2)

inst_6579:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a10007fffffffff; valaddr_reg:x3; val_offset:19737*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19737*0 + 3*435*FLEN/8, x4, x1, x2)

inst_6580:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1000ffffffffff; valaddr_reg:x3; val_offset:19740*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19740*0 + 3*436*FLEN/8, x4, x1, x2)

inst_6581:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1001ffffffffff; valaddr_reg:x3; val_offset:19743*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19743*0 + 3*437*FLEN/8, x4, x1, x2)

inst_6582:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1003ffffffffff; valaddr_reg:x3; val_offset:19746*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19746*0 + 3*438*FLEN/8, x4, x1, x2)

inst_6583:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1007ffffffffff; valaddr_reg:x3; val_offset:19749*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19749*0 + 3*439*FLEN/8, x4, x1, x2)

inst_6584:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a100fffffffffff; valaddr_reg:x3; val_offset:19752*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19752*0 + 3*440*FLEN/8, x4, x1, x2)

inst_6585:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a101fffffffffff; valaddr_reg:x3; val_offset:19755*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19755*0 + 3*441*FLEN/8, x4, x1, x2)

inst_6586:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a103fffffffffff; valaddr_reg:x3; val_offset:19758*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19758*0 + 3*442*FLEN/8, x4, x1, x2)

inst_6587:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a107fffffffffff; valaddr_reg:x3; val_offset:19761*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19761*0 + 3*443*FLEN/8, x4, x1, x2)

inst_6588:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a10ffffffffffff; valaddr_reg:x3; val_offset:19764*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19764*0 + 3*444*FLEN/8, x4, x1, x2)

inst_6589:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a11ffffffffffff; valaddr_reg:x3; val_offset:19767*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19767*0 + 3*445*FLEN/8, x4, x1, x2)

inst_6590:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a13ffffffffffff; valaddr_reg:x3; val_offset:19770*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19770*0 + 3*446*FLEN/8, x4, x1, x2)

inst_6591:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a17ffffffffffff; valaddr_reg:x3; val_offset:19773*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19773*0 + 3*447*FLEN/8, x4, x1, x2)

inst_6592:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a18000000000000; valaddr_reg:x3; val_offset:19776*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19776*0 + 3*448*FLEN/8, x4, x1, x2)

inst_6593:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1c000000000000; valaddr_reg:x3; val_offset:19779*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19779*0 + 3*449*FLEN/8, x4, x1, x2)

inst_6594:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1e000000000000; valaddr_reg:x3; val_offset:19782*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19782*0 + 3*450*FLEN/8, x4, x1, x2)

inst_6595:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1f000000000000; valaddr_reg:x3; val_offset:19785*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19785*0 + 3*451*FLEN/8, x4, x1, x2)

inst_6596:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1f800000000000; valaddr_reg:x3; val_offset:19788*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19788*0 + 3*452*FLEN/8, x4, x1, x2)

inst_6597:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1fc00000000000; valaddr_reg:x3; val_offset:19791*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19791*0 + 3*453*FLEN/8, x4, x1, x2)

inst_6598:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1fe00000000000; valaddr_reg:x3; val_offset:19794*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19794*0 + 3*454*FLEN/8, x4, x1, x2)

inst_6599:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1ff00000000000; valaddr_reg:x3; val_offset:19797*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19797*0 + 3*455*FLEN/8, x4, x1, x2)

inst_6600:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1ff80000000000; valaddr_reg:x3; val_offset:19800*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19800*0 + 3*456*FLEN/8, x4, x1, x2)

inst_6601:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1ffc0000000000; valaddr_reg:x3; val_offset:19803*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19803*0 + 3*457*FLEN/8, x4, x1, x2)

inst_6602:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1ffe0000000000; valaddr_reg:x3; val_offset:19806*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19806*0 + 3*458*FLEN/8, x4, x1, x2)

inst_6603:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1fff0000000000; valaddr_reg:x3; val_offset:19809*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19809*0 + 3*459*FLEN/8, x4, x1, x2)

inst_6604:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1fff8000000000; valaddr_reg:x3; val_offset:19812*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19812*0 + 3*460*FLEN/8, x4, x1, x2)

inst_6605:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1fffc000000000; valaddr_reg:x3; val_offset:19815*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19815*0 + 3*461*FLEN/8, x4, x1, x2)

inst_6606:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1fffe000000000; valaddr_reg:x3; val_offset:19818*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19818*0 + 3*462*FLEN/8, x4, x1, x2)

inst_6607:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1ffff000000000; valaddr_reg:x3; val_offset:19821*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19821*0 + 3*463*FLEN/8, x4, x1, x2)

inst_6608:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1ffff800000000; valaddr_reg:x3; val_offset:19824*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19824*0 + 3*464*FLEN/8, x4, x1, x2)

inst_6609:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1ffffc00000000; valaddr_reg:x3; val_offset:19827*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19827*0 + 3*465*FLEN/8, x4, x1, x2)

inst_6610:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1ffffe00000000; valaddr_reg:x3; val_offset:19830*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19830*0 + 3*466*FLEN/8, x4, x1, x2)

inst_6611:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1fffff00000000; valaddr_reg:x3; val_offset:19833*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19833*0 + 3*467*FLEN/8, x4, x1, x2)

inst_6612:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1fffff80000000; valaddr_reg:x3; val_offset:19836*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19836*0 + 3*468*FLEN/8, x4, x1, x2)

inst_6613:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1fffffc0000000; valaddr_reg:x3; val_offset:19839*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19839*0 + 3*469*FLEN/8, x4, x1, x2)

inst_6614:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1fffffe0000000; valaddr_reg:x3; val_offset:19842*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19842*0 + 3*470*FLEN/8, x4, x1, x2)

inst_6615:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1ffffff0000000; valaddr_reg:x3; val_offset:19845*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19845*0 + 3*471*FLEN/8, x4, x1, x2)

inst_6616:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1ffffff8000000; valaddr_reg:x3; val_offset:19848*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19848*0 + 3*472*FLEN/8, x4, x1, x2)

inst_6617:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1ffffffc000000; valaddr_reg:x3; val_offset:19851*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19851*0 + 3*473*FLEN/8, x4, x1, x2)

inst_6618:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1ffffffe000000; valaddr_reg:x3; val_offset:19854*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19854*0 + 3*474*FLEN/8, x4, x1, x2)

inst_6619:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1fffffff000000; valaddr_reg:x3; val_offset:19857*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19857*0 + 3*475*FLEN/8, x4, x1, x2)

inst_6620:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1fffffff800000; valaddr_reg:x3; val_offset:19860*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19860*0 + 3*476*FLEN/8, x4, x1, x2)

inst_6621:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1fffffffc00000; valaddr_reg:x3; val_offset:19863*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19863*0 + 3*477*FLEN/8, x4, x1, x2)

inst_6622:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1fffffffe00000; valaddr_reg:x3; val_offset:19866*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19866*0 + 3*478*FLEN/8, x4, x1, x2)

inst_6623:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1ffffffff00000; valaddr_reg:x3; val_offset:19869*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19869*0 + 3*479*FLEN/8, x4, x1, x2)

inst_6624:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1ffffffff80000; valaddr_reg:x3; val_offset:19872*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19872*0 + 3*480*FLEN/8, x4, x1, x2)

inst_6625:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1ffffffffc0000; valaddr_reg:x3; val_offset:19875*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19875*0 + 3*481*FLEN/8, x4, x1, x2)

inst_6626:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1ffffffffe0000; valaddr_reg:x3; val_offset:19878*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19878*0 + 3*482*FLEN/8, x4, x1, x2)

inst_6627:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1fffffffff0000; valaddr_reg:x3; val_offset:19881*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19881*0 + 3*483*FLEN/8, x4, x1, x2)

inst_6628:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1fffffffff8000; valaddr_reg:x3; val_offset:19884*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19884*0 + 3*484*FLEN/8, x4, x1, x2)

inst_6629:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1fffffffffc000; valaddr_reg:x3; val_offset:19887*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19887*0 + 3*485*FLEN/8, x4, x1, x2)

inst_6630:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1fffffffffe000; valaddr_reg:x3; val_offset:19890*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19890*0 + 3*486*FLEN/8, x4, x1, x2)

inst_6631:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1ffffffffff000; valaddr_reg:x3; val_offset:19893*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19893*0 + 3*487*FLEN/8, x4, x1, x2)

inst_6632:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1ffffffffff800; valaddr_reg:x3; val_offset:19896*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19896*0 + 3*488*FLEN/8, x4, x1, x2)

inst_6633:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1ffffffffffc00; valaddr_reg:x3; val_offset:19899*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19899*0 + 3*489*FLEN/8, x4, x1, x2)

inst_6634:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1ffffffffffe00; valaddr_reg:x3; val_offset:19902*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19902*0 + 3*490*FLEN/8, x4, x1, x2)

inst_6635:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1fffffffffff00; valaddr_reg:x3; val_offset:19905*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19905*0 + 3*491*FLEN/8, x4, x1, x2)

inst_6636:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1fffffffffff80; valaddr_reg:x3; val_offset:19908*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19908*0 + 3*492*FLEN/8, x4, x1, x2)

inst_6637:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1fffffffffffc0; valaddr_reg:x3; val_offset:19911*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19911*0 + 3*493*FLEN/8, x4, x1, x2)

inst_6638:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1fffffffffffe0; valaddr_reg:x3; val_offset:19914*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19914*0 + 3*494*FLEN/8, x4, x1, x2)

inst_6639:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1ffffffffffff0; valaddr_reg:x3; val_offset:19917*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19917*0 + 3*495*FLEN/8, x4, x1, x2)

inst_6640:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1ffffffffffff8; valaddr_reg:x3; val_offset:19920*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19920*0 + 3*496*FLEN/8, x4, x1, x2)

inst_6641:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1ffffffffffffc; valaddr_reg:x3; val_offset:19923*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19923*0 + 3*497*FLEN/8, x4, x1, x2)

inst_6642:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1ffffffffffffe; valaddr_reg:x3; val_offset:19926*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19926*0 + 3*498*FLEN/8, x4, x1, x2)

inst_6643:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3a1 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3a1fffffffffffff; valaddr_reg:x3; val_offset:19929*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19929*0 + 3*499*FLEN/8, x4, x1, x2)

inst_6644:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:19932*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19932*0 + 3*500*FLEN/8, x4, x1, x2)

inst_6645:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:19935*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19935*0 + 3*501*FLEN/8, x4, x1, x2)

inst_6646:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:19938*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19938*0 + 3*502*FLEN/8, x4, x1, x2)

inst_6647:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:19941*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19941*0 + 3*503*FLEN/8, x4, x1, x2)

inst_6648:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:19944*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19944*0 + 3*504*FLEN/8, x4, x1, x2)

inst_6649:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:19947*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19947*0 + 3*505*FLEN/8, x4, x1, x2)

inst_6650:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:19950*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19950*0 + 3*506*FLEN/8, x4, x1, x2)

inst_6651:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:19953*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19953*0 + 3*507*FLEN/8, x4, x1, x2)

inst_6652:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:19956*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19956*0 + 3*508*FLEN/8, x4, x1, x2)

inst_6653:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:19959*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19959*0 + 3*509*FLEN/8, x4, x1, x2)

inst_6654:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:19962*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19962*0 + 3*510*FLEN/8, x4, x1, x2)

inst_6655:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:19965*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19965*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_6656:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:19968*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19968*0 + 3*512*FLEN/8, x4, x1, x2)

inst_6657:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:19971*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19971*0 + 3*513*FLEN/8, x4, x1, x2)

inst_6658:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:19974*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19974*0 + 3*514*FLEN/8, x4, x1, x2)

inst_6659:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:19977*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19977*0 + 3*515*FLEN/8, x4, x1, x2)

inst_6660:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:19980*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19980*0 + 3*516*FLEN/8, x4, x1, x2)

inst_6661:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:19983*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19983*0 + 3*517*FLEN/8, x4, x1, x2)

inst_6662:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:19986*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19986*0 + 3*518*FLEN/8, x4, x1, x2)

inst_6663:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:19989*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19989*0 + 3*519*FLEN/8, x4, x1, x2)

inst_6664:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:19992*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19992*0 + 3*520*FLEN/8, x4, x1, x2)

inst_6665:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x21b281b78f32f and fs2 == 0 and fe2 == 0x206 and fm2 == 0xc471d6e37b33d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f721b281b78f32f; op2val:0x206c471d6e37b33d;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:19995*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19995*0 + 3*521*FLEN/8, x4, x1, x2)

inst_6666:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaf0000000000000; valaddr_reg:x3; val_offset:19998*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19998*0 + 3*522*FLEN/8, x4, x1, x2)

inst_6667:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaf0000000000001; valaddr_reg:x3; val_offset:20001*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20001*0 + 3*523*FLEN/8, x4, x1, x2)

inst_6668:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaf0000000000003; valaddr_reg:x3; val_offset:20004*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20004*0 + 3*524*FLEN/8, x4, x1, x2)

inst_6669:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaf0000000000007; valaddr_reg:x3; val_offset:20007*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20007*0 + 3*525*FLEN/8, x4, x1, x2)

inst_6670:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaf000000000000f; valaddr_reg:x3; val_offset:20010*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20010*0 + 3*526*FLEN/8, x4, x1, x2)

inst_6671:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaf000000000001f; valaddr_reg:x3; val_offset:20013*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20013*0 + 3*527*FLEN/8, x4, x1, x2)

inst_6672:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaf000000000003f; valaddr_reg:x3; val_offset:20016*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20016*0 + 3*528*FLEN/8, x4, x1, x2)

inst_6673:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaf000000000007f; valaddr_reg:x3; val_offset:20019*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20019*0 + 3*529*FLEN/8, x4, x1, x2)

inst_6674:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaf00000000000ff; valaddr_reg:x3; val_offset:20022*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20022*0 + 3*530*FLEN/8, x4, x1, x2)

inst_6675:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaf00000000001ff; valaddr_reg:x3; val_offset:20025*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20025*0 + 3*531*FLEN/8, x4, x1, x2)

inst_6676:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaf00000000003ff; valaddr_reg:x3; val_offset:20028*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20028*0 + 3*532*FLEN/8, x4, x1, x2)

inst_6677:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaf00000000007ff; valaddr_reg:x3; val_offset:20031*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20031*0 + 3*533*FLEN/8, x4, x1, x2)

inst_6678:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaf0000000000fff; valaddr_reg:x3; val_offset:20034*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20034*0 + 3*534*FLEN/8, x4, x1, x2)

inst_6679:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaf0000000001fff; valaddr_reg:x3; val_offset:20037*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20037*0 + 3*535*FLEN/8, x4, x1, x2)

inst_6680:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaf0000000003fff; valaddr_reg:x3; val_offset:20040*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20040*0 + 3*536*FLEN/8, x4, x1, x2)

inst_6681:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaf0000000007fff; valaddr_reg:x3; val_offset:20043*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20043*0 + 3*537*FLEN/8, x4, x1, x2)

inst_6682:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaf000000000ffff; valaddr_reg:x3; val_offset:20046*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20046*0 + 3*538*FLEN/8, x4, x1, x2)

inst_6683:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaf000000001ffff; valaddr_reg:x3; val_offset:20049*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20049*0 + 3*539*FLEN/8, x4, x1, x2)

inst_6684:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaf000000003ffff; valaddr_reg:x3; val_offset:20052*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20052*0 + 3*540*FLEN/8, x4, x1, x2)

inst_6685:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaf000000007ffff; valaddr_reg:x3; val_offset:20055*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20055*0 + 3*541*FLEN/8, x4, x1, x2)

inst_6686:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaf00000000fffff; valaddr_reg:x3; val_offset:20058*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20058*0 + 3*542*FLEN/8, x4, x1, x2)

inst_6687:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaf00000001fffff; valaddr_reg:x3; val_offset:20061*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20061*0 + 3*543*FLEN/8, x4, x1, x2)

inst_6688:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaf00000003fffff; valaddr_reg:x3; val_offset:20064*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20064*0 + 3*544*FLEN/8, x4, x1, x2)

inst_6689:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaf00000007fffff; valaddr_reg:x3; val_offset:20067*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20067*0 + 3*545*FLEN/8, x4, x1, x2)

inst_6690:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaf0000000ffffff; valaddr_reg:x3; val_offset:20070*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20070*0 + 3*546*FLEN/8, x4, x1, x2)

inst_6691:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaf0000001ffffff; valaddr_reg:x3; val_offset:20073*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20073*0 + 3*547*FLEN/8, x4, x1, x2)

inst_6692:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaf0000003ffffff; valaddr_reg:x3; val_offset:20076*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20076*0 + 3*548*FLEN/8, x4, x1, x2)

inst_6693:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaf0000007ffffff; valaddr_reg:x3; val_offset:20079*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20079*0 + 3*549*FLEN/8, x4, x1, x2)

inst_6694:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaf000000fffffff; valaddr_reg:x3; val_offset:20082*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20082*0 + 3*550*FLEN/8, x4, x1, x2)

inst_6695:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaf000001fffffff; valaddr_reg:x3; val_offset:20085*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20085*0 + 3*551*FLEN/8, x4, x1, x2)

inst_6696:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaf000003fffffff; valaddr_reg:x3; val_offset:20088*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20088*0 + 3*552*FLEN/8, x4, x1, x2)

inst_6697:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaf000007fffffff; valaddr_reg:x3; val_offset:20091*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20091*0 + 3*553*FLEN/8, x4, x1, x2)

inst_6698:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaf00000ffffffff; valaddr_reg:x3; val_offset:20094*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20094*0 + 3*554*FLEN/8, x4, x1, x2)

inst_6699:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaf00001ffffffff; valaddr_reg:x3; val_offset:20097*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20097*0 + 3*555*FLEN/8, x4, x1, x2)

inst_6700:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaf00003ffffffff; valaddr_reg:x3; val_offset:20100*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20100*0 + 3*556*FLEN/8, x4, x1, x2)

inst_6701:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaf00007ffffffff; valaddr_reg:x3; val_offset:20103*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20103*0 + 3*557*FLEN/8, x4, x1, x2)

inst_6702:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaf0000fffffffff; valaddr_reg:x3; val_offset:20106*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20106*0 + 3*558*FLEN/8, x4, x1, x2)

inst_6703:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaf0001fffffffff; valaddr_reg:x3; val_offset:20109*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20109*0 + 3*559*FLEN/8, x4, x1, x2)

inst_6704:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaf0003fffffffff; valaddr_reg:x3; val_offset:20112*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20112*0 + 3*560*FLEN/8, x4, x1, x2)

inst_6705:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaf0007fffffffff; valaddr_reg:x3; val_offset:20115*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20115*0 + 3*561*FLEN/8, x4, x1, x2)

inst_6706:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaf000ffffffffff; valaddr_reg:x3; val_offset:20118*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20118*0 + 3*562*FLEN/8, x4, x1, x2)

inst_6707:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaf001ffffffffff; valaddr_reg:x3; val_offset:20121*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20121*0 + 3*563*FLEN/8, x4, x1, x2)

inst_6708:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaf003ffffffffff; valaddr_reg:x3; val_offset:20124*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20124*0 + 3*564*FLEN/8, x4, x1, x2)

inst_6709:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaf007ffffffffff; valaddr_reg:x3; val_offset:20127*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20127*0 + 3*565*FLEN/8, x4, x1, x2)

inst_6710:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaf00fffffffffff; valaddr_reg:x3; val_offset:20130*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20130*0 + 3*566*FLEN/8, x4, x1, x2)

inst_6711:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaf01fffffffffff; valaddr_reg:x3; val_offset:20133*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20133*0 + 3*567*FLEN/8, x4, x1, x2)

inst_6712:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaf03fffffffffff; valaddr_reg:x3; val_offset:20136*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20136*0 + 3*568*FLEN/8, x4, x1, x2)

inst_6713:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaf07fffffffffff; valaddr_reg:x3; val_offset:20139*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20139*0 + 3*569*FLEN/8, x4, x1, x2)

inst_6714:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaf0ffffffffffff; valaddr_reg:x3; val_offset:20142*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20142*0 + 3*570*FLEN/8, x4, x1, x2)

inst_6715:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaf1ffffffffffff; valaddr_reg:x3; val_offset:20145*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20145*0 + 3*571*FLEN/8, x4, x1, x2)

inst_6716:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaf3ffffffffffff; valaddr_reg:x3; val_offset:20148*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20148*0 + 3*572*FLEN/8, x4, x1, x2)

inst_6717:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaf7ffffffffffff; valaddr_reg:x3; val_offset:20151*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20151*0 + 3*573*FLEN/8, x4, x1, x2)

inst_6718:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaf8000000000000; valaddr_reg:x3; val_offset:20154*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20154*0 + 3*574*FLEN/8, x4, x1, x2)

inst_6719:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbafc000000000000; valaddr_reg:x3; val_offset:20157*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20157*0 + 3*575*FLEN/8, x4, x1, x2)

inst_6720:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbafe000000000000; valaddr_reg:x3; val_offset:20160*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20160*0 + 3*576*FLEN/8, x4, x1, x2)

inst_6721:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaff000000000000; valaddr_reg:x3; val_offset:20163*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20163*0 + 3*577*FLEN/8, x4, x1, x2)

inst_6722:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaff800000000000; valaddr_reg:x3; val_offset:20166*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20166*0 + 3*578*FLEN/8, x4, x1, x2)

inst_6723:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaffc00000000000; valaddr_reg:x3; val_offset:20169*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20169*0 + 3*579*FLEN/8, x4, x1, x2)

inst_6724:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaffe00000000000; valaddr_reg:x3; val_offset:20172*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20172*0 + 3*580*FLEN/8, x4, x1, x2)

inst_6725:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbafff00000000000; valaddr_reg:x3; val_offset:20175*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20175*0 + 3*581*FLEN/8, x4, x1, x2)

inst_6726:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbafff80000000000; valaddr_reg:x3; val_offset:20178*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20178*0 + 3*582*FLEN/8, x4, x1, x2)

inst_6727:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbafffc0000000000; valaddr_reg:x3; val_offset:20181*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20181*0 + 3*583*FLEN/8, x4, x1, x2)

inst_6728:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbafffe0000000000; valaddr_reg:x3; val_offset:20184*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20184*0 + 3*584*FLEN/8, x4, x1, x2)

inst_6729:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaffff0000000000; valaddr_reg:x3; val_offset:20187*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20187*0 + 3*585*FLEN/8, x4, x1, x2)

inst_6730:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaffff8000000000; valaddr_reg:x3; val_offset:20190*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20190*0 + 3*586*FLEN/8, x4, x1, x2)

inst_6731:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaffffc000000000; valaddr_reg:x3; val_offset:20193*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20193*0 + 3*587*FLEN/8, x4, x1, x2)

inst_6732:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaffffe000000000; valaddr_reg:x3; val_offset:20196*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20196*0 + 3*588*FLEN/8, x4, x1, x2)

inst_6733:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbafffff000000000; valaddr_reg:x3; val_offset:20199*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20199*0 + 3*589*FLEN/8, x4, x1, x2)

inst_6734:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbafffff800000000; valaddr_reg:x3; val_offset:20202*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20202*0 + 3*590*FLEN/8, x4, x1, x2)

inst_6735:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbafffffc00000000; valaddr_reg:x3; val_offset:20205*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20205*0 + 3*591*FLEN/8, x4, x1, x2)

inst_6736:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbafffffe00000000; valaddr_reg:x3; val_offset:20208*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20208*0 + 3*592*FLEN/8, x4, x1, x2)

inst_6737:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaffffff00000000; valaddr_reg:x3; val_offset:20211*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20211*0 + 3*593*FLEN/8, x4, x1, x2)

inst_6738:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaffffff80000000; valaddr_reg:x3; val_offset:20214*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20214*0 + 3*594*FLEN/8, x4, x1, x2)

inst_6739:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaffffffc0000000; valaddr_reg:x3; val_offset:20217*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20217*0 + 3*595*FLEN/8, x4, x1, x2)

inst_6740:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaffffffe0000000; valaddr_reg:x3; val_offset:20220*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20220*0 + 3*596*FLEN/8, x4, x1, x2)

inst_6741:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbafffffff0000000; valaddr_reg:x3; val_offset:20223*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20223*0 + 3*597*FLEN/8, x4, x1, x2)

inst_6742:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbafffffff8000000; valaddr_reg:x3; val_offset:20226*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20226*0 + 3*598*FLEN/8, x4, x1, x2)

inst_6743:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbafffffffc000000; valaddr_reg:x3; val_offset:20229*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20229*0 + 3*599*FLEN/8, x4, x1, x2)

inst_6744:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbafffffffe000000; valaddr_reg:x3; val_offset:20232*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20232*0 + 3*600*FLEN/8, x4, x1, x2)

inst_6745:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaffffffff000000; valaddr_reg:x3; val_offset:20235*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20235*0 + 3*601*FLEN/8, x4, x1, x2)

inst_6746:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaffffffff800000; valaddr_reg:x3; val_offset:20238*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20238*0 + 3*602*FLEN/8, x4, x1, x2)

inst_6747:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaffffffffc00000; valaddr_reg:x3; val_offset:20241*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20241*0 + 3*603*FLEN/8, x4, x1, x2)

inst_6748:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaffffffffe00000; valaddr_reg:x3; val_offset:20244*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20244*0 + 3*604*FLEN/8, x4, x1, x2)

inst_6749:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbafffffffff00000; valaddr_reg:x3; val_offset:20247*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20247*0 + 3*605*FLEN/8, x4, x1, x2)

inst_6750:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbafffffffff80000; valaddr_reg:x3; val_offset:20250*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20250*0 + 3*606*FLEN/8, x4, x1, x2)

inst_6751:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbafffffffffc0000; valaddr_reg:x3; val_offset:20253*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20253*0 + 3*607*FLEN/8, x4, x1, x2)

inst_6752:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbafffffffffe0000; valaddr_reg:x3; val_offset:20256*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20256*0 + 3*608*FLEN/8, x4, x1, x2)

inst_6753:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaffffffffff0000; valaddr_reg:x3; val_offset:20259*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20259*0 + 3*609*FLEN/8, x4, x1, x2)

inst_6754:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaffffffffff8000; valaddr_reg:x3; val_offset:20262*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20262*0 + 3*610*FLEN/8, x4, x1, x2)

inst_6755:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaffffffffffc000; valaddr_reg:x3; val_offset:20265*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20265*0 + 3*611*FLEN/8, x4, x1, x2)

inst_6756:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaffffffffffe000; valaddr_reg:x3; val_offset:20268*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20268*0 + 3*612*FLEN/8, x4, x1, x2)

inst_6757:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbafffffffffff000; valaddr_reg:x3; val_offset:20271*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20271*0 + 3*613*FLEN/8, x4, x1, x2)

inst_6758:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbafffffffffff800; valaddr_reg:x3; val_offset:20274*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20274*0 + 3*614*FLEN/8, x4, x1, x2)

inst_6759:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbafffffffffffc00; valaddr_reg:x3; val_offset:20277*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20277*0 + 3*615*FLEN/8, x4, x1, x2)

inst_6760:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbafffffffffffe00; valaddr_reg:x3; val_offset:20280*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20280*0 + 3*616*FLEN/8, x4, x1, x2)

inst_6761:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaffffffffffff00; valaddr_reg:x3; val_offset:20283*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20283*0 + 3*617*FLEN/8, x4, x1, x2)

inst_6762:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaffffffffffff80; valaddr_reg:x3; val_offset:20286*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20286*0 + 3*618*FLEN/8, x4, x1, x2)

inst_6763:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaffffffffffffc0; valaddr_reg:x3; val_offset:20289*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20289*0 + 3*619*FLEN/8, x4, x1, x2)

inst_6764:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaffffffffffffe0; valaddr_reg:x3; val_offset:20292*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20292*0 + 3*620*FLEN/8, x4, x1, x2)

inst_6765:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbafffffffffffff0; valaddr_reg:x3; val_offset:20295*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20295*0 + 3*621*FLEN/8, x4, x1, x2)

inst_6766:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbafffffffffffff8; valaddr_reg:x3; val_offset:20298*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20298*0 + 3*622*FLEN/8, x4, x1, x2)

inst_6767:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbafffffffffffffc; valaddr_reg:x3; val_offset:20301*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20301*0 + 3*623*FLEN/8, x4, x1, x2)

inst_6768:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbafffffffffffffe; valaddr_reg:x3; val_offset:20304*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20304*0 + 3*624*FLEN/8, x4, x1, x2)

inst_6769:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3af and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbaffffffffffffff; valaddr_reg:x3; val_offset:20307*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20307*0 + 3*625*FLEN/8, x4, x1, x2)

inst_6770:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:20310*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20310*0 + 3*626*FLEN/8, x4, x1, x2)

inst_6771:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:20313*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20313*0 + 3*627*FLEN/8, x4, x1, x2)

inst_6772:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:20316*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20316*0 + 3*628*FLEN/8, x4, x1, x2)

inst_6773:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:20319*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20319*0 + 3*629*FLEN/8, x4, x1, x2)

inst_6774:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:20322*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20322*0 + 3*630*FLEN/8, x4, x1, x2)

inst_6775:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:20325*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20325*0 + 3*631*FLEN/8, x4, x1, x2)

inst_6776:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:20328*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20328*0 + 3*632*FLEN/8, x4, x1, x2)

inst_6777:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:20331*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20331*0 + 3*633*FLEN/8, x4, x1, x2)

inst_6778:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:20334*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20334*0 + 3*634*FLEN/8, x4, x1, x2)

inst_6779:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:20337*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20337*0 + 3*635*FLEN/8, x4, x1, x2)

inst_6780:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:20340*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20340*0 + 3*636*FLEN/8, x4, x1, x2)

inst_6781:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:20343*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20343*0 + 3*637*FLEN/8, x4, x1, x2)

inst_6782:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:20346*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20346*0 + 3*638*FLEN/8, x4, x1, x2)

inst_6783:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:20349*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20349*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_6784:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:20352*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20352*0 + 3*640*FLEN/8, x4, x1, x2)

inst_6785:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:20355*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20355*0 + 3*641*FLEN/8, x4, x1, x2)

inst_6786:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:20358*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20358*0 + 3*642*FLEN/8, x4, x1, x2)

inst_6787:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:20361*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20361*0 + 3*643*FLEN/8, x4, x1, x2)

inst_6788:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:20364*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20364*0 + 3*644*FLEN/8, x4, x1, x2)

inst_6789:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:20367*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20367*0 + 3*645*FLEN/8, x4, x1, x2)

inst_6790:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:20370*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20370*0 + 3*646*FLEN/8, x4, x1, x2)

inst_6791:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2279337555ac7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xc33c59d71fa0d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72279337555ac7; op2val:0x9ffc33c59d71fa0d;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:20373*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20373*0 + 3*647*FLEN/8, x4, x1, x2)

inst_6792:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0x0; valaddr_reg:x3; val_offset:20376*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20376*0 + 3*648*FLEN/8, x4, x1, x2)

inst_6793:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:20379*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20379*0 + 3*649*FLEN/8, x4, x1, x2)

inst_6794:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:20382*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20382*0 + 3*650*FLEN/8, x4, x1, x2)

inst_6795:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:20385*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20385*0 + 3*651*FLEN/8, x4, x1, x2)

inst_6796:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:20388*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20388*0 + 3*652*FLEN/8, x4, x1, x2)

inst_6797:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:20391*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20391*0 + 3*653*FLEN/8, x4, x1, x2)

inst_6798:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:20394*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20394*0 + 3*654*FLEN/8, x4, x1, x2)

inst_6799:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0x7f; valaddr_reg:x3; val_offset:20397*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20397*0 + 3*655*FLEN/8, x4, x1, x2)

inst_6800:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xff; valaddr_reg:x3; val_offset:20400*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20400*0 + 3*656*FLEN/8, x4, x1, x2)

inst_6801:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0x1ff; valaddr_reg:x3; val_offset:20403*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20403*0 + 3*657*FLEN/8, x4, x1, x2)

inst_6802:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0x3ff; valaddr_reg:x3; val_offset:20406*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20406*0 + 3*658*FLEN/8, x4, x1, x2)

inst_6803:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0x7ff; valaddr_reg:x3; val_offset:20409*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20409*0 + 3*659*FLEN/8, x4, x1, x2)

inst_6804:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xfff; valaddr_reg:x3; val_offset:20412*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20412*0 + 3*660*FLEN/8, x4, x1, x2)

inst_6805:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0x1fff; valaddr_reg:x3; val_offset:20415*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20415*0 + 3*661*FLEN/8, x4, x1, x2)

inst_6806:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0x3fff; valaddr_reg:x3; val_offset:20418*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20418*0 + 3*662*FLEN/8, x4, x1, x2)

inst_6807:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0x7fff; valaddr_reg:x3; val_offset:20421*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20421*0 + 3*663*FLEN/8, x4, x1, x2)

inst_6808:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xffff; valaddr_reg:x3; val_offset:20424*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20424*0 + 3*664*FLEN/8, x4, x1, x2)

inst_6809:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0x1ffff; valaddr_reg:x3; val_offset:20427*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20427*0 + 3*665*FLEN/8, x4, x1, x2)

inst_6810:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0x3ffff; valaddr_reg:x3; val_offset:20430*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20430*0 + 3*666*FLEN/8, x4, x1, x2)

inst_6811:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0x7ffff; valaddr_reg:x3; val_offset:20433*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20433*0 + 3*667*FLEN/8, x4, x1, x2)

inst_6812:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xfffff; valaddr_reg:x3; val_offset:20436*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20436*0 + 3*668*FLEN/8, x4, x1, x2)

inst_6813:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0x1fffff; valaddr_reg:x3; val_offset:20439*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20439*0 + 3*669*FLEN/8, x4, x1, x2)

inst_6814:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0x3fffff; valaddr_reg:x3; val_offset:20442*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20442*0 + 3*670*FLEN/8, x4, x1, x2)

inst_6815:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0x7fffff; valaddr_reg:x3; val_offset:20445*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20445*0 + 3*671*FLEN/8, x4, x1, x2)

inst_6816:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xffffff; valaddr_reg:x3; val_offset:20448*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20448*0 + 3*672*FLEN/8, x4, x1, x2)

inst_6817:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0x1ffffff; valaddr_reg:x3; val_offset:20451*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20451*0 + 3*673*FLEN/8, x4, x1, x2)

inst_6818:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0x3ffffff; valaddr_reg:x3; val_offset:20454*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20454*0 + 3*674*FLEN/8, x4, x1, x2)

inst_6819:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0x7ffffff; valaddr_reg:x3; val_offset:20457*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20457*0 + 3*675*FLEN/8, x4, x1, x2)

inst_6820:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xfffffff; valaddr_reg:x3; val_offset:20460*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20460*0 + 3*676*FLEN/8, x4, x1, x2)

inst_6821:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0x1fffffff; valaddr_reg:x3; val_offset:20463*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20463*0 + 3*677*FLEN/8, x4, x1, x2)

inst_6822:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0x3fffffff; valaddr_reg:x3; val_offset:20466*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20466*0 + 3*678*FLEN/8, x4, x1, x2)

inst_6823:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0x7fffffff; valaddr_reg:x3; val_offset:20469*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20469*0 + 3*679*FLEN/8, x4, x1, x2)

inst_6824:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xffffffff; valaddr_reg:x3; val_offset:20472*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20472*0 + 3*680*FLEN/8, x4, x1, x2)

inst_6825:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0x1ffffffff; valaddr_reg:x3; val_offset:20475*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20475*0 + 3*681*FLEN/8, x4, x1, x2)

inst_6826:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0x3ffffffff; valaddr_reg:x3; val_offset:20478*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20478*0 + 3*682*FLEN/8, x4, x1, x2)

inst_6827:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0x7ffffffff; valaddr_reg:x3; val_offset:20481*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20481*0 + 3*683*FLEN/8, x4, x1, x2)

inst_6828:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xfffffffff; valaddr_reg:x3; val_offset:20484*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20484*0 + 3*684*FLEN/8, x4, x1, x2)

inst_6829:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0x1fffffffff; valaddr_reg:x3; val_offset:20487*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20487*0 + 3*685*FLEN/8, x4, x1, x2)

inst_6830:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0x3fffffffff; valaddr_reg:x3; val_offset:20490*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20490*0 + 3*686*FLEN/8, x4, x1, x2)

inst_6831:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0x7fffffffff; valaddr_reg:x3; val_offset:20493*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20493*0 + 3*687*FLEN/8, x4, x1, x2)

inst_6832:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xffffffffff; valaddr_reg:x3; val_offset:20496*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20496*0 + 3*688*FLEN/8, x4, x1, x2)

inst_6833:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0x1ffffffffff; valaddr_reg:x3; val_offset:20499*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20499*0 + 3*689*FLEN/8, x4, x1, x2)

inst_6834:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0x3ffffffffff; valaddr_reg:x3; val_offset:20502*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20502*0 + 3*690*FLEN/8, x4, x1, x2)

inst_6835:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0x7ffffffffff; valaddr_reg:x3; val_offset:20505*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20505*0 + 3*691*FLEN/8, x4, x1, x2)

inst_6836:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xfffffffffff; valaddr_reg:x3; val_offset:20508*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20508*0 + 3*692*FLEN/8, x4, x1, x2)

inst_6837:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0x1fffffffffff; valaddr_reg:x3; val_offset:20511*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20511*0 + 3*693*FLEN/8, x4, x1, x2)

inst_6838:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0x3fffffffffff; valaddr_reg:x3; val_offset:20514*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20514*0 + 3*694*FLEN/8, x4, x1, x2)

inst_6839:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0x7fffffffffff; valaddr_reg:x3; val_offset:20517*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20517*0 + 3*695*FLEN/8, x4, x1, x2)

inst_6840:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xffffffffffff; valaddr_reg:x3; val_offset:20520*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20520*0 + 3*696*FLEN/8, x4, x1, x2)

inst_6841:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0x1ffffffffffff; valaddr_reg:x3; val_offset:20523*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20523*0 + 3*697*FLEN/8, x4, x1, x2)

inst_6842:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:20526*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20526*0 + 3*698*FLEN/8, x4, x1, x2)

inst_6843:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0x3ffffffffffff; valaddr_reg:x3; val_offset:20529*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20529*0 + 3*699*FLEN/8, x4, x1, x2)

inst_6844:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:20532*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20532*0 + 3*700*FLEN/8, x4, x1, x2)

inst_6845:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:20535*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20535*0 + 3*701*FLEN/8, x4, x1, x2)

inst_6846:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:20538*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20538*0 + 3*702*FLEN/8, x4, x1, x2)

inst_6847:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:20541*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20541*0 + 3*703*FLEN/8, x4, x1, x2)

inst_6848:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0x7ffffffffffff; valaddr_reg:x3; val_offset:20544*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20544*0 + 3*704*FLEN/8, x4, x1, x2)

inst_6849:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0x8000000000000; valaddr_reg:x3; val_offset:20547*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20547*0 + 3*705*FLEN/8, x4, x1, x2)

inst_6850:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:20550*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20550*0 + 3*706*FLEN/8, x4, x1, x2)

inst_6851:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:20553*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20553*0 + 3*707*FLEN/8, x4, x1, x2)

inst_6852:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:20556*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20556*0 + 3*708*FLEN/8, x4, x1, x2)

inst_6853:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xc000000000000; valaddr_reg:x3; val_offset:20559*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20559*0 + 3*709*FLEN/8, x4, x1, x2)

inst_6854:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:20562*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20562*0 + 3*710*FLEN/8, x4, x1, x2)

inst_6855:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:20565*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20565*0 + 3*711*FLEN/8, x4, x1, x2)

inst_6856:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xe000000000000; valaddr_reg:x3; val_offset:20568*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20568*0 + 3*712*FLEN/8, x4, x1, x2)

inst_6857:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xf000000000000; valaddr_reg:x3; val_offset:20571*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20571*0 + 3*713*FLEN/8, x4, x1, x2)

inst_6858:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xf800000000000; valaddr_reg:x3; val_offset:20574*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20574*0 + 3*714*FLEN/8, x4, x1, x2)

inst_6859:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xfc00000000000; valaddr_reg:x3; val_offset:20577*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20577*0 + 3*715*FLEN/8, x4, x1, x2)

inst_6860:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xfe00000000000; valaddr_reg:x3; val_offset:20580*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20580*0 + 3*716*FLEN/8, x4, x1, x2)

inst_6861:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xff00000000000; valaddr_reg:x3; val_offset:20583*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20583*0 + 3*717*FLEN/8, x4, x1, x2)

inst_6862:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xff80000000000; valaddr_reg:x3; val_offset:20586*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20586*0 + 3*718*FLEN/8, x4, x1, x2)

inst_6863:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xffc0000000000; valaddr_reg:x3; val_offset:20589*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20589*0 + 3*719*FLEN/8, x4, x1, x2)

inst_6864:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xffe0000000000; valaddr_reg:x3; val_offset:20592*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20592*0 + 3*720*FLEN/8, x4, x1, x2)

inst_6865:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xfff0000000000; valaddr_reg:x3; val_offset:20595*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20595*0 + 3*721*FLEN/8, x4, x1, x2)

inst_6866:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xfff8000000000; valaddr_reg:x3; val_offset:20598*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20598*0 + 3*722*FLEN/8, x4, x1, x2)

inst_6867:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xfffc000000000; valaddr_reg:x3; val_offset:20601*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20601*0 + 3*723*FLEN/8, x4, x1, x2)

inst_6868:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xfffe000000000; valaddr_reg:x3; val_offset:20604*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20604*0 + 3*724*FLEN/8, x4, x1, x2)

inst_6869:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xffff000000000; valaddr_reg:x3; val_offset:20607*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20607*0 + 3*725*FLEN/8, x4, x1, x2)

inst_6870:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xffff800000000; valaddr_reg:x3; val_offset:20610*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20610*0 + 3*726*FLEN/8, x4, x1, x2)

inst_6871:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xffffc00000000; valaddr_reg:x3; val_offset:20613*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20613*0 + 3*727*FLEN/8, x4, x1, x2)

inst_6872:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xffffe00000000; valaddr_reg:x3; val_offset:20616*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20616*0 + 3*728*FLEN/8, x4, x1, x2)

inst_6873:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xfffff00000000; valaddr_reg:x3; val_offset:20619*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20619*0 + 3*729*FLEN/8, x4, x1, x2)

inst_6874:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xfffff80000000; valaddr_reg:x3; val_offset:20622*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20622*0 + 3*730*FLEN/8, x4, x1, x2)

inst_6875:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xfffffc0000000; valaddr_reg:x3; val_offset:20625*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20625*0 + 3*731*FLEN/8, x4, x1, x2)

inst_6876:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xfffffe0000000; valaddr_reg:x3; val_offset:20628*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20628*0 + 3*732*FLEN/8, x4, x1, x2)

inst_6877:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xffffff0000000; valaddr_reg:x3; val_offset:20631*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20631*0 + 3*733*FLEN/8, x4, x1, x2)

inst_6878:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xffffff8000000; valaddr_reg:x3; val_offset:20634*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20634*0 + 3*734*FLEN/8, x4, x1, x2)

inst_6879:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xffffffc000000; valaddr_reg:x3; val_offset:20637*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20637*0 + 3*735*FLEN/8, x4, x1, x2)

inst_6880:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xffffffe000000; valaddr_reg:x3; val_offset:20640*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20640*0 + 3*736*FLEN/8, x4, x1, x2)

inst_6881:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xfffffff000000; valaddr_reg:x3; val_offset:20643*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20643*0 + 3*737*FLEN/8, x4, x1, x2)

inst_6882:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xfffffff800000; valaddr_reg:x3; val_offset:20646*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20646*0 + 3*738*FLEN/8, x4, x1, x2)

inst_6883:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xfffffffc00000; valaddr_reg:x3; val_offset:20649*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20649*0 + 3*739*FLEN/8, x4, x1, x2)

inst_6884:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xfffffffe00000; valaddr_reg:x3; val_offset:20652*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20652*0 + 3*740*FLEN/8, x4, x1, x2)

inst_6885:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xffffffff00000; valaddr_reg:x3; val_offset:20655*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20655*0 + 3*741*FLEN/8, x4, x1, x2)

inst_6886:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xffffffff80000; valaddr_reg:x3; val_offset:20658*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20658*0 + 3*742*FLEN/8, x4, x1, x2)

inst_6887:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xffffffffc0000; valaddr_reg:x3; val_offset:20661*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20661*0 + 3*743*FLEN/8, x4, x1, x2)

inst_6888:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xffffffffe0000; valaddr_reg:x3; val_offset:20664*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20664*0 + 3*744*FLEN/8, x4, x1, x2)

inst_6889:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xfffffffff0000; valaddr_reg:x3; val_offset:20667*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20667*0 + 3*745*FLEN/8, x4, x1, x2)

inst_6890:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xfffffffff8000; valaddr_reg:x3; val_offset:20670*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20670*0 + 3*746*FLEN/8, x4, x1, x2)

inst_6891:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xfffffffffc000; valaddr_reg:x3; val_offset:20673*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20673*0 + 3*747*FLEN/8, x4, x1, x2)

inst_6892:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xfffffffffe000; valaddr_reg:x3; val_offset:20676*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20676*0 + 3*748*FLEN/8, x4, x1, x2)

inst_6893:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xffffffffff000; valaddr_reg:x3; val_offset:20679*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20679*0 + 3*749*FLEN/8, x4, x1, x2)

inst_6894:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xffffffffff800; valaddr_reg:x3; val_offset:20682*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20682*0 + 3*750*FLEN/8, x4, x1, x2)

inst_6895:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xffffffffffc00; valaddr_reg:x3; val_offset:20685*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20685*0 + 3*751*FLEN/8, x4, x1, x2)

inst_6896:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xffffffffffe00; valaddr_reg:x3; val_offset:20688*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20688*0 + 3*752*FLEN/8, x4, x1, x2)

inst_6897:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xfffffffffff00; valaddr_reg:x3; val_offset:20691*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20691*0 + 3*753*FLEN/8, x4, x1, x2)

inst_6898:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xfffffffffff80; valaddr_reg:x3; val_offset:20694*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20694*0 + 3*754*FLEN/8, x4, x1, x2)

inst_6899:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:20697*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20697*0 + 3*755*FLEN/8, x4, x1, x2)

inst_6900:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:20700*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20700*0 + 3*756*FLEN/8, x4, x1, x2)

inst_6901:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:20703*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20703*0 + 3*757*FLEN/8, x4, x1, x2)

inst_6902:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:20706*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20706*0 + 3*758*FLEN/8, x4, x1, x2)

inst_6903:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:20709*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20709*0 + 3*759*FLEN/8, x4, x1, x2)

inst_6904:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:20712*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20712*0 + 3*760*FLEN/8, x4, x1, x2)

inst_6905:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f725131186c166f; op2val:0x0;
op3val:0xfffffffffffff; valaddr_reg:x3; val_offset:20715*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20715*0 + 3*761*FLEN/8, x4, x1, x2)

inst_6906:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:20718*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20718*0 + 3*762*FLEN/8, x4, x1, x2)

inst_6907:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:20721*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20721*0 + 3*763*FLEN/8, x4, x1, x2)

inst_6908:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:20724*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20724*0 + 3*764*FLEN/8, x4, x1, x2)

inst_6909:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:20727*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20727*0 + 3*765*FLEN/8, x4, x1, x2)

inst_6910:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:20730*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20730*0 + 3*766*FLEN/8, x4, x1, x2)

inst_6911:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:20733*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20733*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6877453918552801823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086317056,64,FLEN)
NAN_BOXED(6877453918552801823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086382592,64,FLEN)
NAN_BOXED(6877453918552801823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086415360,64,FLEN)
NAN_BOXED(6877453918552801823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086431744,64,FLEN)
NAN_BOXED(6877453918552801823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086439936,64,FLEN)
NAN_BOXED(6877453918552801823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086444032,64,FLEN)
NAN_BOXED(6877453918552801823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086446080,64,FLEN)
NAN_BOXED(6877453918552801823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086447104,64,FLEN)
NAN_BOXED(6877453918552801823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086447616,64,FLEN)
NAN_BOXED(6877453918552801823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086447872,64,FLEN)
NAN_BOXED(6877453918552801823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448000,64,FLEN)
NAN_BOXED(6877453918552801823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448064,64,FLEN)
NAN_BOXED(6877453918552801823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448096,64,FLEN)
NAN_BOXED(6877453918552801823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448112,64,FLEN)
NAN_BOXED(6877453918552801823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448120,64,FLEN)
NAN_BOXED(6877453918552801823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448124,64,FLEN)
NAN_BOXED(6877453918552801823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448126,64,FLEN)
NAN_BOXED(6877453918552801823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448127,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376064,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376065,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376067,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376071,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376079,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376095,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376127,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376191,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376319,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376575,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124377087,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124378111,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124380159,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124384255,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124392447,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124408831,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124441599,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124507135,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124638207,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124900351,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614125424639,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614126473215,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614128570367,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614132764671,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614141153279,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614157930495,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614191484927,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614258593791,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614392811519,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614661246975,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091615198117887,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091616271859711,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091618419343359,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091622714310655,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091631304245247,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091648484114431,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091682843852799,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091751563329535,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091889002283007,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498092163880189951,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498092713636003839,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498093813147631615,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498096012170887167,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498100410217398271,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498109206310420479,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498126798496464895,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498161982868553727,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498232351612731391,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498373089101086719,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498654564077797375,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9499217514031218687,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9500343413938061311,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9500343413938061312,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9501469313844903936,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502032263798325248,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502313738775035904,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502454476263391232,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502524845007568896,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502560029379657728,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502577621565702144,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502586417658724352,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502590815705235456,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502593014728491008,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502594114240118784,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502594663995932672,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502594938873839616,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595076312793088,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595145032269824,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595179392008192,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595196571877376,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595205161811968,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595209456779264,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595211604262912,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595212678004736,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213214875648,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213483311104,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213617528832,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213684637696,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213718192128,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213734969344,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213743357952,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213747552256,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213749649408,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213750697984,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751222272,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751484416,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751615488,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751681024,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751713792,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751730176,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751738368,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751742464,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751744512,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751745536,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746048,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746304,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746432,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746496,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746528,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746544,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746552,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746556,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746558,64,FLEN)
NAN_BOXED(6877502142292945583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746559,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891904,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891905,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891907,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891911,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891919,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891935,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891967,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056892031,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056892159,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056892415,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056892927,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056893951,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056895999,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056900095,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056908287,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056924671,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056957439,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391057022975,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391057154047,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391057416191,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391057940479,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391058989055,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391061086207,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391065280511,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391073669119,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391090446335,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391124000767,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391191109631,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391325327359,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391593762815,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086392130633727,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086393204375551,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086395351859199,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086399646826495,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086408236761087,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086425416630271,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086459776368639,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086528495845375,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086665934798847,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086940812705791,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108087490568519679,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108088590080147455,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108090789103403007,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108095187149914111,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108103983242936319,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108121575428980735,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108156759801069567,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108227128545247231,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108367866033602559,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108649341010313215,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(109212290963734527,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(110338190870577151,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(110338190870577152,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(111464090777419776,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112027040730841088,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112308515707551744,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112449253195907072,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112519621940084736,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112554806312173568,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112572398498217984,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112581194591240192,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112585592637751296,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112587791661006848,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112588891172634624,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589440928448512,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589715806355456,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589853245308928,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589921964785664,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589956324524032,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589973504393216,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589982094327808,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589986389295104,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589988536778752,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589989610520576,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990147391488,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990415826944,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990550044672,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990617153536,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990650707968,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990667485184,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990675873792,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990680068096,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990682165248,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990683213824,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990683738112,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684000256,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684131328,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684196864,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684229632,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684246016,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684254208,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684258304,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684260352,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684261376,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684261888,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262144,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262272,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262336,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262368,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262384,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262392,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262396,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262398,64,FLEN)
NAN_BOXED(6877519357696384207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262399,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337856,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337857,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337859,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337863,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337871,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337887,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337919,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337983,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585338111,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585338367,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585338879,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585339903,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585341951,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585346047,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585354239,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585370623,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585403391,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585468927,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585599999,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585862143,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586586386431,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586587435007,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586589532159,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586593726463,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586602115071,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586618892287,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586652446719,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586719555583,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586853773311,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129587122208767,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129587659079679,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129588732821503,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129590880305151,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129595175272447,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129603765207039,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129620945076223,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129655304814591,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129724024291327,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129861463244799,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162130136341151743,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162130686096965631,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162131785608593407,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162133984631848959,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162138382678360063,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162147178771382271,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162164770957426687,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162199955329515519,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162270324073693183,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162411061562048511,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162692536538759167,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(163255486492180479,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(164381386399023103,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(164381386399023104,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(165507286305865728,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166070236259287040,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166351711235997696,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166492448724353024,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166562817468530688,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166598001840619520,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166615594026663936,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166624390119686144,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166628788166197248,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166630987189452800,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166632086701080576,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166632636456894464,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166632911334801408,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633048773754880,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633117493231616,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633151852969984,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633169032839168,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633177622773760,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633181917741056,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633184065224704,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633185138966528,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633185675837440,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633185944272896,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186078490624,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186145599488,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186179153920,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186195931136,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186204319744,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186208514048,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186210611200,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186211659776,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212184064,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212446208,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212577280,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212642816,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212675584,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212691968,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212700160,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212704256,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212706304,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212707328,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212707840,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708096,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708224,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708288,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708320,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708336,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708344,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708348,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708350,64,FLEN)
NAN_BOXED(6877543141807054679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708351,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4183844053827190784,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4183844053827190785,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4183844053827190787,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4183844053827190791,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4183844053827190799,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4183844053827190815,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4183844053827190847,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4183844053827190911,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4183844053827191039,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4183844053827191295,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4183844053827191807,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4183844053827192831,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4183844053827194879,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4183844053827198975,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4183844053827207167,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4183844053827223551,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4183844053827256319,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4183844053827321855,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4183844053827452927,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4183844053827715071,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4183844053828239359,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4183844053829287935,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4183844053831385087,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4183844053835579391,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4183844053843967999,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4183844053860745215,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4183844053894299647,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4183844053961408511,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4183844054095626239,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4183844054364061695,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4183844054900932607,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4183844055974674431,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4183844058122158079,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4183844062417125375,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4183844071007059967,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4183844088186929151,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4183844122546667519,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4183844191266144255,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4183844328705097727,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4183844603583004671,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4183845153338818559,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4183846252850446335,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4183848451873701887,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4183852849920212991,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4183861646013235199,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4183879238199279615,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4183914422571368447,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4183984791315546111,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4184125528803901439,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4184407003780612095,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4184969953734033407,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4186095853640876031,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4186095853640876032,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4187221753547718656,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4187784703501139968,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4188066178477850624,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4188206915966205952,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4188277284710383616,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4188312469082472448,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4188330061268516864,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4188338857361539072,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4188343255408050176,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4188345454431305728,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4188346553942933504,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4188347103698747392,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4188347378576654336,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4188347516015607808,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4188347584735084544,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4188347619094822912,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4188347636274692096,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4188347644864626688,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4188347649159593984,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4188347651307077632,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4188347652380819456,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4188347652917690368,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4188347653186125824,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4188347653320343552,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4188347653387452416,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4188347653421006848,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4188347653437784064,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4188347653446172672,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4188347653450366976,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4188347653452464128,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4188347653453512704,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4188347653454036992,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4188347653454299136,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4188347653454430208,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4188347653454495744,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4188347653454528512,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4188347653454544896,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4188347653454553088,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4188347653454557184,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4188347653454559232,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4188347653454560256,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4188347653454560768,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4188347653454561024,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4188347653454561152,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4188347653454561216,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4188347653454561248,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4188347653454561264,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4188347653454561272,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4188347653454561276,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4188347653454561278,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4188347653454561279,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6877589440021721903,64,FLEN)
NAN_BOXED(2336320498427212605,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13470266485465153536,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13470266485465153537,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13470266485465153539,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13470266485465153543,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13470266485465153551,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13470266485465153567,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13470266485465153599,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13470266485465153663,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13470266485465153791,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13470266485465154047,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13470266485465154559,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13470266485465155583,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13470266485465157631,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13470266485465161727,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13470266485465169919,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13470266485465186303,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13470266485465219071,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13470266485465284607,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13470266485465415679,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13470266485465677823,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13470266485466202111,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13470266485467250687,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13470266485469347839,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13470266485473542143,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13470266485481930751,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13470266485498707967,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13470266485532262399,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13470266485599371263,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13470266485733588991,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13470266486002024447,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13470266486538895359,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13470266487612637183,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13470266489760120831,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13470266494055088127,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13470266502645022719,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13470266519824891903,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13470266554184630271,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13470266622904107007,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13470266760343060479,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13470267035220967423,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13470267584976781311,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13470268684488409087,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13470270883511664639,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13470275281558175743,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13470284077651197951,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13470301669837242367,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13470336854209331199,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13470407222953508863,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13470547960441864191,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13470829435418574847,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13471392385371996159,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13472518285278838783,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13472518285278838784,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13473644185185681408,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13474207135139102720,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13474488610115813376,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13474629347604168704,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13474699716348346368,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13474734900720435200,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13474752492906479616,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13474761288999501824,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13474765687046012928,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13474767886069268480,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13474768985580896256,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13474769535336710144,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13474769810214617088,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13474769947653570560,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13474770016373047296,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13474770050732785664,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13474770067912654848,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13474770076502589440,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13474770080797556736,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13474770082945040384,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13474770084018782208,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13474770084555653120,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13474770084824088576,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13474770084958306304,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13474770085025415168,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13474770085058969600,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13474770085075746816,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13474770085084135424,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13474770085088329728,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13474770085090426880,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13474770085091475456,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13474770085091999744,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13474770085092261888,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13474770085092392960,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13474770085092458496,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13474770085092491264,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13474770085092507648,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13474770085092515840,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13474770085092519936,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13474770085092521984,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13474770085092523008,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13474770085092523520,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13474770085092523776,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13474770085092523904,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13474770085092523968,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13474770085092524000,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13474770085092524016,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13474770085092524024,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13474770085092524028,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13474770085092524030,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13474770085092524031,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6877603094190185159,64,FLEN)
NAN_BOXED(11528146070004693517,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(127,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(255,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(511,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1023,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2047,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4095,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8191,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(16383,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(32767,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(65535,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(131071,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(262143,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(524287,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1048575,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2097151,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4194303,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8388607,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(16777215,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(33554431,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67108863,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(134217727,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(268435455,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(536870911,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1073741823,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2147483647,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4294967295,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8589934591,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(17179869183,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(34359738367,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(68719476735,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(137438953471,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274877906943,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(549755813887,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1099511627775,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2199023255551,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4398046511103,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8796093022207,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(17592186044415,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(35184372088831,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(70368744177663,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(140737488355327,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(281474976710655,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(562949953421311,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1125899906842623,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2251799813685247,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2251799813685248,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3377699720527872,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3940649673949184,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4222124650659840,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4362862139015168,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4433230883192832,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4468415255281664,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4486007441326080,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4494803534348288,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4499201580859392,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4501400604114944,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4502500115742720,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503049871556608,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503324749463552,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503462188417024,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503530907893760,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503565267632128,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503582447501312,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503591037435904,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503595332403200,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503597479886848,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503598553628672,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599090499584,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599358935040,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599493152768,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599560261632,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599593816064,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599610593280,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599618981888,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599623176192,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599625273344,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599626321920,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599626846208,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627108352,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627239424,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627304960,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627337728,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627354112,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627362304,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627366400,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627368448,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627369472,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627369984,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370240,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370368,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6877648852253152879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370495,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
