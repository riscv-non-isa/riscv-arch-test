
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:39 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_78336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:235008*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235008*0 + 3*0*FLEN/8, x4, x1, x2)

inst_78337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:235011*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235011*0 + 3*1*FLEN/8, x4, x1, x2)

inst_78338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:235014*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235014*0 + 3*2*FLEN/8, x4, x1, x2)

inst_78339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:235017*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235017*0 + 3*3*FLEN/8, x4, x1, x2)

inst_78340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:235020*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235020*0 + 3*4*FLEN/8, x4, x1, x2)

inst_78341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:235023*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235023*0 + 3*5*FLEN/8, x4, x1, x2)

inst_78342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:235026*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235026*0 + 3*6*FLEN/8, x4, x1, x2)

inst_78343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:235029*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235029*0 + 3*7*FLEN/8, x4, x1, x2)

inst_78344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:235032*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235032*0 + 3*8*FLEN/8, x4, x1, x2)

inst_78345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:235035*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235035*0 + 3*9*FLEN/8, x4, x1, x2)

inst_78346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:235038*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235038*0 + 3*10*FLEN/8, x4, x1, x2)

inst_78347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:235041*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235041*0 + 3*11*FLEN/8, x4, x1, x2)

inst_78348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:235044*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235044*0 + 3*12*FLEN/8, x4, x1, x2)

inst_78349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:235047*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235047*0 + 3*13*FLEN/8, x4, x1, x2)

inst_78350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:235050*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235050*0 + 3*14*FLEN/8, x4, x1, x2)

inst_78351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:235053*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235053*0 + 3*15*FLEN/8, x4, x1, x2)

inst_78352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x8090000000000000; valaddr_reg:x3; val_offset:235056*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235056*0 + 3*16*FLEN/8, x4, x1, x2)

inst_78353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x8090000000000001; valaddr_reg:x3; val_offset:235059*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235059*0 + 3*17*FLEN/8, x4, x1, x2)

inst_78354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x8090000000000003; valaddr_reg:x3; val_offset:235062*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235062*0 + 3*18*FLEN/8, x4, x1, x2)

inst_78355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x8090000000000007; valaddr_reg:x3; val_offset:235065*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235065*0 + 3*19*FLEN/8, x4, x1, x2)

inst_78356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809000000000000f; valaddr_reg:x3; val_offset:235068*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235068*0 + 3*20*FLEN/8, x4, x1, x2)

inst_78357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809000000000001f; valaddr_reg:x3; val_offset:235071*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235071*0 + 3*21*FLEN/8, x4, x1, x2)

inst_78358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809000000000003f; valaddr_reg:x3; val_offset:235074*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235074*0 + 3*22*FLEN/8, x4, x1, x2)

inst_78359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809000000000007f; valaddr_reg:x3; val_offset:235077*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235077*0 + 3*23*FLEN/8, x4, x1, x2)

inst_78360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x80900000000000ff; valaddr_reg:x3; val_offset:235080*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235080*0 + 3*24*FLEN/8, x4, x1, x2)

inst_78361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x80900000000001ff; valaddr_reg:x3; val_offset:235083*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235083*0 + 3*25*FLEN/8, x4, x1, x2)

inst_78362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x80900000000003ff; valaddr_reg:x3; val_offset:235086*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235086*0 + 3*26*FLEN/8, x4, x1, x2)

inst_78363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x80900000000007ff; valaddr_reg:x3; val_offset:235089*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235089*0 + 3*27*FLEN/8, x4, x1, x2)

inst_78364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x8090000000000fff; valaddr_reg:x3; val_offset:235092*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235092*0 + 3*28*FLEN/8, x4, x1, x2)

inst_78365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x8090000000001fff; valaddr_reg:x3; val_offset:235095*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235095*0 + 3*29*FLEN/8, x4, x1, x2)

inst_78366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x8090000000003fff; valaddr_reg:x3; val_offset:235098*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235098*0 + 3*30*FLEN/8, x4, x1, x2)

inst_78367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x8090000000007fff; valaddr_reg:x3; val_offset:235101*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235101*0 + 3*31*FLEN/8, x4, x1, x2)

inst_78368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809000000000ffff; valaddr_reg:x3; val_offset:235104*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235104*0 + 3*32*FLEN/8, x4, x1, x2)

inst_78369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809000000001ffff; valaddr_reg:x3; val_offset:235107*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235107*0 + 3*33*FLEN/8, x4, x1, x2)

inst_78370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809000000003ffff; valaddr_reg:x3; val_offset:235110*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235110*0 + 3*34*FLEN/8, x4, x1, x2)

inst_78371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809000000007ffff; valaddr_reg:x3; val_offset:235113*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235113*0 + 3*35*FLEN/8, x4, x1, x2)

inst_78372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x80900000000fffff; valaddr_reg:x3; val_offset:235116*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235116*0 + 3*36*FLEN/8, x4, x1, x2)

inst_78373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x80900000001fffff; valaddr_reg:x3; val_offset:235119*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235119*0 + 3*37*FLEN/8, x4, x1, x2)

inst_78374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x80900000003fffff; valaddr_reg:x3; val_offset:235122*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235122*0 + 3*38*FLEN/8, x4, x1, x2)

inst_78375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x80900000007fffff; valaddr_reg:x3; val_offset:235125*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235125*0 + 3*39*FLEN/8, x4, x1, x2)

inst_78376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x8090000000ffffff; valaddr_reg:x3; val_offset:235128*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235128*0 + 3*40*FLEN/8, x4, x1, x2)

inst_78377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x8090000001ffffff; valaddr_reg:x3; val_offset:235131*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235131*0 + 3*41*FLEN/8, x4, x1, x2)

inst_78378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x8090000003ffffff; valaddr_reg:x3; val_offset:235134*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235134*0 + 3*42*FLEN/8, x4, x1, x2)

inst_78379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x8090000007ffffff; valaddr_reg:x3; val_offset:235137*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235137*0 + 3*43*FLEN/8, x4, x1, x2)

inst_78380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809000000fffffff; valaddr_reg:x3; val_offset:235140*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235140*0 + 3*44*FLEN/8, x4, x1, x2)

inst_78381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809000001fffffff; valaddr_reg:x3; val_offset:235143*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235143*0 + 3*45*FLEN/8, x4, x1, x2)

inst_78382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809000003fffffff; valaddr_reg:x3; val_offset:235146*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235146*0 + 3*46*FLEN/8, x4, x1, x2)

inst_78383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809000007fffffff; valaddr_reg:x3; val_offset:235149*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235149*0 + 3*47*FLEN/8, x4, x1, x2)

inst_78384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x80900000ffffffff; valaddr_reg:x3; val_offset:235152*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235152*0 + 3*48*FLEN/8, x4, x1, x2)

inst_78385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x80900001ffffffff; valaddr_reg:x3; val_offset:235155*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235155*0 + 3*49*FLEN/8, x4, x1, x2)

inst_78386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x80900003ffffffff; valaddr_reg:x3; val_offset:235158*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235158*0 + 3*50*FLEN/8, x4, x1, x2)

inst_78387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x80900007ffffffff; valaddr_reg:x3; val_offset:235161*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235161*0 + 3*51*FLEN/8, x4, x1, x2)

inst_78388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x8090000fffffffff; valaddr_reg:x3; val_offset:235164*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235164*0 + 3*52*FLEN/8, x4, x1, x2)

inst_78389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x8090001fffffffff; valaddr_reg:x3; val_offset:235167*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235167*0 + 3*53*FLEN/8, x4, x1, x2)

inst_78390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x8090003fffffffff; valaddr_reg:x3; val_offset:235170*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235170*0 + 3*54*FLEN/8, x4, x1, x2)

inst_78391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x8090007fffffffff; valaddr_reg:x3; val_offset:235173*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235173*0 + 3*55*FLEN/8, x4, x1, x2)

inst_78392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809000ffffffffff; valaddr_reg:x3; val_offset:235176*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235176*0 + 3*56*FLEN/8, x4, x1, x2)

inst_78393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809001ffffffffff; valaddr_reg:x3; val_offset:235179*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235179*0 + 3*57*FLEN/8, x4, x1, x2)

inst_78394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809003ffffffffff; valaddr_reg:x3; val_offset:235182*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235182*0 + 3*58*FLEN/8, x4, x1, x2)

inst_78395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809007ffffffffff; valaddr_reg:x3; val_offset:235185*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235185*0 + 3*59*FLEN/8, x4, x1, x2)

inst_78396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x80900fffffffffff; valaddr_reg:x3; val_offset:235188*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235188*0 + 3*60*FLEN/8, x4, x1, x2)

inst_78397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x80901fffffffffff; valaddr_reg:x3; val_offset:235191*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235191*0 + 3*61*FLEN/8, x4, x1, x2)

inst_78398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x80903fffffffffff; valaddr_reg:x3; val_offset:235194*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235194*0 + 3*62*FLEN/8, x4, x1, x2)

inst_78399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x80907fffffffffff; valaddr_reg:x3; val_offset:235197*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235197*0 + 3*63*FLEN/8, x4, x1, x2)

inst_78400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x8090ffffffffffff; valaddr_reg:x3; val_offset:235200*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235200*0 + 3*64*FLEN/8, x4, x1, x2)

inst_78401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x8091ffffffffffff; valaddr_reg:x3; val_offset:235203*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235203*0 + 3*65*FLEN/8, x4, x1, x2)

inst_78402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x8093ffffffffffff; valaddr_reg:x3; val_offset:235206*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235206*0 + 3*66*FLEN/8, x4, x1, x2)

inst_78403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x8097ffffffffffff; valaddr_reg:x3; val_offset:235209*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235209*0 + 3*67*FLEN/8, x4, x1, x2)

inst_78404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x8098000000000000; valaddr_reg:x3; val_offset:235212*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235212*0 + 3*68*FLEN/8, x4, x1, x2)

inst_78405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809c000000000000; valaddr_reg:x3; val_offset:235215*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235215*0 + 3*69*FLEN/8, x4, x1, x2)

inst_78406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809e000000000000; valaddr_reg:x3; val_offset:235218*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235218*0 + 3*70*FLEN/8, x4, x1, x2)

inst_78407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809f000000000000; valaddr_reg:x3; val_offset:235221*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235221*0 + 3*71*FLEN/8, x4, x1, x2)

inst_78408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809f800000000000; valaddr_reg:x3; val_offset:235224*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235224*0 + 3*72*FLEN/8, x4, x1, x2)

inst_78409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809fc00000000000; valaddr_reg:x3; val_offset:235227*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235227*0 + 3*73*FLEN/8, x4, x1, x2)

inst_78410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809fe00000000000; valaddr_reg:x3; val_offset:235230*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235230*0 + 3*74*FLEN/8, x4, x1, x2)

inst_78411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809ff00000000000; valaddr_reg:x3; val_offset:235233*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235233*0 + 3*75*FLEN/8, x4, x1, x2)

inst_78412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809ff80000000000; valaddr_reg:x3; val_offset:235236*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235236*0 + 3*76*FLEN/8, x4, x1, x2)

inst_78413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809ffc0000000000; valaddr_reg:x3; val_offset:235239*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235239*0 + 3*77*FLEN/8, x4, x1, x2)

inst_78414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809ffe0000000000; valaddr_reg:x3; val_offset:235242*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235242*0 + 3*78*FLEN/8, x4, x1, x2)

inst_78415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809fff0000000000; valaddr_reg:x3; val_offset:235245*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235245*0 + 3*79*FLEN/8, x4, x1, x2)

inst_78416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809fff8000000000; valaddr_reg:x3; val_offset:235248*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235248*0 + 3*80*FLEN/8, x4, x1, x2)

inst_78417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809fffc000000000; valaddr_reg:x3; val_offset:235251*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235251*0 + 3*81*FLEN/8, x4, x1, x2)

inst_78418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809fffe000000000; valaddr_reg:x3; val_offset:235254*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235254*0 + 3*82*FLEN/8, x4, x1, x2)

inst_78419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809ffff000000000; valaddr_reg:x3; val_offset:235257*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235257*0 + 3*83*FLEN/8, x4, x1, x2)

inst_78420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809ffff800000000; valaddr_reg:x3; val_offset:235260*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235260*0 + 3*84*FLEN/8, x4, x1, x2)

inst_78421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809ffffc00000000; valaddr_reg:x3; val_offset:235263*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235263*0 + 3*85*FLEN/8, x4, x1, x2)

inst_78422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809ffffe00000000; valaddr_reg:x3; val_offset:235266*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235266*0 + 3*86*FLEN/8, x4, x1, x2)

inst_78423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809fffff00000000; valaddr_reg:x3; val_offset:235269*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235269*0 + 3*87*FLEN/8, x4, x1, x2)

inst_78424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809fffff80000000; valaddr_reg:x3; val_offset:235272*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235272*0 + 3*88*FLEN/8, x4, x1, x2)

inst_78425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809fffffc0000000; valaddr_reg:x3; val_offset:235275*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235275*0 + 3*89*FLEN/8, x4, x1, x2)

inst_78426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809fffffe0000000; valaddr_reg:x3; val_offset:235278*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235278*0 + 3*90*FLEN/8, x4, x1, x2)

inst_78427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809ffffff0000000; valaddr_reg:x3; val_offset:235281*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235281*0 + 3*91*FLEN/8, x4, x1, x2)

inst_78428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809ffffff8000000; valaddr_reg:x3; val_offset:235284*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235284*0 + 3*92*FLEN/8, x4, x1, x2)

inst_78429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809ffffffc000000; valaddr_reg:x3; val_offset:235287*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235287*0 + 3*93*FLEN/8, x4, x1, x2)

inst_78430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809ffffffe000000; valaddr_reg:x3; val_offset:235290*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235290*0 + 3*94*FLEN/8, x4, x1, x2)

inst_78431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809fffffff000000; valaddr_reg:x3; val_offset:235293*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235293*0 + 3*95*FLEN/8, x4, x1, x2)

inst_78432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809fffffff800000; valaddr_reg:x3; val_offset:235296*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235296*0 + 3*96*FLEN/8, x4, x1, x2)

inst_78433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809fffffffc00000; valaddr_reg:x3; val_offset:235299*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235299*0 + 3*97*FLEN/8, x4, x1, x2)

inst_78434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809fffffffe00000; valaddr_reg:x3; val_offset:235302*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235302*0 + 3*98*FLEN/8, x4, x1, x2)

inst_78435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809ffffffff00000; valaddr_reg:x3; val_offset:235305*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235305*0 + 3*99*FLEN/8, x4, x1, x2)

inst_78436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809ffffffff80000; valaddr_reg:x3; val_offset:235308*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235308*0 + 3*100*FLEN/8, x4, x1, x2)

inst_78437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809ffffffffc0000; valaddr_reg:x3; val_offset:235311*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235311*0 + 3*101*FLEN/8, x4, x1, x2)

inst_78438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809ffffffffe0000; valaddr_reg:x3; val_offset:235314*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235314*0 + 3*102*FLEN/8, x4, x1, x2)

inst_78439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809fffffffff0000; valaddr_reg:x3; val_offset:235317*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235317*0 + 3*103*FLEN/8, x4, x1, x2)

inst_78440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809fffffffff8000; valaddr_reg:x3; val_offset:235320*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235320*0 + 3*104*FLEN/8, x4, x1, x2)

inst_78441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809fffffffffc000; valaddr_reg:x3; val_offset:235323*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235323*0 + 3*105*FLEN/8, x4, x1, x2)

inst_78442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809fffffffffe000; valaddr_reg:x3; val_offset:235326*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235326*0 + 3*106*FLEN/8, x4, x1, x2)

inst_78443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809ffffffffff000; valaddr_reg:x3; val_offset:235329*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235329*0 + 3*107*FLEN/8, x4, x1, x2)

inst_78444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809ffffffffff800; valaddr_reg:x3; val_offset:235332*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235332*0 + 3*108*FLEN/8, x4, x1, x2)

inst_78445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809ffffffffffc00; valaddr_reg:x3; val_offset:235335*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235335*0 + 3*109*FLEN/8, x4, x1, x2)

inst_78446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809ffffffffffe00; valaddr_reg:x3; val_offset:235338*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235338*0 + 3*110*FLEN/8, x4, x1, x2)

inst_78447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809fffffffffff00; valaddr_reg:x3; val_offset:235341*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235341*0 + 3*111*FLEN/8, x4, x1, x2)

inst_78448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809fffffffffff80; valaddr_reg:x3; val_offset:235344*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235344*0 + 3*112*FLEN/8, x4, x1, x2)

inst_78449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809fffffffffffc0; valaddr_reg:x3; val_offset:235347*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235347*0 + 3*113*FLEN/8, x4, x1, x2)

inst_78450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809fffffffffffe0; valaddr_reg:x3; val_offset:235350*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235350*0 + 3*114*FLEN/8, x4, x1, x2)

inst_78451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809ffffffffffff0; valaddr_reg:x3; val_offset:235353*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235353*0 + 3*115*FLEN/8, x4, x1, x2)

inst_78452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809ffffffffffff8; valaddr_reg:x3; val_offset:235356*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235356*0 + 3*116*FLEN/8, x4, x1, x2)

inst_78453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809ffffffffffffc; valaddr_reg:x3; val_offset:235359*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235359*0 + 3*117*FLEN/8, x4, x1, x2)

inst_78454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809ffffffffffffe; valaddr_reg:x3; val_offset:235362*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235362*0 + 3*118*FLEN/8, x4, x1, x2)

inst_78455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89c3334d5f5bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89c3334d5f5bb; op2val:0x8000;
op3val:0x809fffffffffffff; valaddr_reg:x3; val_offset:235365*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235365*0 + 3*119*FLEN/8, x4, x1, x2)

inst_78456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e00000000000000; valaddr_reg:x3; val_offset:235368*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235368*0 + 3*120*FLEN/8, x4, x1, x2)

inst_78457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e00000000000001; valaddr_reg:x3; val_offset:235371*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235371*0 + 3*121*FLEN/8, x4, x1, x2)

inst_78458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e00000000000003; valaddr_reg:x3; val_offset:235374*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235374*0 + 3*122*FLEN/8, x4, x1, x2)

inst_78459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e00000000000007; valaddr_reg:x3; val_offset:235377*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235377*0 + 3*123*FLEN/8, x4, x1, x2)

inst_78460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0000000000000f; valaddr_reg:x3; val_offset:235380*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235380*0 + 3*124*FLEN/8, x4, x1, x2)

inst_78461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0000000000001f; valaddr_reg:x3; val_offset:235383*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235383*0 + 3*125*FLEN/8, x4, x1, x2)

inst_78462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0000000000003f; valaddr_reg:x3; val_offset:235386*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235386*0 + 3*126*FLEN/8, x4, x1, x2)

inst_78463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0000000000007f; valaddr_reg:x3; val_offset:235389*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235389*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_78464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e000000000000ff; valaddr_reg:x3; val_offset:235392*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235392*0 + 3*128*FLEN/8, x4, x1, x2)

inst_78465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e000000000001ff; valaddr_reg:x3; val_offset:235395*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235395*0 + 3*129*FLEN/8, x4, x1, x2)

inst_78466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e000000000003ff; valaddr_reg:x3; val_offset:235398*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235398*0 + 3*130*FLEN/8, x4, x1, x2)

inst_78467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e000000000007ff; valaddr_reg:x3; val_offset:235401*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235401*0 + 3*131*FLEN/8, x4, x1, x2)

inst_78468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e00000000000fff; valaddr_reg:x3; val_offset:235404*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235404*0 + 3*132*FLEN/8, x4, x1, x2)

inst_78469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e00000000001fff; valaddr_reg:x3; val_offset:235407*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235407*0 + 3*133*FLEN/8, x4, x1, x2)

inst_78470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e00000000003fff; valaddr_reg:x3; val_offset:235410*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235410*0 + 3*134*FLEN/8, x4, x1, x2)

inst_78471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e00000000007fff; valaddr_reg:x3; val_offset:235413*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235413*0 + 3*135*FLEN/8, x4, x1, x2)

inst_78472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0000000000ffff; valaddr_reg:x3; val_offset:235416*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235416*0 + 3*136*FLEN/8, x4, x1, x2)

inst_78473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0000000001ffff; valaddr_reg:x3; val_offset:235419*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235419*0 + 3*137*FLEN/8, x4, x1, x2)

inst_78474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0000000003ffff; valaddr_reg:x3; val_offset:235422*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235422*0 + 3*138*FLEN/8, x4, x1, x2)

inst_78475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0000000007ffff; valaddr_reg:x3; val_offset:235425*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235425*0 + 3*139*FLEN/8, x4, x1, x2)

inst_78476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e000000000fffff; valaddr_reg:x3; val_offset:235428*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235428*0 + 3*140*FLEN/8, x4, x1, x2)

inst_78477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e000000001fffff; valaddr_reg:x3; val_offset:235431*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235431*0 + 3*141*FLEN/8, x4, x1, x2)

inst_78478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e000000003fffff; valaddr_reg:x3; val_offset:235434*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235434*0 + 3*142*FLEN/8, x4, x1, x2)

inst_78479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e000000007fffff; valaddr_reg:x3; val_offset:235437*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235437*0 + 3*143*FLEN/8, x4, x1, x2)

inst_78480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e00000000ffffff; valaddr_reg:x3; val_offset:235440*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235440*0 + 3*144*FLEN/8, x4, x1, x2)

inst_78481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e00000001ffffff; valaddr_reg:x3; val_offset:235443*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235443*0 + 3*145*FLEN/8, x4, x1, x2)

inst_78482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e00000003ffffff; valaddr_reg:x3; val_offset:235446*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235446*0 + 3*146*FLEN/8, x4, x1, x2)

inst_78483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e00000007ffffff; valaddr_reg:x3; val_offset:235449*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235449*0 + 3*147*FLEN/8, x4, x1, x2)

inst_78484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0000000fffffff; valaddr_reg:x3; val_offset:235452*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235452*0 + 3*148*FLEN/8, x4, x1, x2)

inst_78485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0000001fffffff; valaddr_reg:x3; val_offset:235455*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235455*0 + 3*149*FLEN/8, x4, x1, x2)

inst_78486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0000003fffffff; valaddr_reg:x3; val_offset:235458*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235458*0 + 3*150*FLEN/8, x4, x1, x2)

inst_78487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0000007fffffff; valaddr_reg:x3; val_offset:235461*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235461*0 + 3*151*FLEN/8, x4, x1, x2)

inst_78488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e000000ffffffff; valaddr_reg:x3; val_offset:235464*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235464*0 + 3*152*FLEN/8, x4, x1, x2)

inst_78489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e000001ffffffff; valaddr_reg:x3; val_offset:235467*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235467*0 + 3*153*FLEN/8, x4, x1, x2)

inst_78490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e000003ffffffff; valaddr_reg:x3; val_offset:235470*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235470*0 + 3*154*FLEN/8, x4, x1, x2)

inst_78491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e000007ffffffff; valaddr_reg:x3; val_offset:235473*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235473*0 + 3*155*FLEN/8, x4, x1, x2)

inst_78492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e00000fffffffff; valaddr_reg:x3; val_offset:235476*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235476*0 + 3*156*FLEN/8, x4, x1, x2)

inst_78493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e00001fffffffff; valaddr_reg:x3; val_offset:235479*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235479*0 + 3*157*FLEN/8, x4, x1, x2)

inst_78494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e00003fffffffff; valaddr_reg:x3; val_offset:235482*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235482*0 + 3*158*FLEN/8, x4, x1, x2)

inst_78495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e00007fffffffff; valaddr_reg:x3; val_offset:235485*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235485*0 + 3*159*FLEN/8, x4, x1, x2)

inst_78496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0000ffffffffff; valaddr_reg:x3; val_offset:235488*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235488*0 + 3*160*FLEN/8, x4, x1, x2)

inst_78497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0001ffffffffff; valaddr_reg:x3; val_offset:235491*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235491*0 + 3*161*FLEN/8, x4, x1, x2)

inst_78498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0003ffffffffff; valaddr_reg:x3; val_offset:235494*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235494*0 + 3*162*FLEN/8, x4, x1, x2)

inst_78499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0007ffffffffff; valaddr_reg:x3; val_offset:235497*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235497*0 + 3*163*FLEN/8, x4, x1, x2)

inst_78500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e000fffffffffff; valaddr_reg:x3; val_offset:235500*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235500*0 + 3*164*FLEN/8, x4, x1, x2)

inst_78501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e001fffffffffff; valaddr_reg:x3; val_offset:235503*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235503*0 + 3*165*FLEN/8, x4, x1, x2)

inst_78502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e003fffffffffff; valaddr_reg:x3; val_offset:235506*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235506*0 + 3*166*FLEN/8, x4, x1, x2)

inst_78503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e007fffffffffff; valaddr_reg:x3; val_offset:235509*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235509*0 + 3*167*FLEN/8, x4, x1, x2)

inst_78504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e00ffffffffffff; valaddr_reg:x3; val_offset:235512*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235512*0 + 3*168*FLEN/8, x4, x1, x2)

inst_78505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e01ffffffffffff; valaddr_reg:x3; val_offset:235515*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235515*0 + 3*169*FLEN/8, x4, x1, x2)

inst_78506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e03ffffffffffff; valaddr_reg:x3; val_offset:235518*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235518*0 + 3*170*FLEN/8, x4, x1, x2)

inst_78507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e07ffffffffffff; valaddr_reg:x3; val_offset:235521*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235521*0 + 3*171*FLEN/8, x4, x1, x2)

inst_78508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e08000000000000; valaddr_reg:x3; val_offset:235524*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235524*0 + 3*172*FLEN/8, x4, x1, x2)

inst_78509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0c000000000000; valaddr_reg:x3; val_offset:235527*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235527*0 + 3*173*FLEN/8, x4, x1, x2)

inst_78510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0e000000000000; valaddr_reg:x3; val_offset:235530*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235530*0 + 3*174*FLEN/8, x4, x1, x2)

inst_78511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0f000000000000; valaddr_reg:x3; val_offset:235533*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235533*0 + 3*175*FLEN/8, x4, x1, x2)

inst_78512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0f800000000000; valaddr_reg:x3; val_offset:235536*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235536*0 + 3*176*FLEN/8, x4, x1, x2)

inst_78513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0fc00000000000; valaddr_reg:x3; val_offset:235539*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235539*0 + 3*177*FLEN/8, x4, x1, x2)

inst_78514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0fe00000000000; valaddr_reg:x3; val_offset:235542*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235542*0 + 3*178*FLEN/8, x4, x1, x2)

inst_78515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0ff00000000000; valaddr_reg:x3; val_offset:235545*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235545*0 + 3*179*FLEN/8, x4, x1, x2)

inst_78516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0ff80000000000; valaddr_reg:x3; val_offset:235548*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235548*0 + 3*180*FLEN/8, x4, x1, x2)

inst_78517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0ffc0000000000; valaddr_reg:x3; val_offset:235551*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235551*0 + 3*181*FLEN/8, x4, x1, x2)

inst_78518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0ffe0000000000; valaddr_reg:x3; val_offset:235554*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235554*0 + 3*182*FLEN/8, x4, x1, x2)

inst_78519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0fff0000000000; valaddr_reg:x3; val_offset:235557*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235557*0 + 3*183*FLEN/8, x4, x1, x2)

inst_78520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0fff8000000000; valaddr_reg:x3; val_offset:235560*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235560*0 + 3*184*FLEN/8, x4, x1, x2)

inst_78521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0fffc000000000; valaddr_reg:x3; val_offset:235563*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235563*0 + 3*185*FLEN/8, x4, x1, x2)

inst_78522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0fffe000000000; valaddr_reg:x3; val_offset:235566*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235566*0 + 3*186*FLEN/8, x4, x1, x2)

inst_78523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0ffff000000000; valaddr_reg:x3; val_offset:235569*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235569*0 + 3*187*FLEN/8, x4, x1, x2)

inst_78524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0ffff800000000; valaddr_reg:x3; val_offset:235572*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235572*0 + 3*188*FLEN/8, x4, x1, x2)

inst_78525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0ffffc00000000; valaddr_reg:x3; val_offset:235575*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235575*0 + 3*189*FLEN/8, x4, x1, x2)

inst_78526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0ffffe00000000; valaddr_reg:x3; val_offset:235578*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235578*0 + 3*190*FLEN/8, x4, x1, x2)

inst_78527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0fffff00000000; valaddr_reg:x3; val_offset:235581*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235581*0 + 3*191*FLEN/8, x4, x1, x2)

inst_78528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0fffff80000000; valaddr_reg:x3; val_offset:235584*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235584*0 + 3*192*FLEN/8, x4, x1, x2)

inst_78529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0fffffc0000000; valaddr_reg:x3; val_offset:235587*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235587*0 + 3*193*FLEN/8, x4, x1, x2)

inst_78530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0fffffe0000000; valaddr_reg:x3; val_offset:235590*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235590*0 + 3*194*FLEN/8, x4, x1, x2)

inst_78531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0ffffff0000000; valaddr_reg:x3; val_offset:235593*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235593*0 + 3*195*FLEN/8, x4, x1, x2)

inst_78532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0ffffff8000000; valaddr_reg:x3; val_offset:235596*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235596*0 + 3*196*FLEN/8, x4, x1, x2)

inst_78533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0ffffffc000000; valaddr_reg:x3; val_offset:235599*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235599*0 + 3*197*FLEN/8, x4, x1, x2)

inst_78534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0ffffffe000000; valaddr_reg:x3; val_offset:235602*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235602*0 + 3*198*FLEN/8, x4, x1, x2)

inst_78535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0fffffff000000; valaddr_reg:x3; val_offset:235605*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235605*0 + 3*199*FLEN/8, x4, x1, x2)

inst_78536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0fffffff800000; valaddr_reg:x3; val_offset:235608*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235608*0 + 3*200*FLEN/8, x4, x1, x2)

inst_78537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0fffffffc00000; valaddr_reg:x3; val_offset:235611*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235611*0 + 3*201*FLEN/8, x4, x1, x2)

inst_78538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0fffffffe00000; valaddr_reg:x3; val_offset:235614*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235614*0 + 3*202*FLEN/8, x4, x1, x2)

inst_78539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0ffffffff00000; valaddr_reg:x3; val_offset:235617*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235617*0 + 3*203*FLEN/8, x4, x1, x2)

inst_78540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0ffffffff80000; valaddr_reg:x3; val_offset:235620*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235620*0 + 3*204*FLEN/8, x4, x1, x2)

inst_78541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0ffffffffc0000; valaddr_reg:x3; val_offset:235623*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235623*0 + 3*205*FLEN/8, x4, x1, x2)

inst_78542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0ffffffffe0000; valaddr_reg:x3; val_offset:235626*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235626*0 + 3*206*FLEN/8, x4, x1, x2)

inst_78543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0fffffffff0000; valaddr_reg:x3; val_offset:235629*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235629*0 + 3*207*FLEN/8, x4, x1, x2)

inst_78544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0fffffffff8000; valaddr_reg:x3; val_offset:235632*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235632*0 + 3*208*FLEN/8, x4, x1, x2)

inst_78545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0fffffffffc000; valaddr_reg:x3; val_offset:235635*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235635*0 + 3*209*FLEN/8, x4, x1, x2)

inst_78546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0fffffffffe000; valaddr_reg:x3; val_offset:235638*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235638*0 + 3*210*FLEN/8, x4, x1, x2)

inst_78547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0ffffffffff000; valaddr_reg:x3; val_offset:235641*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235641*0 + 3*211*FLEN/8, x4, x1, x2)

inst_78548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0ffffffffff800; valaddr_reg:x3; val_offset:235644*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235644*0 + 3*212*FLEN/8, x4, x1, x2)

inst_78549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0ffffffffffc00; valaddr_reg:x3; val_offset:235647*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235647*0 + 3*213*FLEN/8, x4, x1, x2)

inst_78550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0ffffffffffe00; valaddr_reg:x3; val_offset:235650*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235650*0 + 3*214*FLEN/8, x4, x1, x2)

inst_78551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0fffffffffff00; valaddr_reg:x3; val_offset:235653*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235653*0 + 3*215*FLEN/8, x4, x1, x2)

inst_78552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0fffffffffff80; valaddr_reg:x3; val_offset:235656*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235656*0 + 3*216*FLEN/8, x4, x1, x2)

inst_78553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0fffffffffffc0; valaddr_reg:x3; val_offset:235659*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235659*0 + 3*217*FLEN/8, x4, x1, x2)

inst_78554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0fffffffffffe0; valaddr_reg:x3; val_offset:235662*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235662*0 + 3*218*FLEN/8, x4, x1, x2)

inst_78555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0ffffffffffff0; valaddr_reg:x3; val_offset:235665*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235665*0 + 3*219*FLEN/8, x4, x1, x2)

inst_78556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0ffffffffffff8; valaddr_reg:x3; val_offset:235668*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235668*0 + 3*220*FLEN/8, x4, x1, x2)

inst_78557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0ffffffffffffc; valaddr_reg:x3; val_offset:235671*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235671*0 + 3*221*FLEN/8, x4, x1, x2)

inst_78558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0ffffffffffffe; valaddr_reg:x3; val_offset:235674*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235674*0 + 3*222*FLEN/8, x4, x1, x2)

inst_78559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3e0fffffffffffff; valaddr_reg:x3; val_offset:235677*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235677*0 + 3*223*FLEN/8, x4, x1, x2)

inst_78560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:235680*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235680*0 + 3*224*FLEN/8, x4, x1, x2)

inst_78561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:235683*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235683*0 + 3*225*FLEN/8, x4, x1, x2)

inst_78562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:235686*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235686*0 + 3*226*FLEN/8, x4, x1, x2)

inst_78563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:235689*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235689*0 + 3*227*FLEN/8, x4, x1, x2)

inst_78564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:235692*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235692*0 + 3*228*FLEN/8, x4, x1, x2)

inst_78565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:235695*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235695*0 + 3*229*FLEN/8, x4, x1, x2)

inst_78566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:235698*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235698*0 + 3*230*FLEN/8, x4, x1, x2)

inst_78567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:235701*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235701*0 + 3*231*FLEN/8, x4, x1, x2)

inst_78568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:235704*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235704*0 + 3*232*FLEN/8, x4, x1, x2)

inst_78569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:235707*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235707*0 + 3*233*FLEN/8, x4, x1, x2)

inst_78570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:235710*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235710*0 + 3*234*FLEN/8, x4, x1, x2)

inst_78571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:235713*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235713*0 + 3*235*FLEN/8, x4, x1, x2)

inst_78572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:235716*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235716*0 + 3*236*FLEN/8, x4, x1, x2)

inst_78573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:235719*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235719*0 + 3*237*FLEN/8, x4, x1, x2)

inst_78574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:235722*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235722*0 + 3*238*FLEN/8, x4, x1, x2)

inst_78575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:235725*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235725*0 + 3*239*FLEN/8, x4, x1, x2)

inst_78576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:235728*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235728*0 + 3*240*FLEN/8, x4, x1, x2)

inst_78577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:235731*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235731*0 + 3*241*FLEN/8, x4, x1, x2)

inst_78578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:235734*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235734*0 + 3*242*FLEN/8, x4, x1, x2)

inst_78579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:235737*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235737*0 + 3*243*FLEN/8, x4, x1, x2)

inst_78580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:235740*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235740*0 + 3*244*FLEN/8, x4, x1, x2)

inst_78581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a5e9f46ac70f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4c5bb6ede1840 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a5e9f46ac70f; op2val:0x2034c5bb6ede1840;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:235743*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235743*0 + 3*245*FLEN/8, x4, x1, x2)

inst_78582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:235746*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235746*0 + 3*246*FLEN/8, x4, x1, x2)

inst_78583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:235749*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235749*0 + 3*247*FLEN/8, x4, x1, x2)

inst_78584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:235752*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235752*0 + 3*248*FLEN/8, x4, x1, x2)

inst_78585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:235755*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235755*0 + 3*249*FLEN/8, x4, x1, x2)

inst_78586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:235758*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235758*0 + 3*250*FLEN/8, x4, x1, x2)

inst_78587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:235761*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235761*0 + 3*251*FLEN/8, x4, x1, x2)

inst_78588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:235764*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235764*0 + 3*252*FLEN/8, x4, x1, x2)

inst_78589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:235767*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235767*0 + 3*253*FLEN/8, x4, x1, x2)

inst_78590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:235770*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235770*0 + 3*254*FLEN/8, x4, x1, x2)

inst_78591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:235773*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235773*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_78592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:235776*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235776*0 + 3*256*FLEN/8, x4, x1, x2)

inst_78593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:235779*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235779*0 + 3*257*FLEN/8, x4, x1, x2)

inst_78594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:235782*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235782*0 + 3*258*FLEN/8, x4, x1, x2)

inst_78595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:235785*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235785*0 + 3*259*FLEN/8, x4, x1, x2)

inst_78596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:235788*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235788*0 + 3*260*FLEN/8, x4, x1, x2)

inst_78597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:235791*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235791*0 + 3*261*FLEN/8, x4, x1, x2)

inst_78598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:235794*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235794*0 + 3*262*FLEN/8, x4, x1, x2)

inst_78599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:235797*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235797*0 + 3*263*FLEN/8, x4, x1, x2)

inst_78600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:235800*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235800*0 + 3*264*FLEN/8, x4, x1, x2)

inst_78601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:235803*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235803*0 + 3*265*FLEN/8, x4, x1, x2)

inst_78602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:235806*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235806*0 + 3*266*FLEN/8, x4, x1, x2)

inst_78603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:235809*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235809*0 + 3*267*FLEN/8, x4, x1, x2)

inst_78604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80a0000000000000; valaddr_reg:x3; val_offset:235812*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235812*0 + 3*268*FLEN/8, x4, x1, x2)

inst_78605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80a0000000000001; valaddr_reg:x3; val_offset:235815*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235815*0 + 3*269*FLEN/8, x4, x1, x2)

inst_78606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80a0000000000003; valaddr_reg:x3; val_offset:235818*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235818*0 + 3*270*FLEN/8, x4, x1, x2)

inst_78607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80a0000000000007; valaddr_reg:x3; val_offset:235821*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235821*0 + 3*271*FLEN/8, x4, x1, x2)

inst_78608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80a000000000000f; valaddr_reg:x3; val_offset:235824*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235824*0 + 3*272*FLEN/8, x4, x1, x2)

inst_78609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80a000000000001f; valaddr_reg:x3; val_offset:235827*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235827*0 + 3*273*FLEN/8, x4, x1, x2)

inst_78610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80a000000000003f; valaddr_reg:x3; val_offset:235830*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235830*0 + 3*274*FLEN/8, x4, x1, x2)

inst_78611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80a000000000007f; valaddr_reg:x3; val_offset:235833*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235833*0 + 3*275*FLEN/8, x4, x1, x2)

inst_78612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80a00000000000ff; valaddr_reg:x3; val_offset:235836*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235836*0 + 3*276*FLEN/8, x4, x1, x2)

inst_78613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80a00000000001ff; valaddr_reg:x3; val_offset:235839*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235839*0 + 3*277*FLEN/8, x4, x1, x2)

inst_78614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80a00000000003ff; valaddr_reg:x3; val_offset:235842*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235842*0 + 3*278*FLEN/8, x4, x1, x2)

inst_78615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80a00000000007ff; valaddr_reg:x3; val_offset:235845*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235845*0 + 3*279*FLEN/8, x4, x1, x2)

inst_78616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80a0000000000fff; valaddr_reg:x3; val_offset:235848*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235848*0 + 3*280*FLEN/8, x4, x1, x2)

inst_78617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80a0000000001fff; valaddr_reg:x3; val_offset:235851*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235851*0 + 3*281*FLEN/8, x4, x1, x2)

inst_78618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80a0000000003fff; valaddr_reg:x3; val_offset:235854*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235854*0 + 3*282*FLEN/8, x4, x1, x2)

inst_78619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80a0000000007fff; valaddr_reg:x3; val_offset:235857*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235857*0 + 3*283*FLEN/8, x4, x1, x2)

inst_78620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80a000000000ffff; valaddr_reg:x3; val_offset:235860*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235860*0 + 3*284*FLEN/8, x4, x1, x2)

inst_78621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80a000000001ffff; valaddr_reg:x3; val_offset:235863*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235863*0 + 3*285*FLEN/8, x4, x1, x2)

inst_78622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80a000000003ffff; valaddr_reg:x3; val_offset:235866*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235866*0 + 3*286*FLEN/8, x4, x1, x2)

inst_78623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80a000000007ffff; valaddr_reg:x3; val_offset:235869*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235869*0 + 3*287*FLEN/8, x4, x1, x2)

inst_78624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80a00000000fffff; valaddr_reg:x3; val_offset:235872*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235872*0 + 3*288*FLEN/8, x4, x1, x2)

inst_78625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80a00000001fffff; valaddr_reg:x3; val_offset:235875*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235875*0 + 3*289*FLEN/8, x4, x1, x2)

inst_78626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80a00000003fffff; valaddr_reg:x3; val_offset:235878*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235878*0 + 3*290*FLEN/8, x4, x1, x2)

inst_78627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80a00000007fffff; valaddr_reg:x3; val_offset:235881*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235881*0 + 3*291*FLEN/8, x4, x1, x2)

inst_78628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80a0000000ffffff; valaddr_reg:x3; val_offset:235884*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235884*0 + 3*292*FLEN/8, x4, x1, x2)

inst_78629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80a0000001ffffff; valaddr_reg:x3; val_offset:235887*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235887*0 + 3*293*FLEN/8, x4, x1, x2)

inst_78630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80a0000003ffffff; valaddr_reg:x3; val_offset:235890*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235890*0 + 3*294*FLEN/8, x4, x1, x2)

inst_78631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80a0000007ffffff; valaddr_reg:x3; val_offset:235893*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235893*0 + 3*295*FLEN/8, x4, x1, x2)

inst_78632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80a000000fffffff; valaddr_reg:x3; val_offset:235896*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235896*0 + 3*296*FLEN/8, x4, x1, x2)

inst_78633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80a000001fffffff; valaddr_reg:x3; val_offset:235899*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235899*0 + 3*297*FLEN/8, x4, x1, x2)

inst_78634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80a000003fffffff; valaddr_reg:x3; val_offset:235902*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235902*0 + 3*298*FLEN/8, x4, x1, x2)

inst_78635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80a000007fffffff; valaddr_reg:x3; val_offset:235905*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235905*0 + 3*299*FLEN/8, x4, x1, x2)

inst_78636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80a00000ffffffff; valaddr_reg:x3; val_offset:235908*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235908*0 + 3*300*FLEN/8, x4, x1, x2)

inst_78637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80a00001ffffffff; valaddr_reg:x3; val_offset:235911*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235911*0 + 3*301*FLEN/8, x4, x1, x2)

inst_78638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80a00003ffffffff; valaddr_reg:x3; val_offset:235914*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235914*0 + 3*302*FLEN/8, x4, x1, x2)

inst_78639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80a00007ffffffff; valaddr_reg:x3; val_offset:235917*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235917*0 + 3*303*FLEN/8, x4, x1, x2)

inst_78640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80a0000fffffffff; valaddr_reg:x3; val_offset:235920*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235920*0 + 3*304*FLEN/8, x4, x1, x2)

inst_78641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80a0001fffffffff; valaddr_reg:x3; val_offset:235923*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235923*0 + 3*305*FLEN/8, x4, x1, x2)

inst_78642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80a0003fffffffff; valaddr_reg:x3; val_offset:235926*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235926*0 + 3*306*FLEN/8, x4, x1, x2)

inst_78643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80a0007fffffffff; valaddr_reg:x3; val_offset:235929*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235929*0 + 3*307*FLEN/8, x4, x1, x2)

inst_78644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80a000ffffffffff; valaddr_reg:x3; val_offset:235932*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235932*0 + 3*308*FLEN/8, x4, x1, x2)

inst_78645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80a001ffffffffff; valaddr_reg:x3; val_offset:235935*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235935*0 + 3*309*FLEN/8, x4, x1, x2)

inst_78646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80a003ffffffffff; valaddr_reg:x3; val_offset:235938*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235938*0 + 3*310*FLEN/8, x4, x1, x2)

inst_78647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80a007ffffffffff; valaddr_reg:x3; val_offset:235941*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235941*0 + 3*311*FLEN/8, x4, x1, x2)

inst_78648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80a00fffffffffff; valaddr_reg:x3; val_offset:235944*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235944*0 + 3*312*FLEN/8, x4, x1, x2)

inst_78649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80a01fffffffffff; valaddr_reg:x3; val_offset:235947*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235947*0 + 3*313*FLEN/8, x4, x1, x2)

inst_78650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80a03fffffffffff; valaddr_reg:x3; val_offset:235950*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235950*0 + 3*314*FLEN/8, x4, x1, x2)

inst_78651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80a07fffffffffff; valaddr_reg:x3; val_offset:235953*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235953*0 + 3*315*FLEN/8, x4, x1, x2)

inst_78652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80a0ffffffffffff; valaddr_reg:x3; val_offset:235956*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235956*0 + 3*316*FLEN/8, x4, x1, x2)

inst_78653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80a1ffffffffffff; valaddr_reg:x3; val_offset:235959*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235959*0 + 3*317*FLEN/8, x4, x1, x2)

inst_78654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80a3ffffffffffff; valaddr_reg:x3; val_offset:235962*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235962*0 + 3*318*FLEN/8, x4, x1, x2)

inst_78655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80a7ffffffffffff; valaddr_reg:x3; val_offset:235965*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235965*0 + 3*319*FLEN/8, x4, x1, x2)

inst_78656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80a8000000000000; valaddr_reg:x3; val_offset:235968*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235968*0 + 3*320*FLEN/8, x4, x1, x2)

inst_78657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80ac000000000000; valaddr_reg:x3; val_offset:235971*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235971*0 + 3*321*FLEN/8, x4, x1, x2)

inst_78658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80ae000000000000; valaddr_reg:x3; val_offset:235974*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235974*0 + 3*322*FLEN/8, x4, x1, x2)

inst_78659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80af000000000000; valaddr_reg:x3; val_offset:235977*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235977*0 + 3*323*FLEN/8, x4, x1, x2)

inst_78660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80af800000000000; valaddr_reg:x3; val_offset:235980*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235980*0 + 3*324*FLEN/8, x4, x1, x2)

inst_78661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80afc00000000000; valaddr_reg:x3; val_offset:235983*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235983*0 + 3*325*FLEN/8, x4, x1, x2)

inst_78662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80afe00000000000; valaddr_reg:x3; val_offset:235986*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235986*0 + 3*326*FLEN/8, x4, x1, x2)

inst_78663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80aff00000000000; valaddr_reg:x3; val_offset:235989*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235989*0 + 3*327*FLEN/8, x4, x1, x2)

inst_78664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80aff80000000000; valaddr_reg:x3; val_offset:235992*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235992*0 + 3*328*FLEN/8, x4, x1, x2)

inst_78665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80affc0000000000; valaddr_reg:x3; val_offset:235995*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235995*0 + 3*329*FLEN/8, x4, x1, x2)

inst_78666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80affe0000000000; valaddr_reg:x3; val_offset:235998*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235998*0 + 3*330*FLEN/8, x4, x1, x2)

inst_78667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80afff0000000000; valaddr_reg:x3; val_offset:236001*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236001*0 + 3*331*FLEN/8, x4, x1, x2)

inst_78668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80afff8000000000; valaddr_reg:x3; val_offset:236004*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236004*0 + 3*332*FLEN/8, x4, x1, x2)

inst_78669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80afffc000000000; valaddr_reg:x3; val_offset:236007*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236007*0 + 3*333*FLEN/8, x4, x1, x2)

inst_78670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80afffe000000000; valaddr_reg:x3; val_offset:236010*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236010*0 + 3*334*FLEN/8, x4, x1, x2)

inst_78671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80affff000000000; valaddr_reg:x3; val_offset:236013*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236013*0 + 3*335*FLEN/8, x4, x1, x2)

inst_78672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80affff800000000; valaddr_reg:x3; val_offset:236016*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236016*0 + 3*336*FLEN/8, x4, x1, x2)

inst_78673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80affffc00000000; valaddr_reg:x3; val_offset:236019*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236019*0 + 3*337*FLEN/8, x4, x1, x2)

inst_78674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80affffe00000000; valaddr_reg:x3; val_offset:236022*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236022*0 + 3*338*FLEN/8, x4, x1, x2)

inst_78675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80afffff00000000; valaddr_reg:x3; val_offset:236025*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236025*0 + 3*339*FLEN/8, x4, x1, x2)

inst_78676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80afffff80000000; valaddr_reg:x3; val_offset:236028*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236028*0 + 3*340*FLEN/8, x4, x1, x2)

inst_78677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80afffffc0000000; valaddr_reg:x3; val_offset:236031*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236031*0 + 3*341*FLEN/8, x4, x1, x2)

inst_78678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80afffffe0000000; valaddr_reg:x3; val_offset:236034*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236034*0 + 3*342*FLEN/8, x4, x1, x2)

inst_78679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80affffff0000000; valaddr_reg:x3; val_offset:236037*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236037*0 + 3*343*FLEN/8, x4, x1, x2)

inst_78680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80affffff8000000; valaddr_reg:x3; val_offset:236040*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236040*0 + 3*344*FLEN/8, x4, x1, x2)

inst_78681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80affffffc000000; valaddr_reg:x3; val_offset:236043*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236043*0 + 3*345*FLEN/8, x4, x1, x2)

inst_78682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80affffffe000000; valaddr_reg:x3; val_offset:236046*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236046*0 + 3*346*FLEN/8, x4, x1, x2)

inst_78683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80afffffff000000; valaddr_reg:x3; val_offset:236049*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236049*0 + 3*347*FLEN/8, x4, x1, x2)

inst_78684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80afffffff800000; valaddr_reg:x3; val_offset:236052*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236052*0 + 3*348*FLEN/8, x4, x1, x2)

inst_78685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80afffffffc00000; valaddr_reg:x3; val_offset:236055*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236055*0 + 3*349*FLEN/8, x4, x1, x2)

inst_78686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80afffffffe00000; valaddr_reg:x3; val_offset:236058*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236058*0 + 3*350*FLEN/8, x4, x1, x2)

inst_78687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80affffffff00000; valaddr_reg:x3; val_offset:236061*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236061*0 + 3*351*FLEN/8, x4, x1, x2)

inst_78688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80affffffff80000; valaddr_reg:x3; val_offset:236064*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236064*0 + 3*352*FLEN/8, x4, x1, x2)

inst_78689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80affffffffc0000; valaddr_reg:x3; val_offset:236067*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236067*0 + 3*353*FLEN/8, x4, x1, x2)

inst_78690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80affffffffe0000; valaddr_reg:x3; val_offset:236070*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236070*0 + 3*354*FLEN/8, x4, x1, x2)

inst_78691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80afffffffff0000; valaddr_reg:x3; val_offset:236073*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236073*0 + 3*355*FLEN/8, x4, x1, x2)

inst_78692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80afffffffff8000; valaddr_reg:x3; val_offset:236076*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236076*0 + 3*356*FLEN/8, x4, x1, x2)

inst_78693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80afffffffffc000; valaddr_reg:x3; val_offset:236079*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236079*0 + 3*357*FLEN/8, x4, x1, x2)

inst_78694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80afffffffffe000; valaddr_reg:x3; val_offset:236082*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236082*0 + 3*358*FLEN/8, x4, x1, x2)

inst_78695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80affffffffff000; valaddr_reg:x3; val_offset:236085*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236085*0 + 3*359*FLEN/8, x4, x1, x2)

inst_78696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80affffffffff800; valaddr_reg:x3; val_offset:236088*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236088*0 + 3*360*FLEN/8, x4, x1, x2)

inst_78697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80affffffffffc00; valaddr_reg:x3; val_offset:236091*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236091*0 + 3*361*FLEN/8, x4, x1, x2)

inst_78698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80affffffffffe00; valaddr_reg:x3; val_offset:236094*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236094*0 + 3*362*FLEN/8, x4, x1, x2)

inst_78699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80afffffffffff00; valaddr_reg:x3; val_offset:236097*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236097*0 + 3*363*FLEN/8, x4, x1, x2)

inst_78700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80afffffffffff80; valaddr_reg:x3; val_offset:236100*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236100*0 + 3*364*FLEN/8, x4, x1, x2)

inst_78701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80afffffffffffc0; valaddr_reg:x3; val_offset:236103*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236103*0 + 3*365*FLEN/8, x4, x1, x2)

inst_78702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80afffffffffffe0; valaddr_reg:x3; val_offset:236106*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236106*0 + 3*366*FLEN/8, x4, x1, x2)

inst_78703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80affffffffffff0; valaddr_reg:x3; val_offset:236109*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236109*0 + 3*367*FLEN/8, x4, x1, x2)

inst_78704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80affffffffffff8; valaddr_reg:x3; val_offset:236112*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236112*0 + 3*368*FLEN/8, x4, x1, x2)

inst_78705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80affffffffffffc; valaddr_reg:x3; val_offset:236115*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236115*0 + 3*369*FLEN/8, x4, x1, x2)

inst_78706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80affffffffffffe; valaddr_reg:x3; val_offset:236118*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236118*0 + 3*370*FLEN/8, x4, x1, x2)

inst_78707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a82024cc4e03; op2val:0x8000;
op3val:0x80afffffffffffff; valaddr_reg:x3; val_offset:236121*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236121*0 + 3*371*FLEN/8, x4, x1, x2)

inst_78708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:236124*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236124*0 + 3*372*FLEN/8, x4, x1, x2)

inst_78709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:236127*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236127*0 + 3*373*FLEN/8, x4, x1, x2)

inst_78710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:236130*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236130*0 + 3*374*FLEN/8, x4, x1, x2)

inst_78711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:236133*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236133*0 + 3*375*FLEN/8, x4, x1, x2)

inst_78712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:236136*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236136*0 + 3*376*FLEN/8, x4, x1, x2)

inst_78713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:236139*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236139*0 + 3*377*FLEN/8, x4, x1, x2)

inst_78714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:236142*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236142*0 + 3*378*FLEN/8, x4, x1, x2)

inst_78715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:236145*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236145*0 + 3*379*FLEN/8, x4, x1, x2)

inst_78716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:236148*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236148*0 + 3*380*FLEN/8, x4, x1, x2)

inst_78717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:236151*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236151*0 + 3*381*FLEN/8, x4, x1, x2)

inst_78718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:236154*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236154*0 + 3*382*FLEN/8, x4, x1, x2)

inst_78719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:236157*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236157*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_78720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:236160*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236160*0 + 3*384*FLEN/8, x4, x1, x2)

inst_78721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:236163*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236163*0 + 3*385*FLEN/8, x4, x1, x2)

inst_78722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:236166*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236166*0 + 3*386*FLEN/8, x4, x1, x2)

inst_78723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:236169*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236169*0 + 3*387*FLEN/8, x4, x1, x2)

inst_78724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:236172*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236172*0 + 3*388*FLEN/8, x4, x1, x2)

inst_78725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:236175*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236175*0 + 3*389*FLEN/8, x4, x1, x2)

inst_78726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:236178*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236178*0 + 3*390*FLEN/8, x4, x1, x2)

inst_78727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:236181*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236181*0 + 3*391*FLEN/8, x4, x1, x2)

inst_78728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:236184*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236184*0 + 3*392*FLEN/8, x4, x1, x2)

inst_78729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:236187*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236187*0 + 3*393*FLEN/8, x4, x1, x2)

inst_78730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3c0000000000000; valaddr_reg:x3; val_offset:236190*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236190*0 + 3*394*FLEN/8, x4, x1, x2)

inst_78731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3c0000000000001; valaddr_reg:x3; val_offset:236193*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236193*0 + 3*395*FLEN/8, x4, x1, x2)

inst_78732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3c0000000000003; valaddr_reg:x3; val_offset:236196*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236196*0 + 3*396*FLEN/8, x4, x1, x2)

inst_78733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3c0000000000007; valaddr_reg:x3; val_offset:236199*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236199*0 + 3*397*FLEN/8, x4, x1, x2)

inst_78734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3c000000000000f; valaddr_reg:x3; val_offset:236202*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236202*0 + 3*398*FLEN/8, x4, x1, x2)

inst_78735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3c000000000001f; valaddr_reg:x3; val_offset:236205*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236205*0 + 3*399*FLEN/8, x4, x1, x2)

inst_78736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3c000000000003f; valaddr_reg:x3; val_offset:236208*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236208*0 + 3*400*FLEN/8, x4, x1, x2)

inst_78737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3c000000000007f; valaddr_reg:x3; val_offset:236211*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236211*0 + 3*401*FLEN/8, x4, x1, x2)

inst_78738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3c00000000000ff; valaddr_reg:x3; val_offset:236214*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236214*0 + 3*402*FLEN/8, x4, x1, x2)

inst_78739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3c00000000001ff; valaddr_reg:x3; val_offset:236217*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236217*0 + 3*403*FLEN/8, x4, x1, x2)

inst_78740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3c00000000003ff; valaddr_reg:x3; val_offset:236220*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236220*0 + 3*404*FLEN/8, x4, x1, x2)

inst_78741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3c00000000007ff; valaddr_reg:x3; val_offset:236223*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236223*0 + 3*405*FLEN/8, x4, x1, x2)

inst_78742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3c0000000000fff; valaddr_reg:x3; val_offset:236226*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236226*0 + 3*406*FLEN/8, x4, x1, x2)

inst_78743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3c0000000001fff; valaddr_reg:x3; val_offset:236229*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236229*0 + 3*407*FLEN/8, x4, x1, x2)

inst_78744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3c0000000003fff; valaddr_reg:x3; val_offset:236232*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236232*0 + 3*408*FLEN/8, x4, x1, x2)

inst_78745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3c0000000007fff; valaddr_reg:x3; val_offset:236235*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236235*0 + 3*409*FLEN/8, x4, x1, x2)

inst_78746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3c000000000ffff; valaddr_reg:x3; val_offset:236238*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236238*0 + 3*410*FLEN/8, x4, x1, x2)

inst_78747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3c000000001ffff; valaddr_reg:x3; val_offset:236241*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236241*0 + 3*411*FLEN/8, x4, x1, x2)

inst_78748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3c000000003ffff; valaddr_reg:x3; val_offset:236244*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236244*0 + 3*412*FLEN/8, x4, x1, x2)

inst_78749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3c000000007ffff; valaddr_reg:x3; val_offset:236247*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236247*0 + 3*413*FLEN/8, x4, x1, x2)

inst_78750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3c00000000fffff; valaddr_reg:x3; val_offset:236250*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236250*0 + 3*414*FLEN/8, x4, x1, x2)

inst_78751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3c00000001fffff; valaddr_reg:x3; val_offset:236253*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236253*0 + 3*415*FLEN/8, x4, x1, x2)

inst_78752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3c00000003fffff; valaddr_reg:x3; val_offset:236256*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236256*0 + 3*416*FLEN/8, x4, x1, x2)

inst_78753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3c00000007fffff; valaddr_reg:x3; val_offset:236259*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236259*0 + 3*417*FLEN/8, x4, x1, x2)

inst_78754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3c0000000ffffff; valaddr_reg:x3; val_offset:236262*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236262*0 + 3*418*FLEN/8, x4, x1, x2)

inst_78755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3c0000001ffffff; valaddr_reg:x3; val_offset:236265*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236265*0 + 3*419*FLEN/8, x4, x1, x2)

inst_78756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3c0000003ffffff; valaddr_reg:x3; val_offset:236268*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236268*0 + 3*420*FLEN/8, x4, x1, x2)

inst_78757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3c0000007ffffff; valaddr_reg:x3; val_offset:236271*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236271*0 + 3*421*FLEN/8, x4, x1, x2)

inst_78758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3c000000fffffff; valaddr_reg:x3; val_offset:236274*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236274*0 + 3*422*FLEN/8, x4, x1, x2)

inst_78759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3c000001fffffff; valaddr_reg:x3; val_offset:236277*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236277*0 + 3*423*FLEN/8, x4, x1, x2)

inst_78760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3c000003fffffff; valaddr_reg:x3; val_offset:236280*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236280*0 + 3*424*FLEN/8, x4, x1, x2)

inst_78761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3c000007fffffff; valaddr_reg:x3; val_offset:236283*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236283*0 + 3*425*FLEN/8, x4, x1, x2)

inst_78762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3c00000ffffffff; valaddr_reg:x3; val_offset:236286*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236286*0 + 3*426*FLEN/8, x4, x1, x2)

inst_78763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3c00001ffffffff; valaddr_reg:x3; val_offset:236289*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236289*0 + 3*427*FLEN/8, x4, x1, x2)

inst_78764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3c00003ffffffff; valaddr_reg:x3; val_offset:236292*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236292*0 + 3*428*FLEN/8, x4, x1, x2)

inst_78765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3c00007ffffffff; valaddr_reg:x3; val_offset:236295*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236295*0 + 3*429*FLEN/8, x4, x1, x2)

inst_78766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3c0000fffffffff; valaddr_reg:x3; val_offset:236298*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236298*0 + 3*430*FLEN/8, x4, x1, x2)

inst_78767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3c0001fffffffff; valaddr_reg:x3; val_offset:236301*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236301*0 + 3*431*FLEN/8, x4, x1, x2)

inst_78768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3c0003fffffffff; valaddr_reg:x3; val_offset:236304*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236304*0 + 3*432*FLEN/8, x4, x1, x2)

inst_78769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3c0007fffffffff; valaddr_reg:x3; val_offset:236307*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236307*0 + 3*433*FLEN/8, x4, x1, x2)

inst_78770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3c000ffffffffff; valaddr_reg:x3; val_offset:236310*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236310*0 + 3*434*FLEN/8, x4, x1, x2)

inst_78771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3c001ffffffffff; valaddr_reg:x3; val_offset:236313*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236313*0 + 3*435*FLEN/8, x4, x1, x2)

inst_78772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3c003ffffffffff; valaddr_reg:x3; val_offset:236316*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236316*0 + 3*436*FLEN/8, x4, x1, x2)

inst_78773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3c007ffffffffff; valaddr_reg:x3; val_offset:236319*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236319*0 + 3*437*FLEN/8, x4, x1, x2)

inst_78774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3c00fffffffffff; valaddr_reg:x3; val_offset:236322*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236322*0 + 3*438*FLEN/8, x4, x1, x2)

inst_78775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3c01fffffffffff; valaddr_reg:x3; val_offset:236325*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236325*0 + 3*439*FLEN/8, x4, x1, x2)

inst_78776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3c03fffffffffff; valaddr_reg:x3; val_offset:236328*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236328*0 + 3*440*FLEN/8, x4, x1, x2)

inst_78777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3c07fffffffffff; valaddr_reg:x3; val_offset:236331*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236331*0 + 3*441*FLEN/8, x4, x1, x2)

inst_78778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3c0ffffffffffff; valaddr_reg:x3; val_offset:236334*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236334*0 + 3*442*FLEN/8, x4, x1, x2)

inst_78779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3c1ffffffffffff; valaddr_reg:x3; val_offset:236337*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236337*0 + 3*443*FLEN/8, x4, x1, x2)

inst_78780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3c3ffffffffffff; valaddr_reg:x3; val_offset:236340*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236340*0 + 3*444*FLEN/8, x4, x1, x2)

inst_78781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3c7ffffffffffff; valaddr_reg:x3; val_offset:236343*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236343*0 + 3*445*FLEN/8, x4, x1, x2)

inst_78782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3c8000000000000; valaddr_reg:x3; val_offset:236346*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236346*0 + 3*446*FLEN/8, x4, x1, x2)

inst_78783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3cc000000000000; valaddr_reg:x3; val_offset:236349*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236349*0 + 3*447*FLEN/8, x4, x1, x2)

inst_78784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3ce000000000000; valaddr_reg:x3; val_offset:236352*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236352*0 + 3*448*FLEN/8, x4, x1, x2)

inst_78785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3cf000000000000; valaddr_reg:x3; val_offset:236355*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236355*0 + 3*449*FLEN/8, x4, x1, x2)

inst_78786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3cf800000000000; valaddr_reg:x3; val_offset:236358*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236358*0 + 3*450*FLEN/8, x4, x1, x2)

inst_78787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3cfc00000000000; valaddr_reg:x3; val_offset:236361*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236361*0 + 3*451*FLEN/8, x4, x1, x2)

inst_78788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3cfe00000000000; valaddr_reg:x3; val_offset:236364*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236364*0 + 3*452*FLEN/8, x4, x1, x2)

inst_78789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3cff00000000000; valaddr_reg:x3; val_offset:236367*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236367*0 + 3*453*FLEN/8, x4, x1, x2)

inst_78790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3cff80000000000; valaddr_reg:x3; val_offset:236370*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236370*0 + 3*454*FLEN/8, x4, x1, x2)

inst_78791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3cffc0000000000; valaddr_reg:x3; val_offset:236373*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236373*0 + 3*455*FLEN/8, x4, x1, x2)

inst_78792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3cffe0000000000; valaddr_reg:x3; val_offset:236376*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236376*0 + 3*456*FLEN/8, x4, x1, x2)

inst_78793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3cfff0000000000; valaddr_reg:x3; val_offset:236379*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236379*0 + 3*457*FLEN/8, x4, x1, x2)

inst_78794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3cfff8000000000; valaddr_reg:x3; val_offset:236382*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236382*0 + 3*458*FLEN/8, x4, x1, x2)

inst_78795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3cfffc000000000; valaddr_reg:x3; val_offset:236385*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236385*0 + 3*459*FLEN/8, x4, x1, x2)

inst_78796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3cfffe000000000; valaddr_reg:x3; val_offset:236388*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236388*0 + 3*460*FLEN/8, x4, x1, x2)

inst_78797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3cffff000000000; valaddr_reg:x3; val_offset:236391*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236391*0 + 3*461*FLEN/8, x4, x1, x2)

inst_78798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3cffff800000000; valaddr_reg:x3; val_offset:236394*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236394*0 + 3*462*FLEN/8, x4, x1, x2)

inst_78799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3cffffc00000000; valaddr_reg:x3; val_offset:236397*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236397*0 + 3*463*FLEN/8, x4, x1, x2)

inst_78800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3cffffe00000000; valaddr_reg:x3; val_offset:236400*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236400*0 + 3*464*FLEN/8, x4, x1, x2)

inst_78801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3cfffff00000000; valaddr_reg:x3; val_offset:236403*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236403*0 + 3*465*FLEN/8, x4, x1, x2)

inst_78802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3cfffff80000000; valaddr_reg:x3; val_offset:236406*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236406*0 + 3*466*FLEN/8, x4, x1, x2)

inst_78803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3cfffffc0000000; valaddr_reg:x3; val_offset:236409*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236409*0 + 3*467*FLEN/8, x4, x1, x2)

inst_78804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3cfffffe0000000; valaddr_reg:x3; val_offset:236412*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236412*0 + 3*468*FLEN/8, x4, x1, x2)

inst_78805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3cffffff0000000; valaddr_reg:x3; val_offset:236415*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236415*0 + 3*469*FLEN/8, x4, x1, x2)

inst_78806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3cffffff8000000; valaddr_reg:x3; val_offset:236418*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236418*0 + 3*470*FLEN/8, x4, x1, x2)

inst_78807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3cffffffc000000; valaddr_reg:x3; val_offset:236421*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236421*0 + 3*471*FLEN/8, x4, x1, x2)

inst_78808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3cffffffe000000; valaddr_reg:x3; val_offset:236424*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236424*0 + 3*472*FLEN/8, x4, x1, x2)

inst_78809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3cfffffff000000; valaddr_reg:x3; val_offset:236427*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236427*0 + 3*473*FLEN/8, x4, x1, x2)

inst_78810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3cfffffff800000; valaddr_reg:x3; val_offset:236430*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236430*0 + 3*474*FLEN/8, x4, x1, x2)

inst_78811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3cfffffffc00000; valaddr_reg:x3; val_offset:236433*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236433*0 + 3*475*FLEN/8, x4, x1, x2)

inst_78812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3cfffffffe00000; valaddr_reg:x3; val_offset:236436*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236436*0 + 3*476*FLEN/8, x4, x1, x2)

inst_78813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3cffffffff00000; valaddr_reg:x3; val_offset:236439*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236439*0 + 3*477*FLEN/8, x4, x1, x2)

inst_78814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3cffffffff80000; valaddr_reg:x3; val_offset:236442*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236442*0 + 3*478*FLEN/8, x4, x1, x2)

inst_78815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3cffffffffc0000; valaddr_reg:x3; val_offset:236445*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236445*0 + 3*479*FLEN/8, x4, x1, x2)

inst_78816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3cffffffffe0000; valaddr_reg:x3; val_offset:236448*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236448*0 + 3*480*FLEN/8, x4, x1, x2)

inst_78817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3cfffffffff0000; valaddr_reg:x3; val_offset:236451*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236451*0 + 3*481*FLEN/8, x4, x1, x2)

inst_78818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3cfffffffff8000; valaddr_reg:x3; val_offset:236454*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236454*0 + 3*482*FLEN/8, x4, x1, x2)

inst_78819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3cfffffffffc000; valaddr_reg:x3; val_offset:236457*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236457*0 + 3*483*FLEN/8, x4, x1, x2)

inst_78820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3cfffffffffe000; valaddr_reg:x3; val_offset:236460*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236460*0 + 3*484*FLEN/8, x4, x1, x2)

inst_78821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3cffffffffff000; valaddr_reg:x3; val_offset:236463*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236463*0 + 3*485*FLEN/8, x4, x1, x2)

inst_78822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3cffffffffff800; valaddr_reg:x3; val_offset:236466*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236466*0 + 3*486*FLEN/8, x4, x1, x2)

inst_78823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3cffffffffffc00; valaddr_reg:x3; val_offset:236469*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236469*0 + 3*487*FLEN/8, x4, x1, x2)

inst_78824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3cffffffffffe00; valaddr_reg:x3; val_offset:236472*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236472*0 + 3*488*FLEN/8, x4, x1, x2)

inst_78825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3cfffffffffff00; valaddr_reg:x3; val_offset:236475*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236475*0 + 3*489*FLEN/8, x4, x1, x2)

inst_78826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3cfffffffffff80; valaddr_reg:x3; val_offset:236478*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236478*0 + 3*490*FLEN/8, x4, x1, x2)

inst_78827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3cfffffffffffc0; valaddr_reg:x3; val_offset:236481*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236481*0 + 3*491*FLEN/8, x4, x1, x2)

inst_78828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3cfffffffffffe0; valaddr_reg:x3; val_offset:236484*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236484*0 + 3*492*FLEN/8, x4, x1, x2)

inst_78829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3cffffffffffff0; valaddr_reg:x3; val_offset:236487*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236487*0 + 3*493*FLEN/8, x4, x1, x2)

inst_78830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3cffffffffffff8; valaddr_reg:x3; val_offset:236490*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236490*0 + 3*494*FLEN/8, x4, x1, x2)

inst_78831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3cffffffffffffc; valaddr_reg:x3; val_offset:236493*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236493*0 + 3*495*FLEN/8, x4, x1, x2)

inst_78832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3cffffffffffffe; valaddr_reg:x3; val_offset:236496*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236496*0 + 3*496*FLEN/8, x4, x1, x2)

inst_78833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d3a97ab2ac68 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d3a97ab2ac68; op2val:0x0;
op3val:0x3cfffffffffffff; valaddr_reg:x3; val_offset:236499*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236499*0 + 3*497*FLEN/8, x4, x1, x2)

inst_78834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:236502*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236502*0 + 3*498*FLEN/8, x4, x1, x2)

inst_78835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:236505*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236505*0 + 3*499*FLEN/8, x4, x1, x2)

inst_78836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:236508*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236508*0 + 3*500*FLEN/8, x4, x1, x2)

inst_78837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:236511*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236511*0 + 3*501*FLEN/8, x4, x1, x2)

inst_78838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:236514*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236514*0 + 3*502*FLEN/8, x4, x1, x2)

inst_78839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:236517*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236517*0 + 3*503*FLEN/8, x4, x1, x2)

inst_78840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:236520*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236520*0 + 3*504*FLEN/8, x4, x1, x2)

inst_78841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:236523*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236523*0 + 3*505*FLEN/8, x4, x1, x2)

inst_78842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:236526*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236526*0 + 3*506*FLEN/8, x4, x1, x2)

inst_78843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:236529*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236529*0 + 3*507*FLEN/8, x4, x1, x2)

inst_78844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:236532*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236532*0 + 3*508*FLEN/8, x4, x1, x2)

inst_78845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:236535*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236535*0 + 3*509*FLEN/8, x4, x1, x2)

inst_78846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:236538*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236538*0 + 3*510*FLEN/8, x4, x1, x2)

inst_78847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:236541*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236541*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_78848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:236544*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236544*0 + 3*512*FLEN/8, x4, x1, x2)

inst_78849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:236547*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236547*0 + 3*513*FLEN/8, x4, x1, x2)

inst_78850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:236550*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236550*0 + 3*514*FLEN/8, x4, x1, x2)

inst_78851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:236553*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236553*0 + 3*515*FLEN/8, x4, x1, x2)

inst_78852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:236556*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236556*0 + 3*516*FLEN/8, x4, x1, x2)

inst_78853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:236559*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236559*0 + 3*517*FLEN/8, x4, x1, x2)

inst_78854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:236562*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236562*0 + 3*518*FLEN/8, x4, x1, x2)

inst_78855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:236565*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236565*0 + 3*519*FLEN/8, x4, x1, x2)

inst_78856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xa0000000000000; valaddr_reg:x3; val_offset:236568*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236568*0 + 3*520*FLEN/8, x4, x1, x2)

inst_78857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xa0000000000001; valaddr_reg:x3; val_offset:236571*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236571*0 + 3*521*FLEN/8, x4, x1, x2)

inst_78858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xa0000000000003; valaddr_reg:x3; val_offset:236574*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236574*0 + 3*522*FLEN/8, x4, x1, x2)

inst_78859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xa0000000000007; valaddr_reg:x3; val_offset:236577*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236577*0 + 3*523*FLEN/8, x4, x1, x2)

inst_78860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xa000000000000f; valaddr_reg:x3; val_offset:236580*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236580*0 + 3*524*FLEN/8, x4, x1, x2)

inst_78861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xa000000000001f; valaddr_reg:x3; val_offset:236583*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236583*0 + 3*525*FLEN/8, x4, x1, x2)

inst_78862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xa000000000003f; valaddr_reg:x3; val_offset:236586*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236586*0 + 3*526*FLEN/8, x4, x1, x2)

inst_78863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xa000000000007f; valaddr_reg:x3; val_offset:236589*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236589*0 + 3*527*FLEN/8, x4, x1, x2)

inst_78864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xa00000000000ff; valaddr_reg:x3; val_offset:236592*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236592*0 + 3*528*FLEN/8, x4, x1, x2)

inst_78865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xa00000000001ff; valaddr_reg:x3; val_offset:236595*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236595*0 + 3*529*FLEN/8, x4, x1, x2)

inst_78866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xa00000000003ff; valaddr_reg:x3; val_offset:236598*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236598*0 + 3*530*FLEN/8, x4, x1, x2)

inst_78867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xa00000000007ff; valaddr_reg:x3; val_offset:236601*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236601*0 + 3*531*FLEN/8, x4, x1, x2)

inst_78868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xa0000000000fff; valaddr_reg:x3; val_offset:236604*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236604*0 + 3*532*FLEN/8, x4, x1, x2)

inst_78869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xa0000000001fff; valaddr_reg:x3; val_offset:236607*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236607*0 + 3*533*FLEN/8, x4, x1, x2)

inst_78870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xa0000000003fff; valaddr_reg:x3; val_offset:236610*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236610*0 + 3*534*FLEN/8, x4, x1, x2)

inst_78871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xa0000000007fff; valaddr_reg:x3; val_offset:236613*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236613*0 + 3*535*FLEN/8, x4, x1, x2)

inst_78872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xa000000000ffff; valaddr_reg:x3; val_offset:236616*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236616*0 + 3*536*FLEN/8, x4, x1, x2)

inst_78873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xa000000001ffff; valaddr_reg:x3; val_offset:236619*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236619*0 + 3*537*FLEN/8, x4, x1, x2)

inst_78874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xa000000003ffff; valaddr_reg:x3; val_offset:236622*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236622*0 + 3*538*FLEN/8, x4, x1, x2)

inst_78875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xa000000007ffff; valaddr_reg:x3; val_offset:236625*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236625*0 + 3*539*FLEN/8, x4, x1, x2)

inst_78876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xa00000000fffff; valaddr_reg:x3; val_offset:236628*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236628*0 + 3*540*FLEN/8, x4, x1, x2)

inst_78877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xa00000001fffff; valaddr_reg:x3; val_offset:236631*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236631*0 + 3*541*FLEN/8, x4, x1, x2)

inst_78878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xa00000003fffff; valaddr_reg:x3; val_offset:236634*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236634*0 + 3*542*FLEN/8, x4, x1, x2)

inst_78879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xa00000007fffff; valaddr_reg:x3; val_offset:236637*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236637*0 + 3*543*FLEN/8, x4, x1, x2)

inst_78880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xa0000000ffffff; valaddr_reg:x3; val_offset:236640*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236640*0 + 3*544*FLEN/8, x4, x1, x2)

inst_78881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xa0000001ffffff; valaddr_reg:x3; val_offset:236643*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236643*0 + 3*545*FLEN/8, x4, x1, x2)

inst_78882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xa0000003ffffff; valaddr_reg:x3; val_offset:236646*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236646*0 + 3*546*FLEN/8, x4, x1, x2)

inst_78883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xa0000007ffffff; valaddr_reg:x3; val_offset:236649*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236649*0 + 3*547*FLEN/8, x4, x1, x2)

inst_78884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xa000000fffffff; valaddr_reg:x3; val_offset:236652*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236652*0 + 3*548*FLEN/8, x4, x1, x2)

inst_78885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xa000001fffffff; valaddr_reg:x3; val_offset:236655*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236655*0 + 3*549*FLEN/8, x4, x1, x2)

inst_78886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xa000003fffffff; valaddr_reg:x3; val_offset:236658*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236658*0 + 3*550*FLEN/8, x4, x1, x2)

inst_78887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xa000007fffffff; valaddr_reg:x3; val_offset:236661*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236661*0 + 3*551*FLEN/8, x4, x1, x2)

inst_78888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xa00000ffffffff; valaddr_reg:x3; val_offset:236664*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236664*0 + 3*552*FLEN/8, x4, x1, x2)

inst_78889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xa00001ffffffff; valaddr_reg:x3; val_offset:236667*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236667*0 + 3*553*FLEN/8, x4, x1, x2)

inst_78890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xa00003ffffffff; valaddr_reg:x3; val_offset:236670*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236670*0 + 3*554*FLEN/8, x4, x1, x2)

inst_78891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xa00007ffffffff; valaddr_reg:x3; val_offset:236673*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236673*0 + 3*555*FLEN/8, x4, x1, x2)

inst_78892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xa0000fffffffff; valaddr_reg:x3; val_offset:236676*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236676*0 + 3*556*FLEN/8, x4, x1, x2)

inst_78893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xa0001fffffffff; valaddr_reg:x3; val_offset:236679*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236679*0 + 3*557*FLEN/8, x4, x1, x2)

inst_78894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xa0003fffffffff; valaddr_reg:x3; val_offset:236682*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236682*0 + 3*558*FLEN/8, x4, x1, x2)

inst_78895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xa0007fffffffff; valaddr_reg:x3; val_offset:236685*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236685*0 + 3*559*FLEN/8, x4, x1, x2)

inst_78896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xa000ffffffffff; valaddr_reg:x3; val_offset:236688*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236688*0 + 3*560*FLEN/8, x4, x1, x2)

inst_78897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xa001ffffffffff; valaddr_reg:x3; val_offset:236691*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236691*0 + 3*561*FLEN/8, x4, x1, x2)

inst_78898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xa003ffffffffff; valaddr_reg:x3; val_offset:236694*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236694*0 + 3*562*FLEN/8, x4, x1, x2)

inst_78899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xa007ffffffffff; valaddr_reg:x3; val_offset:236697*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236697*0 + 3*563*FLEN/8, x4, x1, x2)

inst_78900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xa00fffffffffff; valaddr_reg:x3; val_offset:236700*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236700*0 + 3*564*FLEN/8, x4, x1, x2)

inst_78901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xa01fffffffffff; valaddr_reg:x3; val_offset:236703*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236703*0 + 3*565*FLEN/8, x4, x1, x2)

inst_78902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xa03fffffffffff; valaddr_reg:x3; val_offset:236706*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236706*0 + 3*566*FLEN/8, x4, x1, x2)

inst_78903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xa07fffffffffff; valaddr_reg:x3; val_offset:236709*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236709*0 + 3*567*FLEN/8, x4, x1, x2)

inst_78904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xa0ffffffffffff; valaddr_reg:x3; val_offset:236712*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236712*0 + 3*568*FLEN/8, x4, x1, x2)

inst_78905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xa1ffffffffffff; valaddr_reg:x3; val_offset:236715*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236715*0 + 3*569*FLEN/8, x4, x1, x2)

inst_78906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xa3ffffffffffff; valaddr_reg:x3; val_offset:236718*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236718*0 + 3*570*FLEN/8, x4, x1, x2)

inst_78907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xa7ffffffffffff; valaddr_reg:x3; val_offset:236721*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236721*0 + 3*571*FLEN/8, x4, x1, x2)

inst_78908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xa8000000000000; valaddr_reg:x3; val_offset:236724*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236724*0 + 3*572*FLEN/8, x4, x1, x2)

inst_78909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xac000000000000; valaddr_reg:x3; val_offset:236727*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236727*0 + 3*573*FLEN/8, x4, x1, x2)

inst_78910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xae000000000000; valaddr_reg:x3; val_offset:236730*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236730*0 + 3*574*FLEN/8, x4, x1, x2)

inst_78911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xaf000000000000; valaddr_reg:x3; val_offset:236733*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236733*0 + 3*575*FLEN/8, x4, x1, x2)

inst_78912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xaf800000000000; valaddr_reg:x3; val_offset:236736*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236736*0 + 3*576*FLEN/8, x4, x1, x2)

inst_78913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xafc00000000000; valaddr_reg:x3; val_offset:236739*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236739*0 + 3*577*FLEN/8, x4, x1, x2)

inst_78914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xafe00000000000; valaddr_reg:x3; val_offset:236742*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236742*0 + 3*578*FLEN/8, x4, x1, x2)

inst_78915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xaff00000000000; valaddr_reg:x3; val_offset:236745*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236745*0 + 3*579*FLEN/8, x4, x1, x2)

inst_78916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xaff80000000000; valaddr_reg:x3; val_offset:236748*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236748*0 + 3*580*FLEN/8, x4, x1, x2)

inst_78917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xaffc0000000000; valaddr_reg:x3; val_offset:236751*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236751*0 + 3*581*FLEN/8, x4, x1, x2)

inst_78918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xaffe0000000000; valaddr_reg:x3; val_offset:236754*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236754*0 + 3*582*FLEN/8, x4, x1, x2)

inst_78919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xafff0000000000; valaddr_reg:x3; val_offset:236757*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236757*0 + 3*583*FLEN/8, x4, x1, x2)

inst_78920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xafff8000000000; valaddr_reg:x3; val_offset:236760*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236760*0 + 3*584*FLEN/8, x4, x1, x2)

inst_78921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xafffc000000000; valaddr_reg:x3; val_offset:236763*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236763*0 + 3*585*FLEN/8, x4, x1, x2)

inst_78922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xafffe000000000; valaddr_reg:x3; val_offset:236766*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236766*0 + 3*586*FLEN/8, x4, x1, x2)

inst_78923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xaffff000000000; valaddr_reg:x3; val_offset:236769*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236769*0 + 3*587*FLEN/8, x4, x1, x2)

inst_78924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xaffff800000000; valaddr_reg:x3; val_offset:236772*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236772*0 + 3*588*FLEN/8, x4, x1, x2)

inst_78925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xaffffc00000000; valaddr_reg:x3; val_offset:236775*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236775*0 + 3*589*FLEN/8, x4, x1, x2)

inst_78926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xaffffe00000000; valaddr_reg:x3; val_offset:236778*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236778*0 + 3*590*FLEN/8, x4, x1, x2)

inst_78927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xafffff00000000; valaddr_reg:x3; val_offset:236781*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236781*0 + 3*591*FLEN/8, x4, x1, x2)

inst_78928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xafffff80000000; valaddr_reg:x3; val_offset:236784*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236784*0 + 3*592*FLEN/8, x4, x1, x2)

inst_78929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xafffffc0000000; valaddr_reg:x3; val_offset:236787*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236787*0 + 3*593*FLEN/8, x4, x1, x2)

inst_78930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xafffffe0000000; valaddr_reg:x3; val_offset:236790*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236790*0 + 3*594*FLEN/8, x4, x1, x2)

inst_78931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xaffffff0000000; valaddr_reg:x3; val_offset:236793*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236793*0 + 3*595*FLEN/8, x4, x1, x2)

inst_78932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xaffffff8000000; valaddr_reg:x3; val_offset:236796*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236796*0 + 3*596*FLEN/8, x4, x1, x2)

inst_78933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xaffffffc000000; valaddr_reg:x3; val_offset:236799*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236799*0 + 3*597*FLEN/8, x4, x1, x2)

inst_78934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xaffffffe000000; valaddr_reg:x3; val_offset:236802*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236802*0 + 3*598*FLEN/8, x4, x1, x2)

inst_78935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xafffffff000000; valaddr_reg:x3; val_offset:236805*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236805*0 + 3*599*FLEN/8, x4, x1, x2)

inst_78936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xafffffff800000; valaddr_reg:x3; val_offset:236808*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236808*0 + 3*600*FLEN/8, x4, x1, x2)

inst_78937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xafffffffc00000; valaddr_reg:x3; val_offset:236811*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236811*0 + 3*601*FLEN/8, x4, x1, x2)

inst_78938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xafffffffe00000; valaddr_reg:x3; val_offset:236814*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236814*0 + 3*602*FLEN/8, x4, x1, x2)

inst_78939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xaffffffff00000; valaddr_reg:x3; val_offset:236817*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236817*0 + 3*603*FLEN/8, x4, x1, x2)

inst_78940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xaffffffff80000; valaddr_reg:x3; val_offset:236820*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236820*0 + 3*604*FLEN/8, x4, x1, x2)

inst_78941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xaffffffffc0000; valaddr_reg:x3; val_offset:236823*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236823*0 + 3*605*FLEN/8, x4, x1, x2)

inst_78942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xaffffffffe0000; valaddr_reg:x3; val_offset:236826*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236826*0 + 3*606*FLEN/8, x4, x1, x2)

inst_78943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xafffffffff0000; valaddr_reg:x3; val_offset:236829*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236829*0 + 3*607*FLEN/8, x4, x1, x2)

inst_78944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xafffffffff8000; valaddr_reg:x3; val_offset:236832*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236832*0 + 3*608*FLEN/8, x4, x1, x2)

inst_78945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xafffffffffc000; valaddr_reg:x3; val_offset:236835*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236835*0 + 3*609*FLEN/8, x4, x1, x2)

inst_78946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xafffffffffe000; valaddr_reg:x3; val_offset:236838*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236838*0 + 3*610*FLEN/8, x4, x1, x2)

inst_78947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xaffffffffff000; valaddr_reg:x3; val_offset:236841*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236841*0 + 3*611*FLEN/8, x4, x1, x2)

inst_78948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xaffffffffff800; valaddr_reg:x3; val_offset:236844*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236844*0 + 3*612*FLEN/8, x4, x1, x2)

inst_78949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xaffffffffffc00; valaddr_reg:x3; val_offset:236847*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236847*0 + 3*613*FLEN/8, x4, x1, x2)

inst_78950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xaffffffffffe00; valaddr_reg:x3; val_offset:236850*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236850*0 + 3*614*FLEN/8, x4, x1, x2)

inst_78951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xafffffffffff00; valaddr_reg:x3; val_offset:236853*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236853*0 + 3*615*FLEN/8, x4, x1, x2)

inst_78952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xafffffffffff80; valaddr_reg:x3; val_offset:236856*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236856*0 + 3*616*FLEN/8, x4, x1, x2)

inst_78953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xafffffffffffc0; valaddr_reg:x3; val_offset:236859*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236859*0 + 3*617*FLEN/8, x4, x1, x2)

inst_78954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xafffffffffffe0; valaddr_reg:x3; val_offset:236862*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236862*0 + 3*618*FLEN/8, x4, x1, x2)

inst_78955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xaffffffffffff0; valaddr_reg:x3; val_offset:236865*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236865*0 + 3*619*FLEN/8, x4, x1, x2)

inst_78956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xaffffffffffff8; valaddr_reg:x3; val_offset:236868*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236868*0 + 3*620*FLEN/8, x4, x1, x2)

inst_78957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xaffffffffffffc; valaddr_reg:x3; val_offset:236871*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236871*0 + 3*621*FLEN/8, x4, x1, x2)

inst_78958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xaffffffffffffe; valaddr_reg:x3; val_offset:236874*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236874*0 + 3*622*FLEN/8, x4, x1, x2)

inst_78959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d5a0666bfe54 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d5a0666bfe54; op2val:0x0;
op3val:0xafffffffffffff; valaddr_reg:x3; val_offset:236877*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236877*0 + 3*623*FLEN/8, x4, x1, x2)

inst_78960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbc0000000000000; valaddr_reg:x3; val_offset:236880*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236880*0 + 3*624*FLEN/8, x4, x1, x2)

inst_78961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbc0000000000001; valaddr_reg:x3; val_offset:236883*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236883*0 + 3*625*FLEN/8, x4, x1, x2)

inst_78962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbc0000000000003; valaddr_reg:x3; val_offset:236886*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236886*0 + 3*626*FLEN/8, x4, x1, x2)

inst_78963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbc0000000000007; valaddr_reg:x3; val_offset:236889*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236889*0 + 3*627*FLEN/8, x4, x1, x2)

inst_78964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbc000000000000f; valaddr_reg:x3; val_offset:236892*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236892*0 + 3*628*FLEN/8, x4, x1, x2)

inst_78965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbc000000000001f; valaddr_reg:x3; val_offset:236895*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236895*0 + 3*629*FLEN/8, x4, x1, x2)

inst_78966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbc000000000003f; valaddr_reg:x3; val_offset:236898*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236898*0 + 3*630*FLEN/8, x4, x1, x2)

inst_78967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbc000000000007f; valaddr_reg:x3; val_offset:236901*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236901*0 + 3*631*FLEN/8, x4, x1, x2)

inst_78968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbc00000000000ff; valaddr_reg:x3; val_offset:236904*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236904*0 + 3*632*FLEN/8, x4, x1, x2)

inst_78969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbc00000000001ff; valaddr_reg:x3; val_offset:236907*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236907*0 + 3*633*FLEN/8, x4, x1, x2)

inst_78970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbc00000000003ff; valaddr_reg:x3; val_offset:236910*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236910*0 + 3*634*FLEN/8, x4, x1, x2)

inst_78971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbc00000000007ff; valaddr_reg:x3; val_offset:236913*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236913*0 + 3*635*FLEN/8, x4, x1, x2)

inst_78972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbc0000000000fff; valaddr_reg:x3; val_offset:236916*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236916*0 + 3*636*FLEN/8, x4, x1, x2)

inst_78973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbc0000000001fff; valaddr_reg:x3; val_offset:236919*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236919*0 + 3*637*FLEN/8, x4, x1, x2)

inst_78974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbc0000000003fff; valaddr_reg:x3; val_offset:236922*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236922*0 + 3*638*FLEN/8, x4, x1, x2)

inst_78975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbc0000000007fff; valaddr_reg:x3; val_offset:236925*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236925*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_78976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbc000000000ffff; valaddr_reg:x3; val_offset:236928*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236928*0 + 3*640*FLEN/8, x4, x1, x2)

inst_78977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbc000000001ffff; valaddr_reg:x3; val_offset:236931*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236931*0 + 3*641*FLEN/8, x4, x1, x2)

inst_78978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbc000000003ffff; valaddr_reg:x3; val_offset:236934*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236934*0 + 3*642*FLEN/8, x4, x1, x2)

inst_78979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbc000000007ffff; valaddr_reg:x3; val_offset:236937*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236937*0 + 3*643*FLEN/8, x4, x1, x2)

inst_78980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbc00000000fffff; valaddr_reg:x3; val_offset:236940*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236940*0 + 3*644*FLEN/8, x4, x1, x2)

inst_78981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbc00000001fffff; valaddr_reg:x3; val_offset:236943*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236943*0 + 3*645*FLEN/8, x4, x1, x2)

inst_78982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbc00000003fffff; valaddr_reg:x3; val_offset:236946*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236946*0 + 3*646*FLEN/8, x4, x1, x2)

inst_78983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbc00000007fffff; valaddr_reg:x3; val_offset:236949*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236949*0 + 3*647*FLEN/8, x4, x1, x2)

inst_78984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbc0000000ffffff; valaddr_reg:x3; val_offset:236952*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236952*0 + 3*648*FLEN/8, x4, x1, x2)

inst_78985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbc0000001ffffff; valaddr_reg:x3; val_offset:236955*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236955*0 + 3*649*FLEN/8, x4, x1, x2)

inst_78986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbc0000003ffffff; valaddr_reg:x3; val_offset:236958*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236958*0 + 3*650*FLEN/8, x4, x1, x2)

inst_78987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbc0000007ffffff; valaddr_reg:x3; val_offset:236961*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236961*0 + 3*651*FLEN/8, x4, x1, x2)

inst_78988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbc000000fffffff; valaddr_reg:x3; val_offset:236964*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236964*0 + 3*652*FLEN/8, x4, x1, x2)

inst_78989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbc000001fffffff; valaddr_reg:x3; val_offset:236967*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236967*0 + 3*653*FLEN/8, x4, x1, x2)

inst_78990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbc000003fffffff; valaddr_reg:x3; val_offset:236970*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236970*0 + 3*654*FLEN/8, x4, x1, x2)

inst_78991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbc000007fffffff; valaddr_reg:x3; val_offset:236973*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236973*0 + 3*655*FLEN/8, x4, x1, x2)

inst_78992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbc00000ffffffff; valaddr_reg:x3; val_offset:236976*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236976*0 + 3*656*FLEN/8, x4, x1, x2)

inst_78993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbc00001ffffffff; valaddr_reg:x3; val_offset:236979*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236979*0 + 3*657*FLEN/8, x4, x1, x2)

inst_78994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbc00003ffffffff; valaddr_reg:x3; val_offset:236982*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236982*0 + 3*658*FLEN/8, x4, x1, x2)

inst_78995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbc00007ffffffff; valaddr_reg:x3; val_offset:236985*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236985*0 + 3*659*FLEN/8, x4, x1, x2)

inst_78996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbc0000fffffffff; valaddr_reg:x3; val_offset:236988*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236988*0 + 3*660*FLEN/8, x4, x1, x2)

inst_78997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbc0001fffffffff; valaddr_reg:x3; val_offset:236991*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236991*0 + 3*661*FLEN/8, x4, x1, x2)

inst_78998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbc0003fffffffff; valaddr_reg:x3; val_offset:236994*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236994*0 + 3*662*FLEN/8, x4, x1, x2)

inst_78999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbc0007fffffffff; valaddr_reg:x3; val_offset:236997*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 236997*0 + 3*663*FLEN/8, x4, x1, x2)

inst_79000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbc000ffffffffff; valaddr_reg:x3; val_offset:237000*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237000*0 + 3*664*FLEN/8, x4, x1, x2)

inst_79001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbc001ffffffffff; valaddr_reg:x3; val_offset:237003*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237003*0 + 3*665*FLEN/8, x4, x1, x2)

inst_79002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbc003ffffffffff; valaddr_reg:x3; val_offset:237006*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237006*0 + 3*666*FLEN/8, x4, x1, x2)

inst_79003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbc007ffffffffff; valaddr_reg:x3; val_offset:237009*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237009*0 + 3*667*FLEN/8, x4, x1, x2)

inst_79004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbc00fffffffffff; valaddr_reg:x3; val_offset:237012*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237012*0 + 3*668*FLEN/8, x4, x1, x2)

inst_79005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbc01fffffffffff; valaddr_reg:x3; val_offset:237015*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237015*0 + 3*669*FLEN/8, x4, x1, x2)

inst_79006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbc03fffffffffff; valaddr_reg:x3; val_offset:237018*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237018*0 + 3*670*FLEN/8, x4, x1, x2)

inst_79007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbc07fffffffffff; valaddr_reg:x3; val_offset:237021*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237021*0 + 3*671*FLEN/8, x4, x1, x2)

inst_79008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbc0ffffffffffff; valaddr_reg:x3; val_offset:237024*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237024*0 + 3*672*FLEN/8, x4, x1, x2)

inst_79009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbc1ffffffffffff; valaddr_reg:x3; val_offset:237027*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237027*0 + 3*673*FLEN/8, x4, x1, x2)

inst_79010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbc3ffffffffffff; valaddr_reg:x3; val_offset:237030*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237030*0 + 3*674*FLEN/8, x4, x1, x2)

inst_79011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbc7ffffffffffff; valaddr_reg:x3; val_offset:237033*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237033*0 + 3*675*FLEN/8, x4, x1, x2)

inst_79012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbc8000000000000; valaddr_reg:x3; val_offset:237036*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237036*0 + 3*676*FLEN/8, x4, x1, x2)

inst_79013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbcc000000000000; valaddr_reg:x3; val_offset:237039*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237039*0 + 3*677*FLEN/8, x4, x1, x2)

inst_79014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbce000000000000; valaddr_reg:x3; val_offset:237042*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237042*0 + 3*678*FLEN/8, x4, x1, x2)

inst_79015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbcf000000000000; valaddr_reg:x3; val_offset:237045*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237045*0 + 3*679*FLEN/8, x4, x1, x2)

inst_79016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbcf800000000000; valaddr_reg:x3; val_offset:237048*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237048*0 + 3*680*FLEN/8, x4, x1, x2)

inst_79017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbcfc00000000000; valaddr_reg:x3; val_offset:237051*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237051*0 + 3*681*FLEN/8, x4, x1, x2)

inst_79018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbcfe00000000000; valaddr_reg:x3; val_offset:237054*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237054*0 + 3*682*FLEN/8, x4, x1, x2)

inst_79019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbcff00000000000; valaddr_reg:x3; val_offset:237057*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237057*0 + 3*683*FLEN/8, x4, x1, x2)

inst_79020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbcff80000000000; valaddr_reg:x3; val_offset:237060*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237060*0 + 3*684*FLEN/8, x4, x1, x2)

inst_79021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbcffc0000000000; valaddr_reg:x3; val_offset:237063*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237063*0 + 3*685*FLEN/8, x4, x1, x2)

inst_79022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbcffe0000000000; valaddr_reg:x3; val_offset:237066*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237066*0 + 3*686*FLEN/8, x4, x1, x2)

inst_79023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbcfff0000000000; valaddr_reg:x3; val_offset:237069*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237069*0 + 3*687*FLEN/8, x4, x1, x2)

inst_79024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbcfff8000000000; valaddr_reg:x3; val_offset:237072*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237072*0 + 3*688*FLEN/8, x4, x1, x2)

inst_79025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbcfffc000000000; valaddr_reg:x3; val_offset:237075*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237075*0 + 3*689*FLEN/8, x4, x1, x2)

inst_79026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbcfffe000000000; valaddr_reg:x3; val_offset:237078*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237078*0 + 3*690*FLEN/8, x4, x1, x2)

inst_79027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbcffff000000000; valaddr_reg:x3; val_offset:237081*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237081*0 + 3*691*FLEN/8, x4, x1, x2)

inst_79028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbcffff800000000; valaddr_reg:x3; val_offset:237084*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237084*0 + 3*692*FLEN/8, x4, x1, x2)

inst_79029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbcffffc00000000; valaddr_reg:x3; val_offset:237087*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237087*0 + 3*693*FLEN/8, x4, x1, x2)

inst_79030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbcffffe00000000; valaddr_reg:x3; val_offset:237090*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237090*0 + 3*694*FLEN/8, x4, x1, x2)

inst_79031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbcfffff00000000; valaddr_reg:x3; val_offset:237093*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237093*0 + 3*695*FLEN/8, x4, x1, x2)

inst_79032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbcfffff80000000; valaddr_reg:x3; val_offset:237096*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237096*0 + 3*696*FLEN/8, x4, x1, x2)

inst_79033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbcfffffc0000000; valaddr_reg:x3; val_offset:237099*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237099*0 + 3*697*FLEN/8, x4, x1, x2)

inst_79034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbcfffffe0000000; valaddr_reg:x3; val_offset:237102*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237102*0 + 3*698*FLEN/8, x4, x1, x2)

inst_79035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbcffffff0000000; valaddr_reg:x3; val_offset:237105*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237105*0 + 3*699*FLEN/8, x4, x1, x2)

inst_79036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbcffffff8000000; valaddr_reg:x3; val_offset:237108*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237108*0 + 3*700*FLEN/8, x4, x1, x2)

inst_79037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbcffffffc000000; valaddr_reg:x3; val_offset:237111*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237111*0 + 3*701*FLEN/8, x4, x1, x2)

inst_79038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbcffffffe000000; valaddr_reg:x3; val_offset:237114*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237114*0 + 3*702*FLEN/8, x4, x1, x2)

inst_79039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbcfffffff000000; valaddr_reg:x3; val_offset:237117*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237117*0 + 3*703*FLEN/8, x4, x1, x2)

inst_79040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbcfffffff800000; valaddr_reg:x3; val_offset:237120*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237120*0 + 3*704*FLEN/8, x4, x1, x2)

inst_79041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbcfffffffc00000; valaddr_reg:x3; val_offset:237123*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237123*0 + 3*705*FLEN/8, x4, x1, x2)

inst_79042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbcfffffffe00000; valaddr_reg:x3; val_offset:237126*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237126*0 + 3*706*FLEN/8, x4, x1, x2)

inst_79043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbcffffffff00000; valaddr_reg:x3; val_offset:237129*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237129*0 + 3*707*FLEN/8, x4, x1, x2)

inst_79044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbcffffffff80000; valaddr_reg:x3; val_offset:237132*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237132*0 + 3*708*FLEN/8, x4, x1, x2)

inst_79045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbcffffffffc0000; valaddr_reg:x3; val_offset:237135*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237135*0 + 3*709*FLEN/8, x4, x1, x2)

inst_79046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbcffffffffe0000; valaddr_reg:x3; val_offset:237138*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237138*0 + 3*710*FLEN/8, x4, x1, x2)

inst_79047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbcfffffffff0000; valaddr_reg:x3; val_offset:237141*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237141*0 + 3*711*FLEN/8, x4, x1, x2)

inst_79048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbcfffffffff8000; valaddr_reg:x3; val_offset:237144*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237144*0 + 3*712*FLEN/8, x4, x1, x2)

inst_79049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbcfffffffffc000; valaddr_reg:x3; val_offset:237147*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237147*0 + 3*713*FLEN/8, x4, x1, x2)

inst_79050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbcfffffffffe000; valaddr_reg:x3; val_offset:237150*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237150*0 + 3*714*FLEN/8, x4, x1, x2)

inst_79051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbcffffffffff000; valaddr_reg:x3; val_offset:237153*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237153*0 + 3*715*FLEN/8, x4, x1, x2)

inst_79052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbcffffffffff800; valaddr_reg:x3; val_offset:237156*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237156*0 + 3*716*FLEN/8, x4, x1, x2)

inst_79053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbcffffffffffc00; valaddr_reg:x3; val_offset:237159*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237159*0 + 3*717*FLEN/8, x4, x1, x2)

inst_79054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbcffffffffffe00; valaddr_reg:x3; val_offset:237162*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237162*0 + 3*718*FLEN/8, x4, x1, x2)

inst_79055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbcfffffffffff00; valaddr_reg:x3; val_offset:237165*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237165*0 + 3*719*FLEN/8, x4, x1, x2)

inst_79056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbcfffffffffff80; valaddr_reg:x3; val_offset:237168*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237168*0 + 3*720*FLEN/8, x4, x1, x2)

inst_79057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbcfffffffffffc0; valaddr_reg:x3; val_offset:237171*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237171*0 + 3*721*FLEN/8, x4, x1, x2)

inst_79058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbcfffffffffffe0; valaddr_reg:x3; val_offset:237174*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237174*0 + 3*722*FLEN/8, x4, x1, x2)

inst_79059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbcffffffffffff0; valaddr_reg:x3; val_offset:237177*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237177*0 + 3*723*FLEN/8, x4, x1, x2)

inst_79060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbcffffffffffff8; valaddr_reg:x3; val_offset:237180*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237180*0 + 3*724*FLEN/8, x4, x1, x2)

inst_79061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbcffffffffffffc; valaddr_reg:x3; val_offset:237183*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237183*0 + 3*725*FLEN/8, x4, x1, x2)

inst_79062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbcffffffffffffe; valaddr_reg:x3; val_offset:237186*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237186*0 + 3*726*FLEN/8, x4, x1, x2)

inst_79063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3bc and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbbcfffffffffffff; valaddr_reg:x3; val_offset:237189*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237189*0 + 3*727*FLEN/8, x4, x1, x2)

inst_79064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:237192*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237192*0 + 3*728*FLEN/8, x4, x1, x2)

inst_79065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:237195*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237195*0 + 3*729*FLEN/8, x4, x1, x2)

inst_79066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:237198*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237198*0 + 3*730*FLEN/8, x4, x1, x2)

inst_79067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:237201*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237201*0 + 3*731*FLEN/8, x4, x1, x2)

inst_79068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:237204*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237204*0 + 3*732*FLEN/8, x4, x1, x2)

inst_79069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:237207*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237207*0 + 3*733*FLEN/8, x4, x1, x2)

inst_79070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:237210*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237210*0 + 3*734*FLEN/8, x4, x1, x2)

inst_79071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:237213*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237213*0 + 3*735*FLEN/8, x4, x1, x2)

inst_79072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:237216*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237216*0 + 3*736*FLEN/8, x4, x1, x2)

inst_79073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:237219*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237219*0 + 3*737*FLEN/8, x4, x1, x2)

inst_79074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:237222*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237222*0 + 3*738*FLEN/8, x4, x1, x2)

inst_79075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:237225*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237225*0 + 3*739*FLEN/8, x4, x1, x2)

inst_79076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:237228*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237228*0 + 3*740*FLEN/8, x4, x1, x2)

inst_79077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:237231*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237231*0 + 3*741*FLEN/8, x4, x1, x2)

inst_79078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:237234*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237234*0 + 3*742*FLEN/8, x4, x1, x2)

inst_79079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:237237*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237237*0 + 3*743*FLEN/8, x4, x1, x2)

inst_79080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:237240*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237240*0 + 3*744*FLEN/8, x4, x1, x2)

inst_79081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:237243*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237243*0 + 3*745*FLEN/8, x4, x1, x2)

inst_79082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:237246*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237246*0 + 3*746*FLEN/8, x4, x1, x2)

inst_79083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:237249*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237249*0 + 3*747*FLEN/8, x4, x1, x2)

inst_79084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:237252*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237252*0 + 3*748*FLEN/8, x4, x1, x2)

inst_79085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8d6b438992705 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x49cedeceaad7c and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8d6b438992705; op2val:0x9fc49cedeceaad7c;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:237255*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237255*0 + 3*749*FLEN/8, x4, x1, x2)

inst_79086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:237258*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237258*0 + 3*750*FLEN/8, x4, x1, x2)

inst_79087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:237261*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237261*0 + 3*751*FLEN/8, x4, x1, x2)

inst_79088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:237264*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237264*0 + 3*752*FLEN/8, x4, x1, x2)

inst_79089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:237267*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237267*0 + 3*753*FLEN/8, x4, x1, x2)

inst_79090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:237270*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237270*0 + 3*754*FLEN/8, x4, x1, x2)

inst_79091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:237273*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237273*0 + 3*755*FLEN/8, x4, x1, x2)

inst_79092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:237276*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237276*0 + 3*756*FLEN/8, x4, x1, x2)

inst_79093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:237279*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237279*0 + 3*757*FLEN/8, x4, x1, x2)

inst_79094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:237282*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237282*0 + 3*758*FLEN/8, x4, x1, x2)

inst_79095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:237285*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237285*0 + 3*759*FLEN/8, x4, x1, x2)

inst_79096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:237288*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237288*0 + 3*760*FLEN/8, x4, x1, x2)

inst_79097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:237291*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237291*0 + 3*761*FLEN/8, x4, x1, x2)

inst_79098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:237294*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237294*0 + 3*762*FLEN/8, x4, x1, x2)

inst_79099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:237297*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237297*0 + 3*763*FLEN/8, x4, x1, x2)

inst_79100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:237300*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237300*0 + 3*764*FLEN/8, x4, x1, x2)

inst_79101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:237303*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237303*0 + 3*765*FLEN/8, x4, x1, x2)

inst_79102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:237306*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237306*0 + 3*766*FLEN/8, x4, x1, x2)

inst_79103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:237309*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237309*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110272,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110273,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110275,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110279,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110287,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110303,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110335,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110399,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110527,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110783,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501111295,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501112319,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501114367,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501118463,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501126655,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501143039,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501175807,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501241343,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501372415,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501634559,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433502158847,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433503207423,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433505304575,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433509498879,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433517887487,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433534664703,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433568219135,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433635327999,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433769545727,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904434037981183,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904434574852095,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904435648593919,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904437796077567,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904442091044863,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904450680979455,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904467860848639,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904502220587007,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904570940063743,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904708379017215,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904983256924159,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263905533012738047,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263906632524365823,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263908831547621375,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263913229594132479,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263922025687154687,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263939617873199103,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263974802245287935,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9264045170989465599,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9264185908477820927,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9264467383454531583,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9265030333407952895,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9266156233314795519,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9266156233314795520,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9267282133221638144,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9267845083175059456,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268126558151770112,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268267295640125440,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268337664384303104,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268372848756391936,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268390440942436352,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268399237035458560,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268403635081969664,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268405834105225216,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268406933616852992,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268407483372666880,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268407758250573824,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268407895689527296,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268407964409004032,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268407998768742400,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408015948611584,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408024538546176,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408028833513472,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408030980997120,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408032054738944,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408032591609856,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408032860045312,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408032994263040,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033061371904,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033094926336,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033111703552,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033120092160,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033124286464,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033126383616,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033127432192,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033127956480,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128218624,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128349696,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128415232,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128448000,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128464384,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128472576,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128476672,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128478720,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128479744,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480256,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480512,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480640,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480704,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480736,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480752,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480760,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480764,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480766,64,FLEN)
NAN_BOXED(6892930973434246587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480767,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4467570830351532032,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4467570830351532033,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4467570830351532035,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4467570830351532039,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4467570830351532047,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4467570830351532063,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4467570830351532095,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4467570830351532159,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4467570830351532287,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4467570830351532543,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4467570830351533055,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4467570830351534079,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4467570830351536127,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4467570830351540223,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4467570830351548415,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4467570830351564799,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4467570830351597567,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4467570830351663103,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4467570830351794175,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4467570830352056319,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4467570830352580607,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4467570830353629183,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4467570830355726335,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4467570830359920639,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4467570830368309247,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4467570830385086463,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4467570830418640895,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4467570830485749759,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4467570830619967487,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4467570830888402943,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4467570831425273855,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4467570832499015679,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4467570834646499327,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4467570838941466623,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4467570847531401215,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4467570864711270399,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4467570899071008767,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4467570967790485503,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4467571105229438975,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4467571380107345919,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4467571929863159807,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4467573029374787583,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4467575228398043135,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4467579626444554239,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4467588422537576447,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4467606014723620863,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4467641199095709695,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4467711567839887359,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4467852305328242687,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4468133780304953343,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4468696730258374655,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4469822630165217279,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4469822630165217280,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4470948530072059904,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4471511480025481216,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4471792955002191872,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4471933692490547200,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4472004061234724864,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4472039245606813696,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4472056837792858112,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4472065633885880320,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4472070031932391424,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4472072230955646976,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4472073330467274752,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4472073880223088640,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4472074155100995584,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4472074292539949056,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4472074361259425792,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4472074395619164160,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4472074412799033344,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4472074421388967936,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4472074425683935232,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4472074427831418880,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4472074428905160704,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4472074429442031616,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4472074429710467072,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4472074429844684800,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4472074429911793664,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4472074429945348096,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4472074429962125312,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4472074429970513920,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4472074429974708224,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4472074429976805376,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4472074429977853952,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4472074429978378240,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4472074429978640384,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4472074429978771456,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4472074429978836992,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4472074429978869760,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4472074429978886144,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4472074429978894336,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4472074429978898432,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4472074429978900480,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4472074429978901504,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4472074429978902016,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4472074429978902272,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4472074429978902400,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4472074429978902464,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4472074429978902496,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4472074429978902512,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4472074429978902520,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4472074429978902524,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4472074429978902526,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4472074429978902527,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6892941653937145615,64,FLEN)
NAN_BOXED(2320697116812253248,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480768,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480769,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480771,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480775,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480783,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480799,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480831,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480895,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128481023,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128481279,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128481791,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128482815,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128484863,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128488959,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128497151,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128513535,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128546303,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128611839,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128742911,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033129005055,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033129529343,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033130577919,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033132675071,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033136869375,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033145257983,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033162035199,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033195589631,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033262698495,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033396916223,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033665351679,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408034202222591,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408035275964415,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408037423448063,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408041718415359,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408050308349951,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408067488219135,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408101847957503,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408170567434239,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408308006387711,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408582884294655,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268409132640108543,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268410232151736319,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268412431174991871,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268416829221502975,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268425625314525183,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268443217500569599,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268478401872658431,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268548770616836095,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268689508105191423,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268970983081902079,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9269533933035323391,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9270659832942166015,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9270659832942166016,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9271785732849008640,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272348682802429952,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272630157779140608,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272770895267495936,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272841264011673600,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272876448383762432,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272894040569806848,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272902836662829056,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272907234709340160,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272909433732595712,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272910533244223488,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911083000037376,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911357877944320,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911495316897792,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911564036374528,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911598396112896,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911615575982080,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911624165916672,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911628460883968,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911630608367616,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911631682109440,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632218980352,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632487415808,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632621633536,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632688742400,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632722296832,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632739074048,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632747462656,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632751656960,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632753754112,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632754802688,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755326976,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755589120,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755720192,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755785728,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755818496,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755834880,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755843072,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755847168,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755849216,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755850240,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755850752,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851008,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851136,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851200,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851232,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851248,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851256,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851260,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851262,64,FLEN)
NAN_BOXED(6892944085700333059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851263,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229760,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229761,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229763,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229767,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229775,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229791,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229823,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229887,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642230015,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642230271,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642230783,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642231807,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642233855,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642237951,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642246143,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642262527,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642295295,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642360831,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642491903,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642754047,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977643278335,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977644326911,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977646424063,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977650618367,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977659006975,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977675784191,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977709338623,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977776447487,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977910665215,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215978179100671,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215978715971583,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215979789713407,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215981937197055,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215986232164351,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215994822098943,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270216012001968127,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270216046361706495,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270216115081183231,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270216252520136703,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270216527398043647,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270217077153857535,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270218176665485311,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270220375688740863,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270224773735251967,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270233569828274175,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270251162014318591,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270286346386407423,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270356715130585087,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270497452618940415,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270778927595651071,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(271341877549072383,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(272467777455915007,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(272467777455915008,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(273593677362757632,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274156627316178944,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274438102292889600,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274578839781244928,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274649208525422592,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274684392897511424,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274701985083555840,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274710781176578048,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274715179223089152,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274717378246344704,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274718477757972480,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719027513786368,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719302391693312,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719439830646784,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719508550123520,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719542909861888,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719560089731072,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719568679665664,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719572974632960,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719575122116608,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719576195858432,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719576732729344,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577001164800,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577135382528,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577202491392,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577236045824,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577252823040,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577261211648,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577265405952,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577267503104,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577268551680,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269075968,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269338112,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269469184,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269534720,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269567488,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269583872,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269592064,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269596160,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269598208,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269599232,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269599744,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600000,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600128,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600192,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600224,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600240,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600248,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600252,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600254,64,FLEN)
NAN_BOXED(6892991954552007784,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600255,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704960,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704961,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704963,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704967,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704975,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704991,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273705023,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273705087,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273705215,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273705471,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273705983,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273707007,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273709055,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273713151,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273721343,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273737727,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273770495,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273836031,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273967103,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996274229247,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996274753535,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996275802111,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996277899263,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996282093567,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996290482175,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996307259391,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996340813823,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996407922687,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996542140415,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996810575871,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035997347446783,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035998421188607,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45036000568672255,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45036004863639551,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45036013453574143,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45036030633443327,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45036064993181695,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45036133712658431,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45036271151611903,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45036546029518847,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45037095785332735,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45038195296960511,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45040394320216063,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45044792366727167,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45053588459749375,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45071180645793791,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45106365017882623,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45176733762060287,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45317471250415615,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45598946227126271,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(46161896180547583,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(47287796087390207,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(47287796087390208,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(48413695994232832,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(48976645947654144,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49258120924364800,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49398858412720128,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49469227156897792,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49504411528986624,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49522003715031040,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49530799808053248,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49535197854564352,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49537396877819904,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49538496389447680,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539046145261568,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539321023168512,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539458462121984,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539527181598720,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539561541337088,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539578721206272,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539587311140864,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539591606108160,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539593753591808,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539594827333632,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595364204544,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595632640000,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595766857728,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595833966592,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595867521024,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595884298240,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595892686848,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595896881152,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595898978304,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595900026880,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595900551168,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595900813312,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595900944384,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901009920,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901042688,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901059072,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901067264,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901071360,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901073408,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901074432,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901074944,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075200,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075328,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075392,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075424,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075440,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075448,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075452,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075454,64,FLEN)
NAN_BOXED(6892994114580381268,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075455,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13528813280620969984,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13528813280620969985,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13528813280620969987,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13528813280620969991,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13528813280620969999,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13528813280620970015,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13528813280620970047,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13528813280620970111,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13528813280620970239,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13528813280620970495,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13528813280620971007,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13528813280620972031,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13528813280620974079,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13528813280620978175,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13528813280620986367,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13528813280621002751,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13528813280621035519,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13528813280621101055,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13528813280621232127,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13528813280621494271,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13528813280622018559,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13528813280623067135,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13528813280625164287,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13528813280629358591,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13528813280637747199,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13528813280654524415,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13528813280688078847,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13528813280755187711,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13528813280889405439,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13528813281157840895,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13528813281694711807,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13528813282768453631,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13528813284915937279,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13528813289210904575,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13528813297800839167,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13528813314980708351,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13528813349340446719,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13528813418059923455,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13528813555498876927,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13528813830376783871,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13528814380132597759,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13528815479644225535,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13528817678667481087,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13528822076713992191,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13528830872807014399,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13528848464993058815,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13528883649365147647,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13528954018109325311,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13529094755597680639,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13529376230574391295,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13529939180527812607,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13531065080434655231,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13531065080434655232,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13532190980341497856,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13532753930294919168,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13533035405271629824,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13533176142759985152,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13533246511504162816,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13533281695876251648,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13533299288062296064,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13533308084155318272,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13533312482201829376,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13533314681225084928,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13533315780736712704,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13533316330492526592,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13533316605370433536,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13533316742809387008,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13533316811528863744,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13533316845888602112,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13533316863068471296,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13533316871658405888,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13533316875953373184,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13533316878100856832,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13533316879174598656,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13533316879711469568,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13533316879979905024,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13533316880114122752,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13533316880181231616,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13533316880214786048,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13533316880231563264,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13533316880239951872,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13533316880244146176,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13533316880246243328,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13533316880247291904,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13533316880247816192,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13533316880248078336,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13533316880248209408,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13533316880248274944,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13533316880248307712,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13533316880248324096,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13533316880248332288,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13533316880248336384,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13533316880248338432,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13533316880248339456,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13533316880248339968,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13533316880248340224,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13533316880248340352,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13533316880248340416,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13533316880248340448,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13533316880248340464,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13533316880248340472,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13533316880248340476,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13533316880248340478,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13533316880248340479,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6892995299222562565,64,FLEN)
NAN_BOXED(11512499093161815420,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
