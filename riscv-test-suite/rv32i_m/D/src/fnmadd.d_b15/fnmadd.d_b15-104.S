
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:39 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_79104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:237312*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237312*0 + 3*0*FLEN/8, x4, x1, x2)

inst_79105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:237315*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237315*0 + 3*1*FLEN/8, x4, x1, x2)

inst_79106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:237318*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237318*0 + 3*2*FLEN/8, x4, x1, x2)

inst_79107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:237321*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237321*0 + 3*3*FLEN/8, x4, x1, x2)

inst_79108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x50000000000000; valaddr_reg:x3; val_offset:237324*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237324*0 + 3*4*FLEN/8, x4, x1, x2)

inst_79109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x50000000000001; valaddr_reg:x3; val_offset:237327*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237327*0 + 3*5*FLEN/8, x4, x1, x2)

inst_79110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x50000000000003; valaddr_reg:x3; val_offset:237330*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237330*0 + 3*6*FLEN/8, x4, x1, x2)

inst_79111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x50000000000007; valaddr_reg:x3; val_offset:237333*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237333*0 + 3*7*FLEN/8, x4, x1, x2)

inst_79112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5000000000000f; valaddr_reg:x3; val_offset:237336*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237336*0 + 3*8*FLEN/8, x4, x1, x2)

inst_79113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5000000000001f; valaddr_reg:x3; val_offset:237339*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237339*0 + 3*9*FLEN/8, x4, x1, x2)

inst_79114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5000000000003f; valaddr_reg:x3; val_offset:237342*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237342*0 + 3*10*FLEN/8, x4, x1, x2)

inst_79115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5000000000007f; valaddr_reg:x3; val_offset:237345*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237345*0 + 3*11*FLEN/8, x4, x1, x2)

inst_79116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x500000000000ff; valaddr_reg:x3; val_offset:237348*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237348*0 + 3*12*FLEN/8, x4, x1, x2)

inst_79117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x500000000001ff; valaddr_reg:x3; val_offset:237351*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237351*0 + 3*13*FLEN/8, x4, x1, x2)

inst_79118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x500000000003ff; valaddr_reg:x3; val_offset:237354*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237354*0 + 3*14*FLEN/8, x4, x1, x2)

inst_79119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x500000000007ff; valaddr_reg:x3; val_offset:237357*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237357*0 + 3*15*FLEN/8, x4, x1, x2)

inst_79120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x50000000000fff; valaddr_reg:x3; val_offset:237360*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237360*0 + 3*16*FLEN/8, x4, x1, x2)

inst_79121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x50000000001fff; valaddr_reg:x3; val_offset:237363*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237363*0 + 3*17*FLEN/8, x4, x1, x2)

inst_79122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x50000000003fff; valaddr_reg:x3; val_offset:237366*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237366*0 + 3*18*FLEN/8, x4, x1, x2)

inst_79123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x50000000007fff; valaddr_reg:x3; val_offset:237369*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237369*0 + 3*19*FLEN/8, x4, x1, x2)

inst_79124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5000000000ffff; valaddr_reg:x3; val_offset:237372*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237372*0 + 3*20*FLEN/8, x4, x1, x2)

inst_79125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5000000001ffff; valaddr_reg:x3; val_offset:237375*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237375*0 + 3*21*FLEN/8, x4, x1, x2)

inst_79126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5000000003ffff; valaddr_reg:x3; val_offset:237378*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237378*0 + 3*22*FLEN/8, x4, x1, x2)

inst_79127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5000000007ffff; valaddr_reg:x3; val_offset:237381*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237381*0 + 3*23*FLEN/8, x4, x1, x2)

inst_79128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x500000000fffff; valaddr_reg:x3; val_offset:237384*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237384*0 + 3*24*FLEN/8, x4, x1, x2)

inst_79129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x500000001fffff; valaddr_reg:x3; val_offset:237387*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237387*0 + 3*25*FLEN/8, x4, x1, x2)

inst_79130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x500000003fffff; valaddr_reg:x3; val_offset:237390*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237390*0 + 3*26*FLEN/8, x4, x1, x2)

inst_79131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x500000007fffff; valaddr_reg:x3; val_offset:237393*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237393*0 + 3*27*FLEN/8, x4, x1, x2)

inst_79132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x50000000ffffff; valaddr_reg:x3; val_offset:237396*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237396*0 + 3*28*FLEN/8, x4, x1, x2)

inst_79133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x50000001ffffff; valaddr_reg:x3; val_offset:237399*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237399*0 + 3*29*FLEN/8, x4, x1, x2)

inst_79134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x50000003ffffff; valaddr_reg:x3; val_offset:237402*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237402*0 + 3*30*FLEN/8, x4, x1, x2)

inst_79135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x50000007ffffff; valaddr_reg:x3; val_offset:237405*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237405*0 + 3*31*FLEN/8, x4, x1, x2)

inst_79136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5000000fffffff; valaddr_reg:x3; val_offset:237408*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237408*0 + 3*32*FLEN/8, x4, x1, x2)

inst_79137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5000001fffffff; valaddr_reg:x3; val_offset:237411*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237411*0 + 3*33*FLEN/8, x4, x1, x2)

inst_79138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5000003fffffff; valaddr_reg:x3; val_offset:237414*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237414*0 + 3*34*FLEN/8, x4, x1, x2)

inst_79139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5000007fffffff; valaddr_reg:x3; val_offset:237417*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237417*0 + 3*35*FLEN/8, x4, x1, x2)

inst_79140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x500000ffffffff; valaddr_reg:x3; val_offset:237420*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237420*0 + 3*36*FLEN/8, x4, x1, x2)

inst_79141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x500001ffffffff; valaddr_reg:x3; val_offset:237423*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237423*0 + 3*37*FLEN/8, x4, x1, x2)

inst_79142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x500003ffffffff; valaddr_reg:x3; val_offset:237426*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237426*0 + 3*38*FLEN/8, x4, x1, x2)

inst_79143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x500007ffffffff; valaddr_reg:x3; val_offset:237429*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237429*0 + 3*39*FLEN/8, x4, x1, x2)

inst_79144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x50000fffffffff; valaddr_reg:x3; val_offset:237432*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237432*0 + 3*40*FLEN/8, x4, x1, x2)

inst_79145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x50001fffffffff; valaddr_reg:x3; val_offset:237435*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237435*0 + 3*41*FLEN/8, x4, x1, x2)

inst_79146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x50003fffffffff; valaddr_reg:x3; val_offset:237438*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237438*0 + 3*42*FLEN/8, x4, x1, x2)

inst_79147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x50007fffffffff; valaddr_reg:x3; val_offset:237441*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237441*0 + 3*43*FLEN/8, x4, x1, x2)

inst_79148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5000ffffffffff; valaddr_reg:x3; val_offset:237444*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237444*0 + 3*44*FLEN/8, x4, x1, x2)

inst_79149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5001ffffffffff; valaddr_reg:x3; val_offset:237447*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237447*0 + 3*45*FLEN/8, x4, x1, x2)

inst_79150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5003ffffffffff; valaddr_reg:x3; val_offset:237450*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237450*0 + 3*46*FLEN/8, x4, x1, x2)

inst_79151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5007ffffffffff; valaddr_reg:x3; val_offset:237453*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237453*0 + 3*47*FLEN/8, x4, x1, x2)

inst_79152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x500fffffffffff; valaddr_reg:x3; val_offset:237456*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237456*0 + 3*48*FLEN/8, x4, x1, x2)

inst_79153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x501fffffffffff; valaddr_reg:x3; val_offset:237459*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237459*0 + 3*49*FLEN/8, x4, x1, x2)

inst_79154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x503fffffffffff; valaddr_reg:x3; val_offset:237462*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237462*0 + 3*50*FLEN/8, x4, x1, x2)

inst_79155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x507fffffffffff; valaddr_reg:x3; val_offset:237465*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237465*0 + 3*51*FLEN/8, x4, x1, x2)

inst_79156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x50ffffffffffff; valaddr_reg:x3; val_offset:237468*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237468*0 + 3*52*FLEN/8, x4, x1, x2)

inst_79157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x51ffffffffffff; valaddr_reg:x3; val_offset:237471*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237471*0 + 3*53*FLEN/8, x4, x1, x2)

inst_79158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x53ffffffffffff; valaddr_reg:x3; val_offset:237474*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237474*0 + 3*54*FLEN/8, x4, x1, x2)

inst_79159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x57ffffffffffff; valaddr_reg:x3; val_offset:237477*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237477*0 + 3*55*FLEN/8, x4, x1, x2)

inst_79160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x58000000000000; valaddr_reg:x3; val_offset:237480*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237480*0 + 3*56*FLEN/8, x4, x1, x2)

inst_79161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5c000000000000; valaddr_reg:x3; val_offset:237483*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237483*0 + 3*57*FLEN/8, x4, x1, x2)

inst_79162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5e000000000000; valaddr_reg:x3; val_offset:237486*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237486*0 + 3*58*FLEN/8, x4, x1, x2)

inst_79163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5f000000000000; valaddr_reg:x3; val_offset:237489*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237489*0 + 3*59*FLEN/8, x4, x1, x2)

inst_79164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5f800000000000; valaddr_reg:x3; val_offset:237492*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237492*0 + 3*60*FLEN/8, x4, x1, x2)

inst_79165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5fc00000000000; valaddr_reg:x3; val_offset:237495*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237495*0 + 3*61*FLEN/8, x4, x1, x2)

inst_79166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5fe00000000000; valaddr_reg:x3; val_offset:237498*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237498*0 + 3*62*FLEN/8, x4, x1, x2)

inst_79167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5ff00000000000; valaddr_reg:x3; val_offset:237501*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237501*0 + 3*63*FLEN/8, x4, x1, x2)

inst_79168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5ff80000000000; valaddr_reg:x3; val_offset:237504*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237504*0 + 3*64*FLEN/8, x4, x1, x2)

inst_79169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5ffc0000000000; valaddr_reg:x3; val_offset:237507*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237507*0 + 3*65*FLEN/8, x4, x1, x2)

inst_79170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5ffe0000000000; valaddr_reg:x3; val_offset:237510*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237510*0 + 3*66*FLEN/8, x4, x1, x2)

inst_79171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5fff0000000000; valaddr_reg:x3; val_offset:237513*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237513*0 + 3*67*FLEN/8, x4, x1, x2)

inst_79172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5fff8000000000; valaddr_reg:x3; val_offset:237516*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237516*0 + 3*68*FLEN/8, x4, x1, x2)

inst_79173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5fffc000000000; valaddr_reg:x3; val_offset:237519*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237519*0 + 3*69*FLEN/8, x4, x1, x2)

inst_79174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5fffe000000000; valaddr_reg:x3; val_offset:237522*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237522*0 + 3*70*FLEN/8, x4, x1, x2)

inst_79175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5ffff000000000; valaddr_reg:x3; val_offset:237525*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237525*0 + 3*71*FLEN/8, x4, x1, x2)

inst_79176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5ffff800000000; valaddr_reg:x3; val_offset:237528*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237528*0 + 3*72*FLEN/8, x4, x1, x2)

inst_79177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5ffffc00000000; valaddr_reg:x3; val_offset:237531*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237531*0 + 3*73*FLEN/8, x4, x1, x2)

inst_79178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5ffffe00000000; valaddr_reg:x3; val_offset:237534*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237534*0 + 3*74*FLEN/8, x4, x1, x2)

inst_79179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5fffff00000000; valaddr_reg:x3; val_offset:237537*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237537*0 + 3*75*FLEN/8, x4, x1, x2)

inst_79180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5fffff80000000; valaddr_reg:x3; val_offset:237540*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237540*0 + 3*76*FLEN/8, x4, x1, x2)

inst_79181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5fffffc0000000; valaddr_reg:x3; val_offset:237543*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237543*0 + 3*77*FLEN/8, x4, x1, x2)

inst_79182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5fffffe0000000; valaddr_reg:x3; val_offset:237546*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237546*0 + 3*78*FLEN/8, x4, x1, x2)

inst_79183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5ffffff0000000; valaddr_reg:x3; val_offset:237549*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237549*0 + 3*79*FLEN/8, x4, x1, x2)

inst_79184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5ffffff8000000; valaddr_reg:x3; val_offset:237552*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237552*0 + 3*80*FLEN/8, x4, x1, x2)

inst_79185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5ffffffc000000; valaddr_reg:x3; val_offset:237555*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237555*0 + 3*81*FLEN/8, x4, x1, x2)

inst_79186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5ffffffe000000; valaddr_reg:x3; val_offset:237558*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237558*0 + 3*82*FLEN/8, x4, x1, x2)

inst_79187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5fffffff000000; valaddr_reg:x3; val_offset:237561*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237561*0 + 3*83*FLEN/8, x4, x1, x2)

inst_79188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5fffffff800000; valaddr_reg:x3; val_offset:237564*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237564*0 + 3*84*FLEN/8, x4, x1, x2)

inst_79189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5fffffffc00000; valaddr_reg:x3; val_offset:237567*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237567*0 + 3*85*FLEN/8, x4, x1, x2)

inst_79190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5fffffffe00000; valaddr_reg:x3; val_offset:237570*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237570*0 + 3*86*FLEN/8, x4, x1, x2)

inst_79191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5ffffffff00000; valaddr_reg:x3; val_offset:237573*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237573*0 + 3*87*FLEN/8, x4, x1, x2)

inst_79192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5ffffffff80000; valaddr_reg:x3; val_offset:237576*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237576*0 + 3*88*FLEN/8, x4, x1, x2)

inst_79193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5ffffffffc0000; valaddr_reg:x3; val_offset:237579*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237579*0 + 3*89*FLEN/8, x4, x1, x2)

inst_79194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5ffffffffe0000; valaddr_reg:x3; val_offset:237582*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237582*0 + 3*90*FLEN/8, x4, x1, x2)

inst_79195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5fffffffff0000; valaddr_reg:x3; val_offset:237585*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237585*0 + 3*91*FLEN/8, x4, x1, x2)

inst_79196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5fffffffff8000; valaddr_reg:x3; val_offset:237588*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237588*0 + 3*92*FLEN/8, x4, x1, x2)

inst_79197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5fffffffffc000; valaddr_reg:x3; val_offset:237591*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237591*0 + 3*93*FLEN/8, x4, x1, x2)

inst_79198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5fffffffffe000; valaddr_reg:x3; val_offset:237594*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237594*0 + 3*94*FLEN/8, x4, x1, x2)

inst_79199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5ffffffffff000; valaddr_reg:x3; val_offset:237597*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237597*0 + 3*95*FLEN/8, x4, x1, x2)

inst_79200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5ffffffffff800; valaddr_reg:x3; val_offset:237600*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237600*0 + 3*96*FLEN/8, x4, x1, x2)

inst_79201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5ffffffffffc00; valaddr_reg:x3; val_offset:237603*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237603*0 + 3*97*FLEN/8, x4, x1, x2)

inst_79202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5ffffffffffe00; valaddr_reg:x3; val_offset:237606*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237606*0 + 3*98*FLEN/8, x4, x1, x2)

inst_79203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5fffffffffff00; valaddr_reg:x3; val_offset:237609*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237609*0 + 3*99*FLEN/8, x4, x1, x2)

inst_79204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5fffffffffff80; valaddr_reg:x3; val_offset:237612*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237612*0 + 3*100*FLEN/8, x4, x1, x2)

inst_79205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5fffffffffffc0; valaddr_reg:x3; val_offset:237615*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237615*0 + 3*101*FLEN/8, x4, x1, x2)

inst_79206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5fffffffffffe0; valaddr_reg:x3; val_offset:237618*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237618*0 + 3*102*FLEN/8, x4, x1, x2)

inst_79207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5ffffffffffff0; valaddr_reg:x3; val_offset:237621*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237621*0 + 3*103*FLEN/8, x4, x1, x2)

inst_79208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5ffffffffffff8; valaddr_reg:x3; val_offset:237624*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237624*0 + 3*104*FLEN/8, x4, x1, x2)

inst_79209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5ffffffffffffc; valaddr_reg:x3; val_offset:237627*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237627*0 + 3*105*FLEN/8, x4, x1, x2)

inst_79210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5ffffffffffffe; valaddr_reg:x3; val_offset:237630*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237630*0 + 3*106*FLEN/8, x4, x1, x2)

inst_79211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ec6617bf9bd8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8ec6617bf9bd8; op2val:0x0;
op3val:0x5fffffffffffff; valaddr_reg:x3; val_offset:237633*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237633*0 + 3*107*FLEN/8, x4, x1, x2)

inst_79212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dc0000000000000; valaddr_reg:x3; val_offset:237636*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237636*0 + 3*108*FLEN/8, x4, x1, x2)

inst_79213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dc0000000000001; valaddr_reg:x3; val_offset:237639*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237639*0 + 3*109*FLEN/8, x4, x1, x2)

inst_79214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dc0000000000003; valaddr_reg:x3; val_offset:237642*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237642*0 + 3*110*FLEN/8, x4, x1, x2)

inst_79215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dc0000000000007; valaddr_reg:x3; val_offset:237645*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237645*0 + 3*111*FLEN/8, x4, x1, x2)

inst_79216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dc000000000000f; valaddr_reg:x3; val_offset:237648*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237648*0 + 3*112*FLEN/8, x4, x1, x2)

inst_79217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dc000000000001f; valaddr_reg:x3; val_offset:237651*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237651*0 + 3*113*FLEN/8, x4, x1, x2)

inst_79218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dc000000000003f; valaddr_reg:x3; val_offset:237654*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237654*0 + 3*114*FLEN/8, x4, x1, x2)

inst_79219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dc000000000007f; valaddr_reg:x3; val_offset:237657*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237657*0 + 3*115*FLEN/8, x4, x1, x2)

inst_79220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dc00000000000ff; valaddr_reg:x3; val_offset:237660*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237660*0 + 3*116*FLEN/8, x4, x1, x2)

inst_79221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dc00000000001ff; valaddr_reg:x3; val_offset:237663*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237663*0 + 3*117*FLEN/8, x4, x1, x2)

inst_79222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dc00000000003ff; valaddr_reg:x3; val_offset:237666*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237666*0 + 3*118*FLEN/8, x4, x1, x2)

inst_79223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dc00000000007ff; valaddr_reg:x3; val_offset:237669*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237669*0 + 3*119*FLEN/8, x4, x1, x2)

inst_79224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dc0000000000fff; valaddr_reg:x3; val_offset:237672*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237672*0 + 3*120*FLEN/8, x4, x1, x2)

inst_79225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dc0000000001fff; valaddr_reg:x3; val_offset:237675*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237675*0 + 3*121*FLEN/8, x4, x1, x2)

inst_79226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dc0000000003fff; valaddr_reg:x3; val_offset:237678*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237678*0 + 3*122*FLEN/8, x4, x1, x2)

inst_79227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dc0000000007fff; valaddr_reg:x3; val_offset:237681*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237681*0 + 3*123*FLEN/8, x4, x1, x2)

inst_79228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dc000000000ffff; valaddr_reg:x3; val_offset:237684*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237684*0 + 3*124*FLEN/8, x4, x1, x2)

inst_79229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dc000000001ffff; valaddr_reg:x3; val_offset:237687*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237687*0 + 3*125*FLEN/8, x4, x1, x2)

inst_79230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dc000000003ffff; valaddr_reg:x3; val_offset:237690*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237690*0 + 3*126*FLEN/8, x4, x1, x2)

inst_79231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dc000000007ffff; valaddr_reg:x3; val_offset:237693*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237693*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_79232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dc00000000fffff; valaddr_reg:x3; val_offset:237696*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237696*0 + 3*128*FLEN/8, x4, x1, x2)

inst_79233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dc00000001fffff; valaddr_reg:x3; val_offset:237699*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237699*0 + 3*129*FLEN/8, x4, x1, x2)

inst_79234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dc00000003fffff; valaddr_reg:x3; val_offset:237702*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237702*0 + 3*130*FLEN/8, x4, x1, x2)

inst_79235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dc00000007fffff; valaddr_reg:x3; val_offset:237705*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237705*0 + 3*131*FLEN/8, x4, x1, x2)

inst_79236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dc0000000ffffff; valaddr_reg:x3; val_offset:237708*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237708*0 + 3*132*FLEN/8, x4, x1, x2)

inst_79237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dc0000001ffffff; valaddr_reg:x3; val_offset:237711*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237711*0 + 3*133*FLEN/8, x4, x1, x2)

inst_79238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dc0000003ffffff; valaddr_reg:x3; val_offset:237714*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237714*0 + 3*134*FLEN/8, x4, x1, x2)

inst_79239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dc0000007ffffff; valaddr_reg:x3; val_offset:237717*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237717*0 + 3*135*FLEN/8, x4, x1, x2)

inst_79240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dc000000fffffff; valaddr_reg:x3; val_offset:237720*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237720*0 + 3*136*FLEN/8, x4, x1, x2)

inst_79241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dc000001fffffff; valaddr_reg:x3; val_offset:237723*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237723*0 + 3*137*FLEN/8, x4, x1, x2)

inst_79242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dc000003fffffff; valaddr_reg:x3; val_offset:237726*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237726*0 + 3*138*FLEN/8, x4, x1, x2)

inst_79243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dc000007fffffff; valaddr_reg:x3; val_offset:237729*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237729*0 + 3*139*FLEN/8, x4, x1, x2)

inst_79244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dc00000ffffffff; valaddr_reg:x3; val_offset:237732*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237732*0 + 3*140*FLEN/8, x4, x1, x2)

inst_79245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dc00001ffffffff; valaddr_reg:x3; val_offset:237735*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237735*0 + 3*141*FLEN/8, x4, x1, x2)

inst_79246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dc00003ffffffff; valaddr_reg:x3; val_offset:237738*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237738*0 + 3*142*FLEN/8, x4, x1, x2)

inst_79247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dc00007ffffffff; valaddr_reg:x3; val_offset:237741*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237741*0 + 3*143*FLEN/8, x4, x1, x2)

inst_79248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dc0000fffffffff; valaddr_reg:x3; val_offset:237744*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237744*0 + 3*144*FLEN/8, x4, x1, x2)

inst_79249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dc0001fffffffff; valaddr_reg:x3; val_offset:237747*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237747*0 + 3*145*FLEN/8, x4, x1, x2)

inst_79250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dc0003fffffffff; valaddr_reg:x3; val_offset:237750*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237750*0 + 3*146*FLEN/8, x4, x1, x2)

inst_79251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dc0007fffffffff; valaddr_reg:x3; val_offset:237753*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237753*0 + 3*147*FLEN/8, x4, x1, x2)

inst_79252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dc000ffffffffff; valaddr_reg:x3; val_offset:237756*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237756*0 + 3*148*FLEN/8, x4, x1, x2)

inst_79253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dc001ffffffffff; valaddr_reg:x3; val_offset:237759*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237759*0 + 3*149*FLEN/8, x4, x1, x2)

inst_79254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dc003ffffffffff; valaddr_reg:x3; val_offset:237762*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237762*0 + 3*150*FLEN/8, x4, x1, x2)

inst_79255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dc007ffffffffff; valaddr_reg:x3; val_offset:237765*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237765*0 + 3*151*FLEN/8, x4, x1, x2)

inst_79256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dc00fffffffffff; valaddr_reg:x3; val_offset:237768*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237768*0 + 3*152*FLEN/8, x4, x1, x2)

inst_79257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dc01fffffffffff; valaddr_reg:x3; val_offset:237771*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237771*0 + 3*153*FLEN/8, x4, x1, x2)

inst_79258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dc03fffffffffff; valaddr_reg:x3; val_offset:237774*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237774*0 + 3*154*FLEN/8, x4, x1, x2)

inst_79259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dc07fffffffffff; valaddr_reg:x3; val_offset:237777*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237777*0 + 3*155*FLEN/8, x4, x1, x2)

inst_79260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dc0ffffffffffff; valaddr_reg:x3; val_offset:237780*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237780*0 + 3*156*FLEN/8, x4, x1, x2)

inst_79261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dc1ffffffffffff; valaddr_reg:x3; val_offset:237783*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237783*0 + 3*157*FLEN/8, x4, x1, x2)

inst_79262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dc3ffffffffffff; valaddr_reg:x3; val_offset:237786*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237786*0 + 3*158*FLEN/8, x4, x1, x2)

inst_79263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dc7ffffffffffff; valaddr_reg:x3; val_offset:237789*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237789*0 + 3*159*FLEN/8, x4, x1, x2)

inst_79264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dc8000000000000; valaddr_reg:x3; val_offset:237792*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237792*0 + 3*160*FLEN/8, x4, x1, x2)

inst_79265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dcc000000000000; valaddr_reg:x3; val_offset:237795*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237795*0 + 3*161*FLEN/8, x4, x1, x2)

inst_79266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dce000000000000; valaddr_reg:x3; val_offset:237798*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237798*0 + 3*162*FLEN/8, x4, x1, x2)

inst_79267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dcf000000000000; valaddr_reg:x3; val_offset:237801*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237801*0 + 3*163*FLEN/8, x4, x1, x2)

inst_79268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dcf800000000000; valaddr_reg:x3; val_offset:237804*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237804*0 + 3*164*FLEN/8, x4, x1, x2)

inst_79269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dcfc00000000000; valaddr_reg:x3; val_offset:237807*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237807*0 + 3*165*FLEN/8, x4, x1, x2)

inst_79270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dcfe00000000000; valaddr_reg:x3; val_offset:237810*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237810*0 + 3*166*FLEN/8, x4, x1, x2)

inst_79271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dcff00000000000; valaddr_reg:x3; val_offset:237813*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237813*0 + 3*167*FLEN/8, x4, x1, x2)

inst_79272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dcff80000000000; valaddr_reg:x3; val_offset:237816*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237816*0 + 3*168*FLEN/8, x4, x1, x2)

inst_79273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dcffc0000000000; valaddr_reg:x3; val_offset:237819*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237819*0 + 3*169*FLEN/8, x4, x1, x2)

inst_79274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dcffe0000000000; valaddr_reg:x3; val_offset:237822*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237822*0 + 3*170*FLEN/8, x4, x1, x2)

inst_79275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dcfff0000000000; valaddr_reg:x3; val_offset:237825*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237825*0 + 3*171*FLEN/8, x4, x1, x2)

inst_79276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dcfff8000000000; valaddr_reg:x3; val_offset:237828*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237828*0 + 3*172*FLEN/8, x4, x1, x2)

inst_79277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dcfffc000000000; valaddr_reg:x3; val_offset:237831*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237831*0 + 3*173*FLEN/8, x4, x1, x2)

inst_79278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dcfffe000000000; valaddr_reg:x3; val_offset:237834*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237834*0 + 3*174*FLEN/8, x4, x1, x2)

inst_79279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dcffff000000000; valaddr_reg:x3; val_offset:237837*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237837*0 + 3*175*FLEN/8, x4, x1, x2)

inst_79280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dcffff800000000; valaddr_reg:x3; val_offset:237840*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237840*0 + 3*176*FLEN/8, x4, x1, x2)

inst_79281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dcffffc00000000; valaddr_reg:x3; val_offset:237843*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237843*0 + 3*177*FLEN/8, x4, x1, x2)

inst_79282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dcffffe00000000; valaddr_reg:x3; val_offset:237846*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237846*0 + 3*178*FLEN/8, x4, x1, x2)

inst_79283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dcfffff00000000; valaddr_reg:x3; val_offset:237849*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237849*0 + 3*179*FLEN/8, x4, x1, x2)

inst_79284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dcfffff80000000; valaddr_reg:x3; val_offset:237852*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237852*0 + 3*180*FLEN/8, x4, x1, x2)

inst_79285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dcfffffc0000000; valaddr_reg:x3; val_offset:237855*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237855*0 + 3*181*FLEN/8, x4, x1, x2)

inst_79286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dcfffffe0000000; valaddr_reg:x3; val_offset:237858*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237858*0 + 3*182*FLEN/8, x4, x1, x2)

inst_79287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dcffffff0000000; valaddr_reg:x3; val_offset:237861*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237861*0 + 3*183*FLEN/8, x4, x1, x2)

inst_79288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dcffffff8000000; valaddr_reg:x3; val_offset:237864*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237864*0 + 3*184*FLEN/8, x4, x1, x2)

inst_79289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dcffffffc000000; valaddr_reg:x3; val_offset:237867*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237867*0 + 3*185*FLEN/8, x4, x1, x2)

inst_79290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dcffffffe000000; valaddr_reg:x3; val_offset:237870*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237870*0 + 3*186*FLEN/8, x4, x1, x2)

inst_79291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dcfffffff000000; valaddr_reg:x3; val_offset:237873*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237873*0 + 3*187*FLEN/8, x4, x1, x2)

inst_79292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dcfffffff800000; valaddr_reg:x3; val_offset:237876*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237876*0 + 3*188*FLEN/8, x4, x1, x2)

inst_79293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dcfffffffc00000; valaddr_reg:x3; val_offset:237879*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237879*0 + 3*189*FLEN/8, x4, x1, x2)

inst_79294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dcfffffffe00000; valaddr_reg:x3; val_offset:237882*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237882*0 + 3*190*FLEN/8, x4, x1, x2)

inst_79295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dcffffffff00000; valaddr_reg:x3; val_offset:237885*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237885*0 + 3*191*FLEN/8, x4, x1, x2)

inst_79296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dcffffffff80000; valaddr_reg:x3; val_offset:237888*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237888*0 + 3*192*FLEN/8, x4, x1, x2)

inst_79297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dcffffffffc0000; valaddr_reg:x3; val_offset:237891*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237891*0 + 3*193*FLEN/8, x4, x1, x2)

inst_79298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dcffffffffe0000; valaddr_reg:x3; val_offset:237894*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237894*0 + 3*194*FLEN/8, x4, x1, x2)

inst_79299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dcfffffffff0000; valaddr_reg:x3; val_offset:237897*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237897*0 + 3*195*FLEN/8, x4, x1, x2)

inst_79300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dcfffffffff8000; valaddr_reg:x3; val_offset:237900*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237900*0 + 3*196*FLEN/8, x4, x1, x2)

inst_79301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dcfffffffffc000; valaddr_reg:x3; val_offset:237903*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237903*0 + 3*197*FLEN/8, x4, x1, x2)

inst_79302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dcfffffffffe000; valaddr_reg:x3; val_offset:237906*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237906*0 + 3*198*FLEN/8, x4, x1, x2)

inst_79303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dcffffffffff000; valaddr_reg:x3; val_offset:237909*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237909*0 + 3*199*FLEN/8, x4, x1, x2)

inst_79304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dcffffffffff800; valaddr_reg:x3; val_offset:237912*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237912*0 + 3*200*FLEN/8, x4, x1, x2)

inst_79305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dcffffffffffc00; valaddr_reg:x3; val_offset:237915*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237915*0 + 3*201*FLEN/8, x4, x1, x2)

inst_79306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dcffffffffffe00; valaddr_reg:x3; val_offset:237918*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237918*0 + 3*202*FLEN/8, x4, x1, x2)

inst_79307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dcfffffffffff00; valaddr_reg:x3; val_offset:237921*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237921*0 + 3*203*FLEN/8, x4, x1, x2)

inst_79308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dcfffffffffff80; valaddr_reg:x3; val_offset:237924*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237924*0 + 3*204*FLEN/8, x4, x1, x2)

inst_79309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dcfffffffffffc0; valaddr_reg:x3; val_offset:237927*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237927*0 + 3*205*FLEN/8, x4, x1, x2)

inst_79310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dcfffffffffffe0; valaddr_reg:x3; val_offset:237930*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237930*0 + 3*206*FLEN/8, x4, x1, x2)

inst_79311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dcffffffffffff0; valaddr_reg:x3; val_offset:237933*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237933*0 + 3*207*FLEN/8, x4, x1, x2)

inst_79312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dcffffffffffff8; valaddr_reg:x3; val_offset:237936*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237936*0 + 3*208*FLEN/8, x4, x1, x2)

inst_79313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dcffffffffffffc; valaddr_reg:x3; val_offset:237939*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237939*0 + 3*209*FLEN/8, x4, x1, x2)

inst_79314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dcffffffffffffe; valaddr_reg:x3; val_offset:237942*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237942*0 + 3*210*FLEN/8, x4, x1, x2)

inst_79315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3dc and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3dcfffffffffffff; valaddr_reg:x3; val_offset:237945*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237945*0 + 3*211*FLEN/8, x4, x1, x2)

inst_79316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:237948*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237948*0 + 3*212*FLEN/8, x4, x1, x2)

inst_79317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:237951*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237951*0 + 3*213*FLEN/8, x4, x1, x2)

inst_79318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:237954*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237954*0 + 3*214*FLEN/8, x4, x1, x2)

inst_79319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:237957*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237957*0 + 3*215*FLEN/8, x4, x1, x2)

inst_79320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:237960*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237960*0 + 3*216*FLEN/8, x4, x1, x2)

inst_79321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:237963*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237963*0 + 3*217*FLEN/8, x4, x1, x2)

inst_79322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:237966*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237966*0 + 3*218*FLEN/8, x4, x1, x2)

inst_79323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:237969*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237969*0 + 3*219*FLEN/8, x4, x1, x2)

inst_79324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:237972*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237972*0 + 3*220*FLEN/8, x4, x1, x2)

inst_79325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:237975*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237975*0 + 3*221*FLEN/8, x4, x1, x2)

inst_79326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:237978*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237978*0 + 3*222*FLEN/8, x4, x1, x2)

inst_79327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:237981*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237981*0 + 3*223*FLEN/8, x4, x1, x2)

inst_79328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:237984*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237984*0 + 3*224*FLEN/8, x4, x1, x2)

inst_79329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:237987*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237987*0 + 3*225*FLEN/8, x4, x1, x2)

inst_79330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:237990*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237990*0 + 3*226*FLEN/8, x4, x1, x2)

inst_79331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:237993*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237993*0 + 3*227*FLEN/8, x4, x1, x2)

inst_79332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:237996*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237996*0 + 3*228*FLEN/8, x4, x1, x2)

inst_79333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:237999*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237999*0 + 3*229*FLEN/8, x4, x1, x2)

inst_79334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:238002*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238002*0 + 3*230*FLEN/8, x4, x1, x2)

inst_79335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:238005*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238005*0 + 3*231*FLEN/8, x4, x1, x2)

inst_79336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:238008*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238008*0 + 3*232*FLEN/8, x4, x1, x2)

inst_79337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f1fd8bd135f8 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x48661bf986b34 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f1fd8bd135f8; op2val:0x20348661bf986b34;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:238011*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238011*0 + 3*233*FLEN/8, x4, x1, x2)

inst_79338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b00000000000000; valaddr_reg:x3; val_offset:238014*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238014*0 + 3*234*FLEN/8, x4, x1, x2)

inst_79339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b00000000000001; valaddr_reg:x3; val_offset:238017*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238017*0 + 3*235*FLEN/8, x4, x1, x2)

inst_79340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b00000000000003; valaddr_reg:x3; val_offset:238020*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238020*0 + 3*236*FLEN/8, x4, x1, x2)

inst_79341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b00000000000007; valaddr_reg:x3; val_offset:238023*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238023*0 + 3*237*FLEN/8, x4, x1, x2)

inst_79342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0000000000000f; valaddr_reg:x3; val_offset:238026*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238026*0 + 3*238*FLEN/8, x4, x1, x2)

inst_79343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0000000000001f; valaddr_reg:x3; val_offset:238029*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238029*0 + 3*239*FLEN/8, x4, x1, x2)

inst_79344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0000000000003f; valaddr_reg:x3; val_offset:238032*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238032*0 + 3*240*FLEN/8, x4, x1, x2)

inst_79345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0000000000007f; valaddr_reg:x3; val_offset:238035*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238035*0 + 3*241*FLEN/8, x4, x1, x2)

inst_79346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b000000000000ff; valaddr_reg:x3; val_offset:238038*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238038*0 + 3*242*FLEN/8, x4, x1, x2)

inst_79347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b000000000001ff; valaddr_reg:x3; val_offset:238041*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238041*0 + 3*243*FLEN/8, x4, x1, x2)

inst_79348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b000000000003ff; valaddr_reg:x3; val_offset:238044*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238044*0 + 3*244*FLEN/8, x4, x1, x2)

inst_79349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b000000000007ff; valaddr_reg:x3; val_offset:238047*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238047*0 + 3*245*FLEN/8, x4, x1, x2)

inst_79350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b00000000000fff; valaddr_reg:x3; val_offset:238050*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238050*0 + 3*246*FLEN/8, x4, x1, x2)

inst_79351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b00000000001fff; valaddr_reg:x3; val_offset:238053*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238053*0 + 3*247*FLEN/8, x4, x1, x2)

inst_79352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b00000000003fff; valaddr_reg:x3; val_offset:238056*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238056*0 + 3*248*FLEN/8, x4, x1, x2)

inst_79353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b00000000007fff; valaddr_reg:x3; val_offset:238059*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238059*0 + 3*249*FLEN/8, x4, x1, x2)

inst_79354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0000000000ffff; valaddr_reg:x3; val_offset:238062*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238062*0 + 3*250*FLEN/8, x4, x1, x2)

inst_79355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0000000001ffff; valaddr_reg:x3; val_offset:238065*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238065*0 + 3*251*FLEN/8, x4, x1, x2)

inst_79356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0000000003ffff; valaddr_reg:x3; val_offset:238068*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238068*0 + 3*252*FLEN/8, x4, x1, x2)

inst_79357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0000000007ffff; valaddr_reg:x3; val_offset:238071*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238071*0 + 3*253*FLEN/8, x4, x1, x2)

inst_79358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b000000000fffff; valaddr_reg:x3; val_offset:238074*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238074*0 + 3*254*FLEN/8, x4, x1, x2)

inst_79359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b000000001fffff; valaddr_reg:x3; val_offset:238077*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238077*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_79360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b000000003fffff; valaddr_reg:x3; val_offset:238080*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238080*0 + 3*256*FLEN/8, x4, x1, x2)

inst_79361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b000000007fffff; valaddr_reg:x3; val_offset:238083*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238083*0 + 3*257*FLEN/8, x4, x1, x2)

inst_79362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b00000000ffffff; valaddr_reg:x3; val_offset:238086*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238086*0 + 3*258*FLEN/8, x4, x1, x2)

inst_79363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b00000001ffffff; valaddr_reg:x3; val_offset:238089*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238089*0 + 3*259*FLEN/8, x4, x1, x2)

inst_79364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b00000003ffffff; valaddr_reg:x3; val_offset:238092*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238092*0 + 3*260*FLEN/8, x4, x1, x2)

inst_79365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b00000007ffffff; valaddr_reg:x3; val_offset:238095*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238095*0 + 3*261*FLEN/8, x4, x1, x2)

inst_79366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0000000fffffff; valaddr_reg:x3; val_offset:238098*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238098*0 + 3*262*FLEN/8, x4, x1, x2)

inst_79367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0000001fffffff; valaddr_reg:x3; val_offset:238101*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238101*0 + 3*263*FLEN/8, x4, x1, x2)

inst_79368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0000003fffffff; valaddr_reg:x3; val_offset:238104*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238104*0 + 3*264*FLEN/8, x4, x1, x2)

inst_79369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0000007fffffff; valaddr_reg:x3; val_offset:238107*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238107*0 + 3*265*FLEN/8, x4, x1, x2)

inst_79370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b000000ffffffff; valaddr_reg:x3; val_offset:238110*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238110*0 + 3*266*FLEN/8, x4, x1, x2)

inst_79371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b000001ffffffff; valaddr_reg:x3; val_offset:238113*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238113*0 + 3*267*FLEN/8, x4, x1, x2)

inst_79372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b000003ffffffff; valaddr_reg:x3; val_offset:238116*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238116*0 + 3*268*FLEN/8, x4, x1, x2)

inst_79373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b000007ffffffff; valaddr_reg:x3; val_offset:238119*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238119*0 + 3*269*FLEN/8, x4, x1, x2)

inst_79374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b00000fffffffff; valaddr_reg:x3; val_offset:238122*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238122*0 + 3*270*FLEN/8, x4, x1, x2)

inst_79375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b00001fffffffff; valaddr_reg:x3; val_offset:238125*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238125*0 + 3*271*FLEN/8, x4, x1, x2)

inst_79376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b00003fffffffff; valaddr_reg:x3; val_offset:238128*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238128*0 + 3*272*FLEN/8, x4, x1, x2)

inst_79377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b00007fffffffff; valaddr_reg:x3; val_offset:238131*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238131*0 + 3*273*FLEN/8, x4, x1, x2)

inst_79378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0000ffffffffff; valaddr_reg:x3; val_offset:238134*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238134*0 + 3*274*FLEN/8, x4, x1, x2)

inst_79379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0001ffffffffff; valaddr_reg:x3; val_offset:238137*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238137*0 + 3*275*FLEN/8, x4, x1, x2)

inst_79380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0003ffffffffff; valaddr_reg:x3; val_offset:238140*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238140*0 + 3*276*FLEN/8, x4, x1, x2)

inst_79381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0007ffffffffff; valaddr_reg:x3; val_offset:238143*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238143*0 + 3*277*FLEN/8, x4, x1, x2)

inst_79382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b000fffffffffff; valaddr_reg:x3; val_offset:238146*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238146*0 + 3*278*FLEN/8, x4, x1, x2)

inst_79383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b001fffffffffff; valaddr_reg:x3; val_offset:238149*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238149*0 + 3*279*FLEN/8, x4, x1, x2)

inst_79384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b003fffffffffff; valaddr_reg:x3; val_offset:238152*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238152*0 + 3*280*FLEN/8, x4, x1, x2)

inst_79385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b007fffffffffff; valaddr_reg:x3; val_offset:238155*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238155*0 + 3*281*FLEN/8, x4, x1, x2)

inst_79386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b00ffffffffffff; valaddr_reg:x3; val_offset:238158*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238158*0 + 3*282*FLEN/8, x4, x1, x2)

inst_79387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b01ffffffffffff; valaddr_reg:x3; val_offset:238161*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238161*0 + 3*283*FLEN/8, x4, x1, x2)

inst_79388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b03ffffffffffff; valaddr_reg:x3; val_offset:238164*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238164*0 + 3*284*FLEN/8, x4, x1, x2)

inst_79389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b07ffffffffffff; valaddr_reg:x3; val_offset:238167*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238167*0 + 3*285*FLEN/8, x4, x1, x2)

inst_79390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b08000000000000; valaddr_reg:x3; val_offset:238170*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238170*0 + 3*286*FLEN/8, x4, x1, x2)

inst_79391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0c000000000000; valaddr_reg:x3; val_offset:238173*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238173*0 + 3*287*FLEN/8, x4, x1, x2)

inst_79392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0e000000000000; valaddr_reg:x3; val_offset:238176*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238176*0 + 3*288*FLEN/8, x4, x1, x2)

inst_79393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0f000000000000; valaddr_reg:x3; val_offset:238179*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238179*0 + 3*289*FLEN/8, x4, x1, x2)

inst_79394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0f800000000000; valaddr_reg:x3; val_offset:238182*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238182*0 + 3*290*FLEN/8, x4, x1, x2)

inst_79395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0fc00000000000; valaddr_reg:x3; val_offset:238185*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238185*0 + 3*291*FLEN/8, x4, x1, x2)

inst_79396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0fe00000000000; valaddr_reg:x3; val_offset:238188*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238188*0 + 3*292*FLEN/8, x4, x1, x2)

inst_79397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0ff00000000000; valaddr_reg:x3; val_offset:238191*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238191*0 + 3*293*FLEN/8, x4, x1, x2)

inst_79398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0ff80000000000; valaddr_reg:x3; val_offset:238194*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238194*0 + 3*294*FLEN/8, x4, x1, x2)

inst_79399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0ffc0000000000; valaddr_reg:x3; val_offset:238197*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238197*0 + 3*295*FLEN/8, x4, x1, x2)

inst_79400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0ffe0000000000; valaddr_reg:x3; val_offset:238200*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238200*0 + 3*296*FLEN/8, x4, x1, x2)

inst_79401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0fff0000000000; valaddr_reg:x3; val_offset:238203*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238203*0 + 3*297*FLEN/8, x4, x1, x2)

inst_79402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0fff8000000000; valaddr_reg:x3; val_offset:238206*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238206*0 + 3*298*FLEN/8, x4, x1, x2)

inst_79403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0fffc000000000; valaddr_reg:x3; val_offset:238209*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238209*0 + 3*299*FLEN/8, x4, x1, x2)

inst_79404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0fffe000000000; valaddr_reg:x3; val_offset:238212*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238212*0 + 3*300*FLEN/8, x4, x1, x2)

inst_79405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0ffff000000000; valaddr_reg:x3; val_offset:238215*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238215*0 + 3*301*FLEN/8, x4, x1, x2)

inst_79406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0ffff800000000; valaddr_reg:x3; val_offset:238218*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238218*0 + 3*302*FLEN/8, x4, x1, x2)

inst_79407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0ffffc00000000; valaddr_reg:x3; val_offset:238221*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238221*0 + 3*303*FLEN/8, x4, x1, x2)

inst_79408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0ffffe00000000; valaddr_reg:x3; val_offset:238224*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238224*0 + 3*304*FLEN/8, x4, x1, x2)

inst_79409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0fffff00000000; valaddr_reg:x3; val_offset:238227*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238227*0 + 3*305*FLEN/8, x4, x1, x2)

inst_79410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0fffff80000000; valaddr_reg:x3; val_offset:238230*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238230*0 + 3*306*FLEN/8, x4, x1, x2)

inst_79411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0fffffc0000000; valaddr_reg:x3; val_offset:238233*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238233*0 + 3*307*FLEN/8, x4, x1, x2)

inst_79412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0fffffe0000000; valaddr_reg:x3; val_offset:238236*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238236*0 + 3*308*FLEN/8, x4, x1, x2)

inst_79413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0ffffff0000000; valaddr_reg:x3; val_offset:238239*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238239*0 + 3*309*FLEN/8, x4, x1, x2)

inst_79414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0ffffff8000000; valaddr_reg:x3; val_offset:238242*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238242*0 + 3*310*FLEN/8, x4, x1, x2)

inst_79415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0ffffffc000000; valaddr_reg:x3; val_offset:238245*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238245*0 + 3*311*FLEN/8, x4, x1, x2)

inst_79416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0ffffffe000000; valaddr_reg:x3; val_offset:238248*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238248*0 + 3*312*FLEN/8, x4, x1, x2)

inst_79417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0fffffff000000; valaddr_reg:x3; val_offset:238251*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238251*0 + 3*313*FLEN/8, x4, x1, x2)

inst_79418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0fffffff800000; valaddr_reg:x3; val_offset:238254*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238254*0 + 3*314*FLEN/8, x4, x1, x2)

inst_79419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0fffffffc00000; valaddr_reg:x3; val_offset:238257*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238257*0 + 3*315*FLEN/8, x4, x1, x2)

inst_79420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0fffffffe00000; valaddr_reg:x3; val_offset:238260*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238260*0 + 3*316*FLEN/8, x4, x1, x2)

inst_79421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0ffffffff00000; valaddr_reg:x3; val_offset:238263*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238263*0 + 3*317*FLEN/8, x4, x1, x2)

inst_79422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0ffffffff80000; valaddr_reg:x3; val_offset:238266*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238266*0 + 3*318*FLEN/8, x4, x1, x2)

inst_79423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0ffffffffc0000; valaddr_reg:x3; val_offset:238269*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238269*0 + 3*319*FLEN/8, x4, x1, x2)

inst_79424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0ffffffffe0000; valaddr_reg:x3; val_offset:238272*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238272*0 + 3*320*FLEN/8, x4, x1, x2)

inst_79425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0fffffffff0000; valaddr_reg:x3; val_offset:238275*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238275*0 + 3*321*FLEN/8, x4, x1, x2)

inst_79426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0fffffffff8000; valaddr_reg:x3; val_offset:238278*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238278*0 + 3*322*FLEN/8, x4, x1, x2)

inst_79427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0fffffffffc000; valaddr_reg:x3; val_offset:238281*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238281*0 + 3*323*FLEN/8, x4, x1, x2)

inst_79428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0fffffffffe000; valaddr_reg:x3; val_offset:238284*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238284*0 + 3*324*FLEN/8, x4, x1, x2)

inst_79429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0ffffffffff000; valaddr_reg:x3; val_offset:238287*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238287*0 + 3*325*FLEN/8, x4, x1, x2)

inst_79430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0ffffffffff800; valaddr_reg:x3; val_offset:238290*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238290*0 + 3*326*FLEN/8, x4, x1, x2)

inst_79431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0ffffffffffc00; valaddr_reg:x3; val_offset:238293*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238293*0 + 3*327*FLEN/8, x4, x1, x2)

inst_79432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0ffffffffffe00; valaddr_reg:x3; val_offset:238296*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238296*0 + 3*328*FLEN/8, x4, x1, x2)

inst_79433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0fffffffffff00; valaddr_reg:x3; val_offset:238299*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238299*0 + 3*329*FLEN/8, x4, x1, x2)

inst_79434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0fffffffffff80; valaddr_reg:x3; val_offset:238302*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238302*0 + 3*330*FLEN/8, x4, x1, x2)

inst_79435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0fffffffffffc0; valaddr_reg:x3; val_offset:238305*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238305*0 + 3*331*FLEN/8, x4, x1, x2)

inst_79436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0fffffffffffe0; valaddr_reg:x3; val_offset:238308*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238308*0 + 3*332*FLEN/8, x4, x1, x2)

inst_79437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0ffffffffffff0; valaddr_reg:x3; val_offset:238311*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238311*0 + 3*333*FLEN/8, x4, x1, x2)

inst_79438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0ffffffffffff8; valaddr_reg:x3; val_offset:238314*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238314*0 + 3*334*FLEN/8, x4, x1, x2)

inst_79439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0ffffffffffffc; valaddr_reg:x3; val_offset:238317*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238317*0 + 3*335*FLEN/8, x4, x1, x2)

inst_79440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0ffffffffffffe; valaddr_reg:x3; val_offset:238320*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238320*0 + 3*336*FLEN/8, x4, x1, x2)

inst_79441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3b0fffffffffffff; valaddr_reg:x3; val_offset:238323*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238323*0 + 3*337*FLEN/8, x4, x1, x2)

inst_79442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:238326*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238326*0 + 3*338*FLEN/8, x4, x1, x2)

inst_79443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:238329*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238329*0 + 3*339*FLEN/8, x4, x1, x2)

inst_79444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:238332*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238332*0 + 3*340*FLEN/8, x4, x1, x2)

inst_79445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:238335*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238335*0 + 3*341*FLEN/8, x4, x1, x2)

inst_79446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:238338*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238338*0 + 3*342*FLEN/8, x4, x1, x2)

inst_79447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:238341*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238341*0 + 3*343*FLEN/8, x4, x1, x2)

inst_79448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:238344*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238344*0 + 3*344*FLEN/8, x4, x1, x2)

inst_79449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:238347*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238347*0 + 3*345*FLEN/8, x4, x1, x2)

inst_79450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:238350*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238350*0 + 3*346*FLEN/8, x4, x1, x2)

inst_79451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:238353*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238353*0 + 3*347*FLEN/8, x4, x1, x2)

inst_79452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:238356*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238356*0 + 3*348*FLEN/8, x4, x1, x2)

inst_79453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:238359*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238359*0 + 3*349*FLEN/8, x4, x1, x2)

inst_79454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:238362*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238362*0 + 3*350*FLEN/8, x4, x1, x2)

inst_79455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:238365*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238365*0 + 3*351*FLEN/8, x4, x1, x2)

inst_79456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:238368*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238368*0 + 3*352*FLEN/8, x4, x1, x2)

inst_79457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:238371*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238371*0 + 3*353*FLEN/8, x4, x1, x2)

inst_79458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:238374*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238374*0 + 3*354*FLEN/8, x4, x1, x2)

inst_79459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:238377*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238377*0 + 3*355*FLEN/8, x4, x1, x2)

inst_79460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:238380*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238380*0 + 3*356*FLEN/8, x4, x1, x2)

inst_79461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:238383*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238383*0 + 3*357*FLEN/8, x4, x1, x2)

inst_79462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:238386*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238386*0 + 3*358*FLEN/8, x4, x1, x2)

inst_79463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f5e6c6d0eb70 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4832a7124440a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8f5e6c6d0eb70; op2val:0x2034832a7124440a;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:238389*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238389*0 + 3*359*FLEN/8, x4, x1, x2)

inst_79464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:238392*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238392*0 + 3*360*FLEN/8, x4, x1, x2)

inst_79465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:238395*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238395*0 + 3*361*FLEN/8, x4, x1, x2)

inst_79466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:238398*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238398*0 + 3*362*FLEN/8, x4, x1, x2)

inst_79467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:238401*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238401*0 + 3*363*FLEN/8, x4, x1, x2)

inst_79468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:238404*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238404*0 + 3*364*FLEN/8, x4, x1, x2)

inst_79469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:238407*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238407*0 + 3*365*FLEN/8, x4, x1, x2)

inst_79470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:238410*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238410*0 + 3*366*FLEN/8, x4, x1, x2)

inst_79471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:238413*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238413*0 + 3*367*FLEN/8, x4, x1, x2)

inst_79472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:238416*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238416*0 + 3*368*FLEN/8, x4, x1, x2)

inst_79473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:238419*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238419*0 + 3*369*FLEN/8, x4, x1, x2)

inst_79474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:238422*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238422*0 + 3*370*FLEN/8, x4, x1, x2)

inst_79475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:238425*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238425*0 + 3*371*FLEN/8, x4, x1, x2)

inst_79476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:238428*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238428*0 + 3*372*FLEN/8, x4, x1, x2)

inst_79477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:238431*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238431*0 + 3*373*FLEN/8, x4, x1, x2)

inst_79478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:238434*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238434*0 + 3*374*FLEN/8, x4, x1, x2)

inst_79479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:238437*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238437*0 + 3*375*FLEN/8, x4, x1, x2)

inst_79480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:238440*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238440*0 + 3*376*FLEN/8, x4, x1, x2)

inst_79481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:238443*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238443*0 + 3*377*FLEN/8, x4, x1, x2)

inst_79482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:238446*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238446*0 + 3*378*FLEN/8, x4, x1, x2)

inst_79483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:238449*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238449*0 + 3*379*FLEN/8, x4, x1, x2)

inst_79484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:238452*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238452*0 + 3*380*FLEN/8, x4, x1, x2)

inst_79485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:238455*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238455*0 + 3*381*FLEN/8, x4, x1, x2)

inst_79486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x90000000000000; valaddr_reg:x3; val_offset:238458*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238458*0 + 3*382*FLEN/8, x4, x1, x2)

inst_79487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x90000000000001; valaddr_reg:x3; val_offset:238461*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238461*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_79488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x90000000000003; valaddr_reg:x3; val_offset:238464*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238464*0 + 3*384*FLEN/8, x4, x1, x2)

inst_79489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x90000000000007; valaddr_reg:x3; val_offset:238467*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238467*0 + 3*385*FLEN/8, x4, x1, x2)

inst_79490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9000000000000f; valaddr_reg:x3; val_offset:238470*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238470*0 + 3*386*FLEN/8, x4, x1, x2)

inst_79491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9000000000001f; valaddr_reg:x3; val_offset:238473*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238473*0 + 3*387*FLEN/8, x4, x1, x2)

inst_79492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9000000000003f; valaddr_reg:x3; val_offset:238476*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238476*0 + 3*388*FLEN/8, x4, x1, x2)

inst_79493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9000000000007f; valaddr_reg:x3; val_offset:238479*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238479*0 + 3*389*FLEN/8, x4, x1, x2)

inst_79494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x900000000000ff; valaddr_reg:x3; val_offset:238482*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238482*0 + 3*390*FLEN/8, x4, x1, x2)

inst_79495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x900000000001ff; valaddr_reg:x3; val_offset:238485*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238485*0 + 3*391*FLEN/8, x4, x1, x2)

inst_79496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x900000000003ff; valaddr_reg:x3; val_offset:238488*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238488*0 + 3*392*FLEN/8, x4, x1, x2)

inst_79497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x900000000007ff; valaddr_reg:x3; val_offset:238491*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238491*0 + 3*393*FLEN/8, x4, x1, x2)

inst_79498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x90000000000fff; valaddr_reg:x3; val_offset:238494*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238494*0 + 3*394*FLEN/8, x4, x1, x2)

inst_79499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x90000000001fff; valaddr_reg:x3; val_offset:238497*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238497*0 + 3*395*FLEN/8, x4, x1, x2)

inst_79500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x90000000003fff; valaddr_reg:x3; val_offset:238500*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238500*0 + 3*396*FLEN/8, x4, x1, x2)

inst_79501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x90000000007fff; valaddr_reg:x3; val_offset:238503*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238503*0 + 3*397*FLEN/8, x4, x1, x2)

inst_79502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9000000000ffff; valaddr_reg:x3; val_offset:238506*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238506*0 + 3*398*FLEN/8, x4, x1, x2)

inst_79503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9000000001ffff; valaddr_reg:x3; val_offset:238509*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238509*0 + 3*399*FLEN/8, x4, x1, x2)

inst_79504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9000000003ffff; valaddr_reg:x3; val_offset:238512*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238512*0 + 3*400*FLEN/8, x4, x1, x2)

inst_79505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9000000007ffff; valaddr_reg:x3; val_offset:238515*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238515*0 + 3*401*FLEN/8, x4, x1, x2)

inst_79506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x900000000fffff; valaddr_reg:x3; val_offset:238518*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238518*0 + 3*402*FLEN/8, x4, x1, x2)

inst_79507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x900000001fffff; valaddr_reg:x3; val_offset:238521*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238521*0 + 3*403*FLEN/8, x4, x1, x2)

inst_79508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x900000003fffff; valaddr_reg:x3; val_offset:238524*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238524*0 + 3*404*FLEN/8, x4, x1, x2)

inst_79509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x900000007fffff; valaddr_reg:x3; val_offset:238527*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238527*0 + 3*405*FLEN/8, x4, x1, x2)

inst_79510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x90000000ffffff; valaddr_reg:x3; val_offset:238530*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238530*0 + 3*406*FLEN/8, x4, x1, x2)

inst_79511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x90000001ffffff; valaddr_reg:x3; val_offset:238533*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238533*0 + 3*407*FLEN/8, x4, x1, x2)

inst_79512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x90000003ffffff; valaddr_reg:x3; val_offset:238536*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238536*0 + 3*408*FLEN/8, x4, x1, x2)

inst_79513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x90000007ffffff; valaddr_reg:x3; val_offset:238539*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238539*0 + 3*409*FLEN/8, x4, x1, x2)

inst_79514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9000000fffffff; valaddr_reg:x3; val_offset:238542*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238542*0 + 3*410*FLEN/8, x4, x1, x2)

inst_79515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9000001fffffff; valaddr_reg:x3; val_offset:238545*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238545*0 + 3*411*FLEN/8, x4, x1, x2)

inst_79516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9000003fffffff; valaddr_reg:x3; val_offset:238548*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238548*0 + 3*412*FLEN/8, x4, x1, x2)

inst_79517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9000007fffffff; valaddr_reg:x3; val_offset:238551*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238551*0 + 3*413*FLEN/8, x4, x1, x2)

inst_79518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x900000ffffffff; valaddr_reg:x3; val_offset:238554*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238554*0 + 3*414*FLEN/8, x4, x1, x2)

inst_79519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x900001ffffffff; valaddr_reg:x3; val_offset:238557*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238557*0 + 3*415*FLEN/8, x4, x1, x2)

inst_79520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x900003ffffffff; valaddr_reg:x3; val_offset:238560*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238560*0 + 3*416*FLEN/8, x4, x1, x2)

inst_79521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x900007ffffffff; valaddr_reg:x3; val_offset:238563*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238563*0 + 3*417*FLEN/8, x4, x1, x2)

inst_79522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x90000fffffffff; valaddr_reg:x3; val_offset:238566*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238566*0 + 3*418*FLEN/8, x4, x1, x2)

inst_79523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x90001fffffffff; valaddr_reg:x3; val_offset:238569*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238569*0 + 3*419*FLEN/8, x4, x1, x2)

inst_79524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x90003fffffffff; valaddr_reg:x3; val_offset:238572*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238572*0 + 3*420*FLEN/8, x4, x1, x2)

inst_79525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x90007fffffffff; valaddr_reg:x3; val_offset:238575*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238575*0 + 3*421*FLEN/8, x4, x1, x2)

inst_79526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9000ffffffffff; valaddr_reg:x3; val_offset:238578*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238578*0 + 3*422*FLEN/8, x4, x1, x2)

inst_79527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9001ffffffffff; valaddr_reg:x3; val_offset:238581*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238581*0 + 3*423*FLEN/8, x4, x1, x2)

inst_79528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9003ffffffffff; valaddr_reg:x3; val_offset:238584*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238584*0 + 3*424*FLEN/8, x4, x1, x2)

inst_79529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9007ffffffffff; valaddr_reg:x3; val_offset:238587*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238587*0 + 3*425*FLEN/8, x4, x1, x2)

inst_79530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x900fffffffffff; valaddr_reg:x3; val_offset:238590*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238590*0 + 3*426*FLEN/8, x4, x1, x2)

inst_79531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x901fffffffffff; valaddr_reg:x3; val_offset:238593*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238593*0 + 3*427*FLEN/8, x4, x1, x2)

inst_79532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x903fffffffffff; valaddr_reg:x3; val_offset:238596*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238596*0 + 3*428*FLEN/8, x4, x1, x2)

inst_79533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x907fffffffffff; valaddr_reg:x3; val_offset:238599*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238599*0 + 3*429*FLEN/8, x4, x1, x2)

inst_79534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x90ffffffffffff; valaddr_reg:x3; val_offset:238602*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238602*0 + 3*430*FLEN/8, x4, x1, x2)

inst_79535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x91ffffffffffff; valaddr_reg:x3; val_offset:238605*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238605*0 + 3*431*FLEN/8, x4, x1, x2)

inst_79536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x93ffffffffffff; valaddr_reg:x3; val_offset:238608*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238608*0 + 3*432*FLEN/8, x4, x1, x2)

inst_79537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x97ffffffffffff; valaddr_reg:x3; val_offset:238611*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238611*0 + 3*433*FLEN/8, x4, x1, x2)

inst_79538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x98000000000000; valaddr_reg:x3; val_offset:238614*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238614*0 + 3*434*FLEN/8, x4, x1, x2)

inst_79539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9c000000000000; valaddr_reg:x3; val_offset:238617*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238617*0 + 3*435*FLEN/8, x4, x1, x2)

inst_79540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9e000000000000; valaddr_reg:x3; val_offset:238620*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238620*0 + 3*436*FLEN/8, x4, x1, x2)

inst_79541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9f000000000000; valaddr_reg:x3; val_offset:238623*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238623*0 + 3*437*FLEN/8, x4, x1, x2)

inst_79542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9f800000000000; valaddr_reg:x3; val_offset:238626*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238626*0 + 3*438*FLEN/8, x4, x1, x2)

inst_79543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9fc00000000000; valaddr_reg:x3; val_offset:238629*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238629*0 + 3*439*FLEN/8, x4, x1, x2)

inst_79544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9fe00000000000; valaddr_reg:x3; val_offset:238632*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238632*0 + 3*440*FLEN/8, x4, x1, x2)

inst_79545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9ff00000000000; valaddr_reg:x3; val_offset:238635*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238635*0 + 3*441*FLEN/8, x4, x1, x2)

inst_79546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9ff80000000000; valaddr_reg:x3; val_offset:238638*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238638*0 + 3*442*FLEN/8, x4, x1, x2)

inst_79547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9ffc0000000000; valaddr_reg:x3; val_offset:238641*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238641*0 + 3*443*FLEN/8, x4, x1, x2)

inst_79548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9ffe0000000000; valaddr_reg:x3; val_offset:238644*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238644*0 + 3*444*FLEN/8, x4, x1, x2)

inst_79549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9fff0000000000; valaddr_reg:x3; val_offset:238647*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238647*0 + 3*445*FLEN/8, x4, x1, x2)

inst_79550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9fff8000000000; valaddr_reg:x3; val_offset:238650*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238650*0 + 3*446*FLEN/8, x4, x1, x2)

inst_79551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9fffc000000000; valaddr_reg:x3; val_offset:238653*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238653*0 + 3*447*FLEN/8, x4, x1, x2)

inst_79552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9fffe000000000; valaddr_reg:x3; val_offset:238656*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238656*0 + 3*448*FLEN/8, x4, x1, x2)

inst_79553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9ffff000000000; valaddr_reg:x3; val_offset:238659*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238659*0 + 3*449*FLEN/8, x4, x1, x2)

inst_79554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9ffff800000000; valaddr_reg:x3; val_offset:238662*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238662*0 + 3*450*FLEN/8, x4, x1, x2)

inst_79555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9ffffc00000000; valaddr_reg:x3; val_offset:238665*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238665*0 + 3*451*FLEN/8, x4, x1, x2)

inst_79556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9ffffe00000000; valaddr_reg:x3; val_offset:238668*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238668*0 + 3*452*FLEN/8, x4, x1, x2)

inst_79557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9fffff00000000; valaddr_reg:x3; val_offset:238671*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238671*0 + 3*453*FLEN/8, x4, x1, x2)

inst_79558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9fffff80000000; valaddr_reg:x3; val_offset:238674*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238674*0 + 3*454*FLEN/8, x4, x1, x2)

inst_79559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9fffffc0000000; valaddr_reg:x3; val_offset:238677*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238677*0 + 3*455*FLEN/8, x4, x1, x2)

inst_79560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9fffffe0000000; valaddr_reg:x3; val_offset:238680*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238680*0 + 3*456*FLEN/8, x4, x1, x2)

inst_79561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9ffffff0000000; valaddr_reg:x3; val_offset:238683*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238683*0 + 3*457*FLEN/8, x4, x1, x2)

inst_79562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9ffffff8000000; valaddr_reg:x3; val_offset:238686*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238686*0 + 3*458*FLEN/8, x4, x1, x2)

inst_79563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9ffffffc000000; valaddr_reg:x3; val_offset:238689*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238689*0 + 3*459*FLEN/8, x4, x1, x2)

inst_79564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9ffffffe000000; valaddr_reg:x3; val_offset:238692*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238692*0 + 3*460*FLEN/8, x4, x1, x2)

inst_79565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9fffffff000000; valaddr_reg:x3; val_offset:238695*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238695*0 + 3*461*FLEN/8, x4, x1, x2)

inst_79566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9fffffff800000; valaddr_reg:x3; val_offset:238698*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238698*0 + 3*462*FLEN/8, x4, x1, x2)

inst_79567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9fffffffc00000; valaddr_reg:x3; val_offset:238701*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238701*0 + 3*463*FLEN/8, x4, x1, x2)

inst_79568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9fffffffe00000; valaddr_reg:x3; val_offset:238704*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238704*0 + 3*464*FLEN/8, x4, x1, x2)

inst_79569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9ffffffff00000; valaddr_reg:x3; val_offset:238707*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238707*0 + 3*465*FLEN/8, x4, x1, x2)

inst_79570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9ffffffff80000; valaddr_reg:x3; val_offset:238710*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238710*0 + 3*466*FLEN/8, x4, x1, x2)

inst_79571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9ffffffffc0000; valaddr_reg:x3; val_offset:238713*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238713*0 + 3*467*FLEN/8, x4, x1, x2)

inst_79572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9ffffffffe0000; valaddr_reg:x3; val_offset:238716*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238716*0 + 3*468*FLEN/8, x4, x1, x2)

inst_79573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9fffffffff0000; valaddr_reg:x3; val_offset:238719*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238719*0 + 3*469*FLEN/8, x4, x1, x2)

inst_79574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9fffffffff8000; valaddr_reg:x3; val_offset:238722*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238722*0 + 3*470*FLEN/8, x4, x1, x2)

inst_79575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9fffffffffc000; valaddr_reg:x3; val_offset:238725*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238725*0 + 3*471*FLEN/8, x4, x1, x2)

inst_79576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9fffffffffe000; valaddr_reg:x3; val_offset:238728*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238728*0 + 3*472*FLEN/8, x4, x1, x2)

inst_79577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9ffffffffff000; valaddr_reg:x3; val_offset:238731*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238731*0 + 3*473*FLEN/8, x4, x1, x2)

inst_79578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9ffffffffff800; valaddr_reg:x3; val_offset:238734*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238734*0 + 3*474*FLEN/8, x4, x1, x2)

inst_79579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9ffffffffffc00; valaddr_reg:x3; val_offset:238737*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238737*0 + 3*475*FLEN/8, x4, x1, x2)

inst_79580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9ffffffffffe00; valaddr_reg:x3; val_offset:238740*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238740*0 + 3*476*FLEN/8, x4, x1, x2)

inst_79581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9fffffffffff00; valaddr_reg:x3; val_offset:238743*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238743*0 + 3*477*FLEN/8, x4, x1, x2)

inst_79582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9fffffffffff80; valaddr_reg:x3; val_offset:238746*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238746*0 + 3*478*FLEN/8, x4, x1, x2)

inst_79583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9fffffffffffc0; valaddr_reg:x3; val_offset:238749*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238749*0 + 3*479*FLEN/8, x4, x1, x2)

inst_79584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9fffffffffffe0; valaddr_reg:x3; val_offset:238752*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238752*0 + 3*480*FLEN/8, x4, x1, x2)

inst_79585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9ffffffffffff0; valaddr_reg:x3; val_offset:238755*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238755*0 + 3*481*FLEN/8, x4, x1, x2)

inst_79586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9ffffffffffff8; valaddr_reg:x3; val_offset:238758*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238758*0 + 3*482*FLEN/8, x4, x1, x2)

inst_79587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9ffffffffffffc; valaddr_reg:x3; val_offset:238761*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238761*0 + 3*483*FLEN/8, x4, x1, x2)

inst_79588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9ffffffffffffe; valaddr_reg:x3; val_offset:238764*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238764*0 + 3*484*FLEN/8, x4, x1, x2)

inst_79589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8fc4308784153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8fc4308784153; op2val:0x0;
op3val:0x9fffffffffffff; valaddr_reg:x3; val_offset:238767*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238767*0 + 3*485*FLEN/8, x4, x1, x2)

inst_79590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:238770*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238770*0 + 3*486*FLEN/8, x4, x1, x2)

inst_79591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:238773*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238773*0 + 3*487*FLEN/8, x4, x1, x2)

inst_79592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:238776*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238776*0 + 3*488*FLEN/8, x4, x1, x2)

inst_79593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:238779*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238779*0 + 3*489*FLEN/8, x4, x1, x2)

inst_79594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:238782*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238782*0 + 3*490*FLEN/8, x4, x1, x2)

inst_79595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:238785*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238785*0 + 3*491*FLEN/8, x4, x1, x2)

inst_79596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:238788*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238788*0 + 3*492*FLEN/8, x4, x1, x2)

inst_79597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:238791*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238791*0 + 3*493*FLEN/8, x4, x1, x2)

inst_79598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:238794*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238794*0 + 3*494*FLEN/8, x4, x1, x2)

inst_79599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:238797*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238797*0 + 3*495*FLEN/8, x4, x1, x2)

inst_79600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:238800*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238800*0 + 3*496*FLEN/8, x4, x1, x2)

inst_79601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:238803*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238803*0 + 3*497*FLEN/8, x4, x1, x2)

inst_79602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:238806*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238806*0 + 3*498*FLEN/8, x4, x1, x2)

inst_79603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:238809*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238809*0 + 3*499*FLEN/8, x4, x1, x2)

inst_79604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:238812*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238812*0 + 3*500*FLEN/8, x4, x1, x2)

inst_79605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:238815*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238815*0 + 3*501*FLEN/8, x4, x1, x2)

inst_79606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:238818*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238818*0 + 3*502*FLEN/8, x4, x1, x2)

inst_79607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:238821*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238821*0 + 3*503*FLEN/8, x4, x1, x2)

inst_79608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:238824*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238824*0 + 3*504*FLEN/8, x4, x1, x2)

inst_79609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:238827*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238827*0 + 3*505*FLEN/8, x4, x1, x2)

inst_79610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:238830*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238830*0 + 3*506*FLEN/8, x4, x1, x2)

inst_79611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:238833*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238833*0 + 3*507*FLEN/8, x4, x1, x2)

inst_79612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x130000000000000; valaddr_reg:x3; val_offset:238836*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238836*0 + 3*508*FLEN/8, x4, x1, x2)

inst_79613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x130000000000001; valaddr_reg:x3; val_offset:238839*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238839*0 + 3*509*FLEN/8, x4, x1, x2)

inst_79614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x130000000000003; valaddr_reg:x3; val_offset:238842*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238842*0 + 3*510*FLEN/8, x4, x1, x2)

inst_79615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x130000000000007; valaddr_reg:x3; val_offset:238845*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238845*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_79616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13000000000000f; valaddr_reg:x3; val_offset:238848*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238848*0 + 3*512*FLEN/8, x4, x1, x2)

inst_79617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13000000000001f; valaddr_reg:x3; val_offset:238851*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238851*0 + 3*513*FLEN/8, x4, x1, x2)

inst_79618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13000000000003f; valaddr_reg:x3; val_offset:238854*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238854*0 + 3*514*FLEN/8, x4, x1, x2)

inst_79619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13000000000007f; valaddr_reg:x3; val_offset:238857*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238857*0 + 3*515*FLEN/8, x4, x1, x2)

inst_79620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x1300000000000ff; valaddr_reg:x3; val_offset:238860*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238860*0 + 3*516*FLEN/8, x4, x1, x2)

inst_79621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x1300000000001ff; valaddr_reg:x3; val_offset:238863*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238863*0 + 3*517*FLEN/8, x4, x1, x2)

inst_79622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x1300000000003ff; valaddr_reg:x3; val_offset:238866*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238866*0 + 3*518*FLEN/8, x4, x1, x2)

inst_79623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x1300000000007ff; valaddr_reg:x3; val_offset:238869*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238869*0 + 3*519*FLEN/8, x4, x1, x2)

inst_79624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x130000000000fff; valaddr_reg:x3; val_offset:238872*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238872*0 + 3*520*FLEN/8, x4, x1, x2)

inst_79625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x130000000001fff; valaddr_reg:x3; val_offset:238875*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238875*0 + 3*521*FLEN/8, x4, x1, x2)

inst_79626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x130000000003fff; valaddr_reg:x3; val_offset:238878*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238878*0 + 3*522*FLEN/8, x4, x1, x2)

inst_79627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x130000000007fff; valaddr_reg:x3; val_offset:238881*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238881*0 + 3*523*FLEN/8, x4, x1, x2)

inst_79628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13000000000ffff; valaddr_reg:x3; val_offset:238884*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238884*0 + 3*524*FLEN/8, x4, x1, x2)

inst_79629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13000000001ffff; valaddr_reg:x3; val_offset:238887*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238887*0 + 3*525*FLEN/8, x4, x1, x2)

inst_79630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13000000003ffff; valaddr_reg:x3; val_offset:238890*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238890*0 + 3*526*FLEN/8, x4, x1, x2)

inst_79631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13000000007ffff; valaddr_reg:x3; val_offset:238893*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238893*0 + 3*527*FLEN/8, x4, x1, x2)

inst_79632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x1300000000fffff; valaddr_reg:x3; val_offset:238896*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238896*0 + 3*528*FLEN/8, x4, x1, x2)

inst_79633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x1300000001fffff; valaddr_reg:x3; val_offset:238899*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238899*0 + 3*529*FLEN/8, x4, x1, x2)

inst_79634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x1300000003fffff; valaddr_reg:x3; val_offset:238902*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238902*0 + 3*530*FLEN/8, x4, x1, x2)

inst_79635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x1300000007fffff; valaddr_reg:x3; val_offset:238905*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238905*0 + 3*531*FLEN/8, x4, x1, x2)

inst_79636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x130000000ffffff; valaddr_reg:x3; val_offset:238908*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238908*0 + 3*532*FLEN/8, x4, x1, x2)

inst_79637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x130000001ffffff; valaddr_reg:x3; val_offset:238911*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238911*0 + 3*533*FLEN/8, x4, x1, x2)

inst_79638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x130000003ffffff; valaddr_reg:x3; val_offset:238914*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238914*0 + 3*534*FLEN/8, x4, x1, x2)

inst_79639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x130000007ffffff; valaddr_reg:x3; val_offset:238917*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238917*0 + 3*535*FLEN/8, x4, x1, x2)

inst_79640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13000000fffffff; valaddr_reg:x3; val_offset:238920*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238920*0 + 3*536*FLEN/8, x4, x1, x2)

inst_79641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13000001fffffff; valaddr_reg:x3; val_offset:238923*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238923*0 + 3*537*FLEN/8, x4, x1, x2)

inst_79642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13000003fffffff; valaddr_reg:x3; val_offset:238926*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238926*0 + 3*538*FLEN/8, x4, x1, x2)

inst_79643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13000007fffffff; valaddr_reg:x3; val_offset:238929*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238929*0 + 3*539*FLEN/8, x4, x1, x2)

inst_79644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x1300000ffffffff; valaddr_reg:x3; val_offset:238932*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238932*0 + 3*540*FLEN/8, x4, x1, x2)

inst_79645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x1300001ffffffff; valaddr_reg:x3; val_offset:238935*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238935*0 + 3*541*FLEN/8, x4, x1, x2)

inst_79646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x1300003ffffffff; valaddr_reg:x3; val_offset:238938*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238938*0 + 3*542*FLEN/8, x4, x1, x2)

inst_79647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x1300007ffffffff; valaddr_reg:x3; val_offset:238941*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238941*0 + 3*543*FLEN/8, x4, x1, x2)

inst_79648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x130000fffffffff; valaddr_reg:x3; val_offset:238944*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238944*0 + 3*544*FLEN/8, x4, x1, x2)

inst_79649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x130001fffffffff; valaddr_reg:x3; val_offset:238947*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238947*0 + 3*545*FLEN/8, x4, x1, x2)

inst_79650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x130003fffffffff; valaddr_reg:x3; val_offset:238950*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238950*0 + 3*546*FLEN/8, x4, x1, x2)

inst_79651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x130007fffffffff; valaddr_reg:x3; val_offset:238953*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238953*0 + 3*547*FLEN/8, x4, x1, x2)

inst_79652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13000ffffffffff; valaddr_reg:x3; val_offset:238956*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238956*0 + 3*548*FLEN/8, x4, x1, x2)

inst_79653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13001ffffffffff; valaddr_reg:x3; val_offset:238959*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238959*0 + 3*549*FLEN/8, x4, x1, x2)

inst_79654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13003ffffffffff; valaddr_reg:x3; val_offset:238962*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238962*0 + 3*550*FLEN/8, x4, x1, x2)

inst_79655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13007ffffffffff; valaddr_reg:x3; val_offset:238965*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238965*0 + 3*551*FLEN/8, x4, x1, x2)

inst_79656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x1300fffffffffff; valaddr_reg:x3; val_offset:238968*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238968*0 + 3*552*FLEN/8, x4, x1, x2)

inst_79657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x1301fffffffffff; valaddr_reg:x3; val_offset:238971*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238971*0 + 3*553*FLEN/8, x4, x1, x2)

inst_79658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x1303fffffffffff; valaddr_reg:x3; val_offset:238974*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238974*0 + 3*554*FLEN/8, x4, x1, x2)

inst_79659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x1307fffffffffff; valaddr_reg:x3; val_offset:238977*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238977*0 + 3*555*FLEN/8, x4, x1, x2)

inst_79660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x130ffffffffffff; valaddr_reg:x3; val_offset:238980*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238980*0 + 3*556*FLEN/8, x4, x1, x2)

inst_79661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x131ffffffffffff; valaddr_reg:x3; val_offset:238983*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238983*0 + 3*557*FLEN/8, x4, x1, x2)

inst_79662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x133ffffffffffff; valaddr_reg:x3; val_offset:238986*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238986*0 + 3*558*FLEN/8, x4, x1, x2)

inst_79663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x137ffffffffffff; valaddr_reg:x3; val_offset:238989*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238989*0 + 3*559*FLEN/8, x4, x1, x2)

inst_79664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x138000000000000; valaddr_reg:x3; val_offset:238992*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238992*0 + 3*560*FLEN/8, x4, x1, x2)

inst_79665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13c000000000000; valaddr_reg:x3; val_offset:238995*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238995*0 + 3*561*FLEN/8, x4, x1, x2)

inst_79666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13e000000000000; valaddr_reg:x3; val_offset:238998*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238998*0 + 3*562*FLEN/8, x4, x1, x2)

inst_79667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13f000000000000; valaddr_reg:x3; val_offset:239001*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239001*0 + 3*563*FLEN/8, x4, x1, x2)

inst_79668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13f800000000000; valaddr_reg:x3; val_offset:239004*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239004*0 + 3*564*FLEN/8, x4, x1, x2)

inst_79669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13fc00000000000; valaddr_reg:x3; val_offset:239007*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239007*0 + 3*565*FLEN/8, x4, x1, x2)

inst_79670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13fe00000000000; valaddr_reg:x3; val_offset:239010*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239010*0 + 3*566*FLEN/8, x4, x1, x2)

inst_79671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13ff00000000000; valaddr_reg:x3; val_offset:239013*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239013*0 + 3*567*FLEN/8, x4, x1, x2)

inst_79672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13ff80000000000; valaddr_reg:x3; val_offset:239016*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239016*0 + 3*568*FLEN/8, x4, x1, x2)

inst_79673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13ffc0000000000; valaddr_reg:x3; val_offset:239019*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239019*0 + 3*569*FLEN/8, x4, x1, x2)

inst_79674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13ffe0000000000; valaddr_reg:x3; val_offset:239022*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239022*0 + 3*570*FLEN/8, x4, x1, x2)

inst_79675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13fff0000000000; valaddr_reg:x3; val_offset:239025*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239025*0 + 3*571*FLEN/8, x4, x1, x2)

inst_79676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13fff8000000000; valaddr_reg:x3; val_offset:239028*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239028*0 + 3*572*FLEN/8, x4, x1, x2)

inst_79677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13fffc000000000; valaddr_reg:x3; val_offset:239031*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239031*0 + 3*573*FLEN/8, x4, x1, x2)

inst_79678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13fffe000000000; valaddr_reg:x3; val_offset:239034*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239034*0 + 3*574*FLEN/8, x4, x1, x2)

inst_79679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13ffff000000000; valaddr_reg:x3; val_offset:239037*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239037*0 + 3*575*FLEN/8, x4, x1, x2)

inst_79680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13ffff800000000; valaddr_reg:x3; val_offset:239040*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239040*0 + 3*576*FLEN/8, x4, x1, x2)

inst_79681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13ffffc00000000; valaddr_reg:x3; val_offset:239043*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239043*0 + 3*577*FLEN/8, x4, x1, x2)

inst_79682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13ffffe00000000; valaddr_reg:x3; val_offset:239046*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239046*0 + 3*578*FLEN/8, x4, x1, x2)

inst_79683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13fffff00000000; valaddr_reg:x3; val_offset:239049*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239049*0 + 3*579*FLEN/8, x4, x1, x2)

inst_79684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13fffff80000000; valaddr_reg:x3; val_offset:239052*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239052*0 + 3*580*FLEN/8, x4, x1, x2)

inst_79685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13fffffc0000000; valaddr_reg:x3; val_offset:239055*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239055*0 + 3*581*FLEN/8, x4, x1, x2)

inst_79686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13fffffe0000000; valaddr_reg:x3; val_offset:239058*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239058*0 + 3*582*FLEN/8, x4, x1, x2)

inst_79687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13ffffff0000000; valaddr_reg:x3; val_offset:239061*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239061*0 + 3*583*FLEN/8, x4, x1, x2)

inst_79688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13ffffff8000000; valaddr_reg:x3; val_offset:239064*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239064*0 + 3*584*FLEN/8, x4, x1, x2)

inst_79689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13ffffffc000000; valaddr_reg:x3; val_offset:239067*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239067*0 + 3*585*FLEN/8, x4, x1, x2)

inst_79690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13ffffffe000000; valaddr_reg:x3; val_offset:239070*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239070*0 + 3*586*FLEN/8, x4, x1, x2)

inst_79691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13fffffff000000; valaddr_reg:x3; val_offset:239073*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239073*0 + 3*587*FLEN/8, x4, x1, x2)

inst_79692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13fffffff800000; valaddr_reg:x3; val_offset:239076*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239076*0 + 3*588*FLEN/8, x4, x1, x2)

inst_79693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13fffffffc00000; valaddr_reg:x3; val_offset:239079*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239079*0 + 3*589*FLEN/8, x4, x1, x2)

inst_79694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13fffffffe00000; valaddr_reg:x3; val_offset:239082*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239082*0 + 3*590*FLEN/8, x4, x1, x2)

inst_79695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13ffffffff00000; valaddr_reg:x3; val_offset:239085*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239085*0 + 3*591*FLEN/8, x4, x1, x2)

inst_79696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13ffffffff80000; valaddr_reg:x3; val_offset:239088*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239088*0 + 3*592*FLEN/8, x4, x1, x2)

inst_79697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13ffffffffc0000; valaddr_reg:x3; val_offset:239091*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239091*0 + 3*593*FLEN/8, x4, x1, x2)

inst_79698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13ffffffffe0000; valaddr_reg:x3; val_offset:239094*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239094*0 + 3*594*FLEN/8, x4, x1, x2)

inst_79699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13fffffffff0000; valaddr_reg:x3; val_offset:239097*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239097*0 + 3*595*FLEN/8, x4, x1, x2)

inst_79700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13fffffffff8000; valaddr_reg:x3; val_offset:239100*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239100*0 + 3*596*FLEN/8, x4, x1, x2)

inst_79701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13fffffffffc000; valaddr_reg:x3; val_offset:239103*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239103*0 + 3*597*FLEN/8, x4, x1, x2)

inst_79702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13fffffffffe000; valaddr_reg:x3; val_offset:239106*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239106*0 + 3*598*FLEN/8, x4, x1, x2)

inst_79703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13ffffffffff000; valaddr_reg:x3; val_offset:239109*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239109*0 + 3*599*FLEN/8, x4, x1, x2)

inst_79704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13ffffffffff800; valaddr_reg:x3; val_offset:239112*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239112*0 + 3*600*FLEN/8, x4, x1, x2)

inst_79705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13ffffffffffc00; valaddr_reg:x3; val_offset:239115*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239115*0 + 3*601*FLEN/8, x4, x1, x2)

inst_79706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13ffffffffffe00; valaddr_reg:x3; val_offset:239118*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239118*0 + 3*602*FLEN/8, x4, x1, x2)

inst_79707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13fffffffffff00; valaddr_reg:x3; val_offset:239121*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239121*0 + 3*603*FLEN/8, x4, x1, x2)

inst_79708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13fffffffffff80; valaddr_reg:x3; val_offset:239124*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239124*0 + 3*604*FLEN/8, x4, x1, x2)

inst_79709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13fffffffffffc0; valaddr_reg:x3; val_offset:239127*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239127*0 + 3*605*FLEN/8, x4, x1, x2)

inst_79710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13fffffffffffe0; valaddr_reg:x3; val_offset:239130*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239130*0 + 3*606*FLEN/8, x4, x1, x2)

inst_79711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13ffffffffffff0; valaddr_reg:x3; val_offset:239133*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239133*0 + 3*607*FLEN/8, x4, x1, x2)

inst_79712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13ffffffffffff8; valaddr_reg:x3; val_offset:239136*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239136*0 + 3*608*FLEN/8, x4, x1, x2)

inst_79713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13ffffffffffffc; valaddr_reg:x3; val_offset:239139*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239139*0 + 3*609*FLEN/8, x4, x1, x2)

inst_79714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13ffffffffffffe; valaddr_reg:x3; val_offset:239142*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239142*0 + 3*610*FLEN/8, x4, x1, x2)

inst_79715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9085830356268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9085830356268; op2val:0x0;
op3val:0x13fffffffffffff; valaddr_reg:x3; val_offset:239145*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239145*0 + 3*611*FLEN/8, x4, x1, x2)

inst_79716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:239148*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239148*0 + 3*612*FLEN/8, x4, x1, x2)

inst_79717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:239151*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239151*0 + 3*613*FLEN/8, x4, x1, x2)

inst_79718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:239154*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239154*0 + 3*614*FLEN/8, x4, x1, x2)

inst_79719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:239157*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239157*0 + 3*615*FLEN/8, x4, x1, x2)

inst_79720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:239160*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239160*0 + 3*616*FLEN/8, x4, x1, x2)

inst_79721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:239163*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239163*0 + 3*617*FLEN/8, x4, x1, x2)

inst_79722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:239166*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239166*0 + 3*618*FLEN/8, x4, x1, x2)

inst_79723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:239169*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239169*0 + 3*619*FLEN/8, x4, x1, x2)

inst_79724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:239172*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239172*0 + 3*620*FLEN/8, x4, x1, x2)

inst_79725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:239175*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239175*0 + 3*621*FLEN/8, x4, x1, x2)

inst_79726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:239178*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239178*0 + 3*622*FLEN/8, x4, x1, x2)

inst_79727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:239181*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239181*0 + 3*623*FLEN/8, x4, x1, x2)

inst_79728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:239184*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239184*0 + 3*624*FLEN/8, x4, x1, x2)

inst_79729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:239187*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239187*0 + 3*625*FLEN/8, x4, x1, x2)

inst_79730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:239190*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239190*0 + 3*626*FLEN/8, x4, x1, x2)

inst_79731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:239193*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239193*0 + 3*627*FLEN/8, x4, x1, x2)

inst_79732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:239196*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239196*0 + 3*628*FLEN/8, x4, x1, x2)

inst_79733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:239199*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239199*0 + 3*629*FLEN/8, x4, x1, x2)

inst_79734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:239202*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239202*0 + 3*630*FLEN/8, x4, x1, x2)

inst_79735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:239205*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239205*0 + 3*631*FLEN/8, x4, x1, x2)

inst_79736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:239208*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239208*0 + 3*632*FLEN/8, x4, x1, x2)

inst_79737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:239211*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239211*0 + 3*633*FLEN/8, x4, x1, x2)

inst_79738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x8210000000000000; valaddr_reg:x3; val_offset:239214*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239214*0 + 3*634*FLEN/8, x4, x1, x2)

inst_79739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x8210000000000001; valaddr_reg:x3; val_offset:239217*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239217*0 + 3*635*FLEN/8, x4, x1, x2)

inst_79740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x8210000000000003; valaddr_reg:x3; val_offset:239220*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239220*0 + 3*636*FLEN/8, x4, x1, x2)

inst_79741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x8210000000000007; valaddr_reg:x3; val_offset:239223*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239223*0 + 3*637*FLEN/8, x4, x1, x2)

inst_79742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821000000000000f; valaddr_reg:x3; val_offset:239226*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239226*0 + 3*638*FLEN/8, x4, x1, x2)

inst_79743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821000000000001f; valaddr_reg:x3; val_offset:239229*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239229*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_79744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821000000000003f; valaddr_reg:x3; val_offset:239232*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239232*0 + 3*640*FLEN/8, x4, x1, x2)

inst_79745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821000000000007f; valaddr_reg:x3; val_offset:239235*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239235*0 + 3*641*FLEN/8, x4, x1, x2)

inst_79746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x82100000000000ff; valaddr_reg:x3; val_offset:239238*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239238*0 + 3*642*FLEN/8, x4, x1, x2)

inst_79747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x82100000000001ff; valaddr_reg:x3; val_offset:239241*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239241*0 + 3*643*FLEN/8, x4, x1, x2)

inst_79748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x82100000000003ff; valaddr_reg:x3; val_offset:239244*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239244*0 + 3*644*FLEN/8, x4, x1, x2)

inst_79749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x82100000000007ff; valaddr_reg:x3; val_offset:239247*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239247*0 + 3*645*FLEN/8, x4, x1, x2)

inst_79750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x8210000000000fff; valaddr_reg:x3; val_offset:239250*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239250*0 + 3*646*FLEN/8, x4, x1, x2)

inst_79751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x8210000000001fff; valaddr_reg:x3; val_offset:239253*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239253*0 + 3*647*FLEN/8, x4, x1, x2)

inst_79752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x8210000000003fff; valaddr_reg:x3; val_offset:239256*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239256*0 + 3*648*FLEN/8, x4, x1, x2)

inst_79753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x8210000000007fff; valaddr_reg:x3; val_offset:239259*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239259*0 + 3*649*FLEN/8, x4, x1, x2)

inst_79754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821000000000ffff; valaddr_reg:x3; val_offset:239262*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239262*0 + 3*650*FLEN/8, x4, x1, x2)

inst_79755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821000000001ffff; valaddr_reg:x3; val_offset:239265*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239265*0 + 3*651*FLEN/8, x4, x1, x2)

inst_79756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821000000003ffff; valaddr_reg:x3; val_offset:239268*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239268*0 + 3*652*FLEN/8, x4, x1, x2)

inst_79757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821000000007ffff; valaddr_reg:x3; val_offset:239271*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239271*0 + 3*653*FLEN/8, x4, x1, x2)

inst_79758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x82100000000fffff; valaddr_reg:x3; val_offset:239274*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239274*0 + 3*654*FLEN/8, x4, x1, x2)

inst_79759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x82100000001fffff; valaddr_reg:x3; val_offset:239277*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239277*0 + 3*655*FLEN/8, x4, x1, x2)

inst_79760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x82100000003fffff; valaddr_reg:x3; val_offset:239280*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239280*0 + 3*656*FLEN/8, x4, x1, x2)

inst_79761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x82100000007fffff; valaddr_reg:x3; val_offset:239283*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239283*0 + 3*657*FLEN/8, x4, x1, x2)

inst_79762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x8210000000ffffff; valaddr_reg:x3; val_offset:239286*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239286*0 + 3*658*FLEN/8, x4, x1, x2)

inst_79763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x8210000001ffffff; valaddr_reg:x3; val_offset:239289*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239289*0 + 3*659*FLEN/8, x4, x1, x2)

inst_79764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x8210000003ffffff; valaddr_reg:x3; val_offset:239292*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239292*0 + 3*660*FLEN/8, x4, x1, x2)

inst_79765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x8210000007ffffff; valaddr_reg:x3; val_offset:239295*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239295*0 + 3*661*FLEN/8, x4, x1, x2)

inst_79766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821000000fffffff; valaddr_reg:x3; val_offset:239298*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239298*0 + 3*662*FLEN/8, x4, x1, x2)

inst_79767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821000001fffffff; valaddr_reg:x3; val_offset:239301*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239301*0 + 3*663*FLEN/8, x4, x1, x2)

inst_79768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821000003fffffff; valaddr_reg:x3; val_offset:239304*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239304*0 + 3*664*FLEN/8, x4, x1, x2)

inst_79769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821000007fffffff; valaddr_reg:x3; val_offset:239307*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239307*0 + 3*665*FLEN/8, x4, x1, x2)

inst_79770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x82100000ffffffff; valaddr_reg:x3; val_offset:239310*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239310*0 + 3*666*FLEN/8, x4, x1, x2)

inst_79771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x82100001ffffffff; valaddr_reg:x3; val_offset:239313*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239313*0 + 3*667*FLEN/8, x4, x1, x2)

inst_79772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x82100003ffffffff; valaddr_reg:x3; val_offset:239316*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239316*0 + 3*668*FLEN/8, x4, x1, x2)

inst_79773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x82100007ffffffff; valaddr_reg:x3; val_offset:239319*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239319*0 + 3*669*FLEN/8, x4, x1, x2)

inst_79774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x8210000fffffffff; valaddr_reg:x3; val_offset:239322*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239322*0 + 3*670*FLEN/8, x4, x1, x2)

inst_79775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x8210001fffffffff; valaddr_reg:x3; val_offset:239325*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239325*0 + 3*671*FLEN/8, x4, x1, x2)

inst_79776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x8210003fffffffff; valaddr_reg:x3; val_offset:239328*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239328*0 + 3*672*FLEN/8, x4, x1, x2)

inst_79777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x8210007fffffffff; valaddr_reg:x3; val_offset:239331*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239331*0 + 3*673*FLEN/8, x4, x1, x2)

inst_79778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821000ffffffffff; valaddr_reg:x3; val_offset:239334*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239334*0 + 3*674*FLEN/8, x4, x1, x2)

inst_79779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821001ffffffffff; valaddr_reg:x3; val_offset:239337*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239337*0 + 3*675*FLEN/8, x4, x1, x2)

inst_79780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821003ffffffffff; valaddr_reg:x3; val_offset:239340*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239340*0 + 3*676*FLEN/8, x4, x1, x2)

inst_79781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821007ffffffffff; valaddr_reg:x3; val_offset:239343*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239343*0 + 3*677*FLEN/8, x4, x1, x2)

inst_79782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x82100fffffffffff; valaddr_reg:x3; val_offset:239346*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239346*0 + 3*678*FLEN/8, x4, x1, x2)

inst_79783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x82101fffffffffff; valaddr_reg:x3; val_offset:239349*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239349*0 + 3*679*FLEN/8, x4, x1, x2)

inst_79784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x82103fffffffffff; valaddr_reg:x3; val_offset:239352*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239352*0 + 3*680*FLEN/8, x4, x1, x2)

inst_79785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x82107fffffffffff; valaddr_reg:x3; val_offset:239355*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239355*0 + 3*681*FLEN/8, x4, x1, x2)

inst_79786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x8210ffffffffffff; valaddr_reg:x3; val_offset:239358*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239358*0 + 3*682*FLEN/8, x4, x1, x2)

inst_79787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x8211ffffffffffff; valaddr_reg:x3; val_offset:239361*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239361*0 + 3*683*FLEN/8, x4, x1, x2)

inst_79788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x8213ffffffffffff; valaddr_reg:x3; val_offset:239364*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239364*0 + 3*684*FLEN/8, x4, x1, x2)

inst_79789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x8217ffffffffffff; valaddr_reg:x3; val_offset:239367*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239367*0 + 3*685*FLEN/8, x4, x1, x2)

inst_79790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x8218000000000000; valaddr_reg:x3; val_offset:239370*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239370*0 + 3*686*FLEN/8, x4, x1, x2)

inst_79791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821c000000000000; valaddr_reg:x3; val_offset:239373*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239373*0 + 3*687*FLEN/8, x4, x1, x2)

inst_79792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821e000000000000; valaddr_reg:x3; val_offset:239376*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239376*0 + 3*688*FLEN/8, x4, x1, x2)

inst_79793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821f000000000000; valaddr_reg:x3; val_offset:239379*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239379*0 + 3*689*FLEN/8, x4, x1, x2)

inst_79794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821f800000000000; valaddr_reg:x3; val_offset:239382*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239382*0 + 3*690*FLEN/8, x4, x1, x2)

inst_79795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821fc00000000000; valaddr_reg:x3; val_offset:239385*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239385*0 + 3*691*FLEN/8, x4, x1, x2)

inst_79796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821fe00000000000; valaddr_reg:x3; val_offset:239388*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239388*0 + 3*692*FLEN/8, x4, x1, x2)

inst_79797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821ff00000000000; valaddr_reg:x3; val_offset:239391*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239391*0 + 3*693*FLEN/8, x4, x1, x2)

inst_79798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821ff80000000000; valaddr_reg:x3; val_offset:239394*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239394*0 + 3*694*FLEN/8, x4, x1, x2)

inst_79799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821ffc0000000000; valaddr_reg:x3; val_offset:239397*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239397*0 + 3*695*FLEN/8, x4, x1, x2)

inst_79800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821ffe0000000000; valaddr_reg:x3; val_offset:239400*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239400*0 + 3*696*FLEN/8, x4, x1, x2)

inst_79801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821fff0000000000; valaddr_reg:x3; val_offset:239403*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239403*0 + 3*697*FLEN/8, x4, x1, x2)

inst_79802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821fff8000000000; valaddr_reg:x3; val_offset:239406*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239406*0 + 3*698*FLEN/8, x4, x1, x2)

inst_79803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821fffc000000000; valaddr_reg:x3; val_offset:239409*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239409*0 + 3*699*FLEN/8, x4, x1, x2)

inst_79804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821fffe000000000; valaddr_reg:x3; val_offset:239412*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239412*0 + 3*700*FLEN/8, x4, x1, x2)

inst_79805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821ffff000000000; valaddr_reg:x3; val_offset:239415*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239415*0 + 3*701*FLEN/8, x4, x1, x2)

inst_79806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821ffff800000000; valaddr_reg:x3; val_offset:239418*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239418*0 + 3*702*FLEN/8, x4, x1, x2)

inst_79807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821ffffc00000000; valaddr_reg:x3; val_offset:239421*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239421*0 + 3*703*FLEN/8, x4, x1, x2)

inst_79808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821ffffe00000000; valaddr_reg:x3; val_offset:239424*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239424*0 + 3*704*FLEN/8, x4, x1, x2)

inst_79809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821fffff00000000; valaddr_reg:x3; val_offset:239427*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239427*0 + 3*705*FLEN/8, x4, x1, x2)

inst_79810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821fffff80000000; valaddr_reg:x3; val_offset:239430*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239430*0 + 3*706*FLEN/8, x4, x1, x2)

inst_79811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821fffffc0000000; valaddr_reg:x3; val_offset:239433*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239433*0 + 3*707*FLEN/8, x4, x1, x2)

inst_79812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821fffffe0000000; valaddr_reg:x3; val_offset:239436*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239436*0 + 3*708*FLEN/8, x4, x1, x2)

inst_79813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821ffffff0000000; valaddr_reg:x3; val_offset:239439*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239439*0 + 3*709*FLEN/8, x4, x1, x2)

inst_79814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821ffffff8000000; valaddr_reg:x3; val_offset:239442*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239442*0 + 3*710*FLEN/8, x4, x1, x2)

inst_79815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821ffffffc000000; valaddr_reg:x3; val_offset:239445*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239445*0 + 3*711*FLEN/8, x4, x1, x2)

inst_79816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821ffffffe000000; valaddr_reg:x3; val_offset:239448*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239448*0 + 3*712*FLEN/8, x4, x1, x2)

inst_79817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821fffffff000000; valaddr_reg:x3; val_offset:239451*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239451*0 + 3*713*FLEN/8, x4, x1, x2)

inst_79818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821fffffff800000; valaddr_reg:x3; val_offset:239454*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239454*0 + 3*714*FLEN/8, x4, x1, x2)

inst_79819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821fffffffc00000; valaddr_reg:x3; val_offset:239457*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239457*0 + 3*715*FLEN/8, x4, x1, x2)

inst_79820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821fffffffe00000; valaddr_reg:x3; val_offset:239460*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239460*0 + 3*716*FLEN/8, x4, x1, x2)

inst_79821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821ffffffff00000; valaddr_reg:x3; val_offset:239463*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239463*0 + 3*717*FLEN/8, x4, x1, x2)

inst_79822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821ffffffff80000; valaddr_reg:x3; val_offset:239466*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239466*0 + 3*718*FLEN/8, x4, x1, x2)

inst_79823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821ffffffffc0000; valaddr_reg:x3; val_offset:239469*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239469*0 + 3*719*FLEN/8, x4, x1, x2)

inst_79824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821ffffffffe0000; valaddr_reg:x3; val_offset:239472*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239472*0 + 3*720*FLEN/8, x4, x1, x2)

inst_79825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821fffffffff0000; valaddr_reg:x3; val_offset:239475*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239475*0 + 3*721*FLEN/8, x4, x1, x2)

inst_79826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821fffffffff8000; valaddr_reg:x3; val_offset:239478*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239478*0 + 3*722*FLEN/8, x4, x1, x2)

inst_79827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821fffffffffc000; valaddr_reg:x3; val_offset:239481*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239481*0 + 3*723*FLEN/8, x4, x1, x2)

inst_79828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821fffffffffe000; valaddr_reg:x3; val_offset:239484*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239484*0 + 3*724*FLEN/8, x4, x1, x2)

inst_79829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821ffffffffff000; valaddr_reg:x3; val_offset:239487*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239487*0 + 3*725*FLEN/8, x4, x1, x2)

inst_79830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821ffffffffff800; valaddr_reg:x3; val_offset:239490*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239490*0 + 3*726*FLEN/8, x4, x1, x2)

inst_79831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821ffffffffffc00; valaddr_reg:x3; val_offset:239493*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239493*0 + 3*727*FLEN/8, x4, x1, x2)

inst_79832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821ffffffffffe00; valaddr_reg:x3; val_offset:239496*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239496*0 + 3*728*FLEN/8, x4, x1, x2)

inst_79833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821fffffffffff00; valaddr_reg:x3; val_offset:239499*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239499*0 + 3*729*FLEN/8, x4, x1, x2)

inst_79834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821fffffffffff80; valaddr_reg:x3; val_offset:239502*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239502*0 + 3*730*FLEN/8, x4, x1, x2)

inst_79835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821fffffffffffc0; valaddr_reg:x3; val_offset:239505*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239505*0 + 3*731*FLEN/8, x4, x1, x2)

inst_79836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821fffffffffffe0; valaddr_reg:x3; val_offset:239508*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239508*0 + 3*732*FLEN/8, x4, x1, x2)

inst_79837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821ffffffffffff0; valaddr_reg:x3; val_offset:239511*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239511*0 + 3*733*FLEN/8, x4, x1, x2)

inst_79838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821ffffffffffff8; valaddr_reg:x3; val_offset:239514*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239514*0 + 3*734*FLEN/8, x4, x1, x2)

inst_79839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821ffffffffffffc; valaddr_reg:x3; val_offset:239517*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239517*0 + 3*735*FLEN/8, x4, x1, x2)

inst_79840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821ffffffffffffe; valaddr_reg:x3; val_offset:239520*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239520*0 + 3*736*FLEN/8, x4, x1, x2)

inst_79841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90f0d1eecae4a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa90f0d1eecae4a; op2val:0x8000;
op3val:0x821fffffffffffff; valaddr_reg:x3; val_offset:239523*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239523*0 + 3*737*FLEN/8, x4, x1, x2)

inst_79842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9136d39907a79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9136d39907a79; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:239526*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239526*0 + 3*738*FLEN/8, x4, x1, x2)

inst_79843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9136d39907a79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9136d39907a79; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:239529*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239529*0 + 3*739*FLEN/8, x4, x1, x2)

inst_79844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9136d39907a79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9136d39907a79; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:239532*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239532*0 + 3*740*FLEN/8, x4, x1, x2)

inst_79845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9136d39907a79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9136d39907a79; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:239535*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239535*0 + 3*741*FLEN/8, x4, x1, x2)

inst_79846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9136d39907a79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9136d39907a79; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:239538*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239538*0 + 3*742*FLEN/8, x4, x1, x2)

inst_79847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9136d39907a79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9136d39907a79; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:239541*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239541*0 + 3*743*FLEN/8, x4, x1, x2)

inst_79848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9136d39907a79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9136d39907a79; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:239544*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239544*0 + 3*744*FLEN/8, x4, x1, x2)

inst_79849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9136d39907a79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9136d39907a79; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:239547*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239547*0 + 3*745*FLEN/8, x4, x1, x2)

inst_79850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9136d39907a79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9136d39907a79; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:239550*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239550*0 + 3*746*FLEN/8, x4, x1, x2)

inst_79851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9136d39907a79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9136d39907a79; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:239553*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239553*0 + 3*747*FLEN/8, x4, x1, x2)

inst_79852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9136d39907a79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9136d39907a79; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:239556*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239556*0 + 3*748*FLEN/8, x4, x1, x2)

inst_79853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9136d39907a79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9136d39907a79; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:239559*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239559*0 + 3*749*FLEN/8, x4, x1, x2)

inst_79854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9136d39907a79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9136d39907a79; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:239562*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239562*0 + 3*750*FLEN/8, x4, x1, x2)

inst_79855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9136d39907a79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9136d39907a79; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:239565*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239565*0 + 3*751*FLEN/8, x4, x1, x2)

inst_79856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9136d39907a79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9136d39907a79; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:239568*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239568*0 + 3*752*FLEN/8, x4, x1, x2)

inst_79857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9136d39907a79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9136d39907a79; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:239571*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239571*0 + 3*753*FLEN/8, x4, x1, x2)

inst_79858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9136d39907a79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9136d39907a79; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:239574*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239574*0 + 3*754*FLEN/8, x4, x1, x2)

inst_79859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9136d39907a79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9136d39907a79; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:239577*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239577*0 + 3*755*FLEN/8, x4, x1, x2)

inst_79860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9136d39907a79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9136d39907a79; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:239580*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239580*0 + 3*756*FLEN/8, x4, x1, x2)

inst_79861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9136d39907a79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9136d39907a79; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:239583*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239583*0 + 3*757*FLEN/8, x4, x1, x2)

inst_79862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9136d39907a79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9136d39907a79; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:239586*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239586*0 + 3*758*FLEN/8, x4, x1, x2)

inst_79863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9136d39907a79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9136d39907a79; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:239589*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239589*0 + 3*759*FLEN/8, x4, x1, x2)

inst_79864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9136d39907a79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9136d39907a79; op2val:0x8000;
op3val:0x80a0000000000000; valaddr_reg:x3; val_offset:239592*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239592*0 + 3*760*FLEN/8, x4, x1, x2)

inst_79865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9136d39907a79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9136d39907a79; op2val:0x8000;
op3val:0x80a0000000000001; valaddr_reg:x3; val_offset:239595*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239595*0 + 3*761*FLEN/8, x4, x1, x2)

inst_79866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9136d39907a79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9136d39907a79; op2val:0x8000;
op3val:0x80a0000000000003; valaddr_reg:x3; val_offset:239598*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239598*0 + 3*762*FLEN/8, x4, x1, x2)

inst_79867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9136d39907a79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9136d39907a79; op2val:0x8000;
op3val:0x80a0000000000007; valaddr_reg:x3; val_offset:239601*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239601*0 + 3*763*FLEN/8, x4, x1, x2)

inst_79868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9136d39907a79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9136d39907a79; op2val:0x8000;
op3val:0x80a000000000000f; valaddr_reg:x3; val_offset:239604*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239604*0 + 3*764*FLEN/8, x4, x1, x2)

inst_79869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9136d39907a79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9136d39907a79; op2val:0x8000;
op3val:0x80a000000000001f; valaddr_reg:x3; val_offset:239607*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239607*0 + 3*765*FLEN/8, x4, x1, x2)

inst_79870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9136d39907a79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9136d39907a79; op2val:0x8000;
op3val:0x80a000000000003f; valaddr_reg:x3; val_offset:239610*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239610*0 + 3*766*FLEN/8, x4, x1, x2)

inst_79871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9136d39907a79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9136d39907a79; op2val:0x8000;
op3val:0x80a000000000007f; valaddr_reg:x3; val_offset:239613*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239613*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852480,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852481,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852483,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852487,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852495,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852511,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852543,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852607,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852735,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852991,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136853503,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136854527,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136856575,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136860671,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136868863,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136885247,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136918015,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136983551,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998137114623,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998137376767,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998137901055,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998138949631,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998141046783,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998145241087,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998153629695,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998170406911,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998203961343,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998271070207,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998405287935,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998673723391,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517999210594303,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22518000284336127,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22518002431819775,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22518006726787071,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22518015316721663,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22518032496590847,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22518066856329215,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22518135575805951,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22518273014759423,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22518547892666367,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22519097648480255,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22520197160108031,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22522396183363583,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22526794229874687,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22535590322896895,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22553182508941311,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22588366881030143,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22658735625207807,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22799473113563135,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(23080948090273791,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(23643898043695103,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(24769797950537727,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(24769797950537728,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(25895697857380352,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(26458647810801664,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(26740122787512320,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(26880860275867648,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(26951229020045312,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(26986413392134144,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27004005578178560,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27012801671200768,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27017199717711872,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27019398740967424,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27020498252595200,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021048008409088,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021322886316032,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021460325269504,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021529044746240,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021563404484608,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021580584353792,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021589174288384,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021593469255680,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021595616739328,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021596690481152,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597227352064,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597495787520,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597630005248,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597697114112,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597730668544,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597747445760,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597755834368,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597760028672,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597762125824,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597763174400,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597763698688,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597763960832,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764091904,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764157440,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764190208,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764206592,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764214784,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764218880,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764220928,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764221952,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222464,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222720,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222848,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222912,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222944,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222960,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222968,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222972,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222974,64,FLEN)
NAN_BOXED(6893019152919796696,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222975,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4449556431842050048,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4449556431842050049,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4449556431842050051,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4449556431842050055,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4449556431842050063,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4449556431842050079,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4449556431842050111,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4449556431842050175,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4449556431842050303,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4449556431842050559,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4449556431842051071,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4449556431842052095,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4449556431842054143,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4449556431842058239,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4449556431842066431,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4449556431842082815,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4449556431842115583,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4449556431842181119,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4449556431842312191,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4449556431842574335,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4449556431843098623,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4449556431844147199,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4449556431846244351,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4449556431850438655,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4449556431858827263,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4449556431875604479,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4449556431909158911,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4449556431976267775,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4449556432110485503,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4449556432378920959,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4449556432915791871,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4449556433989533695,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4449556436137017343,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4449556440431984639,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4449556449021919231,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4449556466201788415,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4449556500561526783,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4449556569281003519,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4449556706719956991,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4449556981597863935,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4449557531353677823,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4449558630865305599,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4449560829888561151,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4449565227935072255,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4449574024028094463,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4449591616214138879,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4449626800586227711,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4449697169330405375,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4449837906818760703,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4450119381795471359,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4450682331748892671,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4451808231655735295,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4451808231655735296,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4452934131562577920,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4453497081515999232,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4453778556492709888,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4453919293981065216,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4453989662725242880,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4454024847097331712,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4454042439283376128,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4454051235376398336,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4454055633422909440,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4454057832446164992,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4454058931957792768,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4454059481713606656,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4454059756591513600,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4454059894030467072,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4454059962749943808,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4454059997109682176,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4454060014289551360,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4454060022879485952,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4454060027174453248,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4454060029321936896,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4454060030395678720,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4454060030932549632,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4454060031200985088,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4454060031335202816,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4454060031402311680,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4454060031435866112,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4454060031452643328,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4454060031461031936,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4454060031465226240,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4454060031467323392,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4454060031468371968,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4454060031468896256,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4454060031469158400,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4454060031469289472,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4454060031469355008,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4454060031469387776,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4454060031469404160,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4454060031469412352,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4454060031469416448,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4454060031469418496,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4454060031469419520,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4454060031469420032,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4454060031469420288,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4454060031469420416,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4454060031469420480,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4454060031469420512,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4454060031469420528,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4454060031469420536,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4454060031469420540,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4454060031469420542,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4454060031469420543,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6893025300965307896,64,FLEN)
NAN_BOXED(2320627462387034932,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4251398048237748224,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4251398048237748225,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4251398048237748227,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4251398048237748231,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4251398048237748239,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4251398048237748255,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4251398048237748287,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4251398048237748351,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4251398048237748479,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4251398048237748735,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4251398048237749247,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4251398048237750271,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4251398048237752319,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4251398048237756415,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4251398048237764607,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4251398048237780991,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4251398048237813759,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4251398048237879295,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4251398048238010367,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4251398048238272511,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4251398048238796799,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4251398048239845375,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4251398048241942527,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4251398048246136831,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4251398048254525439,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4251398048271302655,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4251398048304857087,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4251398048371965951,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4251398048506183679,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4251398048774619135,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4251398049311490047,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4251398050385231871,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4251398052532715519,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4251398056827682815,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4251398065417617407,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4251398082597486591,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4251398116957224959,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4251398185676701695,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4251398323115655167,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4251398597993562111,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4251399147749375999,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4251400247261003775,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4251402446284259327,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4251406844330770431,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4251415640423792639,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4251433232609837055,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4251468416981925887,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4251538785726103551,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4251679523214458879,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4251960998191169535,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4252523948144590847,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4253649848051433471,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4253649848051433472,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4254775747958276096,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4255338697911697408,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4255620172888408064,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4255760910376763392,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4255831279120941056,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4255866463493029888,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4255884055679074304,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4255892851772096512,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4255897249818607616,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4255899448841863168,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4255900548353490944,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4255901098109304832,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4255901372987211776,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4255901510426165248,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4255901579145641984,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4255901613505380352,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4255901630685249536,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4255901639275184128,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4255901643570151424,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4255901645717635072,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4255901646791376896,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4255901647328247808,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4255901647596683264,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4255901647730900992,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4255901647798009856,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4255901647831564288,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4255901647848341504,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4255901647856730112,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4255901647860924416,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4255901647863021568,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4255901647864070144,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4255901647864594432,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4255901647864856576,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4255901647864987648,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4255901647865053184,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4255901647865085952,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4255901647865102336,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4255901647865110528,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4255901647865114624,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4255901647865116672,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4255901647865117696,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4255901647865118208,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4255901647865118464,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4255901647865118592,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4255901647865118656,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4255901647865118688,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4255901647865118704,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4255901647865118712,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4255901647865118716,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4255901647865118718,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4255901647865118719,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6893029601217407856,64,FLEN)
NAN_BOXED(2320623926312715274,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334464,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334465,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334467,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334471,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334479,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334495,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334527,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334591,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334719,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334975,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646335487,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646336511,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646338559,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646342655,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646350847,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646367231,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646399999,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646465535,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646596607,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646858751,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396647383039,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396648431615,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396650528767,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396654723071,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396663111679,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396679888895,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396713443327,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396780552191,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396914769919,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532397183205375,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532397720076287,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532398793818111,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532400941301759,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532405236269055,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532413826203647,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532431006072831,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532465365811199,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532534085287935,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532671524241407,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532946402148351,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40533496157962239,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40534595669590015,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40536794692845567,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40541192739356671,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40549988832378879,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40567581018423295,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40602765390512127,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40673134134689791,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40813871623045119,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(41095346599755775,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(41658296553177087,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(42784196460019711,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(42784196460019712,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(43910096366862336,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(44473046320283648,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(44754521296994304,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(44895258785349632,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(44965627529527296,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45000811901616128,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45018404087660544,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45027200180682752,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45031598227193856,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45033797250449408,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45034896762077184,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035446517891072,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035721395798016,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035858834751488,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035927554228224,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035961913966592,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035979093835776,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035987683770368,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035991978737664,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035994126221312,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035995199963136,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035995736834048,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996005269504,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996139487232,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996206596096,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996240150528,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996256927744,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996265316352,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996269510656,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996271607808,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996272656384,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273180672,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273442816,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273573888,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273639424,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273672192,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273688576,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273696768,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273700864,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273702912,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273703936,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704448,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704704,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704832,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704896,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704928,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704944,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704952,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704956,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704958,64,FLEN)
NAN_BOXED(6893036594525651283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704959,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039424,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039425,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039427,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039431,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039439,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039455,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039487,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039551,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039679,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039935,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920040447,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920041471,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920043519,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920047615,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920055807,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920072191,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920104959,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920170495,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920301567,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920563711,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392921087999,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392922136575,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392924233727,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392928428031,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392936816639,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392953593855,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392987148287,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568393054257151,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568393188474879,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568393456910335,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568393993781247,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568395067523071,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568397215006719,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568401509974015,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568410099908607,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568427279777791,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568461639516159,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568530358992895,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568667797946367,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568942675853311,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85569492431667199,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85570591943294975,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85572790966550527,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85577189013061631,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85585985106083839,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85603577292128255,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85638761664217087,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85709130408394751,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85849867896750079,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(86131342873460735,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(86694292826882047,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(87820192733724671,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(87820192733724672,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(88946092640567296,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(89509042593988608,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(89790517570699264,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(89931255059054592,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90001623803232256,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90036808175321088,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90054400361365504,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90063196454387712,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90067594500898816,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90069793524154368,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90070893035782144,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071442791596032,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071717669502976,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071855108456448,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071923827933184,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071958187671552,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071975367540736,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071983957475328,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071988252442624,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071990399926272,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071991473668096,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992010539008,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992278974464,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992413192192,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992480301056,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992513855488,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992530632704,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992539021312,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992543215616,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992545312768,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992546361344,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992546885632,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547147776,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547278848,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547344384,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547377152,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547393536,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547401728,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547405824,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547407872,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547408896,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409408,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409664,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409792,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409856,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409888,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409904,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409912,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409916,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409918,64,FLEN)
NAN_BOXED(6893049879526204008,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409919,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002176,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002177,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002179,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002183,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002191,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002207,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002239,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002303,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002431,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002687,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558003199,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558004223,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558006271,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558010367,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558018559,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558034943,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558067711,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558133247,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558264319,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558526463,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824559050751,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824560099327,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824562196479,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824566390783,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824574779391,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824591556607,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824625111039,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824692219903,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824826437631,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990825094873087,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990825631743999,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990826705485823,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990828852969471,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990833147936767,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990841737871359,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990858917740543,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990893277478911,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990961996955647,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371991099435909119,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371991374313816063,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371991924069629951,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371993023581257727,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371995222604513279,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371999620651024383,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9372008416744046591,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9372026008930091007,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9372061193302179839,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9372131562046357503,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9372272299534712831,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9372553774511423487,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9373116724464844799,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9374242624371687423,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9374242624371687424,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9375368524278530048,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9375931474231951360,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376212949208662016,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376353686697017344,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376424055441195008,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376459239813283840,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376476831999328256,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376485628092350464,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376490026138861568,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376492225162117120,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376493324673744896,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376493874429558784,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494149307465728,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494286746419200,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494355465895936,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494389825634304,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494407005503488,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494415595438080,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494419890405376,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494422037889024,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494423111630848,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494423648501760,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494423916937216,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424051154944,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424118263808,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424151818240,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424168595456,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424176984064,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424181178368,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424183275520,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424184324096,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424184848384,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185110528,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185241600,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185307136,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185339904,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185356288,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185364480,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185368576,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185370624,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185371648,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372160,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372416,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372544,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372608,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372640,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372656,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372664,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372668,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372670,64,FLEN)
NAN_BOXED(6893057253695073866,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372671,64,FLEN)
NAN_BOXED(6893062064505387641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6893062064505387641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6893062064505387641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6893062064505387641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6893062064505387641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6893062064505387641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6893062064505387641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6893062064505387641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6893062064505387641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6893062064505387641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6893062064505387641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6893062064505387641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6893062064505387641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6893062064505387641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6893062064505387641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6893062064505387641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6893062064505387641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6893062064505387641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6893062064505387641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6893062064505387641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6893062064505387641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6893062064505387641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6893062064505387641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480768,64,FLEN)
NAN_BOXED(6893062064505387641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480769,64,FLEN)
NAN_BOXED(6893062064505387641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480771,64,FLEN)
NAN_BOXED(6893062064505387641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480775,64,FLEN)
NAN_BOXED(6893062064505387641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480783,64,FLEN)
NAN_BOXED(6893062064505387641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480799,64,FLEN)
NAN_BOXED(6893062064505387641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480831,64,FLEN)
NAN_BOXED(6893062064505387641,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480895,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
