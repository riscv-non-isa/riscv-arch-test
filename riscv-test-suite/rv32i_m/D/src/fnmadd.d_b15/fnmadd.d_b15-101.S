
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:39 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_76800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810ffffffffe0000; valaddr_reg:x3; val_offset:230400*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230400*0 + 3*0*FLEN/8, x4, x1, x2)

inst_76801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810fffffffff0000; valaddr_reg:x3; val_offset:230403*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230403*0 + 3*1*FLEN/8, x4, x1, x2)

inst_76802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810fffffffff8000; valaddr_reg:x3; val_offset:230406*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230406*0 + 3*2*FLEN/8, x4, x1, x2)

inst_76803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810fffffffffc000; valaddr_reg:x3; val_offset:230409*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230409*0 + 3*3*FLEN/8, x4, x1, x2)

inst_76804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810fffffffffe000; valaddr_reg:x3; val_offset:230412*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230412*0 + 3*4*FLEN/8, x4, x1, x2)

inst_76805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810ffffffffff000; valaddr_reg:x3; val_offset:230415*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230415*0 + 3*5*FLEN/8, x4, x1, x2)

inst_76806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810ffffffffff800; valaddr_reg:x3; val_offset:230418*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230418*0 + 3*6*FLEN/8, x4, x1, x2)

inst_76807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810ffffffffffc00; valaddr_reg:x3; val_offset:230421*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230421*0 + 3*7*FLEN/8, x4, x1, x2)

inst_76808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810ffffffffffe00; valaddr_reg:x3; val_offset:230424*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230424*0 + 3*8*FLEN/8, x4, x1, x2)

inst_76809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810fffffffffff00; valaddr_reg:x3; val_offset:230427*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230427*0 + 3*9*FLEN/8, x4, x1, x2)

inst_76810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810fffffffffff80; valaddr_reg:x3; val_offset:230430*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230430*0 + 3*10*FLEN/8, x4, x1, x2)

inst_76811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810fffffffffffc0; valaddr_reg:x3; val_offset:230433*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230433*0 + 3*11*FLEN/8, x4, x1, x2)

inst_76812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810fffffffffffe0; valaddr_reg:x3; val_offset:230436*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230436*0 + 3*12*FLEN/8, x4, x1, x2)

inst_76813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810ffffffffffff0; valaddr_reg:x3; val_offset:230439*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230439*0 + 3*13*FLEN/8, x4, x1, x2)

inst_76814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810ffffffffffff8; valaddr_reg:x3; val_offset:230442*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230442*0 + 3*14*FLEN/8, x4, x1, x2)

inst_76815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810ffffffffffffc; valaddr_reg:x3; val_offset:230445*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230445*0 + 3*15*FLEN/8, x4, x1, x2)

inst_76816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810ffffffffffffe; valaddr_reg:x3; val_offset:230448*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230448*0 + 3*16*FLEN/8, x4, x1, x2)

inst_76817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810fffffffffffff; valaddr_reg:x3; val_offset:230451*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230451*0 + 3*17*FLEN/8, x4, x1, x2)

inst_76818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:230454*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230454*0 + 3*18*FLEN/8, x4, x1, x2)

inst_76819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:230457*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230457*0 + 3*19*FLEN/8, x4, x1, x2)

inst_76820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:230460*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230460*0 + 3*20*FLEN/8, x4, x1, x2)

inst_76821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:230463*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230463*0 + 3*21*FLEN/8, x4, x1, x2)

inst_76822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:230466*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230466*0 + 3*22*FLEN/8, x4, x1, x2)

inst_76823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:230469*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230469*0 + 3*23*FLEN/8, x4, x1, x2)

inst_76824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:230472*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230472*0 + 3*24*FLEN/8, x4, x1, x2)

inst_76825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:230475*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230475*0 + 3*25*FLEN/8, x4, x1, x2)

inst_76826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:230478*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230478*0 + 3*26*FLEN/8, x4, x1, x2)

inst_76827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:230481*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230481*0 + 3*27*FLEN/8, x4, x1, x2)

inst_76828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:230484*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230484*0 + 3*28*FLEN/8, x4, x1, x2)

inst_76829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:230487*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230487*0 + 3*29*FLEN/8, x4, x1, x2)

inst_76830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:230490*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230490*0 + 3*30*FLEN/8, x4, x1, x2)

inst_76831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:230493*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230493*0 + 3*31*FLEN/8, x4, x1, x2)

inst_76832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:230496*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230496*0 + 3*32*FLEN/8, x4, x1, x2)

inst_76833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:230499*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230499*0 + 3*33*FLEN/8, x4, x1, x2)

inst_76834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:230502*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230502*0 + 3*34*FLEN/8, x4, x1, x2)

inst_76835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:230505*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230505*0 + 3*35*FLEN/8, x4, x1, x2)

inst_76836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:230508*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230508*0 + 3*36*FLEN/8, x4, x1, x2)

inst_76837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:230511*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230511*0 + 3*37*FLEN/8, x4, x1, x2)

inst_76838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:230514*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230514*0 + 3*38*FLEN/8, x4, x1, x2)

inst_76839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:230517*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230517*0 + 3*39*FLEN/8, x4, x1, x2)

inst_76840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x8250000000000000; valaddr_reg:x3; val_offset:230520*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230520*0 + 3*40*FLEN/8, x4, x1, x2)

inst_76841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x8250000000000001; valaddr_reg:x3; val_offset:230523*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230523*0 + 3*41*FLEN/8, x4, x1, x2)

inst_76842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x8250000000000003; valaddr_reg:x3; val_offset:230526*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230526*0 + 3*42*FLEN/8, x4, x1, x2)

inst_76843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x8250000000000007; valaddr_reg:x3; val_offset:230529*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230529*0 + 3*43*FLEN/8, x4, x1, x2)

inst_76844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825000000000000f; valaddr_reg:x3; val_offset:230532*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230532*0 + 3*44*FLEN/8, x4, x1, x2)

inst_76845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825000000000001f; valaddr_reg:x3; val_offset:230535*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230535*0 + 3*45*FLEN/8, x4, x1, x2)

inst_76846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825000000000003f; valaddr_reg:x3; val_offset:230538*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230538*0 + 3*46*FLEN/8, x4, x1, x2)

inst_76847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825000000000007f; valaddr_reg:x3; val_offset:230541*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230541*0 + 3*47*FLEN/8, x4, x1, x2)

inst_76848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x82500000000000ff; valaddr_reg:x3; val_offset:230544*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230544*0 + 3*48*FLEN/8, x4, x1, x2)

inst_76849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x82500000000001ff; valaddr_reg:x3; val_offset:230547*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230547*0 + 3*49*FLEN/8, x4, x1, x2)

inst_76850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x82500000000003ff; valaddr_reg:x3; val_offset:230550*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230550*0 + 3*50*FLEN/8, x4, x1, x2)

inst_76851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x82500000000007ff; valaddr_reg:x3; val_offset:230553*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230553*0 + 3*51*FLEN/8, x4, x1, x2)

inst_76852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x8250000000000fff; valaddr_reg:x3; val_offset:230556*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230556*0 + 3*52*FLEN/8, x4, x1, x2)

inst_76853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x8250000000001fff; valaddr_reg:x3; val_offset:230559*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230559*0 + 3*53*FLEN/8, x4, x1, x2)

inst_76854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x8250000000003fff; valaddr_reg:x3; val_offset:230562*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230562*0 + 3*54*FLEN/8, x4, x1, x2)

inst_76855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x8250000000007fff; valaddr_reg:x3; val_offset:230565*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230565*0 + 3*55*FLEN/8, x4, x1, x2)

inst_76856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825000000000ffff; valaddr_reg:x3; val_offset:230568*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230568*0 + 3*56*FLEN/8, x4, x1, x2)

inst_76857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825000000001ffff; valaddr_reg:x3; val_offset:230571*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230571*0 + 3*57*FLEN/8, x4, x1, x2)

inst_76858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825000000003ffff; valaddr_reg:x3; val_offset:230574*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230574*0 + 3*58*FLEN/8, x4, x1, x2)

inst_76859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825000000007ffff; valaddr_reg:x3; val_offset:230577*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230577*0 + 3*59*FLEN/8, x4, x1, x2)

inst_76860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x82500000000fffff; valaddr_reg:x3; val_offset:230580*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230580*0 + 3*60*FLEN/8, x4, x1, x2)

inst_76861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x82500000001fffff; valaddr_reg:x3; val_offset:230583*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230583*0 + 3*61*FLEN/8, x4, x1, x2)

inst_76862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x82500000003fffff; valaddr_reg:x3; val_offset:230586*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230586*0 + 3*62*FLEN/8, x4, x1, x2)

inst_76863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x82500000007fffff; valaddr_reg:x3; val_offset:230589*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230589*0 + 3*63*FLEN/8, x4, x1, x2)

inst_76864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x8250000000ffffff; valaddr_reg:x3; val_offset:230592*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230592*0 + 3*64*FLEN/8, x4, x1, x2)

inst_76865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x8250000001ffffff; valaddr_reg:x3; val_offset:230595*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230595*0 + 3*65*FLEN/8, x4, x1, x2)

inst_76866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x8250000003ffffff; valaddr_reg:x3; val_offset:230598*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230598*0 + 3*66*FLEN/8, x4, x1, x2)

inst_76867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x8250000007ffffff; valaddr_reg:x3; val_offset:230601*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230601*0 + 3*67*FLEN/8, x4, x1, x2)

inst_76868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825000000fffffff; valaddr_reg:x3; val_offset:230604*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230604*0 + 3*68*FLEN/8, x4, x1, x2)

inst_76869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825000001fffffff; valaddr_reg:x3; val_offset:230607*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230607*0 + 3*69*FLEN/8, x4, x1, x2)

inst_76870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825000003fffffff; valaddr_reg:x3; val_offset:230610*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230610*0 + 3*70*FLEN/8, x4, x1, x2)

inst_76871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825000007fffffff; valaddr_reg:x3; val_offset:230613*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230613*0 + 3*71*FLEN/8, x4, x1, x2)

inst_76872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x82500000ffffffff; valaddr_reg:x3; val_offset:230616*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230616*0 + 3*72*FLEN/8, x4, x1, x2)

inst_76873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x82500001ffffffff; valaddr_reg:x3; val_offset:230619*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230619*0 + 3*73*FLEN/8, x4, x1, x2)

inst_76874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x82500003ffffffff; valaddr_reg:x3; val_offset:230622*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230622*0 + 3*74*FLEN/8, x4, x1, x2)

inst_76875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x82500007ffffffff; valaddr_reg:x3; val_offset:230625*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230625*0 + 3*75*FLEN/8, x4, x1, x2)

inst_76876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x8250000fffffffff; valaddr_reg:x3; val_offset:230628*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230628*0 + 3*76*FLEN/8, x4, x1, x2)

inst_76877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x8250001fffffffff; valaddr_reg:x3; val_offset:230631*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230631*0 + 3*77*FLEN/8, x4, x1, x2)

inst_76878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x8250003fffffffff; valaddr_reg:x3; val_offset:230634*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230634*0 + 3*78*FLEN/8, x4, x1, x2)

inst_76879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x8250007fffffffff; valaddr_reg:x3; val_offset:230637*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230637*0 + 3*79*FLEN/8, x4, x1, x2)

inst_76880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825000ffffffffff; valaddr_reg:x3; val_offset:230640*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230640*0 + 3*80*FLEN/8, x4, x1, x2)

inst_76881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825001ffffffffff; valaddr_reg:x3; val_offset:230643*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230643*0 + 3*81*FLEN/8, x4, x1, x2)

inst_76882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825003ffffffffff; valaddr_reg:x3; val_offset:230646*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230646*0 + 3*82*FLEN/8, x4, x1, x2)

inst_76883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825007ffffffffff; valaddr_reg:x3; val_offset:230649*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230649*0 + 3*83*FLEN/8, x4, x1, x2)

inst_76884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x82500fffffffffff; valaddr_reg:x3; val_offset:230652*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230652*0 + 3*84*FLEN/8, x4, x1, x2)

inst_76885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x82501fffffffffff; valaddr_reg:x3; val_offset:230655*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230655*0 + 3*85*FLEN/8, x4, x1, x2)

inst_76886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x82503fffffffffff; valaddr_reg:x3; val_offset:230658*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230658*0 + 3*86*FLEN/8, x4, x1, x2)

inst_76887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x82507fffffffffff; valaddr_reg:x3; val_offset:230661*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230661*0 + 3*87*FLEN/8, x4, x1, x2)

inst_76888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x8250ffffffffffff; valaddr_reg:x3; val_offset:230664*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230664*0 + 3*88*FLEN/8, x4, x1, x2)

inst_76889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x8251ffffffffffff; valaddr_reg:x3; val_offset:230667*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230667*0 + 3*89*FLEN/8, x4, x1, x2)

inst_76890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x8253ffffffffffff; valaddr_reg:x3; val_offset:230670*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230670*0 + 3*90*FLEN/8, x4, x1, x2)

inst_76891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x8257ffffffffffff; valaddr_reg:x3; val_offset:230673*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230673*0 + 3*91*FLEN/8, x4, x1, x2)

inst_76892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x8258000000000000; valaddr_reg:x3; val_offset:230676*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230676*0 + 3*92*FLEN/8, x4, x1, x2)

inst_76893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825c000000000000; valaddr_reg:x3; val_offset:230679*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230679*0 + 3*93*FLEN/8, x4, x1, x2)

inst_76894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825e000000000000; valaddr_reg:x3; val_offset:230682*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230682*0 + 3*94*FLEN/8, x4, x1, x2)

inst_76895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825f000000000000; valaddr_reg:x3; val_offset:230685*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230685*0 + 3*95*FLEN/8, x4, x1, x2)

inst_76896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825f800000000000; valaddr_reg:x3; val_offset:230688*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230688*0 + 3*96*FLEN/8, x4, x1, x2)

inst_76897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825fc00000000000; valaddr_reg:x3; val_offset:230691*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230691*0 + 3*97*FLEN/8, x4, x1, x2)

inst_76898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825fe00000000000; valaddr_reg:x3; val_offset:230694*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230694*0 + 3*98*FLEN/8, x4, x1, x2)

inst_76899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825ff00000000000; valaddr_reg:x3; val_offset:230697*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230697*0 + 3*99*FLEN/8, x4, x1, x2)

inst_76900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825ff80000000000; valaddr_reg:x3; val_offset:230700*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230700*0 + 3*100*FLEN/8, x4, x1, x2)

inst_76901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825ffc0000000000; valaddr_reg:x3; val_offset:230703*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230703*0 + 3*101*FLEN/8, x4, x1, x2)

inst_76902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825ffe0000000000; valaddr_reg:x3; val_offset:230706*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230706*0 + 3*102*FLEN/8, x4, x1, x2)

inst_76903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825fff0000000000; valaddr_reg:x3; val_offset:230709*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230709*0 + 3*103*FLEN/8, x4, x1, x2)

inst_76904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825fff8000000000; valaddr_reg:x3; val_offset:230712*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230712*0 + 3*104*FLEN/8, x4, x1, x2)

inst_76905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825fffc000000000; valaddr_reg:x3; val_offset:230715*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230715*0 + 3*105*FLEN/8, x4, x1, x2)

inst_76906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825fffe000000000; valaddr_reg:x3; val_offset:230718*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230718*0 + 3*106*FLEN/8, x4, x1, x2)

inst_76907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825ffff000000000; valaddr_reg:x3; val_offset:230721*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230721*0 + 3*107*FLEN/8, x4, x1, x2)

inst_76908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825ffff800000000; valaddr_reg:x3; val_offset:230724*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230724*0 + 3*108*FLEN/8, x4, x1, x2)

inst_76909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825ffffc00000000; valaddr_reg:x3; val_offset:230727*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230727*0 + 3*109*FLEN/8, x4, x1, x2)

inst_76910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825ffffe00000000; valaddr_reg:x3; val_offset:230730*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230730*0 + 3*110*FLEN/8, x4, x1, x2)

inst_76911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825fffff00000000; valaddr_reg:x3; val_offset:230733*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230733*0 + 3*111*FLEN/8, x4, x1, x2)

inst_76912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825fffff80000000; valaddr_reg:x3; val_offset:230736*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230736*0 + 3*112*FLEN/8, x4, x1, x2)

inst_76913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825fffffc0000000; valaddr_reg:x3; val_offset:230739*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230739*0 + 3*113*FLEN/8, x4, x1, x2)

inst_76914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825fffffe0000000; valaddr_reg:x3; val_offset:230742*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230742*0 + 3*114*FLEN/8, x4, x1, x2)

inst_76915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825ffffff0000000; valaddr_reg:x3; val_offset:230745*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230745*0 + 3*115*FLEN/8, x4, x1, x2)

inst_76916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825ffffff8000000; valaddr_reg:x3; val_offset:230748*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230748*0 + 3*116*FLEN/8, x4, x1, x2)

inst_76917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825ffffffc000000; valaddr_reg:x3; val_offset:230751*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230751*0 + 3*117*FLEN/8, x4, x1, x2)

inst_76918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825ffffffe000000; valaddr_reg:x3; val_offset:230754*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230754*0 + 3*118*FLEN/8, x4, x1, x2)

inst_76919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825fffffff000000; valaddr_reg:x3; val_offset:230757*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230757*0 + 3*119*FLEN/8, x4, x1, x2)

inst_76920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825fffffff800000; valaddr_reg:x3; val_offset:230760*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230760*0 + 3*120*FLEN/8, x4, x1, x2)

inst_76921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825fffffffc00000; valaddr_reg:x3; val_offset:230763*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230763*0 + 3*121*FLEN/8, x4, x1, x2)

inst_76922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825fffffffe00000; valaddr_reg:x3; val_offset:230766*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230766*0 + 3*122*FLEN/8, x4, x1, x2)

inst_76923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825ffffffff00000; valaddr_reg:x3; val_offset:230769*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230769*0 + 3*123*FLEN/8, x4, x1, x2)

inst_76924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825ffffffff80000; valaddr_reg:x3; val_offset:230772*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230772*0 + 3*124*FLEN/8, x4, x1, x2)

inst_76925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825ffffffffc0000; valaddr_reg:x3; val_offset:230775*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230775*0 + 3*125*FLEN/8, x4, x1, x2)

inst_76926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825ffffffffe0000; valaddr_reg:x3; val_offset:230778*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230778*0 + 3*126*FLEN/8, x4, x1, x2)

inst_76927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825fffffffff0000; valaddr_reg:x3; val_offset:230781*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230781*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_76928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825fffffffff8000; valaddr_reg:x3; val_offset:230784*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230784*0 + 3*128*FLEN/8, x4, x1, x2)

inst_76929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825fffffffffc000; valaddr_reg:x3; val_offset:230787*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230787*0 + 3*129*FLEN/8, x4, x1, x2)

inst_76930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825fffffffffe000; valaddr_reg:x3; val_offset:230790*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230790*0 + 3*130*FLEN/8, x4, x1, x2)

inst_76931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825ffffffffff000; valaddr_reg:x3; val_offset:230793*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230793*0 + 3*131*FLEN/8, x4, x1, x2)

inst_76932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825ffffffffff800; valaddr_reg:x3; val_offset:230796*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230796*0 + 3*132*FLEN/8, x4, x1, x2)

inst_76933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825ffffffffffc00; valaddr_reg:x3; val_offset:230799*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230799*0 + 3*133*FLEN/8, x4, x1, x2)

inst_76934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825ffffffffffe00; valaddr_reg:x3; val_offset:230802*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230802*0 + 3*134*FLEN/8, x4, x1, x2)

inst_76935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825fffffffffff00; valaddr_reg:x3; val_offset:230805*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230805*0 + 3*135*FLEN/8, x4, x1, x2)

inst_76936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825fffffffffff80; valaddr_reg:x3; val_offset:230808*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230808*0 + 3*136*FLEN/8, x4, x1, x2)

inst_76937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825fffffffffffc0; valaddr_reg:x3; val_offset:230811*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230811*0 + 3*137*FLEN/8, x4, x1, x2)

inst_76938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825fffffffffffe0; valaddr_reg:x3; val_offset:230814*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230814*0 + 3*138*FLEN/8, x4, x1, x2)

inst_76939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825ffffffffffff0; valaddr_reg:x3; val_offset:230817*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230817*0 + 3*139*FLEN/8, x4, x1, x2)

inst_76940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825ffffffffffff8; valaddr_reg:x3; val_offset:230820*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230820*0 + 3*140*FLEN/8, x4, x1, x2)

inst_76941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825ffffffffffffc; valaddr_reg:x3; val_offset:230823*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230823*0 + 3*141*FLEN/8, x4, x1, x2)

inst_76942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825ffffffffffffe; valaddr_reg:x3; val_offset:230826*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230826*0 + 3*142*FLEN/8, x4, x1, x2)

inst_76943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f3d32a1495c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f3d32a1495c6; op2val:0x8000;
op3val:0x825fffffffffffff; valaddr_reg:x3; val_offset:230829*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230829*0 + 3*143*FLEN/8, x4, x1, x2)

inst_76944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:230832*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230832*0 + 3*144*FLEN/8, x4, x1, x2)

inst_76945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:230835*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230835*0 + 3*145*FLEN/8, x4, x1, x2)

inst_76946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:230838*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230838*0 + 3*146*FLEN/8, x4, x1, x2)

inst_76947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:230841*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230841*0 + 3*147*FLEN/8, x4, x1, x2)

inst_76948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:230844*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230844*0 + 3*148*FLEN/8, x4, x1, x2)

inst_76949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:230847*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230847*0 + 3*149*FLEN/8, x4, x1, x2)

inst_76950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:230850*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230850*0 + 3*150*FLEN/8, x4, x1, x2)

inst_76951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:230853*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230853*0 + 3*151*FLEN/8, x4, x1, x2)

inst_76952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:230856*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230856*0 + 3*152*FLEN/8, x4, x1, x2)

inst_76953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:230859*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230859*0 + 3*153*FLEN/8, x4, x1, x2)

inst_76954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:230862*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230862*0 + 3*154*FLEN/8, x4, x1, x2)

inst_76955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:230865*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230865*0 + 3*155*FLEN/8, x4, x1, x2)

inst_76956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:230868*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230868*0 + 3*156*FLEN/8, x4, x1, x2)

inst_76957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:230871*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230871*0 + 3*157*FLEN/8, x4, x1, x2)

inst_76958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:230874*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230874*0 + 3*158*FLEN/8, x4, x1, x2)

inst_76959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:230877*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230877*0 + 3*159*FLEN/8, x4, x1, x2)

inst_76960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:230880*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230880*0 + 3*160*FLEN/8, x4, x1, x2)

inst_76961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:230883*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230883*0 + 3*161*FLEN/8, x4, x1, x2)

inst_76962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:230886*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230886*0 + 3*162*FLEN/8, x4, x1, x2)

inst_76963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:230889*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230889*0 + 3*163*FLEN/8, x4, x1, x2)

inst_76964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:230892*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230892*0 + 3*164*FLEN/8, x4, x1, x2)

inst_76965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:230895*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230895*0 + 3*165*FLEN/8, x4, x1, x2)

inst_76966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x8400000000000000; valaddr_reg:x3; val_offset:230898*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230898*0 + 3*166*FLEN/8, x4, x1, x2)

inst_76967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x8400000000000001; valaddr_reg:x3; val_offset:230901*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230901*0 + 3*167*FLEN/8, x4, x1, x2)

inst_76968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x8400000000000003; valaddr_reg:x3; val_offset:230904*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230904*0 + 3*168*FLEN/8, x4, x1, x2)

inst_76969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x8400000000000007; valaddr_reg:x3; val_offset:230907*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230907*0 + 3*169*FLEN/8, x4, x1, x2)

inst_76970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840000000000000f; valaddr_reg:x3; val_offset:230910*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230910*0 + 3*170*FLEN/8, x4, x1, x2)

inst_76971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840000000000001f; valaddr_reg:x3; val_offset:230913*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230913*0 + 3*171*FLEN/8, x4, x1, x2)

inst_76972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840000000000003f; valaddr_reg:x3; val_offset:230916*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230916*0 + 3*172*FLEN/8, x4, x1, x2)

inst_76973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840000000000007f; valaddr_reg:x3; val_offset:230919*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230919*0 + 3*173*FLEN/8, x4, x1, x2)

inst_76974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x84000000000000ff; valaddr_reg:x3; val_offset:230922*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230922*0 + 3*174*FLEN/8, x4, x1, x2)

inst_76975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x84000000000001ff; valaddr_reg:x3; val_offset:230925*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230925*0 + 3*175*FLEN/8, x4, x1, x2)

inst_76976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x84000000000003ff; valaddr_reg:x3; val_offset:230928*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230928*0 + 3*176*FLEN/8, x4, x1, x2)

inst_76977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x84000000000007ff; valaddr_reg:x3; val_offset:230931*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230931*0 + 3*177*FLEN/8, x4, x1, x2)

inst_76978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x8400000000000fff; valaddr_reg:x3; val_offset:230934*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230934*0 + 3*178*FLEN/8, x4, x1, x2)

inst_76979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x8400000000001fff; valaddr_reg:x3; val_offset:230937*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230937*0 + 3*179*FLEN/8, x4, x1, x2)

inst_76980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x8400000000003fff; valaddr_reg:x3; val_offset:230940*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230940*0 + 3*180*FLEN/8, x4, x1, x2)

inst_76981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x8400000000007fff; valaddr_reg:x3; val_offset:230943*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230943*0 + 3*181*FLEN/8, x4, x1, x2)

inst_76982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840000000000ffff; valaddr_reg:x3; val_offset:230946*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230946*0 + 3*182*FLEN/8, x4, x1, x2)

inst_76983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840000000001ffff; valaddr_reg:x3; val_offset:230949*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230949*0 + 3*183*FLEN/8, x4, x1, x2)

inst_76984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840000000003ffff; valaddr_reg:x3; val_offset:230952*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230952*0 + 3*184*FLEN/8, x4, x1, x2)

inst_76985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840000000007ffff; valaddr_reg:x3; val_offset:230955*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230955*0 + 3*185*FLEN/8, x4, x1, x2)

inst_76986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x84000000000fffff; valaddr_reg:x3; val_offset:230958*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230958*0 + 3*186*FLEN/8, x4, x1, x2)

inst_76987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x84000000001fffff; valaddr_reg:x3; val_offset:230961*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230961*0 + 3*187*FLEN/8, x4, x1, x2)

inst_76988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x84000000003fffff; valaddr_reg:x3; val_offset:230964*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230964*0 + 3*188*FLEN/8, x4, x1, x2)

inst_76989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x84000000007fffff; valaddr_reg:x3; val_offset:230967*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230967*0 + 3*189*FLEN/8, x4, x1, x2)

inst_76990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x8400000000ffffff; valaddr_reg:x3; val_offset:230970*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230970*0 + 3*190*FLEN/8, x4, x1, x2)

inst_76991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x8400000001ffffff; valaddr_reg:x3; val_offset:230973*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230973*0 + 3*191*FLEN/8, x4, x1, x2)

inst_76992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x8400000003ffffff; valaddr_reg:x3; val_offset:230976*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230976*0 + 3*192*FLEN/8, x4, x1, x2)

inst_76993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x8400000007ffffff; valaddr_reg:x3; val_offset:230979*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230979*0 + 3*193*FLEN/8, x4, x1, x2)

inst_76994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840000000fffffff; valaddr_reg:x3; val_offset:230982*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230982*0 + 3*194*FLEN/8, x4, x1, x2)

inst_76995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840000001fffffff; valaddr_reg:x3; val_offset:230985*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230985*0 + 3*195*FLEN/8, x4, x1, x2)

inst_76996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840000003fffffff; valaddr_reg:x3; val_offset:230988*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230988*0 + 3*196*FLEN/8, x4, x1, x2)

inst_76997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840000007fffffff; valaddr_reg:x3; val_offset:230991*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230991*0 + 3*197*FLEN/8, x4, x1, x2)

inst_76998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x84000000ffffffff; valaddr_reg:x3; val_offset:230994*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230994*0 + 3*198*FLEN/8, x4, x1, x2)

inst_76999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x84000001ffffffff; valaddr_reg:x3; val_offset:230997*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230997*0 + 3*199*FLEN/8, x4, x1, x2)

inst_77000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x84000003ffffffff; valaddr_reg:x3; val_offset:231000*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231000*0 + 3*200*FLEN/8, x4, x1, x2)

inst_77001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x84000007ffffffff; valaddr_reg:x3; val_offset:231003*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231003*0 + 3*201*FLEN/8, x4, x1, x2)

inst_77002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x8400000fffffffff; valaddr_reg:x3; val_offset:231006*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231006*0 + 3*202*FLEN/8, x4, x1, x2)

inst_77003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x8400001fffffffff; valaddr_reg:x3; val_offset:231009*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231009*0 + 3*203*FLEN/8, x4, x1, x2)

inst_77004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x8400003fffffffff; valaddr_reg:x3; val_offset:231012*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231012*0 + 3*204*FLEN/8, x4, x1, x2)

inst_77005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x8400007fffffffff; valaddr_reg:x3; val_offset:231015*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231015*0 + 3*205*FLEN/8, x4, x1, x2)

inst_77006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840000ffffffffff; valaddr_reg:x3; val_offset:231018*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231018*0 + 3*206*FLEN/8, x4, x1, x2)

inst_77007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840001ffffffffff; valaddr_reg:x3; val_offset:231021*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231021*0 + 3*207*FLEN/8, x4, x1, x2)

inst_77008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840003ffffffffff; valaddr_reg:x3; val_offset:231024*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231024*0 + 3*208*FLEN/8, x4, x1, x2)

inst_77009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840007ffffffffff; valaddr_reg:x3; val_offset:231027*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231027*0 + 3*209*FLEN/8, x4, x1, x2)

inst_77010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x84000fffffffffff; valaddr_reg:x3; val_offset:231030*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231030*0 + 3*210*FLEN/8, x4, x1, x2)

inst_77011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x84001fffffffffff; valaddr_reg:x3; val_offset:231033*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231033*0 + 3*211*FLEN/8, x4, x1, x2)

inst_77012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x84003fffffffffff; valaddr_reg:x3; val_offset:231036*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231036*0 + 3*212*FLEN/8, x4, x1, x2)

inst_77013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x84007fffffffffff; valaddr_reg:x3; val_offset:231039*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231039*0 + 3*213*FLEN/8, x4, x1, x2)

inst_77014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x8400ffffffffffff; valaddr_reg:x3; val_offset:231042*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231042*0 + 3*214*FLEN/8, x4, x1, x2)

inst_77015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x8401ffffffffffff; valaddr_reg:x3; val_offset:231045*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231045*0 + 3*215*FLEN/8, x4, x1, x2)

inst_77016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x8403ffffffffffff; valaddr_reg:x3; val_offset:231048*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231048*0 + 3*216*FLEN/8, x4, x1, x2)

inst_77017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x8407ffffffffffff; valaddr_reg:x3; val_offset:231051*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231051*0 + 3*217*FLEN/8, x4, x1, x2)

inst_77018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x8408000000000000; valaddr_reg:x3; val_offset:231054*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231054*0 + 3*218*FLEN/8, x4, x1, x2)

inst_77019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840c000000000000; valaddr_reg:x3; val_offset:231057*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231057*0 + 3*219*FLEN/8, x4, x1, x2)

inst_77020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840e000000000000; valaddr_reg:x3; val_offset:231060*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231060*0 + 3*220*FLEN/8, x4, x1, x2)

inst_77021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840f000000000000; valaddr_reg:x3; val_offset:231063*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231063*0 + 3*221*FLEN/8, x4, x1, x2)

inst_77022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840f800000000000; valaddr_reg:x3; val_offset:231066*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231066*0 + 3*222*FLEN/8, x4, x1, x2)

inst_77023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840fc00000000000; valaddr_reg:x3; val_offset:231069*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231069*0 + 3*223*FLEN/8, x4, x1, x2)

inst_77024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840fe00000000000; valaddr_reg:x3; val_offset:231072*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231072*0 + 3*224*FLEN/8, x4, x1, x2)

inst_77025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840ff00000000000; valaddr_reg:x3; val_offset:231075*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231075*0 + 3*225*FLEN/8, x4, x1, x2)

inst_77026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840ff80000000000; valaddr_reg:x3; val_offset:231078*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231078*0 + 3*226*FLEN/8, x4, x1, x2)

inst_77027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840ffc0000000000; valaddr_reg:x3; val_offset:231081*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231081*0 + 3*227*FLEN/8, x4, x1, x2)

inst_77028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840ffe0000000000; valaddr_reg:x3; val_offset:231084*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231084*0 + 3*228*FLEN/8, x4, x1, x2)

inst_77029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840fff0000000000; valaddr_reg:x3; val_offset:231087*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231087*0 + 3*229*FLEN/8, x4, x1, x2)

inst_77030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840fff8000000000; valaddr_reg:x3; val_offset:231090*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231090*0 + 3*230*FLEN/8, x4, x1, x2)

inst_77031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840fffc000000000; valaddr_reg:x3; val_offset:231093*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231093*0 + 3*231*FLEN/8, x4, x1, x2)

inst_77032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840fffe000000000; valaddr_reg:x3; val_offset:231096*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231096*0 + 3*232*FLEN/8, x4, x1, x2)

inst_77033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840ffff000000000; valaddr_reg:x3; val_offset:231099*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231099*0 + 3*233*FLEN/8, x4, x1, x2)

inst_77034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840ffff800000000; valaddr_reg:x3; val_offset:231102*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231102*0 + 3*234*FLEN/8, x4, x1, x2)

inst_77035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840ffffc00000000; valaddr_reg:x3; val_offset:231105*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231105*0 + 3*235*FLEN/8, x4, x1, x2)

inst_77036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840ffffe00000000; valaddr_reg:x3; val_offset:231108*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231108*0 + 3*236*FLEN/8, x4, x1, x2)

inst_77037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840fffff00000000; valaddr_reg:x3; val_offset:231111*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231111*0 + 3*237*FLEN/8, x4, x1, x2)

inst_77038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840fffff80000000; valaddr_reg:x3; val_offset:231114*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231114*0 + 3*238*FLEN/8, x4, x1, x2)

inst_77039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840fffffc0000000; valaddr_reg:x3; val_offset:231117*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231117*0 + 3*239*FLEN/8, x4, x1, x2)

inst_77040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840fffffe0000000; valaddr_reg:x3; val_offset:231120*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231120*0 + 3*240*FLEN/8, x4, x1, x2)

inst_77041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840ffffff0000000; valaddr_reg:x3; val_offset:231123*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231123*0 + 3*241*FLEN/8, x4, x1, x2)

inst_77042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840ffffff8000000; valaddr_reg:x3; val_offset:231126*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231126*0 + 3*242*FLEN/8, x4, x1, x2)

inst_77043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840ffffffc000000; valaddr_reg:x3; val_offset:231129*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231129*0 + 3*243*FLEN/8, x4, x1, x2)

inst_77044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840ffffffe000000; valaddr_reg:x3; val_offset:231132*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231132*0 + 3*244*FLEN/8, x4, x1, x2)

inst_77045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840fffffff000000; valaddr_reg:x3; val_offset:231135*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231135*0 + 3*245*FLEN/8, x4, x1, x2)

inst_77046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840fffffff800000; valaddr_reg:x3; val_offset:231138*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231138*0 + 3*246*FLEN/8, x4, x1, x2)

inst_77047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840fffffffc00000; valaddr_reg:x3; val_offset:231141*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231141*0 + 3*247*FLEN/8, x4, x1, x2)

inst_77048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840fffffffe00000; valaddr_reg:x3; val_offset:231144*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231144*0 + 3*248*FLEN/8, x4, x1, x2)

inst_77049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840ffffffff00000; valaddr_reg:x3; val_offset:231147*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231147*0 + 3*249*FLEN/8, x4, x1, x2)

inst_77050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840ffffffff80000; valaddr_reg:x3; val_offset:231150*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231150*0 + 3*250*FLEN/8, x4, x1, x2)

inst_77051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840ffffffffc0000; valaddr_reg:x3; val_offset:231153*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231153*0 + 3*251*FLEN/8, x4, x1, x2)

inst_77052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840ffffffffe0000; valaddr_reg:x3; val_offset:231156*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231156*0 + 3*252*FLEN/8, x4, x1, x2)

inst_77053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840fffffffff0000; valaddr_reg:x3; val_offset:231159*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231159*0 + 3*253*FLEN/8, x4, x1, x2)

inst_77054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840fffffffff8000; valaddr_reg:x3; val_offset:231162*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231162*0 + 3*254*FLEN/8, x4, x1, x2)

inst_77055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840fffffffffc000; valaddr_reg:x3; val_offset:231165*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231165*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_77056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840fffffffffe000; valaddr_reg:x3; val_offset:231168*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231168*0 + 3*256*FLEN/8, x4, x1, x2)

inst_77057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840ffffffffff000; valaddr_reg:x3; val_offset:231171*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231171*0 + 3*257*FLEN/8, x4, x1, x2)

inst_77058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840ffffffffff800; valaddr_reg:x3; val_offset:231174*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231174*0 + 3*258*FLEN/8, x4, x1, x2)

inst_77059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840ffffffffffc00; valaddr_reg:x3; val_offset:231177*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231177*0 + 3*259*FLEN/8, x4, x1, x2)

inst_77060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840ffffffffffe00; valaddr_reg:x3; val_offset:231180*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231180*0 + 3*260*FLEN/8, x4, x1, x2)

inst_77061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840fffffffffff00; valaddr_reg:x3; val_offset:231183*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231183*0 + 3*261*FLEN/8, x4, x1, x2)

inst_77062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840fffffffffff80; valaddr_reg:x3; val_offset:231186*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231186*0 + 3*262*FLEN/8, x4, x1, x2)

inst_77063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840fffffffffffc0; valaddr_reg:x3; val_offset:231189*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231189*0 + 3*263*FLEN/8, x4, x1, x2)

inst_77064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840fffffffffffe0; valaddr_reg:x3; val_offset:231192*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231192*0 + 3*264*FLEN/8, x4, x1, x2)

inst_77065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840ffffffffffff0; valaddr_reg:x3; val_offset:231195*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231195*0 + 3*265*FLEN/8, x4, x1, x2)

inst_77066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840ffffffffffff8; valaddr_reg:x3; val_offset:231198*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231198*0 + 3*266*FLEN/8, x4, x1, x2)

inst_77067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840ffffffffffffc; valaddr_reg:x3; val_offset:231201*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231201*0 + 3*267*FLEN/8, x4, x1, x2)

inst_77068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840ffffffffffffe; valaddr_reg:x3; val_offset:231204*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231204*0 + 3*268*FLEN/8, x4, x1, x2)

inst_77069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f5f3c4455f21 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f5f3c4455f21; op2val:0x8000;
op3val:0x840fffffffffffff; valaddr_reg:x3; val_offset:231207*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231207*0 + 3*269*FLEN/8, x4, x1, x2)

inst_77070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:231210*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231210*0 + 3*270*FLEN/8, x4, x1, x2)

inst_77071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:231213*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231213*0 + 3*271*FLEN/8, x4, x1, x2)

inst_77072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:231216*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231216*0 + 3*272*FLEN/8, x4, x1, x2)

inst_77073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:231219*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231219*0 + 3*273*FLEN/8, x4, x1, x2)

inst_77074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:231222*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231222*0 + 3*274*FLEN/8, x4, x1, x2)

inst_77075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:231225*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231225*0 + 3*275*FLEN/8, x4, x1, x2)

inst_77076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:231228*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231228*0 + 3*276*FLEN/8, x4, x1, x2)

inst_77077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:231231*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231231*0 + 3*277*FLEN/8, x4, x1, x2)

inst_77078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:231234*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231234*0 + 3*278*FLEN/8, x4, x1, x2)

inst_77079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:231237*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231237*0 + 3*279*FLEN/8, x4, x1, x2)

inst_77080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:231240*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231240*0 + 3*280*FLEN/8, x4, x1, x2)

inst_77081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:231243*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231243*0 + 3*281*FLEN/8, x4, x1, x2)

inst_77082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:231246*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231246*0 + 3*282*FLEN/8, x4, x1, x2)

inst_77083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:231249*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231249*0 + 3*283*FLEN/8, x4, x1, x2)

inst_77084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:231252*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231252*0 + 3*284*FLEN/8, x4, x1, x2)

inst_77085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:231255*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231255*0 + 3*285*FLEN/8, x4, x1, x2)

inst_77086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:231258*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231258*0 + 3*286*FLEN/8, x4, x1, x2)

inst_77087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:231261*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231261*0 + 3*287*FLEN/8, x4, x1, x2)

inst_77088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:231264*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231264*0 + 3*288*FLEN/8, x4, x1, x2)

inst_77089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:231267*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231267*0 + 3*289*FLEN/8, x4, x1, x2)

inst_77090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:231270*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231270*0 + 3*290*FLEN/8, x4, x1, x2)

inst_77091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:231273*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231273*0 + 3*291*FLEN/8, x4, x1, x2)

inst_77092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80d0000000000000; valaddr_reg:x3; val_offset:231276*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231276*0 + 3*292*FLEN/8, x4, x1, x2)

inst_77093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80d0000000000001; valaddr_reg:x3; val_offset:231279*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231279*0 + 3*293*FLEN/8, x4, x1, x2)

inst_77094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80d0000000000003; valaddr_reg:x3; val_offset:231282*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231282*0 + 3*294*FLEN/8, x4, x1, x2)

inst_77095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80d0000000000007; valaddr_reg:x3; val_offset:231285*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231285*0 + 3*295*FLEN/8, x4, x1, x2)

inst_77096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80d000000000000f; valaddr_reg:x3; val_offset:231288*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231288*0 + 3*296*FLEN/8, x4, x1, x2)

inst_77097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80d000000000001f; valaddr_reg:x3; val_offset:231291*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231291*0 + 3*297*FLEN/8, x4, x1, x2)

inst_77098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80d000000000003f; valaddr_reg:x3; val_offset:231294*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231294*0 + 3*298*FLEN/8, x4, x1, x2)

inst_77099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80d000000000007f; valaddr_reg:x3; val_offset:231297*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231297*0 + 3*299*FLEN/8, x4, x1, x2)

inst_77100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80d00000000000ff; valaddr_reg:x3; val_offset:231300*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231300*0 + 3*300*FLEN/8, x4, x1, x2)

inst_77101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80d00000000001ff; valaddr_reg:x3; val_offset:231303*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231303*0 + 3*301*FLEN/8, x4, x1, x2)

inst_77102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80d00000000003ff; valaddr_reg:x3; val_offset:231306*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231306*0 + 3*302*FLEN/8, x4, x1, x2)

inst_77103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80d00000000007ff; valaddr_reg:x3; val_offset:231309*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231309*0 + 3*303*FLEN/8, x4, x1, x2)

inst_77104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80d0000000000fff; valaddr_reg:x3; val_offset:231312*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231312*0 + 3*304*FLEN/8, x4, x1, x2)

inst_77105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80d0000000001fff; valaddr_reg:x3; val_offset:231315*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231315*0 + 3*305*FLEN/8, x4, x1, x2)

inst_77106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80d0000000003fff; valaddr_reg:x3; val_offset:231318*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231318*0 + 3*306*FLEN/8, x4, x1, x2)

inst_77107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80d0000000007fff; valaddr_reg:x3; val_offset:231321*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231321*0 + 3*307*FLEN/8, x4, x1, x2)

inst_77108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80d000000000ffff; valaddr_reg:x3; val_offset:231324*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231324*0 + 3*308*FLEN/8, x4, x1, x2)

inst_77109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80d000000001ffff; valaddr_reg:x3; val_offset:231327*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231327*0 + 3*309*FLEN/8, x4, x1, x2)

inst_77110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80d000000003ffff; valaddr_reg:x3; val_offset:231330*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231330*0 + 3*310*FLEN/8, x4, x1, x2)

inst_77111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80d000000007ffff; valaddr_reg:x3; val_offset:231333*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231333*0 + 3*311*FLEN/8, x4, x1, x2)

inst_77112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80d00000000fffff; valaddr_reg:x3; val_offset:231336*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231336*0 + 3*312*FLEN/8, x4, x1, x2)

inst_77113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80d00000001fffff; valaddr_reg:x3; val_offset:231339*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231339*0 + 3*313*FLEN/8, x4, x1, x2)

inst_77114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80d00000003fffff; valaddr_reg:x3; val_offset:231342*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231342*0 + 3*314*FLEN/8, x4, x1, x2)

inst_77115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80d00000007fffff; valaddr_reg:x3; val_offset:231345*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231345*0 + 3*315*FLEN/8, x4, x1, x2)

inst_77116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80d0000000ffffff; valaddr_reg:x3; val_offset:231348*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231348*0 + 3*316*FLEN/8, x4, x1, x2)

inst_77117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80d0000001ffffff; valaddr_reg:x3; val_offset:231351*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231351*0 + 3*317*FLEN/8, x4, x1, x2)

inst_77118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80d0000003ffffff; valaddr_reg:x3; val_offset:231354*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231354*0 + 3*318*FLEN/8, x4, x1, x2)

inst_77119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80d0000007ffffff; valaddr_reg:x3; val_offset:231357*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231357*0 + 3*319*FLEN/8, x4, x1, x2)

inst_77120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80d000000fffffff; valaddr_reg:x3; val_offset:231360*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231360*0 + 3*320*FLEN/8, x4, x1, x2)

inst_77121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80d000001fffffff; valaddr_reg:x3; val_offset:231363*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231363*0 + 3*321*FLEN/8, x4, x1, x2)

inst_77122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80d000003fffffff; valaddr_reg:x3; val_offset:231366*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231366*0 + 3*322*FLEN/8, x4, x1, x2)

inst_77123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80d000007fffffff; valaddr_reg:x3; val_offset:231369*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231369*0 + 3*323*FLEN/8, x4, x1, x2)

inst_77124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80d00000ffffffff; valaddr_reg:x3; val_offset:231372*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231372*0 + 3*324*FLEN/8, x4, x1, x2)

inst_77125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80d00001ffffffff; valaddr_reg:x3; val_offset:231375*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231375*0 + 3*325*FLEN/8, x4, x1, x2)

inst_77126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80d00003ffffffff; valaddr_reg:x3; val_offset:231378*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231378*0 + 3*326*FLEN/8, x4, x1, x2)

inst_77127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80d00007ffffffff; valaddr_reg:x3; val_offset:231381*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231381*0 + 3*327*FLEN/8, x4, x1, x2)

inst_77128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80d0000fffffffff; valaddr_reg:x3; val_offset:231384*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231384*0 + 3*328*FLEN/8, x4, x1, x2)

inst_77129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80d0001fffffffff; valaddr_reg:x3; val_offset:231387*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231387*0 + 3*329*FLEN/8, x4, x1, x2)

inst_77130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80d0003fffffffff; valaddr_reg:x3; val_offset:231390*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231390*0 + 3*330*FLEN/8, x4, x1, x2)

inst_77131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80d0007fffffffff; valaddr_reg:x3; val_offset:231393*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231393*0 + 3*331*FLEN/8, x4, x1, x2)

inst_77132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80d000ffffffffff; valaddr_reg:x3; val_offset:231396*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231396*0 + 3*332*FLEN/8, x4, x1, x2)

inst_77133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80d001ffffffffff; valaddr_reg:x3; val_offset:231399*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231399*0 + 3*333*FLEN/8, x4, x1, x2)

inst_77134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80d003ffffffffff; valaddr_reg:x3; val_offset:231402*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231402*0 + 3*334*FLEN/8, x4, x1, x2)

inst_77135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80d007ffffffffff; valaddr_reg:x3; val_offset:231405*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231405*0 + 3*335*FLEN/8, x4, x1, x2)

inst_77136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80d00fffffffffff; valaddr_reg:x3; val_offset:231408*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231408*0 + 3*336*FLEN/8, x4, x1, x2)

inst_77137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80d01fffffffffff; valaddr_reg:x3; val_offset:231411*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231411*0 + 3*337*FLEN/8, x4, x1, x2)

inst_77138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80d03fffffffffff; valaddr_reg:x3; val_offset:231414*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231414*0 + 3*338*FLEN/8, x4, x1, x2)

inst_77139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80d07fffffffffff; valaddr_reg:x3; val_offset:231417*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231417*0 + 3*339*FLEN/8, x4, x1, x2)

inst_77140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80d0ffffffffffff; valaddr_reg:x3; val_offset:231420*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231420*0 + 3*340*FLEN/8, x4, x1, x2)

inst_77141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80d1ffffffffffff; valaddr_reg:x3; val_offset:231423*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231423*0 + 3*341*FLEN/8, x4, x1, x2)

inst_77142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80d3ffffffffffff; valaddr_reg:x3; val_offset:231426*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231426*0 + 3*342*FLEN/8, x4, x1, x2)

inst_77143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80d7ffffffffffff; valaddr_reg:x3; val_offset:231429*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231429*0 + 3*343*FLEN/8, x4, x1, x2)

inst_77144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80d8000000000000; valaddr_reg:x3; val_offset:231432*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231432*0 + 3*344*FLEN/8, x4, x1, x2)

inst_77145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80dc000000000000; valaddr_reg:x3; val_offset:231435*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231435*0 + 3*345*FLEN/8, x4, x1, x2)

inst_77146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80de000000000000; valaddr_reg:x3; val_offset:231438*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231438*0 + 3*346*FLEN/8, x4, x1, x2)

inst_77147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80df000000000000; valaddr_reg:x3; val_offset:231441*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231441*0 + 3*347*FLEN/8, x4, x1, x2)

inst_77148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80df800000000000; valaddr_reg:x3; val_offset:231444*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231444*0 + 3*348*FLEN/8, x4, x1, x2)

inst_77149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80dfc00000000000; valaddr_reg:x3; val_offset:231447*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231447*0 + 3*349*FLEN/8, x4, x1, x2)

inst_77150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80dfe00000000000; valaddr_reg:x3; val_offset:231450*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231450*0 + 3*350*FLEN/8, x4, x1, x2)

inst_77151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80dff00000000000; valaddr_reg:x3; val_offset:231453*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231453*0 + 3*351*FLEN/8, x4, x1, x2)

inst_77152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80dff80000000000; valaddr_reg:x3; val_offset:231456*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231456*0 + 3*352*FLEN/8, x4, x1, x2)

inst_77153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80dffc0000000000; valaddr_reg:x3; val_offset:231459*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231459*0 + 3*353*FLEN/8, x4, x1, x2)

inst_77154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80dffe0000000000; valaddr_reg:x3; val_offset:231462*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231462*0 + 3*354*FLEN/8, x4, x1, x2)

inst_77155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80dfff0000000000; valaddr_reg:x3; val_offset:231465*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231465*0 + 3*355*FLEN/8, x4, x1, x2)

inst_77156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80dfff8000000000; valaddr_reg:x3; val_offset:231468*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231468*0 + 3*356*FLEN/8, x4, x1, x2)

inst_77157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80dfffc000000000; valaddr_reg:x3; val_offset:231471*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231471*0 + 3*357*FLEN/8, x4, x1, x2)

inst_77158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80dfffe000000000; valaddr_reg:x3; val_offset:231474*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231474*0 + 3*358*FLEN/8, x4, x1, x2)

inst_77159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80dffff000000000; valaddr_reg:x3; val_offset:231477*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231477*0 + 3*359*FLEN/8, x4, x1, x2)

inst_77160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80dffff800000000; valaddr_reg:x3; val_offset:231480*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231480*0 + 3*360*FLEN/8, x4, x1, x2)

inst_77161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80dffffc00000000; valaddr_reg:x3; val_offset:231483*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231483*0 + 3*361*FLEN/8, x4, x1, x2)

inst_77162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80dffffe00000000; valaddr_reg:x3; val_offset:231486*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231486*0 + 3*362*FLEN/8, x4, x1, x2)

inst_77163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80dfffff00000000; valaddr_reg:x3; val_offset:231489*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231489*0 + 3*363*FLEN/8, x4, x1, x2)

inst_77164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80dfffff80000000; valaddr_reg:x3; val_offset:231492*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231492*0 + 3*364*FLEN/8, x4, x1, x2)

inst_77165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80dfffffc0000000; valaddr_reg:x3; val_offset:231495*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231495*0 + 3*365*FLEN/8, x4, x1, x2)

inst_77166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80dfffffe0000000; valaddr_reg:x3; val_offset:231498*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231498*0 + 3*366*FLEN/8, x4, x1, x2)

inst_77167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80dffffff0000000; valaddr_reg:x3; val_offset:231501*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231501*0 + 3*367*FLEN/8, x4, x1, x2)

inst_77168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80dffffff8000000; valaddr_reg:x3; val_offset:231504*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231504*0 + 3*368*FLEN/8, x4, x1, x2)

inst_77169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80dffffffc000000; valaddr_reg:x3; val_offset:231507*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231507*0 + 3*369*FLEN/8, x4, x1, x2)

inst_77170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80dffffffe000000; valaddr_reg:x3; val_offset:231510*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231510*0 + 3*370*FLEN/8, x4, x1, x2)

inst_77171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80dfffffff000000; valaddr_reg:x3; val_offset:231513*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231513*0 + 3*371*FLEN/8, x4, x1, x2)

inst_77172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80dfffffff800000; valaddr_reg:x3; val_offset:231516*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231516*0 + 3*372*FLEN/8, x4, x1, x2)

inst_77173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80dfffffffc00000; valaddr_reg:x3; val_offset:231519*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231519*0 + 3*373*FLEN/8, x4, x1, x2)

inst_77174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80dfffffffe00000; valaddr_reg:x3; val_offset:231522*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231522*0 + 3*374*FLEN/8, x4, x1, x2)

inst_77175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80dffffffff00000; valaddr_reg:x3; val_offset:231525*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231525*0 + 3*375*FLEN/8, x4, x1, x2)

inst_77176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80dffffffff80000; valaddr_reg:x3; val_offset:231528*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231528*0 + 3*376*FLEN/8, x4, x1, x2)

inst_77177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80dffffffffc0000; valaddr_reg:x3; val_offset:231531*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231531*0 + 3*377*FLEN/8, x4, x1, x2)

inst_77178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80dffffffffe0000; valaddr_reg:x3; val_offset:231534*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231534*0 + 3*378*FLEN/8, x4, x1, x2)

inst_77179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80dfffffffff0000; valaddr_reg:x3; val_offset:231537*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231537*0 + 3*379*FLEN/8, x4, x1, x2)

inst_77180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80dfffffffff8000; valaddr_reg:x3; val_offset:231540*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231540*0 + 3*380*FLEN/8, x4, x1, x2)

inst_77181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80dfffffffffc000; valaddr_reg:x3; val_offset:231543*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231543*0 + 3*381*FLEN/8, x4, x1, x2)

inst_77182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80dfffffffffe000; valaddr_reg:x3; val_offset:231546*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231546*0 + 3*382*FLEN/8, x4, x1, x2)

inst_77183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80dffffffffff000; valaddr_reg:x3; val_offset:231549*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231549*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_77184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80dffffffffff800; valaddr_reg:x3; val_offset:231552*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231552*0 + 3*384*FLEN/8, x4, x1, x2)

inst_77185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80dffffffffffc00; valaddr_reg:x3; val_offset:231555*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231555*0 + 3*385*FLEN/8, x4, x1, x2)

inst_77186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80dffffffffffe00; valaddr_reg:x3; val_offset:231558*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231558*0 + 3*386*FLEN/8, x4, x1, x2)

inst_77187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80dfffffffffff00; valaddr_reg:x3; val_offset:231561*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231561*0 + 3*387*FLEN/8, x4, x1, x2)

inst_77188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80dfffffffffff80; valaddr_reg:x3; val_offset:231564*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231564*0 + 3*388*FLEN/8, x4, x1, x2)

inst_77189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80dfffffffffffc0; valaddr_reg:x3; val_offset:231567*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231567*0 + 3*389*FLEN/8, x4, x1, x2)

inst_77190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80dfffffffffffe0; valaddr_reg:x3; val_offset:231570*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231570*0 + 3*390*FLEN/8, x4, x1, x2)

inst_77191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80dffffffffffff0; valaddr_reg:x3; val_offset:231573*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231573*0 + 3*391*FLEN/8, x4, x1, x2)

inst_77192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80dffffffffffff8; valaddr_reg:x3; val_offset:231576*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231576*0 + 3*392*FLEN/8, x4, x1, x2)

inst_77193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80dffffffffffffc; valaddr_reg:x3; val_offset:231579*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231579*0 + 3*393*FLEN/8, x4, x1, x2)

inst_77194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80dffffffffffffe; valaddr_reg:x3; val_offset:231582*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231582*0 + 3*394*FLEN/8, x4, x1, x2)

inst_77195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80b46559a5fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80b46559a5fc7; op2val:0x8000;
op3val:0x80dfffffffffffff; valaddr_reg:x3; val_offset:231585*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231585*0 + 3*395*FLEN/8, x4, x1, x2)

inst_77196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:231588*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231588*0 + 3*396*FLEN/8, x4, x1, x2)

inst_77197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:231591*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231591*0 + 3*397*FLEN/8, x4, x1, x2)

inst_77198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:231594*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231594*0 + 3*398*FLEN/8, x4, x1, x2)

inst_77199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:231597*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231597*0 + 3*399*FLEN/8, x4, x1, x2)

inst_77200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:231600*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231600*0 + 3*400*FLEN/8, x4, x1, x2)

inst_77201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:231603*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231603*0 + 3*401*FLEN/8, x4, x1, x2)

inst_77202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:231606*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231606*0 + 3*402*FLEN/8, x4, x1, x2)

inst_77203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:231609*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231609*0 + 3*403*FLEN/8, x4, x1, x2)

inst_77204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:231612*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231612*0 + 3*404*FLEN/8, x4, x1, x2)

inst_77205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:231615*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231615*0 + 3*405*FLEN/8, x4, x1, x2)

inst_77206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:231618*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231618*0 + 3*406*FLEN/8, x4, x1, x2)

inst_77207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:231621*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231621*0 + 3*407*FLEN/8, x4, x1, x2)

inst_77208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:231624*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231624*0 + 3*408*FLEN/8, x4, x1, x2)

inst_77209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:231627*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231627*0 + 3*409*FLEN/8, x4, x1, x2)

inst_77210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:231630*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231630*0 + 3*410*FLEN/8, x4, x1, x2)

inst_77211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:231633*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231633*0 + 3*411*FLEN/8, x4, x1, x2)

inst_77212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:231636*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231636*0 + 3*412*FLEN/8, x4, x1, x2)

inst_77213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:231639*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231639*0 + 3*413*FLEN/8, x4, x1, x2)

inst_77214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:231642*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231642*0 + 3*414*FLEN/8, x4, x1, x2)

inst_77215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:231645*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231645*0 + 3*415*FLEN/8, x4, x1, x2)

inst_77216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:231648*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231648*0 + 3*416*FLEN/8, x4, x1, x2)

inst_77217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:231651*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231651*0 + 3*417*FLEN/8, x4, x1, x2)

inst_77218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x8380000000000000; valaddr_reg:x3; val_offset:231654*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231654*0 + 3*418*FLEN/8, x4, x1, x2)

inst_77219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x8380000000000001; valaddr_reg:x3; val_offset:231657*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231657*0 + 3*419*FLEN/8, x4, x1, x2)

inst_77220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x8380000000000003; valaddr_reg:x3; val_offset:231660*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231660*0 + 3*420*FLEN/8, x4, x1, x2)

inst_77221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x8380000000000007; valaddr_reg:x3; val_offset:231663*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231663*0 + 3*421*FLEN/8, x4, x1, x2)

inst_77222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838000000000000f; valaddr_reg:x3; val_offset:231666*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231666*0 + 3*422*FLEN/8, x4, x1, x2)

inst_77223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838000000000001f; valaddr_reg:x3; val_offset:231669*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231669*0 + 3*423*FLEN/8, x4, x1, x2)

inst_77224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838000000000003f; valaddr_reg:x3; val_offset:231672*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231672*0 + 3*424*FLEN/8, x4, x1, x2)

inst_77225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838000000000007f; valaddr_reg:x3; val_offset:231675*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231675*0 + 3*425*FLEN/8, x4, x1, x2)

inst_77226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x83800000000000ff; valaddr_reg:x3; val_offset:231678*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231678*0 + 3*426*FLEN/8, x4, x1, x2)

inst_77227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x83800000000001ff; valaddr_reg:x3; val_offset:231681*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231681*0 + 3*427*FLEN/8, x4, x1, x2)

inst_77228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x83800000000003ff; valaddr_reg:x3; val_offset:231684*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231684*0 + 3*428*FLEN/8, x4, x1, x2)

inst_77229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x83800000000007ff; valaddr_reg:x3; val_offset:231687*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231687*0 + 3*429*FLEN/8, x4, x1, x2)

inst_77230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x8380000000000fff; valaddr_reg:x3; val_offset:231690*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231690*0 + 3*430*FLEN/8, x4, x1, x2)

inst_77231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x8380000000001fff; valaddr_reg:x3; val_offset:231693*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231693*0 + 3*431*FLEN/8, x4, x1, x2)

inst_77232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x8380000000003fff; valaddr_reg:x3; val_offset:231696*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231696*0 + 3*432*FLEN/8, x4, x1, x2)

inst_77233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x8380000000007fff; valaddr_reg:x3; val_offset:231699*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231699*0 + 3*433*FLEN/8, x4, x1, x2)

inst_77234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838000000000ffff; valaddr_reg:x3; val_offset:231702*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231702*0 + 3*434*FLEN/8, x4, x1, x2)

inst_77235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838000000001ffff; valaddr_reg:x3; val_offset:231705*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231705*0 + 3*435*FLEN/8, x4, x1, x2)

inst_77236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838000000003ffff; valaddr_reg:x3; val_offset:231708*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231708*0 + 3*436*FLEN/8, x4, x1, x2)

inst_77237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838000000007ffff; valaddr_reg:x3; val_offset:231711*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231711*0 + 3*437*FLEN/8, x4, x1, x2)

inst_77238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x83800000000fffff; valaddr_reg:x3; val_offset:231714*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231714*0 + 3*438*FLEN/8, x4, x1, x2)

inst_77239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x83800000001fffff; valaddr_reg:x3; val_offset:231717*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231717*0 + 3*439*FLEN/8, x4, x1, x2)

inst_77240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x83800000003fffff; valaddr_reg:x3; val_offset:231720*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231720*0 + 3*440*FLEN/8, x4, x1, x2)

inst_77241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x83800000007fffff; valaddr_reg:x3; val_offset:231723*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231723*0 + 3*441*FLEN/8, x4, x1, x2)

inst_77242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x8380000000ffffff; valaddr_reg:x3; val_offset:231726*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231726*0 + 3*442*FLEN/8, x4, x1, x2)

inst_77243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x8380000001ffffff; valaddr_reg:x3; val_offset:231729*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231729*0 + 3*443*FLEN/8, x4, x1, x2)

inst_77244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x8380000003ffffff; valaddr_reg:x3; val_offset:231732*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231732*0 + 3*444*FLEN/8, x4, x1, x2)

inst_77245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x8380000007ffffff; valaddr_reg:x3; val_offset:231735*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231735*0 + 3*445*FLEN/8, x4, x1, x2)

inst_77246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838000000fffffff; valaddr_reg:x3; val_offset:231738*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231738*0 + 3*446*FLEN/8, x4, x1, x2)

inst_77247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838000001fffffff; valaddr_reg:x3; val_offset:231741*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231741*0 + 3*447*FLEN/8, x4, x1, x2)

inst_77248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838000003fffffff; valaddr_reg:x3; val_offset:231744*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231744*0 + 3*448*FLEN/8, x4, x1, x2)

inst_77249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838000007fffffff; valaddr_reg:x3; val_offset:231747*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231747*0 + 3*449*FLEN/8, x4, x1, x2)

inst_77250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x83800000ffffffff; valaddr_reg:x3; val_offset:231750*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231750*0 + 3*450*FLEN/8, x4, x1, x2)

inst_77251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x83800001ffffffff; valaddr_reg:x3; val_offset:231753*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231753*0 + 3*451*FLEN/8, x4, x1, x2)

inst_77252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x83800003ffffffff; valaddr_reg:x3; val_offset:231756*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231756*0 + 3*452*FLEN/8, x4, x1, x2)

inst_77253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x83800007ffffffff; valaddr_reg:x3; val_offset:231759*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231759*0 + 3*453*FLEN/8, x4, x1, x2)

inst_77254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x8380000fffffffff; valaddr_reg:x3; val_offset:231762*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231762*0 + 3*454*FLEN/8, x4, x1, x2)

inst_77255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x8380001fffffffff; valaddr_reg:x3; val_offset:231765*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231765*0 + 3*455*FLEN/8, x4, x1, x2)

inst_77256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x8380003fffffffff; valaddr_reg:x3; val_offset:231768*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231768*0 + 3*456*FLEN/8, x4, x1, x2)

inst_77257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x8380007fffffffff; valaddr_reg:x3; val_offset:231771*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231771*0 + 3*457*FLEN/8, x4, x1, x2)

inst_77258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838000ffffffffff; valaddr_reg:x3; val_offset:231774*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231774*0 + 3*458*FLEN/8, x4, x1, x2)

inst_77259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838001ffffffffff; valaddr_reg:x3; val_offset:231777*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231777*0 + 3*459*FLEN/8, x4, x1, x2)

inst_77260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838003ffffffffff; valaddr_reg:x3; val_offset:231780*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231780*0 + 3*460*FLEN/8, x4, x1, x2)

inst_77261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838007ffffffffff; valaddr_reg:x3; val_offset:231783*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231783*0 + 3*461*FLEN/8, x4, x1, x2)

inst_77262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x83800fffffffffff; valaddr_reg:x3; val_offset:231786*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231786*0 + 3*462*FLEN/8, x4, x1, x2)

inst_77263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x83801fffffffffff; valaddr_reg:x3; val_offset:231789*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231789*0 + 3*463*FLEN/8, x4, x1, x2)

inst_77264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x83803fffffffffff; valaddr_reg:x3; val_offset:231792*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231792*0 + 3*464*FLEN/8, x4, x1, x2)

inst_77265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x83807fffffffffff; valaddr_reg:x3; val_offset:231795*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231795*0 + 3*465*FLEN/8, x4, x1, x2)

inst_77266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x8380ffffffffffff; valaddr_reg:x3; val_offset:231798*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231798*0 + 3*466*FLEN/8, x4, x1, x2)

inst_77267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x8381ffffffffffff; valaddr_reg:x3; val_offset:231801*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231801*0 + 3*467*FLEN/8, x4, x1, x2)

inst_77268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x8383ffffffffffff; valaddr_reg:x3; val_offset:231804*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231804*0 + 3*468*FLEN/8, x4, x1, x2)

inst_77269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x8387ffffffffffff; valaddr_reg:x3; val_offset:231807*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231807*0 + 3*469*FLEN/8, x4, x1, x2)

inst_77270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x8388000000000000; valaddr_reg:x3; val_offset:231810*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231810*0 + 3*470*FLEN/8, x4, x1, x2)

inst_77271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838c000000000000; valaddr_reg:x3; val_offset:231813*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231813*0 + 3*471*FLEN/8, x4, x1, x2)

inst_77272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838e000000000000; valaddr_reg:x3; val_offset:231816*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231816*0 + 3*472*FLEN/8, x4, x1, x2)

inst_77273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838f000000000000; valaddr_reg:x3; val_offset:231819*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231819*0 + 3*473*FLEN/8, x4, x1, x2)

inst_77274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838f800000000000; valaddr_reg:x3; val_offset:231822*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231822*0 + 3*474*FLEN/8, x4, x1, x2)

inst_77275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838fc00000000000; valaddr_reg:x3; val_offset:231825*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231825*0 + 3*475*FLEN/8, x4, x1, x2)

inst_77276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838fe00000000000; valaddr_reg:x3; val_offset:231828*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231828*0 + 3*476*FLEN/8, x4, x1, x2)

inst_77277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838ff00000000000; valaddr_reg:x3; val_offset:231831*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231831*0 + 3*477*FLEN/8, x4, x1, x2)

inst_77278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838ff80000000000; valaddr_reg:x3; val_offset:231834*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231834*0 + 3*478*FLEN/8, x4, x1, x2)

inst_77279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838ffc0000000000; valaddr_reg:x3; val_offset:231837*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231837*0 + 3*479*FLEN/8, x4, x1, x2)

inst_77280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838ffe0000000000; valaddr_reg:x3; val_offset:231840*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231840*0 + 3*480*FLEN/8, x4, x1, x2)

inst_77281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838fff0000000000; valaddr_reg:x3; val_offset:231843*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231843*0 + 3*481*FLEN/8, x4, x1, x2)

inst_77282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838fff8000000000; valaddr_reg:x3; val_offset:231846*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231846*0 + 3*482*FLEN/8, x4, x1, x2)

inst_77283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838fffc000000000; valaddr_reg:x3; val_offset:231849*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231849*0 + 3*483*FLEN/8, x4, x1, x2)

inst_77284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838fffe000000000; valaddr_reg:x3; val_offset:231852*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231852*0 + 3*484*FLEN/8, x4, x1, x2)

inst_77285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838ffff000000000; valaddr_reg:x3; val_offset:231855*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231855*0 + 3*485*FLEN/8, x4, x1, x2)

inst_77286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838ffff800000000; valaddr_reg:x3; val_offset:231858*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231858*0 + 3*486*FLEN/8, x4, x1, x2)

inst_77287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838ffffc00000000; valaddr_reg:x3; val_offset:231861*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231861*0 + 3*487*FLEN/8, x4, x1, x2)

inst_77288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838ffffe00000000; valaddr_reg:x3; val_offset:231864*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231864*0 + 3*488*FLEN/8, x4, x1, x2)

inst_77289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838fffff00000000; valaddr_reg:x3; val_offset:231867*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231867*0 + 3*489*FLEN/8, x4, x1, x2)

inst_77290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838fffff80000000; valaddr_reg:x3; val_offset:231870*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231870*0 + 3*490*FLEN/8, x4, x1, x2)

inst_77291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838fffffc0000000; valaddr_reg:x3; val_offset:231873*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231873*0 + 3*491*FLEN/8, x4, x1, x2)

inst_77292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838fffffe0000000; valaddr_reg:x3; val_offset:231876*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231876*0 + 3*492*FLEN/8, x4, x1, x2)

inst_77293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838ffffff0000000; valaddr_reg:x3; val_offset:231879*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231879*0 + 3*493*FLEN/8, x4, x1, x2)

inst_77294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838ffffff8000000; valaddr_reg:x3; val_offset:231882*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231882*0 + 3*494*FLEN/8, x4, x1, x2)

inst_77295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838ffffffc000000; valaddr_reg:x3; val_offset:231885*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231885*0 + 3*495*FLEN/8, x4, x1, x2)

inst_77296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838ffffffe000000; valaddr_reg:x3; val_offset:231888*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231888*0 + 3*496*FLEN/8, x4, x1, x2)

inst_77297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838fffffff000000; valaddr_reg:x3; val_offset:231891*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231891*0 + 3*497*FLEN/8, x4, x1, x2)

inst_77298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838fffffff800000; valaddr_reg:x3; val_offset:231894*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231894*0 + 3*498*FLEN/8, x4, x1, x2)

inst_77299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838fffffffc00000; valaddr_reg:x3; val_offset:231897*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231897*0 + 3*499*FLEN/8, x4, x1, x2)

inst_77300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838fffffffe00000; valaddr_reg:x3; val_offset:231900*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231900*0 + 3*500*FLEN/8, x4, x1, x2)

inst_77301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838ffffffff00000; valaddr_reg:x3; val_offset:231903*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231903*0 + 3*501*FLEN/8, x4, x1, x2)

inst_77302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838ffffffff80000; valaddr_reg:x3; val_offset:231906*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231906*0 + 3*502*FLEN/8, x4, x1, x2)

inst_77303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838ffffffffc0000; valaddr_reg:x3; val_offset:231909*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231909*0 + 3*503*FLEN/8, x4, x1, x2)

inst_77304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838ffffffffe0000; valaddr_reg:x3; val_offset:231912*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231912*0 + 3*504*FLEN/8, x4, x1, x2)

inst_77305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838fffffffff0000; valaddr_reg:x3; val_offset:231915*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231915*0 + 3*505*FLEN/8, x4, x1, x2)

inst_77306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838fffffffff8000; valaddr_reg:x3; val_offset:231918*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231918*0 + 3*506*FLEN/8, x4, x1, x2)

inst_77307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838fffffffffc000; valaddr_reg:x3; val_offset:231921*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231921*0 + 3*507*FLEN/8, x4, x1, x2)

inst_77308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838fffffffffe000; valaddr_reg:x3; val_offset:231924*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231924*0 + 3*508*FLEN/8, x4, x1, x2)

inst_77309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838ffffffffff000; valaddr_reg:x3; val_offset:231927*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231927*0 + 3*509*FLEN/8, x4, x1, x2)

inst_77310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838ffffffffff800; valaddr_reg:x3; val_offset:231930*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231930*0 + 3*510*FLEN/8, x4, x1, x2)

inst_77311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838ffffffffffc00; valaddr_reg:x3; val_offset:231933*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231933*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_77312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838ffffffffffe00; valaddr_reg:x3; val_offset:231936*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231936*0 + 3*512*FLEN/8, x4, x1, x2)

inst_77313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838fffffffffff00; valaddr_reg:x3; val_offset:231939*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231939*0 + 3*513*FLEN/8, x4, x1, x2)

inst_77314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838fffffffffff80; valaddr_reg:x3; val_offset:231942*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231942*0 + 3*514*FLEN/8, x4, x1, x2)

inst_77315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838fffffffffffc0; valaddr_reg:x3; val_offset:231945*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231945*0 + 3*515*FLEN/8, x4, x1, x2)

inst_77316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838fffffffffffe0; valaddr_reg:x3; val_offset:231948*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231948*0 + 3*516*FLEN/8, x4, x1, x2)

inst_77317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838ffffffffffff0; valaddr_reg:x3; val_offset:231951*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231951*0 + 3*517*FLEN/8, x4, x1, x2)

inst_77318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838ffffffffffff8; valaddr_reg:x3; val_offset:231954*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231954*0 + 3*518*FLEN/8, x4, x1, x2)

inst_77319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838ffffffffffffc; valaddr_reg:x3; val_offset:231957*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231957*0 + 3*519*FLEN/8, x4, x1, x2)

inst_77320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838ffffffffffffe; valaddr_reg:x3; val_offset:231960*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231960*0 + 3*520*FLEN/8, x4, x1, x2)

inst_77321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa82dc4511ff204; op2val:0x8000;
op3val:0x838fffffffffffff; valaddr_reg:x3; val_offset:231963*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231963*0 + 3*521*FLEN/8, x4, x1, x2)

inst_77322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:231966*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231966*0 + 3*522*FLEN/8, x4, x1, x2)

inst_77323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:231969*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231969*0 + 3*523*FLEN/8, x4, x1, x2)

inst_77324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:231972*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231972*0 + 3*524*FLEN/8, x4, x1, x2)

inst_77325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:231975*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231975*0 + 3*525*FLEN/8, x4, x1, x2)

inst_77326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:231978*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231978*0 + 3*526*FLEN/8, x4, x1, x2)

inst_77327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:231981*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231981*0 + 3*527*FLEN/8, x4, x1, x2)

inst_77328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:231984*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231984*0 + 3*528*FLEN/8, x4, x1, x2)

inst_77329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:231987*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231987*0 + 3*529*FLEN/8, x4, x1, x2)

inst_77330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:231990*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231990*0 + 3*530*FLEN/8, x4, x1, x2)

inst_77331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:231993*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231993*0 + 3*531*FLEN/8, x4, x1, x2)

inst_77332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:231996*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231996*0 + 3*532*FLEN/8, x4, x1, x2)

inst_77333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:231999*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231999*0 + 3*533*FLEN/8, x4, x1, x2)

inst_77334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:232002*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232002*0 + 3*534*FLEN/8, x4, x1, x2)

inst_77335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:232005*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232005*0 + 3*535*FLEN/8, x4, x1, x2)

inst_77336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:232008*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232008*0 + 3*536*FLEN/8, x4, x1, x2)

inst_77337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:232011*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232011*0 + 3*537*FLEN/8, x4, x1, x2)

inst_77338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:232014*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232014*0 + 3*538*FLEN/8, x4, x1, x2)

inst_77339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:232017*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232017*0 + 3*539*FLEN/8, x4, x1, x2)

inst_77340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:232020*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232020*0 + 3*540*FLEN/8, x4, x1, x2)

inst_77341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:232023*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232023*0 + 3*541*FLEN/8, x4, x1, x2)

inst_77342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:232026*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232026*0 + 3*542*FLEN/8, x4, x1, x2)

inst_77343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:232029*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232029*0 + 3*543*FLEN/8, x4, x1, x2)

inst_77344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83c0000000000000; valaddr_reg:x3; val_offset:232032*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232032*0 + 3*544*FLEN/8, x4, x1, x2)

inst_77345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83c0000000000001; valaddr_reg:x3; val_offset:232035*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232035*0 + 3*545*FLEN/8, x4, x1, x2)

inst_77346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83c0000000000003; valaddr_reg:x3; val_offset:232038*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232038*0 + 3*546*FLEN/8, x4, x1, x2)

inst_77347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83c0000000000007; valaddr_reg:x3; val_offset:232041*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232041*0 + 3*547*FLEN/8, x4, x1, x2)

inst_77348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83c000000000000f; valaddr_reg:x3; val_offset:232044*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232044*0 + 3*548*FLEN/8, x4, x1, x2)

inst_77349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83c000000000001f; valaddr_reg:x3; val_offset:232047*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232047*0 + 3*549*FLEN/8, x4, x1, x2)

inst_77350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83c000000000003f; valaddr_reg:x3; val_offset:232050*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232050*0 + 3*550*FLEN/8, x4, x1, x2)

inst_77351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83c000000000007f; valaddr_reg:x3; val_offset:232053*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232053*0 + 3*551*FLEN/8, x4, x1, x2)

inst_77352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83c00000000000ff; valaddr_reg:x3; val_offset:232056*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232056*0 + 3*552*FLEN/8, x4, x1, x2)

inst_77353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83c00000000001ff; valaddr_reg:x3; val_offset:232059*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232059*0 + 3*553*FLEN/8, x4, x1, x2)

inst_77354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83c00000000003ff; valaddr_reg:x3; val_offset:232062*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232062*0 + 3*554*FLEN/8, x4, x1, x2)

inst_77355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83c00000000007ff; valaddr_reg:x3; val_offset:232065*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232065*0 + 3*555*FLEN/8, x4, x1, x2)

inst_77356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83c0000000000fff; valaddr_reg:x3; val_offset:232068*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232068*0 + 3*556*FLEN/8, x4, x1, x2)

inst_77357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83c0000000001fff; valaddr_reg:x3; val_offset:232071*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232071*0 + 3*557*FLEN/8, x4, x1, x2)

inst_77358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83c0000000003fff; valaddr_reg:x3; val_offset:232074*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232074*0 + 3*558*FLEN/8, x4, x1, x2)

inst_77359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83c0000000007fff; valaddr_reg:x3; val_offset:232077*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232077*0 + 3*559*FLEN/8, x4, x1, x2)

inst_77360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83c000000000ffff; valaddr_reg:x3; val_offset:232080*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232080*0 + 3*560*FLEN/8, x4, x1, x2)

inst_77361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83c000000001ffff; valaddr_reg:x3; val_offset:232083*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232083*0 + 3*561*FLEN/8, x4, x1, x2)

inst_77362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83c000000003ffff; valaddr_reg:x3; val_offset:232086*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232086*0 + 3*562*FLEN/8, x4, x1, x2)

inst_77363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83c000000007ffff; valaddr_reg:x3; val_offset:232089*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232089*0 + 3*563*FLEN/8, x4, x1, x2)

inst_77364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83c00000000fffff; valaddr_reg:x3; val_offset:232092*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232092*0 + 3*564*FLEN/8, x4, x1, x2)

inst_77365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83c00000001fffff; valaddr_reg:x3; val_offset:232095*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232095*0 + 3*565*FLEN/8, x4, x1, x2)

inst_77366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83c00000003fffff; valaddr_reg:x3; val_offset:232098*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232098*0 + 3*566*FLEN/8, x4, x1, x2)

inst_77367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83c00000007fffff; valaddr_reg:x3; val_offset:232101*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232101*0 + 3*567*FLEN/8, x4, x1, x2)

inst_77368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83c0000000ffffff; valaddr_reg:x3; val_offset:232104*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232104*0 + 3*568*FLEN/8, x4, x1, x2)

inst_77369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83c0000001ffffff; valaddr_reg:x3; val_offset:232107*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232107*0 + 3*569*FLEN/8, x4, x1, x2)

inst_77370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83c0000003ffffff; valaddr_reg:x3; val_offset:232110*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232110*0 + 3*570*FLEN/8, x4, x1, x2)

inst_77371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83c0000007ffffff; valaddr_reg:x3; val_offset:232113*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232113*0 + 3*571*FLEN/8, x4, x1, x2)

inst_77372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83c000000fffffff; valaddr_reg:x3; val_offset:232116*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232116*0 + 3*572*FLEN/8, x4, x1, x2)

inst_77373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83c000001fffffff; valaddr_reg:x3; val_offset:232119*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232119*0 + 3*573*FLEN/8, x4, x1, x2)

inst_77374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83c000003fffffff; valaddr_reg:x3; val_offset:232122*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232122*0 + 3*574*FLEN/8, x4, x1, x2)

inst_77375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83c000007fffffff; valaddr_reg:x3; val_offset:232125*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232125*0 + 3*575*FLEN/8, x4, x1, x2)

inst_77376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83c00000ffffffff; valaddr_reg:x3; val_offset:232128*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232128*0 + 3*576*FLEN/8, x4, x1, x2)

inst_77377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83c00001ffffffff; valaddr_reg:x3; val_offset:232131*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232131*0 + 3*577*FLEN/8, x4, x1, x2)

inst_77378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83c00003ffffffff; valaddr_reg:x3; val_offset:232134*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232134*0 + 3*578*FLEN/8, x4, x1, x2)

inst_77379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83c00007ffffffff; valaddr_reg:x3; val_offset:232137*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232137*0 + 3*579*FLEN/8, x4, x1, x2)

inst_77380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83c0000fffffffff; valaddr_reg:x3; val_offset:232140*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232140*0 + 3*580*FLEN/8, x4, x1, x2)

inst_77381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83c0001fffffffff; valaddr_reg:x3; val_offset:232143*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232143*0 + 3*581*FLEN/8, x4, x1, x2)

inst_77382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83c0003fffffffff; valaddr_reg:x3; val_offset:232146*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232146*0 + 3*582*FLEN/8, x4, x1, x2)

inst_77383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83c0007fffffffff; valaddr_reg:x3; val_offset:232149*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232149*0 + 3*583*FLEN/8, x4, x1, x2)

inst_77384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83c000ffffffffff; valaddr_reg:x3; val_offset:232152*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232152*0 + 3*584*FLEN/8, x4, x1, x2)

inst_77385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83c001ffffffffff; valaddr_reg:x3; val_offset:232155*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232155*0 + 3*585*FLEN/8, x4, x1, x2)

inst_77386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83c003ffffffffff; valaddr_reg:x3; val_offset:232158*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232158*0 + 3*586*FLEN/8, x4, x1, x2)

inst_77387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83c007ffffffffff; valaddr_reg:x3; val_offset:232161*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232161*0 + 3*587*FLEN/8, x4, x1, x2)

inst_77388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83c00fffffffffff; valaddr_reg:x3; val_offset:232164*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232164*0 + 3*588*FLEN/8, x4, x1, x2)

inst_77389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83c01fffffffffff; valaddr_reg:x3; val_offset:232167*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232167*0 + 3*589*FLEN/8, x4, x1, x2)

inst_77390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83c03fffffffffff; valaddr_reg:x3; val_offset:232170*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232170*0 + 3*590*FLEN/8, x4, x1, x2)

inst_77391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83c07fffffffffff; valaddr_reg:x3; val_offset:232173*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232173*0 + 3*591*FLEN/8, x4, x1, x2)

inst_77392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83c0ffffffffffff; valaddr_reg:x3; val_offset:232176*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232176*0 + 3*592*FLEN/8, x4, x1, x2)

inst_77393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83c1ffffffffffff; valaddr_reg:x3; val_offset:232179*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232179*0 + 3*593*FLEN/8, x4, x1, x2)

inst_77394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83c3ffffffffffff; valaddr_reg:x3; val_offset:232182*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232182*0 + 3*594*FLEN/8, x4, x1, x2)

inst_77395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83c7ffffffffffff; valaddr_reg:x3; val_offset:232185*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232185*0 + 3*595*FLEN/8, x4, x1, x2)

inst_77396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83c8000000000000; valaddr_reg:x3; val_offset:232188*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232188*0 + 3*596*FLEN/8, x4, x1, x2)

inst_77397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83cc000000000000; valaddr_reg:x3; val_offset:232191*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232191*0 + 3*597*FLEN/8, x4, x1, x2)

inst_77398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83ce000000000000; valaddr_reg:x3; val_offset:232194*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232194*0 + 3*598*FLEN/8, x4, x1, x2)

inst_77399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83cf000000000000; valaddr_reg:x3; val_offset:232197*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232197*0 + 3*599*FLEN/8, x4, x1, x2)

inst_77400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83cf800000000000; valaddr_reg:x3; val_offset:232200*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232200*0 + 3*600*FLEN/8, x4, x1, x2)

inst_77401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83cfc00000000000; valaddr_reg:x3; val_offset:232203*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232203*0 + 3*601*FLEN/8, x4, x1, x2)

inst_77402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83cfe00000000000; valaddr_reg:x3; val_offset:232206*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232206*0 + 3*602*FLEN/8, x4, x1, x2)

inst_77403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83cff00000000000; valaddr_reg:x3; val_offset:232209*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232209*0 + 3*603*FLEN/8, x4, x1, x2)

inst_77404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83cff80000000000; valaddr_reg:x3; val_offset:232212*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232212*0 + 3*604*FLEN/8, x4, x1, x2)

inst_77405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83cffc0000000000; valaddr_reg:x3; val_offset:232215*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232215*0 + 3*605*FLEN/8, x4, x1, x2)

inst_77406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83cffe0000000000; valaddr_reg:x3; val_offset:232218*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232218*0 + 3*606*FLEN/8, x4, x1, x2)

inst_77407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83cfff0000000000; valaddr_reg:x3; val_offset:232221*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232221*0 + 3*607*FLEN/8, x4, x1, x2)

inst_77408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83cfff8000000000; valaddr_reg:x3; val_offset:232224*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232224*0 + 3*608*FLEN/8, x4, x1, x2)

inst_77409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83cfffc000000000; valaddr_reg:x3; val_offset:232227*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232227*0 + 3*609*FLEN/8, x4, x1, x2)

inst_77410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83cfffe000000000; valaddr_reg:x3; val_offset:232230*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232230*0 + 3*610*FLEN/8, x4, x1, x2)

inst_77411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83cffff000000000; valaddr_reg:x3; val_offset:232233*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232233*0 + 3*611*FLEN/8, x4, x1, x2)

inst_77412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83cffff800000000; valaddr_reg:x3; val_offset:232236*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232236*0 + 3*612*FLEN/8, x4, x1, x2)

inst_77413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83cffffc00000000; valaddr_reg:x3; val_offset:232239*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232239*0 + 3*613*FLEN/8, x4, x1, x2)

inst_77414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83cffffe00000000; valaddr_reg:x3; val_offset:232242*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232242*0 + 3*614*FLEN/8, x4, x1, x2)

inst_77415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83cfffff00000000; valaddr_reg:x3; val_offset:232245*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232245*0 + 3*615*FLEN/8, x4, x1, x2)

inst_77416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83cfffff80000000; valaddr_reg:x3; val_offset:232248*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232248*0 + 3*616*FLEN/8, x4, x1, x2)

inst_77417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83cfffffc0000000; valaddr_reg:x3; val_offset:232251*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232251*0 + 3*617*FLEN/8, x4, x1, x2)

inst_77418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83cfffffe0000000; valaddr_reg:x3; val_offset:232254*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232254*0 + 3*618*FLEN/8, x4, x1, x2)

inst_77419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83cffffff0000000; valaddr_reg:x3; val_offset:232257*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232257*0 + 3*619*FLEN/8, x4, x1, x2)

inst_77420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83cffffff8000000; valaddr_reg:x3; val_offset:232260*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232260*0 + 3*620*FLEN/8, x4, x1, x2)

inst_77421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83cffffffc000000; valaddr_reg:x3; val_offset:232263*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232263*0 + 3*621*FLEN/8, x4, x1, x2)

inst_77422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83cffffffe000000; valaddr_reg:x3; val_offset:232266*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232266*0 + 3*622*FLEN/8, x4, x1, x2)

inst_77423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83cfffffff000000; valaddr_reg:x3; val_offset:232269*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232269*0 + 3*623*FLEN/8, x4, x1, x2)

inst_77424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83cfffffff800000; valaddr_reg:x3; val_offset:232272*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232272*0 + 3*624*FLEN/8, x4, x1, x2)

inst_77425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83cfffffffc00000; valaddr_reg:x3; val_offset:232275*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232275*0 + 3*625*FLEN/8, x4, x1, x2)

inst_77426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83cfffffffe00000; valaddr_reg:x3; val_offset:232278*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232278*0 + 3*626*FLEN/8, x4, x1, x2)

inst_77427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83cffffffff00000; valaddr_reg:x3; val_offset:232281*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232281*0 + 3*627*FLEN/8, x4, x1, x2)

inst_77428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83cffffffff80000; valaddr_reg:x3; val_offset:232284*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232284*0 + 3*628*FLEN/8, x4, x1, x2)

inst_77429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83cffffffffc0000; valaddr_reg:x3; val_offset:232287*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232287*0 + 3*629*FLEN/8, x4, x1, x2)

inst_77430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83cffffffffe0000; valaddr_reg:x3; val_offset:232290*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232290*0 + 3*630*FLEN/8, x4, x1, x2)

inst_77431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83cfffffffff0000; valaddr_reg:x3; val_offset:232293*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232293*0 + 3*631*FLEN/8, x4, x1, x2)

inst_77432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83cfffffffff8000; valaddr_reg:x3; val_offset:232296*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232296*0 + 3*632*FLEN/8, x4, x1, x2)

inst_77433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83cfffffffffc000; valaddr_reg:x3; val_offset:232299*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232299*0 + 3*633*FLEN/8, x4, x1, x2)

inst_77434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83cfffffffffe000; valaddr_reg:x3; val_offset:232302*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232302*0 + 3*634*FLEN/8, x4, x1, x2)

inst_77435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83cffffffffff000; valaddr_reg:x3; val_offset:232305*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232305*0 + 3*635*FLEN/8, x4, x1, x2)

inst_77436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83cffffffffff800; valaddr_reg:x3; val_offset:232308*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232308*0 + 3*636*FLEN/8, x4, x1, x2)

inst_77437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83cffffffffffc00; valaddr_reg:x3; val_offset:232311*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232311*0 + 3*637*FLEN/8, x4, x1, x2)

inst_77438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83cffffffffffe00; valaddr_reg:x3; val_offset:232314*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232314*0 + 3*638*FLEN/8, x4, x1, x2)

inst_77439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83cfffffffffff00; valaddr_reg:x3; val_offset:232317*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232317*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_77440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83cfffffffffff80; valaddr_reg:x3; val_offset:232320*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232320*0 + 3*640*FLEN/8, x4, x1, x2)

inst_77441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83cfffffffffffc0; valaddr_reg:x3; val_offset:232323*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232323*0 + 3*641*FLEN/8, x4, x1, x2)

inst_77442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83cfffffffffffe0; valaddr_reg:x3; val_offset:232326*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232326*0 + 3*642*FLEN/8, x4, x1, x2)

inst_77443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83cffffffffffff0; valaddr_reg:x3; val_offset:232329*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232329*0 + 3*643*FLEN/8, x4, x1, x2)

inst_77444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83cffffffffffff8; valaddr_reg:x3; val_offset:232332*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232332*0 + 3*644*FLEN/8, x4, x1, x2)

inst_77445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83cffffffffffffc; valaddr_reg:x3; val_offset:232335*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232335*0 + 3*645*FLEN/8, x4, x1, x2)

inst_77446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83cffffffffffffe; valaddr_reg:x3; val_offset:232338*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232338*0 + 3*646*FLEN/8, x4, x1, x2)

inst_77447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84620ba958ca7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84620ba958ca7; op2val:0x8000;
op3val:0x83cfffffffffffff; valaddr_reg:x3; val_offset:232341*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232341*0 + 3*647*FLEN/8, x4, x1, x2)

inst_77448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:232344*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232344*0 + 3*648*FLEN/8, x4, x1, x2)

inst_77449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:232347*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232347*0 + 3*649*FLEN/8, x4, x1, x2)

inst_77450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:232350*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232350*0 + 3*650*FLEN/8, x4, x1, x2)

inst_77451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:232353*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232353*0 + 3*651*FLEN/8, x4, x1, x2)

inst_77452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:232356*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232356*0 + 3*652*FLEN/8, x4, x1, x2)

inst_77453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:232359*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232359*0 + 3*653*FLEN/8, x4, x1, x2)

inst_77454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:232362*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232362*0 + 3*654*FLEN/8, x4, x1, x2)

inst_77455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:232365*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232365*0 + 3*655*FLEN/8, x4, x1, x2)

inst_77456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:232368*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232368*0 + 3*656*FLEN/8, x4, x1, x2)

inst_77457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:232371*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232371*0 + 3*657*FLEN/8, x4, x1, x2)

inst_77458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:232374*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232374*0 + 3*658*FLEN/8, x4, x1, x2)

inst_77459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:232377*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232377*0 + 3*659*FLEN/8, x4, x1, x2)

inst_77460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:232380*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232380*0 + 3*660*FLEN/8, x4, x1, x2)

inst_77461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:232383*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232383*0 + 3*661*FLEN/8, x4, x1, x2)

inst_77462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:232386*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232386*0 + 3*662*FLEN/8, x4, x1, x2)

inst_77463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:232389*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232389*0 + 3*663*FLEN/8, x4, x1, x2)

inst_77464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:232392*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232392*0 + 3*664*FLEN/8, x4, x1, x2)

inst_77465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:232395*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232395*0 + 3*665*FLEN/8, x4, x1, x2)

inst_77466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:232398*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232398*0 + 3*666*FLEN/8, x4, x1, x2)

inst_77467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:232401*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232401*0 + 3*667*FLEN/8, x4, x1, x2)

inst_77468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:232404*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232404*0 + 3*668*FLEN/8, x4, x1, x2)

inst_77469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:232407*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232407*0 + 3*669*FLEN/8, x4, x1, x2)

inst_77470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1e0000000000000; valaddr_reg:x3; val_offset:232410*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232410*0 + 3*670*FLEN/8, x4, x1, x2)

inst_77471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1e0000000000001; valaddr_reg:x3; val_offset:232413*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232413*0 + 3*671*FLEN/8, x4, x1, x2)

inst_77472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1e0000000000003; valaddr_reg:x3; val_offset:232416*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232416*0 + 3*672*FLEN/8, x4, x1, x2)

inst_77473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1e0000000000007; valaddr_reg:x3; val_offset:232419*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232419*0 + 3*673*FLEN/8, x4, x1, x2)

inst_77474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1e000000000000f; valaddr_reg:x3; val_offset:232422*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232422*0 + 3*674*FLEN/8, x4, x1, x2)

inst_77475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1e000000000001f; valaddr_reg:x3; val_offset:232425*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232425*0 + 3*675*FLEN/8, x4, x1, x2)

inst_77476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1e000000000003f; valaddr_reg:x3; val_offset:232428*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232428*0 + 3*676*FLEN/8, x4, x1, x2)

inst_77477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1e000000000007f; valaddr_reg:x3; val_offset:232431*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232431*0 + 3*677*FLEN/8, x4, x1, x2)

inst_77478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1e00000000000ff; valaddr_reg:x3; val_offset:232434*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232434*0 + 3*678*FLEN/8, x4, x1, x2)

inst_77479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1e00000000001ff; valaddr_reg:x3; val_offset:232437*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232437*0 + 3*679*FLEN/8, x4, x1, x2)

inst_77480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1e00000000003ff; valaddr_reg:x3; val_offset:232440*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232440*0 + 3*680*FLEN/8, x4, x1, x2)

inst_77481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1e00000000007ff; valaddr_reg:x3; val_offset:232443*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232443*0 + 3*681*FLEN/8, x4, x1, x2)

inst_77482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1e0000000000fff; valaddr_reg:x3; val_offset:232446*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232446*0 + 3*682*FLEN/8, x4, x1, x2)

inst_77483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1e0000000001fff; valaddr_reg:x3; val_offset:232449*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232449*0 + 3*683*FLEN/8, x4, x1, x2)

inst_77484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1e0000000003fff; valaddr_reg:x3; val_offset:232452*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232452*0 + 3*684*FLEN/8, x4, x1, x2)

inst_77485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1e0000000007fff; valaddr_reg:x3; val_offset:232455*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232455*0 + 3*685*FLEN/8, x4, x1, x2)

inst_77486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1e000000000ffff; valaddr_reg:x3; val_offset:232458*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232458*0 + 3*686*FLEN/8, x4, x1, x2)

inst_77487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1e000000001ffff; valaddr_reg:x3; val_offset:232461*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232461*0 + 3*687*FLEN/8, x4, x1, x2)

inst_77488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1e000000003ffff; valaddr_reg:x3; val_offset:232464*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232464*0 + 3*688*FLEN/8, x4, x1, x2)

inst_77489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1e000000007ffff; valaddr_reg:x3; val_offset:232467*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232467*0 + 3*689*FLEN/8, x4, x1, x2)

inst_77490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1e00000000fffff; valaddr_reg:x3; val_offset:232470*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232470*0 + 3*690*FLEN/8, x4, x1, x2)

inst_77491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1e00000001fffff; valaddr_reg:x3; val_offset:232473*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232473*0 + 3*691*FLEN/8, x4, x1, x2)

inst_77492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1e00000003fffff; valaddr_reg:x3; val_offset:232476*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232476*0 + 3*692*FLEN/8, x4, x1, x2)

inst_77493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1e00000007fffff; valaddr_reg:x3; val_offset:232479*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232479*0 + 3*693*FLEN/8, x4, x1, x2)

inst_77494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1e0000000ffffff; valaddr_reg:x3; val_offset:232482*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232482*0 + 3*694*FLEN/8, x4, x1, x2)

inst_77495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1e0000001ffffff; valaddr_reg:x3; val_offset:232485*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232485*0 + 3*695*FLEN/8, x4, x1, x2)

inst_77496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1e0000003ffffff; valaddr_reg:x3; val_offset:232488*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232488*0 + 3*696*FLEN/8, x4, x1, x2)

inst_77497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1e0000007ffffff; valaddr_reg:x3; val_offset:232491*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232491*0 + 3*697*FLEN/8, x4, x1, x2)

inst_77498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1e000000fffffff; valaddr_reg:x3; val_offset:232494*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232494*0 + 3*698*FLEN/8, x4, x1, x2)

inst_77499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1e000001fffffff; valaddr_reg:x3; val_offset:232497*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232497*0 + 3*699*FLEN/8, x4, x1, x2)

inst_77500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1e000003fffffff; valaddr_reg:x3; val_offset:232500*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232500*0 + 3*700*FLEN/8, x4, x1, x2)

inst_77501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1e000007fffffff; valaddr_reg:x3; val_offset:232503*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232503*0 + 3*701*FLEN/8, x4, x1, x2)

inst_77502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1e00000ffffffff; valaddr_reg:x3; val_offset:232506*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232506*0 + 3*702*FLEN/8, x4, x1, x2)

inst_77503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1e00001ffffffff; valaddr_reg:x3; val_offset:232509*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232509*0 + 3*703*FLEN/8, x4, x1, x2)

inst_77504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1e00003ffffffff; valaddr_reg:x3; val_offset:232512*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232512*0 + 3*704*FLEN/8, x4, x1, x2)

inst_77505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1e00007ffffffff; valaddr_reg:x3; val_offset:232515*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232515*0 + 3*705*FLEN/8, x4, x1, x2)

inst_77506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1e0000fffffffff; valaddr_reg:x3; val_offset:232518*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232518*0 + 3*706*FLEN/8, x4, x1, x2)

inst_77507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1e0001fffffffff; valaddr_reg:x3; val_offset:232521*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232521*0 + 3*707*FLEN/8, x4, x1, x2)

inst_77508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1e0003fffffffff; valaddr_reg:x3; val_offset:232524*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232524*0 + 3*708*FLEN/8, x4, x1, x2)

inst_77509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1e0007fffffffff; valaddr_reg:x3; val_offset:232527*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232527*0 + 3*709*FLEN/8, x4, x1, x2)

inst_77510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1e000ffffffffff; valaddr_reg:x3; val_offset:232530*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232530*0 + 3*710*FLEN/8, x4, x1, x2)

inst_77511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1e001ffffffffff; valaddr_reg:x3; val_offset:232533*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232533*0 + 3*711*FLEN/8, x4, x1, x2)

inst_77512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1e003ffffffffff; valaddr_reg:x3; val_offset:232536*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232536*0 + 3*712*FLEN/8, x4, x1, x2)

inst_77513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1e007ffffffffff; valaddr_reg:x3; val_offset:232539*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232539*0 + 3*713*FLEN/8, x4, x1, x2)

inst_77514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1e00fffffffffff; valaddr_reg:x3; val_offset:232542*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232542*0 + 3*714*FLEN/8, x4, x1, x2)

inst_77515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1e01fffffffffff; valaddr_reg:x3; val_offset:232545*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232545*0 + 3*715*FLEN/8, x4, x1, x2)

inst_77516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1e03fffffffffff; valaddr_reg:x3; val_offset:232548*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232548*0 + 3*716*FLEN/8, x4, x1, x2)

inst_77517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1e07fffffffffff; valaddr_reg:x3; val_offset:232551*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232551*0 + 3*717*FLEN/8, x4, x1, x2)

inst_77518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1e0ffffffffffff; valaddr_reg:x3; val_offset:232554*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232554*0 + 3*718*FLEN/8, x4, x1, x2)

inst_77519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1e1ffffffffffff; valaddr_reg:x3; val_offset:232557*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232557*0 + 3*719*FLEN/8, x4, x1, x2)

inst_77520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1e3ffffffffffff; valaddr_reg:x3; val_offset:232560*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232560*0 + 3*720*FLEN/8, x4, x1, x2)

inst_77521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1e7ffffffffffff; valaddr_reg:x3; val_offset:232563*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232563*0 + 3*721*FLEN/8, x4, x1, x2)

inst_77522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1e8000000000000; valaddr_reg:x3; val_offset:232566*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232566*0 + 3*722*FLEN/8, x4, x1, x2)

inst_77523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1ec000000000000; valaddr_reg:x3; val_offset:232569*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232569*0 + 3*723*FLEN/8, x4, x1, x2)

inst_77524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1ee000000000000; valaddr_reg:x3; val_offset:232572*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232572*0 + 3*724*FLEN/8, x4, x1, x2)

inst_77525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1ef000000000000; valaddr_reg:x3; val_offset:232575*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232575*0 + 3*725*FLEN/8, x4, x1, x2)

inst_77526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1ef800000000000; valaddr_reg:x3; val_offset:232578*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232578*0 + 3*726*FLEN/8, x4, x1, x2)

inst_77527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1efc00000000000; valaddr_reg:x3; val_offset:232581*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232581*0 + 3*727*FLEN/8, x4, x1, x2)

inst_77528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1efe00000000000; valaddr_reg:x3; val_offset:232584*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232584*0 + 3*728*FLEN/8, x4, x1, x2)

inst_77529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1eff00000000000; valaddr_reg:x3; val_offset:232587*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232587*0 + 3*729*FLEN/8, x4, x1, x2)

inst_77530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1eff80000000000; valaddr_reg:x3; val_offset:232590*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232590*0 + 3*730*FLEN/8, x4, x1, x2)

inst_77531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1effc0000000000; valaddr_reg:x3; val_offset:232593*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232593*0 + 3*731*FLEN/8, x4, x1, x2)

inst_77532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1effe0000000000; valaddr_reg:x3; val_offset:232596*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232596*0 + 3*732*FLEN/8, x4, x1, x2)

inst_77533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1efff0000000000; valaddr_reg:x3; val_offset:232599*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232599*0 + 3*733*FLEN/8, x4, x1, x2)

inst_77534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1efff8000000000; valaddr_reg:x3; val_offset:232602*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232602*0 + 3*734*FLEN/8, x4, x1, x2)

inst_77535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1efffc000000000; valaddr_reg:x3; val_offset:232605*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232605*0 + 3*735*FLEN/8, x4, x1, x2)

inst_77536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1efffe000000000; valaddr_reg:x3; val_offset:232608*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232608*0 + 3*736*FLEN/8, x4, x1, x2)

inst_77537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1effff000000000; valaddr_reg:x3; val_offset:232611*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232611*0 + 3*737*FLEN/8, x4, x1, x2)

inst_77538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1effff800000000; valaddr_reg:x3; val_offset:232614*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232614*0 + 3*738*FLEN/8, x4, x1, x2)

inst_77539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1effffc00000000; valaddr_reg:x3; val_offset:232617*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232617*0 + 3*739*FLEN/8, x4, x1, x2)

inst_77540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1effffe00000000; valaddr_reg:x3; val_offset:232620*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232620*0 + 3*740*FLEN/8, x4, x1, x2)

inst_77541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1efffff00000000; valaddr_reg:x3; val_offset:232623*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232623*0 + 3*741*FLEN/8, x4, x1, x2)

inst_77542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1efffff80000000; valaddr_reg:x3; val_offset:232626*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232626*0 + 3*742*FLEN/8, x4, x1, x2)

inst_77543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1efffffc0000000; valaddr_reg:x3; val_offset:232629*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232629*0 + 3*743*FLEN/8, x4, x1, x2)

inst_77544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1efffffe0000000; valaddr_reg:x3; val_offset:232632*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232632*0 + 3*744*FLEN/8, x4, x1, x2)

inst_77545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1effffff0000000; valaddr_reg:x3; val_offset:232635*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232635*0 + 3*745*FLEN/8, x4, x1, x2)

inst_77546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1effffff8000000; valaddr_reg:x3; val_offset:232638*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232638*0 + 3*746*FLEN/8, x4, x1, x2)

inst_77547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1effffffc000000; valaddr_reg:x3; val_offset:232641*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232641*0 + 3*747*FLEN/8, x4, x1, x2)

inst_77548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1effffffe000000; valaddr_reg:x3; val_offset:232644*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232644*0 + 3*748*FLEN/8, x4, x1, x2)

inst_77549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1efffffff000000; valaddr_reg:x3; val_offset:232647*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232647*0 + 3*749*FLEN/8, x4, x1, x2)

inst_77550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1efffffff800000; valaddr_reg:x3; val_offset:232650*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232650*0 + 3*750*FLEN/8, x4, x1, x2)

inst_77551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1efffffffc00000; valaddr_reg:x3; val_offset:232653*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232653*0 + 3*751*FLEN/8, x4, x1, x2)

inst_77552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1efffffffe00000; valaddr_reg:x3; val_offset:232656*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232656*0 + 3*752*FLEN/8, x4, x1, x2)

inst_77553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1effffffff00000; valaddr_reg:x3; val_offset:232659*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232659*0 + 3*753*FLEN/8, x4, x1, x2)

inst_77554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1effffffff80000; valaddr_reg:x3; val_offset:232662*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232662*0 + 3*754*FLEN/8, x4, x1, x2)

inst_77555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1effffffffc0000; valaddr_reg:x3; val_offset:232665*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232665*0 + 3*755*FLEN/8, x4, x1, x2)

inst_77556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1effffffffe0000; valaddr_reg:x3; val_offset:232668*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232668*0 + 3*756*FLEN/8, x4, x1, x2)

inst_77557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1efffffffff0000; valaddr_reg:x3; val_offset:232671*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232671*0 + 3*757*FLEN/8, x4, x1, x2)

inst_77558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1efffffffff8000; valaddr_reg:x3; val_offset:232674*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232674*0 + 3*758*FLEN/8, x4, x1, x2)

inst_77559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1efffffffffc000; valaddr_reg:x3; val_offset:232677*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232677*0 + 3*759*FLEN/8, x4, x1, x2)

inst_77560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1efffffffffe000; valaddr_reg:x3; val_offset:232680*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232680*0 + 3*760*FLEN/8, x4, x1, x2)

inst_77561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1effffffffff000; valaddr_reg:x3; val_offset:232683*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232683*0 + 3*761*FLEN/8, x4, x1, x2)

inst_77562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1effffffffff800; valaddr_reg:x3; val_offset:232686*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232686*0 + 3*762*FLEN/8, x4, x1, x2)

inst_77563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1effffffffffc00; valaddr_reg:x3; val_offset:232689*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232689*0 + 3*763*FLEN/8, x4, x1, x2)

inst_77564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1effffffffffe00; valaddr_reg:x3; val_offset:232692*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232692*0 + 3*764*FLEN/8, x4, x1, x2)

inst_77565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1efffffffffff00; valaddr_reg:x3; val_offset:232695*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232695*0 + 3*765*FLEN/8, x4, x1, x2)

inst_77566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1efffffffffff80; valaddr_reg:x3; val_offset:232698*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232698*0 + 3*766*FLEN/8, x4, x1, x2)

inst_77567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x859af11d6a249 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa859af11d6a249; op2val:0x0;
op3val:0x1efffffffffffc0; valaddr_reg:x3; val_offset:232701*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232701*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230519943168,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520008704,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520041472,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520057856,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520066048,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520070144,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520072192,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520073216,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520073728,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520073984,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074112,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074176,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074208,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074224,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074232,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074236,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074238,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074239,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484160,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484161,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484163,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484167,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484175,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484191,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484223,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484287,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484415,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484671,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067485183,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067486207,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067488255,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067492351,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067500543,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067516927,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067549695,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067615231,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067746303,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223068008447,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223068532735,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223069581311,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223071678463,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223075872767,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223084261375,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223101038591,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223134593023,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223201701887,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223335919615,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223604355071,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005224141225983,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005225214967807,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005227362451455,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005231657418751,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005240247353343,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005257427222527,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005291786960895,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005360506437631,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005497945391103,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005772823298047,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390006322579111935,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390007422090739711,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390009621113995263,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390014019160506367,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390022815253528575,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390040407439572991,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390075591811661823,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390145960555839487,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390286698044194815,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390568173020905471,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9391131122974326783,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9392257022881169407,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9392257022881169408,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9393382922788012032,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9393945872741433344,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394227347718144000,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394368085206499328,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394438453950676992,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394473638322765824,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394491230508810240,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394500026601832448,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394504424648343552,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394506623671599104,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394507723183226880,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508272939040768,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508547816947712,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508685255901184,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508753975377920,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508788335116288,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508805514985472,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508814104920064,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508818399887360,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508820547371008,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508821621112832,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822157983744,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822426419200,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822560636928,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822627745792,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822661300224,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822678077440,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822686466048,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822690660352,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822692757504,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822693806080,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694330368,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694592512,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694723584,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694789120,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694821888,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694838272,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694846464,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694850560,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694852608,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694853632,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854144,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854400,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854528,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854592,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854624,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854640,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854648,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854652,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854654,64,FLEN)
NAN_BOXED(6892745842983474630,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854655,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487552,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487553,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487555,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487559,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487567,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487583,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487615,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487679,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487807,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006488063,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006488575,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006489599,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006491647,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006495743,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006503935,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006520319,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006553087,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006618623,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006749695,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413007011839,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413007536127,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413008584703,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413010681855,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413014876159,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413023264767,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413040041983,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413073596415,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413140705279,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413274923007,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413543358463,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602414080229375,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602415153971199,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602417301454847,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602421596422143,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602430186356735,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602447366225919,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602481725964287,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602550445441023,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602687884394495,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602962762301439,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511603512518115327,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511604612029743103,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511606811052998655,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511611209099509759,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511620005192531967,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511637597378576383,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511672781750665215,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511743150494842879,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511883887983198207,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9512165362959908863,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9512728312913330175,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9513854212820172799,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9513854212820172800,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9514980112727015424,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9515543062680436736,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9515824537657147392,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9515965275145502720,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516035643889680384,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516070828261769216,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516088420447813632,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516097216540835840,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516101614587346944,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516103813610602496,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516104913122230272,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516105462878044160,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516105737755951104,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516105875194904576,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516105943914381312,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516105978274119680,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516105995453988864,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106004043923456,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106008338890752,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106010486374400,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106011560116224,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012096987136,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012365422592,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012499640320,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012566749184,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012600303616,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012617080832,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012625469440,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012629663744,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012631760896,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012632809472,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633333760,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633595904,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633726976,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633792512,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633825280,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633841664,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633849856,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633853952,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633856000,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633857024,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633857536,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633857792,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633857920,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633857984,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633858016,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633858032,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633858040,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633858044,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633858046,64,FLEN)
NAN_BOXED(6892748182032572193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633858047,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592256,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592257,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592259,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592263,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592271,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592287,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592319,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592383,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592511,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592767,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010593279,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010594303,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010596351,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010600447,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010608639,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010625023,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010657791,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010723327,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010854399,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832011116543,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832011640831,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832012689407,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832014786559,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832018980863,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832027369471,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832044146687,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832077701119,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832144809983,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832279027711,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832547463167,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918833084334079,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918834158075903,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918836305559551,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918840600526847,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918849190461439,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918866370330623,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918900730068991,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918969449545727,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281919106888499199,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281919381766406143,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281919931522220031,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281921031033847807,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281923230057103359,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281927628103614463,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281936424196636671,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281954016382681087,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281989200754769919,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9282059569498947583,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9282200306987302911,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9282481781964013567,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9283044731917434879,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9284170631824277503,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9284170631824277504,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9285296531731120128,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9285859481684541440,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286140956661252096,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286281694149607424,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286352062893785088,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286387247265873920,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286404839451918336,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286413635544940544,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286418033591451648,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286420232614707200,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286421332126334976,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286421881882148864,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422156760055808,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422294199009280,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422362918486016,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422397278224384,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422414458093568,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422423048028160,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422427342995456,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422429490479104,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422430564220928,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431101091840,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431369527296,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431503745024,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431570853888,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431604408320,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431621185536,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431629574144,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431633768448,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431635865600,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431636914176,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637438464,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637700608,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637831680,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637897216,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637929984,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637946368,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637954560,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637958656,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637960704,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637961728,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962240,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962496,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962624,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962688,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962720,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962736,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962744,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962748,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962750,64,FLEN)
NAN_BOXED(6892771626402340807,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962751,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523584,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523585,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523587,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523591,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523599,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523615,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523647,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523711,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523839,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987524095,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987524607,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987525631,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987527679,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987531775,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987539967,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987556351,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987589119,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987654655,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987785727,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615988047871,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615988572159,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615989620735,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615991717887,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615995912191,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573616004300799,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573616021078015,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573616054632447,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573616121741311,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573616255959039,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573616524394495,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573617061265407,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573618135007231,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573620282490879,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573624577458175,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573633167392767,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573650347261951,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573684707000319,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573753426477055,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573890865430527,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475574165743337471,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475574715499151359,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475575815010779135,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475578014034034687,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475582412080545791,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475591208173567999,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475608800359612415,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475643984731701247,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475714353475878911,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475855090964234239,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9476136565940944895,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9476699515894366207,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9477825415801208831,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9477825415801208832,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9478951315708051456,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9479514265661472768,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9479795740638183424,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9479936478126538752,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480006846870716416,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480042031242805248,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480059623428849664,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480068419521871872,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480072817568382976,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480075016591638528,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480076116103266304,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480076665859080192,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480076940736987136,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077078175940608,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077146895417344,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077181255155712,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077198435024896,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077207024959488,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077211319926784,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077213467410432,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077214541152256,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215078023168,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215346458624,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215480676352,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215547785216,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215581339648,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215598116864,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215606505472,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215610699776,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215612796928,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215613845504,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614369792,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614631936,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614763008,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614828544,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614861312,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614877696,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614885888,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614889984,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614892032,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614893056,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614893568,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614893824,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614893952,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894016,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894048,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894064,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894072,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894076,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894078,64,FLEN)
NAN_BOXED(6892809550888432132,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894079,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005568,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005569,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005571,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005575,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005583,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005599,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005631,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005695,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005823,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497006079,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497006591,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497007615,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497009663,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497013759,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497021951,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497038335,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497071103,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497136639,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497267711,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497529855,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014498054143,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014499102719,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014501199871,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014505394175,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014513782783,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014530559999,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014564114431,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014631223295,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014765441023,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588015033876479,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588015570747391,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588016644489215,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588018791972863,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588023086940159,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588031676874751,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588048856743935,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588083216482303,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588151935959039,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588289374912511,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588564252819455,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493589114008633343,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493590213520261119,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493592412543516671,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493596810590027775,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493605606683049983,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493623198869094399,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493658383241183231,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493728751985360895,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493869489473716223,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9494150964450426879,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9494713914403848191,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9495839814310690815,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9495839814310690816,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9496965714217533440,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9497528664170954752,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9497810139147665408,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9497950876636020736,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498021245380198400,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498056429752287232,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498074021938331648,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498082818031353856,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498087216077864960,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498089415101120512,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498090514612748288,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091064368562176,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091339246469120,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091476685422592,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091545404899328,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091579764637696,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091596944506880,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091605534441472,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091609829408768,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091611976892416,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091613050634240,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091613587505152,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091613855940608,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091613990158336,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614057267200,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614090821632,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614107598848,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614115987456,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614120181760,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614122278912,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614123327488,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614123851776,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124113920,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124244992,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124310528,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124343296,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124359680,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124367872,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124371968,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124374016,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124375040,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124375552,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124375808,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124375936,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376000,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376032,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376048,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376056,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376060,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376062,64,FLEN)
NAN_BOXED(6892836336073804967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376063,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114880,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114881,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114883,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114887,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114895,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114911,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114943,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821115007,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821115135,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821115391,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821115903,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821116927,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821118975,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821123071,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821131263,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821147647,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821180415,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821245951,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821377023,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821639167,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988822163455,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988823212031,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988825309183,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988829503487,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988837892095,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988854669311,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988888223743,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988955332607,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107989089550335,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107989357985791,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107989894856703,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107990968598527,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107993116082175,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107997411049471,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135108006000984063,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135108023180853247,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135108057540591615,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135108126260068351,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135108263699021823,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135108538576928767,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135109088332742655,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135110187844370431,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135112386867625983,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135116784914137087,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135125581007159295,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135143173193203711,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135178357565292543,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135248726309470207,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135389463797825535,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135670938774536191,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(136233888727957503,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(137359788634800127,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(137359788634800128,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(138485688541642752,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139048638495064064,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139330113471774720,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139470850960130048,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139541219704307712,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139576404076396544,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139593996262440960,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139602792355463168,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139607190401974272,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139609389425229824,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139610488936857600,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611038692671488,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611313570578432,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611451009531904,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611519729008640,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611554088747008,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611571268616192,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611579858550784,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611584153518080,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611586301001728,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611587374743552,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611587911614464,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588180049920,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588314267648,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588381376512,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588414930944,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588431708160,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588440096768,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588444291072,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588446388224,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588447436800,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588447961088,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448223232,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448354304,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448419840,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448452608,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448468992,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448477184,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448481280,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448483328,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448484352,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448484864,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485120,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485248,64,FLEN)
NAN_BOXED(6892857838143971913,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485312,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
