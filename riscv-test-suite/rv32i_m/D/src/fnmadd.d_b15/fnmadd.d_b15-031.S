
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:39 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_23040:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbace000000000000; valaddr_reg:x3; val_offset:69120*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69120*0 + 3*0*FLEN/8, x4, x1, x2)

inst_23041:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbacf000000000000; valaddr_reg:x3; val_offset:69123*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69123*0 + 3*1*FLEN/8, x4, x1, x2)

inst_23042:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbacf800000000000; valaddr_reg:x3; val_offset:69126*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69126*0 + 3*2*FLEN/8, x4, x1, x2)

inst_23043:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbacfc00000000000; valaddr_reg:x3; val_offset:69129*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69129*0 + 3*3*FLEN/8, x4, x1, x2)

inst_23044:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbacfe00000000000; valaddr_reg:x3; val_offset:69132*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69132*0 + 3*4*FLEN/8, x4, x1, x2)

inst_23045:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbacff00000000000; valaddr_reg:x3; val_offset:69135*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69135*0 + 3*5*FLEN/8, x4, x1, x2)

inst_23046:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbacff80000000000; valaddr_reg:x3; val_offset:69138*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69138*0 + 3*6*FLEN/8, x4, x1, x2)

inst_23047:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbacffc0000000000; valaddr_reg:x3; val_offset:69141*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69141*0 + 3*7*FLEN/8, x4, x1, x2)

inst_23048:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbacffe0000000000; valaddr_reg:x3; val_offset:69144*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69144*0 + 3*8*FLEN/8, x4, x1, x2)

inst_23049:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbacfff0000000000; valaddr_reg:x3; val_offset:69147*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69147*0 + 3*9*FLEN/8, x4, x1, x2)

inst_23050:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbacfff8000000000; valaddr_reg:x3; val_offset:69150*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69150*0 + 3*10*FLEN/8, x4, x1, x2)

inst_23051:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbacfffc000000000; valaddr_reg:x3; val_offset:69153*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69153*0 + 3*11*FLEN/8, x4, x1, x2)

inst_23052:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbacfffe000000000; valaddr_reg:x3; val_offset:69156*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69156*0 + 3*12*FLEN/8, x4, x1, x2)

inst_23053:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbacffff000000000; valaddr_reg:x3; val_offset:69159*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69159*0 + 3*13*FLEN/8, x4, x1, x2)

inst_23054:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbacffff800000000; valaddr_reg:x3; val_offset:69162*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69162*0 + 3*14*FLEN/8, x4, x1, x2)

inst_23055:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbacffffc00000000; valaddr_reg:x3; val_offset:69165*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69165*0 + 3*15*FLEN/8, x4, x1, x2)

inst_23056:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbacffffe00000000; valaddr_reg:x3; val_offset:69168*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69168*0 + 3*16*FLEN/8, x4, x1, x2)

inst_23057:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbacfffff00000000; valaddr_reg:x3; val_offset:69171*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69171*0 + 3*17*FLEN/8, x4, x1, x2)

inst_23058:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbacfffff80000000; valaddr_reg:x3; val_offset:69174*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69174*0 + 3*18*FLEN/8, x4, x1, x2)

inst_23059:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbacfffffc0000000; valaddr_reg:x3; val_offset:69177*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69177*0 + 3*19*FLEN/8, x4, x1, x2)

inst_23060:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbacfffffe0000000; valaddr_reg:x3; val_offset:69180*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69180*0 + 3*20*FLEN/8, x4, x1, x2)

inst_23061:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbacffffff0000000; valaddr_reg:x3; val_offset:69183*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69183*0 + 3*21*FLEN/8, x4, x1, x2)

inst_23062:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbacffffff8000000; valaddr_reg:x3; val_offset:69186*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69186*0 + 3*22*FLEN/8, x4, x1, x2)

inst_23063:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbacffffffc000000; valaddr_reg:x3; val_offset:69189*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69189*0 + 3*23*FLEN/8, x4, x1, x2)

inst_23064:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbacffffffe000000; valaddr_reg:x3; val_offset:69192*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69192*0 + 3*24*FLEN/8, x4, x1, x2)

inst_23065:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbacfffffff000000; valaddr_reg:x3; val_offset:69195*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69195*0 + 3*25*FLEN/8, x4, x1, x2)

inst_23066:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbacfffffff800000; valaddr_reg:x3; val_offset:69198*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69198*0 + 3*26*FLEN/8, x4, x1, x2)

inst_23067:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbacfffffffc00000; valaddr_reg:x3; val_offset:69201*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69201*0 + 3*27*FLEN/8, x4, x1, x2)

inst_23068:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbacfffffffe00000; valaddr_reg:x3; val_offset:69204*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69204*0 + 3*28*FLEN/8, x4, x1, x2)

inst_23069:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbacffffffff00000; valaddr_reg:x3; val_offset:69207*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69207*0 + 3*29*FLEN/8, x4, x1, x2)

inst_23070:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbacffffffff80000; valaddr_reg:x3; val_offset:69210*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69210*0 + 3*30*FLEN/8, x4, x1, x2)

inst_23071:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbacffffffffc0000; valaddr_reg:x3; val_offset:69213*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69213*0 + 3*31*FLEN/8, x4, x1, x2)

inst_23072:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbacffffffffe0000; valaddr_reg:x3; val_offset:69216*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69216*0 + 3*32*FLEN/8, x4, x1, x2)

inst_23073:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbacfffffffff0000; valaddr_reg:x3; val_offset:69219*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69219*0 + 3*33*FLEN/8, x4, x1, x2)

inst_23074:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbacfffffffff8000; valaddr_reg:x3; val_offset:69222*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69222*0 + 3*34*FLEN/8, x4, x1, x2)

inst_23075:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbacfffffffffc000; valaddr_reg:x3; val_offset:69225*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69225*0 + 3*35*FLEN/8, x4, x1, x2)

inst_23076:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbacfffffffffe000; valaddr_reg:x3; val_offset:69228*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69228*0 + 3*36*FLEN/8, x4, x1, x2)

inst_23077:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbacffffffffff000; valaddr_reg:x3; val_offset:69231*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69231*0 + 3*37*FLEN/8, x4, x1, x2)

inst_23078:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbacffffffffff800; valaddr_reg:x3; val_offset:69234*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69234*0 + 3*38*FLEN/8, x4, x1, x2)

inst_23079:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbacffffffffffc00; valaddr_reg:x3; val_offset:69237*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69237*0 + 3*39*FLEN/8, x4, x1, x2)

inst_23080:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbacffffffffffe00; valaddr_reg:x3; val_offset:69240*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69240*0 + 3*40*FLEN/8, x4, x1, x2)

inst_23081:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbacfffffffffff00; valaddr_reg:x3; val_offset:69243*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69243*0 + 3*41*FLEN/8, x4, x1, x2)

inst_23082:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbacfffffffffff80; valaddr_reg:x3; val_offset:69246*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69246*0 + 3*42*FLEN/8, x4, x1, x2)

inst_23083:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbacfffffffffffc0; valaddr_reg:x3; val_offset:69249*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69249*0 + 3*43*FLEN/8, x4, x1, x2)

inst_23084:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbacfffffffffffe0; valaddr_reg:x3; val_offset:69252*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69252*0 + 3*44*FLEN/8, x4, x1, x2)

inst_23085:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbacffffffffffff0; valaddr_reg:x3; val_offset:69255*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69255*0 + 3*45*FLEN/8, x4, x1, x2)

inst_23086:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbacffffffffffff8; valaddr_reg:x3; val_offset:69258*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69258*0 + 3*46*FLEN/8, x4, x1, x2)

inst_23087:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbacffffffffffffc; valaddr_reg:x3; val_offset:69261*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69261*0 + 3*47*FLEN/8, x4, x1, x2)

inst_23088:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbacffffffffffffe; valaddr_reg:x3; val_offset:69264*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69264*0 + 3*48*FLEN/8, x4, x1, x2)

inst_23089:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbacfffffffffffff; valaddr_reg:x3; val_offset:69267*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69267*0 + 3*49*FLEN/8, x4, x1, x2)

inst_23090:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:69270*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69270*0 + 3*50*FLEN/8, x4, x1, x2)

inst_23091:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:69273*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69273*0 + 3*51*FLEN/8, x4, x1, x2)

inst_23092:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:69276*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69276*0 + 3*52*FLEN/8, x4, x1, x2)

inst_23093:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:69279*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69279*0 + 3*53*FLEN/8, x4, x1, x2)

inst_23094:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:69282*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69282*0 + 3*54*FLEN/8, x4, x1, x2)

inst_23095:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:69285*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69285*0 + 3*55*FLEN/8, x4, x1, x2)

inst_23096:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:69288*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69288*0 + 3*56*FLEN/8, x4, x1, x2)

inst_23097:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:69291*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69291*0 + 3*57*FLEN/8, x4, x1, x2)

inst_23098:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:69294*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69294*0 + 3*58*FLEN/8, x4, x1, x2)

inst_23099:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:69297*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69297*0 + 3*59*FLEN/8, x4, x1, x2)

inst_23100:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:69300*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69300*0 + 3*60*FLEN/8, x4, x1, x2)

inst_23101:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:69303*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69303*0 + 3*61*FLEN/8, x4, x1, x2)

inst_23102:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:69306*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69306*0 + 3*62*FLEN/8, x4, x1, x2)

inst_23103:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:69309*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69309*0 + 3*63*FLEN/8, x4, x1, x2)

inst_23104:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:69312*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69312*0 + 3*64*FLEN/8, x4, x1, x2)

inst_23105:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:69315*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69315*0 + 3*65*FLEN/8, x4, x1, x2)

inst_23106:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:69318*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69318*0 + 3*66*FLEN/8, x4, x1, x2)

inst_23107:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:69321*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69321*0 + 3*67*FLEN/8, x4, x1, x2)

inst_23108:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:69324*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69324*0 + 3*68*FLEN/8, x4, x1, x2)

inst_23109:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:69327*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69327*0 + 3*69*FLEN/8, x4, x1, x2)

inst_23110:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:69330*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69330*0 + 3*70*FLEN/8, x4, x1, x2)

inst_23111:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf3381366daa33 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x068dd888c8363 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f3381366daa33; op2val:0x9fe068dd888c8363;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:69333*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69333*0 + 3*71*FLEN/8, x4, x1, x2)

inst_23112:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:69336*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69336*0 + 3*72*FLEN/8, x4, x1, x2)

inst_23113:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:69339*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69339*0 + 3*73*FLEN/8, x4, x1, x2)

inst_23114:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:69342*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69342*0 + 3*74*FLEN/8, x4, x1, x2)

inst_23115:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:69345*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69345*0 + 3*75*FLEN/8, x4, x1, x2)

inst_23116:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:69348*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69348*0 + 3*76*FLEN/8, x4, x1, x2)

inst_23117:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:69351*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69351*0 + 3*77*FLEN/8, x4, x1, x2)

inst_23118:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:69354*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69354*0 + 3*78*FLEN/8, x4, x1, x2)

inst_23119:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:69357*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69357*0 + 3*79*FLEN/8, x4, x1, x2)

inst_23120:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:69360*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69360*0 + 3*80*FLEN/8, x4, x1, x2)

inst_23121:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:69363*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69363*0 + 3*81*FLEN/8, x4, x1, x2)

inst_23122:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:69366*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69366*0 + 3*82*FLEN/8, x4, x1, x2)

inst_23123:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:69369*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69369*0 + 3*83*FLEN/8, x4, x1, x2)

inst_23124:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:69372*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69372*0 + 3*84*FLEN/8, x4, x1, x2)

inst_23125:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:69375*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69375*0 + 3*85*FLEN/8, x4, x1, x2)

inst_23126:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:69378*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69378*0 + 3*86*FLEN/8, x4, x1, x2)

inst_23127:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:69381*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69381*0 + 3*87*FLEN/8, x4, x1, x2)

inst_23128:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:69384*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69384*0 + 3*88*FLEN/8, x4, x1, x2)

inst_23129:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:69387*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69387*0 + 3*89*FLEN/8, x4, x1, x2)

inst_23130:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:69390*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69390*0 + 3*90*FLEN/8, x4, x1, x2)

inst_23131:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:69393*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69393*0 + 3*91*FLEN/8, x4, x1, x2)

inst_23132:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:69396*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69396*0 + 3*92*FLEN/8, x4, x1, x2)

inst_23133:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:69399*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69399*0 + 3*93*FLEN/8, x4, x1, x2)

inst_23134:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3a0000000000000; valaddr_reg:x3; val_offset:69402*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69402*0 + 3*94*FLEN/8, x4, x1, x2)

inst_23135:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3a0000000000001; valaddr_reg:x3; val_offset:69405*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69405*0 + 3*95*FLEN/8, x4, x1, x2)

inst_23136:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3a0000000000003; valaddr_reg:x3; val_offset:69408*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69408*0 + 3*96*FLEN/8, x4, x1, x2)

inst_23137:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3a0000000000007; valaddr_reg:x3; val_offset:69411*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69411*0 + 3*97*FLEN/8, x4, x1, x2)

inst_23138:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3a000000000000f; valaddr_reg:x3; val_offset:69414*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69414*0 + 3*98*FLEN/8, x4, x1, x2)

inst_23139:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3a000000000001f; valaddr_reg:x3; val_offset:69417*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69417*0 + 3*99*FLEN/8, x4, x1, x2)

inst_23140:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3a000000000003f; valaddr_reg:x3; val_offset:69420*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69420*0 + 3*100*FLEN/8, x4, x1, x2)

inst_23141:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3a000000000007f; valaddr_reg:x3; val_offset:69423*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69423*0 + 3*101*FLEN/8, x4, x1, x2)

inst_23142:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3a00000000000ff; valaddr_reg:x3; val_offset:69426*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69426*0 + 3*102*FLEN/8, x4, x1, x2)

inst_23143:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3a00000000001ff; valaddr_reg:x3; val_offset:69429*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69429*0 + 3*103*FLEN/8, x4, x1, x2)

inst_23144:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3a00000000003ff; valaddr_reg:x3; val_offset:69432*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69432*0 + 3*104*FLEN/8, x4, x1, x2)

inst_23145:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3a00000000007ff; valaddr_reg:x3; val_offset:69435*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69435*0 + 3*105*FLEN/8, x4, x1, x2)

inst_23146:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3a0000000000fff; valaddr_reg:x3; val_offset:69438*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69438*0 + 3*106*FLEN/8, x4, x1, x2)

inst_23147:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3a0000000001fff; valaddr_reg:x3; val_offset:69441*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69441*0 + 3*107*FLEN/8, x4, x1, x2)

inst_23148:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3a0000000003fff; valaddr_reg:x3; val_offset:69444*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69444*0 + 3*108*FLEN/8, x4, x1, x2)

inst_23149:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3a0000000007fff; valaddr_reg:x3; val_offset:69447*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69447*0 + 3*109*FLEN/8, x4, x1, x2)

inst_23150:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3a000000000ffff; valaddr_reg:x3; val_offset:69450*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69450*0 + 3*110*FLEN/8, x4, x1, x2)

inst_23151:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3a000000001ffff; valaddr_reg:x3; val_offset:69453*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69453*0 + 3*111*FLEN/8, x4, x1, x2)

inst_23152:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3a000000003ffff; valaddr_reg:x3; val_offset:69456*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69456*0 + 3*112*FLEN/8, x4, x1, x2)

inst_23153:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3a000000007ffff; valaddr_reg:x3; val_offset:69459*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69459*0 + 3*113*FLEN/8, x4, x1, x2)

inst_23154:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3a00000000fffff; valaddr_reg:x3; val_offset:69462*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69462*0 + 3*114*FLEN/8, x4, x1, x2)

inst_23155:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3a00000001fffff; valaddr_reg:x3; val_offset:69465*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69465*0 + 3*115*FLEN/8, x4, x1, x2)

inst_23156:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3a00000003fffff; valaddr_reg:x3; val_offset:69468*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69468*0 + 3*116*FLEN/8, x4, x1, x2)

inst_23157:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3a00000007fffff; valaddr_reg:x3; val_offset:69471*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69471*0 + 3*117*FLEN/8, x4, x1, x2)

inst_23158:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3a0000000ffffff; valaddr_reg:x3; val_offset:69474*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69474*0 + 3*118*FLEN/8, x4, x1, x2)

inst_23159:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3a0000001ffffff; valaddr_reg:x3; val_offset:69477*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69477*0 + 3*119*FLEN/8, x4, x1, x2)

inst_23160:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3a0000003ffffff; valaddr_reg:x3; val_offset:69480*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69480*0 + 3*120*FLEN/8, x4, x1, x2)

inst_23161:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3a0000007ffffff; valaddr_reg:x3; val_offset:69483*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69483*0 + 3*121*FLEN/8, x4, x1, x2)

inst_23162:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3a000000fffffff; valaddr_reg:x3; val_offset:69486*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69486*0 + 3*122*FLEN/8, x4, x1, x2)

inst_23163:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3a000001fffffff; valaddr_reg:x3; val_offset:69489*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69489*0 + 3*123*FLEN/8, x4, x1, x2)

inst_23164:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3a000003fffffff; valaddr_reg:x3; val_offset:69492*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69492*0 + 3*124*FLEN/8, x4, x1, x2)

inst_23165:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3a000007fffffff; valaddr_reg:x3; val_offset:69495*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69495*0 + 3*125*FLEN/8, x4, x1, x2)

inst_23166:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3a00000ffffffff; valaddr_reg:x3; val_offset:69498*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69498*0 + 3*126*FLEN/8, x4, x1, x2)

inst_23167:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3a00001ffffffff; valaddr_reg:x3; val_offset:69501*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69501*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_23168:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3a00003ffffffff; valaddr_reg:x3; val_offset:69504*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69504*0 + 3*128*FLEN/8, x4, x1, x2)

inst_23169:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3a00007ffffffff; valaddr_reg:x3; val_offset:69507*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69507*0 + 3*129*FLEN/8, x4, x1, x2)

inst_23170:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3a0000fffffffff; valaddr_reg:x3; val_offset:69510*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69510*0 + 3*130*FLEN/8, x4, x1, x2)

inst_23171:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3a0001fffffffff; valaddr_reg:x3; val_offset:69513*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69513*0 + 3*131*FLEN/8, x4, x1, x2)

inst_23172:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3a0003fffffffff; valaddr_reg:x3; val_offset:69516*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69516*0 + 3*132*FLEN/8, x4, x1, x2)

inst_23173:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3a0007fffffffff; valaddr_reg:x3; val_offset:69519*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69519*0 + 3*133*FLEN/8, x4, x1, x2)

inst_23174:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3a000ffffffffff; valaddr_reg:x3; val_offset:69522*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69522*0 + 3*134*FLEN/8, x4, x1, x2)

inst_23175:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3a001ffffffffff; valaddr_reg:x3; val_offset:69525*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69525*0 + 3*135*FLEN/8, x4, x1, x2)

inst_23176:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3a003ffffffffff; valaddr_reg:x3; val_offset:69528*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69528*0 + 3*136*FLEN/8, x4, x1, x2)

inst_23177:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3a007ffffffffff; valaddr_reg:x3; val_offset:69531*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69531*0 + 3*137*FLEN/8, x4, x1, x2)

inst_23178:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3a00fffffffffff; valaddr_reg:x3; val_offset:69534*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69534*0 + 3*138*FLEN/8, x4, x1, x2)

inst_23179:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3a01fffffffffff; valaddr_reg:x3; val_offset:69537*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69537*0 + 3*139*FLEN/8, x4, x1, x2)

inst_23180:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3a03fffffffffff; valaddr_reg:x3; val_offset:69540*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69540*0 + 3*140*FLEN/8, x4, x1, x2)

inst_23181:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3a07fffffffffff; valaddr_reg:x3; val_offset:69543*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69543*0 + 3*141*FLEN/8, x4, x1, x2)

inst_23182:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3a0ffffffffffff; valaddr_reg:x3; val_offset:69546*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69546*0 + 3*142*FLEN/8, x4, x1, x2)

inst_23183:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3a1ffffffffffff; valaddr_reg:x3; val_offset:69549*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69549*0 + 3*143*FLEN/8, x4, x1, x2)

inst_23184:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3a3ffffffffffff; valaddr_reg:x3; val_offset:69552*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69552*0 + 3*144*FLEN/8, x4, x1, x2)

inst_23185:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3a7ffffffffffff; valaddr_reg:x3; val_offset:69555*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69555*0 + 3*145*FLEN/8, x4, x1, x2)

inst_23186:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3a8000000000000; valaddr_reg:x3; val_offset:69558*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69558*0 + 3*146*FLEN/8, x4, x1, x2)

inst_23187:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3ac000000000000; valaddr_reg:x3; val_offset:69561*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69561*0 + 3*147*FLEN/8, x4, x1, x2)

inst_23188:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3ae000000000000; valaddr_reg:x3; val_offset:69564*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69564*0 + 3*148*FLEN/8, x4, x1, x2)

inst_23189:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3af000000000000; valaddr_reg:x3; val_offset:69567*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69567*0 + 3*149*FLEN/8, x4, x1, x2)

inst_23190:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3af800000000000; valaddr_reg:x3; val_offset:69570*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69570*0 + 3*150*FLEN/8, x4, x1, x2)

inst_23191:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3afc00000000000; valaddr_reg:x3; val_offset:69573*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69573*0 + 3*151*FLEN/8, x4, x1, x2)

inst_23192:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3afe00000000000; valaddr_reg:x3; val_offset:69576*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69576*0 + 3*152*FLEN/8, x4, x1, x2)

inst_23193:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3aff00000000000; valaddr_reg:x3; val_offset:69579*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69579*0 + 3*153*FLEN/8, x4, x1, x2)

inst_23194:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3aff80000000000; valaddr_reg:x3; val_offset:69582*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69582*0 + 3*154*FLEN/8, x4, x1, x2)

inst_23195:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3affc0000000000; valaddr_reg:x3; val_offset:69585*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69585*0 + 3*155*FLEN/8, x4, x1, x2)

inst_23196:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3affe0000000000; valaddr_reg:x3; val_offset:69588*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69588*0 + 3*156*FLEN/8, x4, x1, x2)

inst_23197:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3afff0000000000; valaddr_reg:x3; val_offset:69591*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69591*0 + 3*157*FLEN/8, x4, x1, x2)

inst_23198:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3afff8000000000; valaddr_reg:x3; val_offset:69594*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69594*0 + 3*158*FLEN/8, x4, x1, x2)

inst_23199:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3afffc000000000; valaddr_reg:x3; val_offset:69597*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69597*0 + 3*159*FLEN/8, x4, x1, x2)

inst_23200:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3afffe000000000; valaddr_reg:x3; val_offset:69600*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69600*0 + 3*160*FLEN/8, x4, x1, x2)

inst_23201:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3affff000000000; valaddr_reg:x3; val_offset:69603*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69603*0 + 3*161*FLEN/8, x4, x1, x2)

inst_23202:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3affff800000000; valaddr_reg:x3; val_offset:69606*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69606*0 + 3*162*FLEN/8, x4, x1, x2)

inst_23203:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3affffc00000000; valaddr_reg:x3; val_offset:69609*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69609*0 + 3*163*FLEN/8, x4, x1, x2)

inst_23204:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3affffe00000000; valaddr_reg:x3; val_offset:69612*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69612*0 + 3*164*FLEN/8, x4, x1, x2)

inst_23205:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3afffff00000000; valaddr_reg:x3; val_offset:69615*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69615*0 + 3*165*FLEN/8, x4, x1, x2)

inst_23206:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3afffff80000000; valaddr_reg:x3; val_offset:69618*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69618*0 + 3*166*FLEN/8, x4, x1, x2)

inst_23207:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3afffffc0000000; valaddr_reg:x3; val_offset:69621*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69621*0 + 3*167*FLEN/8, x4, x1, x2)

inst_23208:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3afffffe0000000; valaddr_reg:x3; val_offset:69624*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69624*0 + 3*168*FLEN/8, x4, x1, x2)

inst_23209:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3affffff0000000; valaddr_reg:x3; val_offset:69627*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69627*0 + 3*169*FLEN/8, x4, x1, x2)

inst_23210:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3affffff8000000; valaddr_reg:x3; val_offset:69630*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69630*0 + 3*170*FLEN/8, x4, x1, x2)

inst_23211:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3affffffc000000; valaddr_reg:x3; val_offset:69633*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69633*0 + 3*171*FLEN/8, x4, x1, x2)

inst_23212:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3affffffe000000; valaddr_reg:x3; val_offset:69636*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69636*0 + 3*172*FLEN/8, x4, x1, x2)

inst_23213:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3afffffff000000; valaddr_reg:x3; val_offset:69639*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69639*0 + 3*173*FLEN/8, x4, x1, x2)

inst_23214:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3afffffff800000; valaddr_reg:x3; val_offset:69642*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69642*0 + 3*174*FLEN/8, x4, x1, x2)

inst_23215:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3afffffffc00000; valaddr_reg:x3; val_offset:69645*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69645*0 + 3*175*FLEN/8, x4, x1, x2)

inst_23216:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3afffffffe00000; valaddr_reg:x3; val_offset:69648*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69648*0 + 3*176*FLEN/8, x4, x1, x2)

inst_23217:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3affffffff00000; valaddr_reg:x3; val_offset:69651*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69651*0 + 3*177*FLEN/8, x4, x1, x2)

inst_23218:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3affffffff80000; valaddr_reg:x3; val_offset:69654*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69654*0 + 3*178*FLEN/8, x4, x1, x2)

inst_23219:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3affffffffc0000; valaddr_reg:x3; val_offset:69657*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69657*0 + 3*179*FLEN/8, x4, x1, x2)

inst_23220:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3affffffffe0000; valaddr_reg:x3; val_offset:69660*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69660*0 + 3*180*FLEN/8, x4, x1, x2)

inst_23221:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3afffffffff0000; valaddr_reg:x3; val_offset:69663*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69663*0 + 3*181*FLEN/8, x4, x1, x2)

inst_23222:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3afffffffff8000; valaddr_reg:x3; val_offset:69666*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69666*0 + 3*182*FLEN/8, x4, x1, x2)

inst_23223:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3afffffffffc000; valaddr_reg:x3; val_offset:69669*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69669*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23224:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3afffffffffe000; valaddr_reg:x3; val_offset:69672*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69672*0 + 3*184*FLEN/8, x4, x1, x2)

inst_23225:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3affffffffff000; valaddr_reg:x3; val_offset:69675*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69675*0 + 3*185*FLEN/8, x4, x1, x2)

inst_23226:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3affffffffff800; valaddr_reg:x3; val_offset:69678*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69678*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23227:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3affffffffffc00; valaddr_reg:x3; val_offset:69681*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69681*0 + 3*187*FLEN/8, x4, x1, x2)

inst_23228:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3affffffffffe00; valaddr_reg:x3; val_offset:69684*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69684*0 + 3*188*FLEN/8, x4, x1, x2)

inst_23229:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3afffffffffff00; valaddr_reg:x3; val_offset:69687*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69687*0 + 3*189*FLEN/8, x4, x1, x2)

inst_23230:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3afffffffffff80; valaddr_reg:x3; val_offset:69690*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69690*0 + 3*190*FLEN/8, x4, x1, x2)

inst_23231:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3afffffffffffc0; valaddr_reg:x3; val_offset:69693*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69693*0 + 3*191*FLEN/8, x4, x1, x2)

inst_23232:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3afffffffffffe0; valaddr_reg:x3; val_offset:69696*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69696*0 + 3*192*FLEN/8, x4, x1, x2)

inst_23233:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3affffffffffff0; valaddr_reg:x3; val_offset:69699*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69699*0 + 3*193*FLEN/8, x4, x1, x2)

inst_23234:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3affffffffffff8; valaddr_reg:x3; val_offset:69702*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69702*0 + 3*194*FLEN/8, x4, x1, x2)

inst_23235:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3affffffffffffc; valaddr_reg:x3; val_offset:69705*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69705*0 + 3*195*FLEN/8, x4, x1, x2)

inst_23236:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3affffffffffffe; valaddr_reg:x3; val_offset:69708*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69708*0 + 3*196*FLEN/8, x4, x1, x2)

inst_23237:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf42d85d802caf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f42d85d802caf; op2val:0x0;
op3val:0x3afffffffffffff; valaddr_reg:x3; val_offset:69711*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69711*0 + 3*197*FLEN/8, x4, x1, x2)

inst_23238:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaa0000000000000; valaddr_reg:x3; val_offset:69714*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69714*0 + 3*198*FLEN/8, x4, x1, x2)

inst_23239:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaa0000000000001; valaddr_reg:x3; val_offset:69717*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69717*0 + 3*199*FLEN/8, x4, x1, x2)

inst_23240:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaa0000000000003; valaddr_reg:x3; val_offset:69720*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69720*0 + 3*200*FLEN/8, x4, x1, x2)

inst_23241:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaa0000000000007; valaddr_reg:x3; val_offset:69723*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69723*0 + 3*201*FLEN/8, x4, x1, x2)

inst_23242:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaa000000000000f; valaddr_reg:x3; val_offset:69726*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69726*0 + 3*202*FLEN/8, x4, x1, x2)

inst_23243:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaa000000000001f; valaddr_reg:x3; val_offset:69729*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69729*0 + 3*203*FLEN/8, x4, x1, x2)

inst_23244:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaa000000000003f; valaddr_reg:x3; val_offset:69732*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69732*0 + 3*204*FLEN/8, x4, x1, x2)

inst_23245:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaa000000000007f; valaddr_reg:x3; val_offset:69735*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69735*0 + 3*205*FLEN/8, x4, x1, x2)

inst_23246:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaa00000000000ff; valaddr_reg:x3; val_offset:69738*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69738*0 + 3*206*FLEN/8, x4, x1, x2)

inst_23247:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaa00000000001ff; valaddr_reg:x3; val_offset:69741*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69741*0 + 3*207*FLEN/8, x4, x1, x2)

inst_23248:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaa00000000003ff; valaddr_reg:x3; val_offset:69744*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69744*0 + 3*208*FLEN/8, x4, x1, x2)

inst_23249:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaa00000000007ff; valaddr_reg:x3; val_offset:69747*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69747*0 + 3*209*FLEN/8, x4, x1, x2)

inst_23250:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaa0000000000fff; valaddr_reg:x3; val_offset:69750*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69750*0 + 3*210*FLEN/8, x4, x1, x2)

inst_23251:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaa0000000001fff; valaddr_reg:x3; val_offset:69753*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69753*0 + 3*211*FLEN/8, x4, x1, x2)

inst_23252:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaa0000000003fff; valaddr_reg:x3; val_offset:69756*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69756*0 + 3*212*FLEN/8, x4, x1, x2)

inst_23253:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaa0000000007fff; valaddr_reg:x3; val_offset:69759*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69759*0 + 3*213*FLEN/8, x4, x1, x2)

inst_23254:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaa000000000ffff; valaddr_reg:x3; val_offset:69762*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69762*0 + 3*214*FLEN/8, x4, x1, x2)

inst_23255:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaa000000001ffff; valaddr_reg:x3; val_offset:69765*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69765*0 + 3*215*FLEN/8, x4, x1, x2)

inst_23256:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaa000000003ffff; valaddr_reg:x3; val_offset:69768*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69768*0 + 3*216*FLEN/8, x4, x1, x2)

inst_23257:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaa000000007ffff; valaddr_reg:x3; val_offset:69771*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69771*0 + 3*217*FLEN/8, x4, x1, x2)

inst_23258:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaa00000000fffff; valaddr_reg:x3; val_offset:69774*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69774*0 + 3*218*FLEN/8, x4, x1, x2)

inst_23259:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaa00000001fffff; valaddr_reg:x3; val_offset:69777*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69777*0 + 3*219*FLEN/8, x4, x1, x2)

inst_23260:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaa00000003fffff; valaddr_reg:x3; val_offset:69780*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69780*0 + 3*220*FLEN/8, x4, x1, x2)

inst_23261:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaa00000007fffff; valaddr_reg:x3; val_offset:69783*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69783*0 + 3*221*FLEN/8, x4, x1, x2)

inst_23262:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaa0000000ffffff; valaddr_reg:x3; val_offset:69786*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69786*0 + 3*222*FLEN/8, x4, x1, x2)

inst_23263:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaa0000001ffffff; valaddr_reg:x3; val_offset:69789*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69789*0 + 3*223*FLEN/8, x4, x1, x2)

inst_23264:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaa0000003ffffff; valaddr_reg:x3; val_offset:69792*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69792*0 + 3*224*FLEN/8, x4, x1, x2)

inst_23265:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaa0000007ffffff; valaddr_reg:x3; val_offset:69795*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69795*0 + 3*225*FLEN/8, x4, x1, x2)

inst_23266:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaa000000fffffff; valaddr_reg:x3; val_offset:69798*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69798*0 + 3*226*FLEN/8, x4, x1, x2)

inst_23267:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaa000001fffffff; valaddr_reg:x3; val_offset:69801*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69801*0 + 3*227*FLEN/8, x4, x1, x2)

inst_23268:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaa000003fffffff; valaddr_reg:x3; val_offset:69804*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69804*0 + 3*228*FLEN/8, x4, x1, x2)

inst_23269:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaa000007fffffff; valaddr_reg:x3; val_offset:69807*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69807*0 + 3*229*FLEN/8, x4, x1, x2)

inst_23270:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaa00000ffffffff; valaddr_reg:x3; val_offset:69810*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69810*0 + 3*230*FLEN/8, x4, x1, x2)

inst_23271:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaa00001ffffffff; valaddr_reg:x3; val_offset:69813*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69813*0 + 3*231*FLEN/8, x4, x1, x2)

inst_23272:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaa00003ffffffff; valaddr_reg:x3; val_offset:69816*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69816*0 + 3*232*FLEN/8, x4, x1, x2)

inst_23273:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaa00007ffffffff; valaddr_reg:x3; val_offset:69819*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69819*0 + 3*233*FLEN/8, x4, x1, x2)

inst_23274:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaa0000fffffffff; valaddr_reg:x3; val_offset:69822*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69822*0 + 3*234*FLEN/8, x4, x1, x2)

inst_23275:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaa0001fffffffff; valaddr_reg:x3; val_offset:69825*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69825*0 + 3*235*FLEN/8, x4, x1, x2)

inst_23276:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaa0003fffffffff; valaddr_reg:x3; val_offset:69828*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69828*0 + 3*236*FLEN/8, x4, x1, x2)

inst_23277:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaa0007fffffffff; valaddr_reg:x3; val_offset:69831*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69831*0 + 3*237*FLEN/8, x4, x1, x2)

inst_23278:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaa000ffffffffff; valaddr_reg:x3; val_offset:69834*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69834*0 + 3*238*FLEN/8, x4, x1, x2)

inst_23279:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaa001ffffffffff; valaddr_reg:x3; val_offset:69837*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69837*0 + 3*239*FLEN/8, x4, x1, x2)

inst_23280:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaa003ffffffffff; valaddr_reg:x3; val_offset:69840*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69840*0 + 3*240*FLEN/8, x4, x1, x2)

inst_23281:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaa007ffffffffff; valaddr_reg:x3; val_offset:69843*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69843*0 + 3*241*FLEN/8, x4, x1, x2)

inst_23282:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaa00fffffffffff; valaddr_reg:x3; val_offset:69846*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69846*0 + 3*242*FLEN/8, x4, x1, x2)

inst_23283:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaa01fffffffffff; valaddr_reg:x3; val_offset:69849*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69849*0 + 3*243*FLEN/8, x4, x1, x2)

inst_23284:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaa03fffffffffff; valaddr_reg:x3; val_offset:69852*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69852*0 + 3*244*FLEN/8, x4, x1, x2)

inst_23285:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaa07fffffffffff; valaddr_reg:x3; val_offset:69855*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69855*0 + 3*245*FLEN/8, x4, x1, x2)

inst_23286:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaa0ffffffffffff; valaddr_reg:x3; val_offset:69858*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69858*0 + 3*246*FLEN/8, x4, x1, x2)

inst_23287:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaa1ffffffffffff; valaddr_reg:x3; val_offset:69861*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69861*0 + 3*247*FLEN/8, x4, x1, x2)

inst_23288:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaa3ffffffffffff; valaddr_reg:x3; val_offset:69864*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69864*0 + 3*248*FLEN/8, x4, x1, x2)

inst_23289:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaa7ffffffffffff; valaddr_reg:x3; val_offset:69867*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69867*0 + 3*249*FLEN/8, x4, x1, x2)

inst_23290:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaa8000000000000; valaddr_reg:x3; val_offset:69870*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69870*0 + 3*250*FLEN/8, x4, x1, x2)

inst_23291:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaac000000000000; valaddr_reg:x3; val_offset:69873*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69873*0 + 3*251*FLEN/8, x4, x1, x2)

inst_23292:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaae000000000000; valaddr_reg:x3; val_offset:69876*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69876*0 + 3*252*FLEN/8, x4, x1, x2)

inst_23293:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaaf000000000000; valaddr_reg:x3; val_offset:69879*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69879*0 + 3*253*FLEN/8, x4, x1, x2)

inst_23294:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaaf800000000000; valaddr_reg:x3; val_offset:69882*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69882*0 + 3*254*FLEN/8, x4, x1, x2)

inst_23295:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaafc00000000000; valaddr_reg:x3; val_offset:69885*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69885*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_23296:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaafe00000000000; valaddr_reg:x3; val_offset:69888*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69888*0 + 3*256*FLEN/8, x4, x1, x2)

inst_23297:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaaff00000000000; valaddr_reg:x3; val_offset:69891*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69891*0 + 3*257*FLEN/8, x4, x1, x2)

inst_23298:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaaff80000000000; valaddr_reg:x3; val_offset:69894*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69894*0 + 3*258*FLEN/8, x4, x1, x2)

inst_23299:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaaffc0000000000; valaddr_reg:x3; val_offset:69897*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69897*0 + 3*259*FLEN/8, x4, x1, x2)

inst_23300:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaaffe0000000000; valaddr_reg:x3; val_offset:69900*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69900*0 + 3*260*FLEN/8, x4, x1, x2)

inst_23301:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaafff0000000000; valaddr_reg:x3; val_offset:69903*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69903*0 + 3*261*FLEN/8, x4, x1, x2)

inst_23302:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaafff8000000000; valaddr_reg:x3; val_offset:69906*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69906*0 + 3*262*FLEN/8, x4, x1, x2)

inst_23303:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaafffc000000000; valaddr_reg:x3; val_offset:69909*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69909*0 + 3*263*FLEN/8, x4, x1, x2)

inst_23304:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaafffe000000000; valaddr_reg:x3; val_offset:69912*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69912*0 + 3*264*FLEN/8, x4, x1, x2)

inst_23305:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaaffff000000000; valaddr_reg:x3; val_offset:69915*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69915*0 + 3*265*FLEN/8, x4, x1, x2)

inst_23306:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaaffff800000000; valaddr_reg:x3; val_offset:69918*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69918*0 + 3*266*FLEN/8, x4, x1, x2)

inst_23307:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaaffffc00000000; valaddr_reg:x3; val_offset:69921*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69921*0 + 3*267*FLEN/8, x4, x1, x2)

inst_23308:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaaffffe00000000; valaddr_reg:x3; val_offset:69924*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69924*0 + 3*268*FLEN/8, x4, x1, x2)

inst_23309:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaafffff00000000; valaddr_reg:x3; val_offset:69927*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69927*0 + 3*269*FLEN/8, x4, x1, x2)

inst_23310:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaafffff80000000; valaddr_reg:x3; val_offset:69930*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69930*0 + 3*270*FLEN/8, x4, x1, x2)

inst_23311:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaafffffc0000000; valaddr_reg:x3; val_offset:69933*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69933*0 + 3*271*FLEN/8, x4, x1, x2)

inst_23312:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaafffffe0000000; valaddr_reg:x3; val_offset:69936*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69936*0 + 3*272*FLEN/8, x4, x1, x2)

inst_23313:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaaffffff0000000; valaddr_reg:x3; val_offset:69939*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69939*0 + 3*273*FLEN/8, x4, x1, x2)

inst_23314:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaaffffff8000000; valaddr_reg:x3; val_offset:69942*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69942*0 + 3*274*FLEN/8, x4, x1, x2)

inst_23315:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaaffffffc000000; valaddr_reg:x3; val_offset:69945*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69945*0 + 3*275*FLEN/8, x4, x1, x2)

inst_23316:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaaffffffe000000; valaddr_reg:x3; val_offset:69948*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69948*0 + 3*276*FLEN/8, x4, x1, x2)

inst_23317:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaafffffff000000; valaddr_reg:x3; val_offset:69951*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69951*0 + 3*277*FLEN/8, x4, x1, x2)

inst_23318:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaafffffff800000; valaddr_reg:x3; val_offset:69954*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69954*0 + 3*278*FLEN/8, x4, x1, x2)

inst_23319:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaafffffffc00000; valaddr_reg:x3; val_offset:69957*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69957*0 + 3*279*FLEN/8, x4, x1, x2)

inst_23320:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaafffffffe00000; valaddr_reg:x3; val_offset:69960*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69960*0 + 3*280*FLEN/8, x4, x1, x2)

inst_23321:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaaffffffff00000; valaddr_reg:x3; val_offset:69963*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69963*0 + 3*281*FLEN/8, x4, x1, x2)

inst_23322:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaaffffffff80000; valaddr_reg:x3; val_offset:69966*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69966*0 + 3*282*FLEN/8, x4, x1, x2)

inst_23323:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaaffffffffc0000; valaddr_reg:x3; val_offset:69969*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69969*0 + 3*283*FLEN/8, x4, x1, x2)

inst_23324:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaaffffffffe0000; valaddr_reg:x3; val_offset:69972*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69972*0 + 3*284*FLEN/8, x4, x1, x2)

inst_23325:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaafffffffff0000; valaddr_reg:x3; val_offset:69975*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69975*0 + 3*285*FLEN/8, x4, x1, x2)

inst_23326:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaafffffffff8000; valaddr_reg:x3; val_offset:69978*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69978*0 + 3*286*FLEN/8, x4, x1, x2)

inst_23327:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaafffffffffc000; valaddr_reg:x3; val_offset:69981*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69981*0 + 3*287*FLEN/8, x4, x1, x2)

inst_23328:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaafffffffffe000; valaddr_reg:x3; val_offset:69984*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69984*0 + 3*288*FLEN/8, x4, x1, x2)

inst_23329:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaaffffffffff000; valaddr_reg:x3; val_offset:69987*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69987*0 + 3*289*FLEN/8, x4, x1, x2)

inst_23330:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaaffffffffff800; valaddr_reg:x3; val_offset:69990*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69990*0 + 3*290*FLEN/8, x4, x1, x2)

inst_23331:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaaffffffffffc00; valaddr_reg:x3; val_offset:69993*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69993*0 + 3*291*FLEN/8, x4, x1, x2)

inst_23332:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaaffffffffffe00; valaddr_reg:x3; val_offset:69996*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69996*0 + 3*292*FLEN/8, x4, x1, x2)

inst_23333:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaafffffffffff00; valaddr_reg:x3; val_offset:69999*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69999*0 + 3*293*FLEN/8, x4, x1, x2)

inst_23334:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaafffffffffff80; valaddr_reg:x3; val_offset:70002*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70002*0 + 3*294*FLEN/8, x4, x1, x2)

inst_23335:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaafffffffffffc0; valaddr_reg:x3; val_offset:70005*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70005*0 + 3*295*FLEN/8, x4, x1, x2)

inst_23336:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaafffffffffffe0; valaddr_reg:x3; val_offset:70008*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70008*0 + 3*296*FLEN/8, x4, x1, x2)

inst_23337:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaaffffffffffff0; valaddr_reg:x3; val_offset:70011*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70011*0 + 3*297*FLEN/8, x4, x1, x2)

inst_23338:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaaffffffffffff8; valaddr_reg:x3; val_offset:70014*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70014*0 + 3*298*FLEN/8, x4, x1, x2)

inst_23339:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaaffffffffffffc; valaddr_reg:x3; val_offset:70017*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70017*0 + 3*299*FLEN/8, x4, x1, x2)

inst_23340:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaaffffffffffffe; valaddr_reg:x3; val_offset:70020*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70020*0 + 3*300*FLEN/8, x4, x1, x2)

inst_23341:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3aa and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbaafffffffffffff; valaddr_reg:x3; val_offset:70023*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70023*0 + 3*301*FLEN/8, x4, x1, x2)

inst_23342:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:70026*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70026*0 + 3*302*FLEN/8, x4, x1, x2)

inst_23343:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:70029*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70029*0 + 3*303*FLEN/8, x4, x1, x2)

inst_23344:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:70032*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70032*0 + 3*304*FLEN/8, x4, x1, x2)

inst_23345:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:70035*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70035*0 + 3*305*FLEN/8, x4, x1, x2)

inst_23346:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:70038*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70038*0 + 3*306*FLEN/8, x4, x1, x2)

inst_23347:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:70041*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70041*0 + 3*307*FLEN/8, x4, x1, x2)

inst_23348:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:70044*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70044*0 + 3*308*FLEN/8, x4, x1, x2)

inst_23349:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:70047*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70047*0 + 3*309*FLEN/8, x4, x1, x2)

inst_23350:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:70050*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70050*0 + 3*310*FLEN/8, x4, x1, x2)

inst_23351:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:70053*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70053*0 + 3*311*FLEN/8, x4, x1, x2)

inst_23352:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:70056*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70056*0 + 3*312*FLEN/8, x4, x1, x2)

inst_23353:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:70059*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70059*0 + 3*313*FLEN/8, x4, x1, x2)

inst_23354:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:70062*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70062*0 + 3*314*FLEN/8, x4, x1, x2)

inst_23355:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:70065*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70065*0 + 3*315*FLEN/8, x4, x1, x2)

inst_23356:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:70068*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70068*0 + 3*316*FLEN/8, x4, x1, x2)

inst_23357:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:70071*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70071*0 + 3*317*FLEN/8, x4, x1, x2)

inst_23358:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:70074*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70074*0 + 3*318*FLEN/8, x4, x1, x2)

inst_23359:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:70077*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70077*0 + 3*319*FLEN/8, x4, x1, x2)

inst_23360:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:70080*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70080*0 + 3*320*FLEN/8, x4, x1, x2)

inst_23361:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:70083*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70083*0 + 3*321*FLEN/8, x4, x1, x2)

inst_23362:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:70086*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70086*0 + 3*322*FLEN/8, x4, x1, x2)

inst_23363:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5f5f1385c1af and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x051ebac93c3ea and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f5f5f1385c1af; op2val:0x9fe051ebac93c3ea;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:70089*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70089*0 + 3*323*FLEN/8, x4, x1, x2)

inst_23364:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:70092*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70092*0 + 3*324*FLEN/8, x4, x1, x2)

inst_23365:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:70095*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70095*0 + 3*325*FLEN/8, x4, x1, x2)

inst_23366:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:70098*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70098*0 + 3*326*FLEN/8, x4, x1, x2)

inst_23367:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:70101*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70101*0 + 3*327*FLEN/8, x4, x1, x2)

inst_23368:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:70104*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70104*0 + 3*328*FLEN/8, x4, x1, x2)

inst_23369:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:70107*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70107*0 + 3*329*FLEN/8, x4, x1, x2)

inst_23370:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:70110*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70110*0 + 3*330*FLEN/8, x4, x1, x2)

inst_23371:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:70113*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70113*0 + 3*331*FLEN/8, x4, x1, x2)

inst_23372:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:70116*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70116*0 + 3*332*FLEN/8, x4, x1, x2)

inst_23373:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:70119*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70119*0 + 3*333*FLEN/8, x4, x1, x2)

inst_23374:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:70122*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70122*0 + 3*334*FLEN/8, x4, x1, x2)

inst_23375:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:70125*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70125*0 + 3*335*FLEN/8, x4, x1, x2)

inst_23376:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:70128*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70128*0 + 3*336*FLEN/8, x4, x1, x2)

inst_23377:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:70131*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70131*0 + 3*337*FLEN/8, x4, x1, x2)

inst_23378:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:70134*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70134*0 + 3*338*FLEN/8, x4, x1, x2)

inst_23379:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:70137*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70137*0 + 3*339*FLEN/8, x4, x1, x2)

inst_23380:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:70140*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70140*0 + 3*340*FLEN/8, x4, x1, x2)

inst_23381:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:70143*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70143*0 + 3*341*FLEN/8, x4, x1, x2)

inst_23382:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:70146*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70146*0 + 3*342*FLEN/8, x4, x1, x2)

inst_23383:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:70149*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70149*0 + 3*343*FLEN/8, x4, x1, x2)

inst_23384:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:70152*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70152*0 + 3*344*FLEN/8, x4, x1, x2)

inst_23385:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:70155*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70155*0 + 3*345*FLEN/8, x4, x1, x2)

inst_23386:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x8060000000000000; valaddr_reg:x3; val_offset:70158*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70158*0 + 3*346*FLEN/8, x4, x1, x2)

inst_23387:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x8060000000000001; valaddr_reg:x3; val_offset:70161*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70161*0 + 3*347*FLEN/8, x4, x1, x2)

inst_23388:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x8060000000000003; valaddr_reg:x3; val_offset:70164*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70164*0 + 3*348*FLEN/8, x4, x1, x2)

inst_23389:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x8060000000000007; valaddr_reg:x3; val_offset:70167*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70167*0 + 3*349*FLEN/8, x4, x1, x2)

inst_23390:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806000000000000f; valaddr_reg:x3; val_offset:70170*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70170*0 + 3*350*FLEN/8, x4, x1, x2)

inst_23391:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806000000000001f; valaddr_reg:x3; val_offset:70173*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70173*0 + 3*351*FLEN/8, x4, x1, x2)

inst_23392:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806000000000003f; valaddr_reg:x3; val_offset:70176*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70176*0 + 3*352*FLEN/8, x4, x1, x2)

inst_23393:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806000000000007f; valaddr_reg:x3; val_offset:70179*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70179*0 + 3*353*FLEN/8, x4, x1, x2)

inst_23394:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x80600000000000ff; valaddr_reg:x3; val_offset:70182*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70182*0 + 3*354*FLEN/8, x4, x1, x2)

inst_23395:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x80600000000001ff; valaddr_reg:x3; val_offset:70185*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70185*0 + 3*355*FLEN/8, x4, x1, x2)

inst_23396:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x80600000000003ff; valaddr_reg:x3; val_offset:70188*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70188*0 + 3*356*FLEN/8, x4, x1, x2)

inst_23397:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x80600000000007ff; valaddr_reg:x3; val_offset:70191*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70191*0 + 3*357*FLEN/8, x4, x1, x2)

inst_23398:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x8060000000000fff; valaddr_reg:x3; val_offset:70194*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70194*0 + 3*358*FLEN/8, x4, x1, x2)

inst_23399:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x8060000000001fff; valaddr_reg:x3; val_offset:70197*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70197*0 + 3*359*FLEN/8, x4, x1, x2)

inst_23400:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x8060000000003fff; valaddr_reg:x3; val_offset:70200*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70200*0 + 3*360*FLEN/8, x4, x1, x2)

inst_23401:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x8060000000007fff; valaddr_reg:x3; val_offset:70203*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70203*0 + 3*361*FLEN/8, x4, x1, x2)

inst_23402:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806000000000ffff; valaddr_reg:x3; val_offset:70206*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70206*0 + 3*362*FLEN/8, x4, x1, x2)

inst_23403:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806000000001ffff; valaddr_reg:x3; val_offset:70209*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70209*0 + 3*363*FLEN/8, x4, x1, x2)

inst_23404:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806000000003ffff; valaddr_reg:x3; val_offset:70212*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70212*0 + 3*364*FLEN/8, x4, x1, x2)

inst_23405:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806000000007ffff; valaddr_reg:x3; val_offset:70215*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70215*0 + 3*365*FLEN/8, x4, x1, x2)

inst_23406:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x80600000000fffff; valaddr_reg:x3; val_offset:70218*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70218*0 + 3*366*FLEN/8, x4, x1, x2)

inst_23407:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x80600000001fffff; valaddr_reg:x3; val_offset:70221*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70221*0 + 3*367*FLEN/8, x4, x1, x2)

inst_23408:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x80600000003fffff; valaddr_reg:x3; val_offset:70224*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70224*0 + 3*368*FLEN/8, x4, x1, x2)

inst_23409:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x80600000007fffff; valaddr_reg:x3; val_offset:70227*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70227*0 + 3*369*FLEN/8, x4, x1, x2)

inst_23410:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x8060000000ffffff; valaddr_reg:x3; val_offset:70230*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70230*0 + 3*370*FLEN/8, x4, x1, x2)

inst_23411:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x8060000001ffffff; valaddr_reg:x3; val_offset:70233*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70233*0 + 3*371*FLEN/8, x4, x1, x2)

inst_23412:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x8060000003ffffff; valaddr_reg:x3; val_offset:70236*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70236*0 + 3*372*FLEN/8, x4, x1, x2)

inst_23413:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x8060000007ffffff; valaddr_reg:x3; val_offset:70239*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70239*0 + 3*373*FLEN/8, x4, x1, x2)

inst_23414:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806000000fffffff; valaddr_reg:x3; val_offset:70242*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70242*0 + 3*374*FLEN/8, x4, x1, x2)

inst_23415:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806000001fffffff; valaddr_reg:x3; val_offset:70245*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70245*0 + 3*375*FLEN/8, x4, x1, x2)

inst_23416:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806000003fffffff; valaddr_reg:x3; val_offset:70248*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70248*0 + 3*376*FLEN/8, x4, x1, x2)

inst_23417:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806000007fffffff; valaddr_reg:x3; val_offset:70251*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70251*0 + 3*377*FLEN/8, x4, x1, x2)

inst_23418:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x80600000ffffffff; valaddr_reg:x3; val_offset:70254*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70254*0 + 3*378*FLEN/8, x4, x1, x2)

inst_23419:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x80600001ffffffff; valaddr_reg:x3; val_offset:70257*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70257*0 + 3*379*FLEN/8, x4, x1, x2)

inst_23420:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x80600003ffffffff; valaddr_reg:x3; val_offset:70260*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70260*0 + 3*380*FLEN/8, x4, x1, x2)

inst_23421:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x80600007ffffffff; valaddr_reg:x3; val_offset:70263*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70263*0 + 3*381*FLEN/8, x4, x1, x2)

inst_23422:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x8060000fffffffff; valaddr_reg:x3; val_offset:70266*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70266*0 + 3*382*FLEN/8, x4, x1, x2)

inst_23423:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x8060001fffffffff; valaddr_reg:x3; val_offset:70269*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70269*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_23424:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x8060003fffffffff; valaddr_reg:x3; val_offset:70272*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70272*0 + 3*384*FLEN/8, x4, x1, x2)

inst_23425:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x8060007fffffffff; valaddr_reg:x3; val_offset:70275*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70275*0 + 3*385*FLEN/8, x4, x1, x2)

inst_23426:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806000ffffffffff; valaddr_reg:x3; val_offset:70278*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70278*0 + 3*386*FLEN/8, x4, x1, x2)

inst_23427:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806001ffffffffff; valaddr_reg:x3; val_offset:70281*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70281*0 + 3*387*FLEN/8, x4, x1, x2)

inst_23428:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806003ffffffffff; valaddr_reg:x3; val_offset:70284*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70284*0 + 3*388*FLEN/8, x4, x1, x2)

inst_23429:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806007ffffffffff; valaddr_reg:x3; val_offset:70287*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70287*0 + 3*389*FLEN/8, x4, x1, x2)

inst_23430:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x80600fffffffffff; valaddr_reg:x3; val_offset:70290*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70290*0 + 3*390*FLEN/8, x4, x1, x2)

inst_23431:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x80601fffffffffff; valaddr_reg:x3; val_offset:70293*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70293*0 + 3*391*FLEN/8, x4, x1, x2)

inst_23432:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x80603fffffffffff; valaddr_reg:x3; val_offset:70296*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70296*0 + 3*392*FLEN/8, x4, x1, x2)

inst_23433:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x80607fffffffffff; valaddr_reg:x3; val_offset:70299*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70299*0 + 3*393*FLEN/8, x4, x1, x2)

inst_23434:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x8060ffffffffffff; valaddr_reg:x3; val_offset:70302*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70302*0 + 3*394*FLEN/8, x4, x1, x2)

inst_23435:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x8061ffffffffffff; valaddr_reg:x3; val_offset:70305*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70305*0 + 3*395*FLEN/8, x4, x1, x2)

inst_23436:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x8063ffffffffffff; valaddr_reg:x3; val_offset:70308*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70308*0 + 3*396*FLEN/8, x4, x1, x2)

inst_23437:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x8067ffffffffffff; valaddr_reg:x3; val_offset:70311*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70311*0 + 3*397*FLEN/8, x4, x1, x2)

inst_23438:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x8068000000000000; valaddr_reg:x3; val_offset:70314*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70314*0 + 3*398*FLEN/8, x4, x1, x2)

inst_23439:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806c000000000000; valaddr_reg:x3; val_offset:70317*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70317*0 + 3*399*FLEN/8, x4, x1, x2)

inst_23440:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806e000000000000; valaddr_reg:x3; val_offset:70320*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70320*0 + 3*400*FLEN/8, x4, x1, x2)

inst_23441:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806f000000000000; valaddr_reg:x3; val_offset:70323*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70323*0 + 3*401*FLEN/8, x4, x1, x2)

inst_23442:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806f800000000000; valaddr_reg:x3; val_offset:70326*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70326*0 + 3*402*FLEN/8, x4, x1, x2)

inst_23443:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806fc00000000000; valaddr_reg:x3; val_offset:70329*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70329*0 + 3*403*FLEN/8, x4, x1, x2)

inst_23444:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806fe00000000000; valaddr_reg:x3; val_offset:70332*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70332*0 + 3*404*FLEN/8, x4, x1, x2)

inst_23445:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806ff00000000000; valaddr_reg:x3; val_offset:70335*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70335*0 + 3*405*FLEN/8, x4, x1, x2)

inst_23446:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806ff80000000000; valaddr_reg:x3; val_offset:70338*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70338*0 + 3*406*FLEN/8, x4, x1, x2)

inst_23447:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806ffc0000000000; valaddr_reg:x3; val_offset:70341*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70341*0 + 3*407*FLEN/8, x4, x1, x2)

inst_23448:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806ffe0000000000; valaddr_reg:x3; val_offset:70344*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70344*0 + 3*408*FLEN/8, x4, x1, x2)

inst_23449:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806fff0000000000; valaddr_reg:x3; val_offset:70347*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70347*0 + 3*409*FLEN/8, x4, x1, x2)

inst_23450:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806fff8000000000; valaddr_reg:x3; val_offset:70350*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70350*0 + 3*410*FLEN/8, x4, x1, x2)

inst_23451:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806fffc000000000; valaddr_reg:x3; val_offset:70353*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70353*0 + 3*411*FLEN/8, x4, x1, x2)

inst_23452:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806fffe000000000; valaddr_reg:x3; val_offset:70356*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70356*0 + 3*412*FLEN/8, x4, x1, x2)

inst_23453:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806ffff000000000; valaddr_reg:x3; val_offset:70359*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70359*0 + 3*413*FLEN/8, x4, x1, x2)

inst_23454:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806ffff800000000; valaddr_reg:x3; val_offset:70362*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70362*0 + 3*414*FLEN/8, x4, x1, x2)

inst_23455:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806ffffc00000000; valaddr_reg:x3; val_offset:70365*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70365*0 + 3*415*FLEN/8, x4, x1, x2)

inst_23456:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806ffffe00000000; valaddr_reg:x3; val_offset:70368*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70368*0 + 3*416*FLEN/8, x4, x1, x2)

inst_23457:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806fffff00000000; valaddr_reg:x3; val_offset:70371*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70371*0 + 3*417*FLEN/8, x4, x1, x2)

inst_23458:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806fffff80000000; valaddr_reg:x3; val_offset:70374*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70374*0 + 3*418*FLEN/8, x4, x1, x2)

inst_23459:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806fffffc0000000; valaddr_reg:x3; val_offset:70377*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70377*0 + 3*419*FLEN/8, x4, x1, x2)

inst_23460:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806fffffe0000000; valaddr_reg:x3; val_offset:70380*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70380*0 + 3*420*FLEN/8, x4, x1, x2)

inst_23461:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806ffffff0000000; valaddr_reg:x3; val_offset:70383*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70383*0 + 3*421*FLEN/8, x4, x1, x2)

inst_23462:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806ffffff8000000; valaddr_reg:x3; val_offset:70386*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70386*0 + 3*422*FLEN/8, x4, x1, x2)

inst_23463:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806ffffffc000000; valaddr_reg:x3; val_offset:70389*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70389*0 + 3*423*FLEN/8, x4, x1, x2)

inst_23464:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806ffffffe000000; valaddr_reg:x3; val_offset:70392*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70392*0 + 3*424*FLEN/8, x4, x1, x2)

inst_23465:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806fffffff000000; valaddr_reg:x3; val_offset:70395*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70395*0 + 3*425*FLEN/8, x4, x1, x2)

inst_23466:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806fffffff800000; valaddr_reg:x3; val_offset:70398*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70398*0 + 3*426*FLEN/8, x4, x1, x2)

inst_23467:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806fffffffc00000; valaddr_reg:x3; val_offset:70401*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70401*0 + 3*427*FLEN/8, x4, x1, x2)

inst_23468:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806fffffffe00000; valaddr_reg:x3; val_offset:70404*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70404*0 + 3*428*FLEN/8, x4, x1, x2)

inst_23469:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806ffffffff00000; valaddr_reg:x3; val_offset:70407*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70407*0 + 3*429*FLEN/8, x4, x1, x2)

inst_23470:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806ffffffff80000; valaddr_reg:x3; val_offset:70410*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70410*0 + 3*430*FLEN/8, x4, x1, x2)

inst_23471:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806ffffffffc0000; valaddr_reg:x3; val_offset:70413*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70413*0 + 3*431*FLEN/8, x4, x1, x2)

inst_23472:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806ffffffffe0000; valaddr_reg:x3; val_offset:70416*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70416*0 + 3*432*FLEN/8, x4, x1, x2)

inst_23473:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806fffffffff0000; valaddr_reg:x3; val_offset:70419*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70419*0 + 3*433*FLEN/8, x4, x1, x2)

inst_23474:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806fffffffff8000; valaddr_reg:x3; val_offset:70422*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70422*0 + 3*434*FLEN/8, x4, x1, x2)

inst_23475:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806fffffffffc000; valaddr_reg:x3; val_offset:70425*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70425*0 + 3*435*FLEN/8, x4, x1, x2)

inst_23476:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806fffffffffe000; valaddr_reg:x3; val_offset:70428*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70428*0 + 3*436*FLEN/8, x4, x1, x2)

inst_23477:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806ffffffffff000; valaddr_reg:x3; val_offset:70431*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70431*0 + 3*437*FLEN/8, x4, x1, x2)

inst_23478:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806ffffffffff800; valaddr_reg:x3; val_offset:70434*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70434*0 + 3*438*FLEN/8, x4, x1, x2)

inst_23479:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806ffffffffffc00; valaddr_reg:x3; val_offset:70437*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70437*0 + 3*439*FLEN/8, x4, x1, x2)

inst_23480:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806ffffffffffe00; valaddr_reg:x3; val_offset:70440*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70440*0 + 3*440*FLEN/8, x4, x1, x2)

inst_23481:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806fffffffffff00; valaddr_reg:x3; val_offset:70443*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70443*0 + 3*441*FLEN/8, x4, x1, x2)

inst_23482:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806fffffffffff80; valaddr_reg:x3; val_offset:70446*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70446*0 + 3*442*FLEN/8, x4, x1, x2)

inst_23483:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806fffffffffffc0; valaddr_reg:x3; val_offset:70449*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70449*0 + 3*443*FLEN/8, x4, x1, x2)

inst_23484:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806fffffffffffe0; valaddr_reg:x3; val_offset:70452*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70452*0 + 3*444*FLEN/8, x4, x1, x2)

inst_23485:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806ffffffffffff0; valaddr_reg:x3; val_offset:70455*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70455*0 + 3*445*FLEN/8, x4, x1, x2)

inst_23486:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806ffffffffffff8; valaddr_reg:x3; val_offset:70458*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70458*0 + 3*446*FLEN/8, x4, x1, x2)

inst_23487:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806ffffffffffffc; valaddr_reg:x3; val_offset:70461*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70461*0 + 3*447*FLEN/8, x4, x1, x2)

inst_23488:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806ffffffffffffe; valaddr_reg:x3; val_offset:70464*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70464*0 + 3*448*FLEN/8, x4, x1, x2)

inst_23489:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf68f0780b37ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f68f0780b37ff; op2val:0x8000;
op3val:0x806fffffffffffff; valaddr_reg:x3; val_offset:70467*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70467*0 + 3*449*FLEN/8, x4, x1, x2)

inst_23490:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:70470*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70470*0 + 3*450*FLEN/8, x4, x1, x2)

inst_23491:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:70473*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70473*0 + 3*451*FLEN/8, x4, x1, x2)

inst_23492:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:70476*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70476*0 + 3*452*FLEN/8, x4, x1, x2)

inst_23493:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:70479*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70479*0 + 3*453*FLEN/8, x4, x1, x2)

inst_23494:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:70482*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70482*0 + 3*454*FLEN/8, x4, x1, x2)

inst_23495:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:70485*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70485*0 + 3*455*FLEN/8, x4, x1, x2)

inst_23496:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:70488*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70488*0 + 3*456*FLEN/8, x4, x1, x2)

inst_23497:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:70491*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70491*0 + 3*457*FLEN/8, x4, x1, x2)

inst_23498:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:70494*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70494*0 + 3*458*FLEN/8, x4, x1, x2)

inst_23499:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:70497*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70497*0 + 3*459*FLEN/8, x4, x1, x2)

inst_23500:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:70500*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70500*0 + 3*460*FLEN/8, x4, x1, x2)

inst_23501:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:70503*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70503*0 + 3*461*FLEN/8, x4, x1, x2)

inst_23502:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:70506*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70506*0 + 3*462*FLEN/8, x4, x1, x2)

inst_23503:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:70509*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70509*0 + 3*463*FLEN/8, x4, x1, x2)

inst_23504:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:70512*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70512*0 + 3*464*FLEN/8, x4, x1, x2)

inst_23505:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:70515*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70515*0 + 3*465*FLEN/8, x4, x1, x2)

inst_23506:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:70518*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70518*0 + 3*466*FLEN/8, x4, x1, x2)

inst_23507:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:70521*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70521*0 + 3*467*FLEN/8, x4, x1, x2)

inst_23508:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:70524*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70524*0 + 3*468*FLEN/8, x4, x1, x2)

inst_23509:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:70527*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70527*0 + 3*469*FLEN/8, x4, x1, x2)

inst_23510:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:70530*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70530*0 + 3*470*FLEN/8, x4, x1, x2)

inst_23511:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:70533*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70533*0 + 3*471*FLEN/8, x4, x1, x2)

inst_23512:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x160000000000000; valaddr_reg:x3; val_offset:70536*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70536*0 + 3*472*FLEN/8, x4, x1, x2)

inst_23513:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x160000000000001; valaddr_reg:x3; val_offset:70539*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70539*0 + 3*473*FLEN/8, x4, x1, x2)

inst_23514:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x160000000000003; valaddr_reg:x3; val_offset:70542*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70542*0 + 3*474*FLEN/8, x4, x1, x2)

inst_23515:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x160000000000007; valaddr_reg:x3; val_offset:70545*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70545*0 + 3*475*FLEN/8, x4, x1, x2)

inst_23516:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16000000000000f; valaddr_reg:x3; val_offset:70548*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70548*0 + 3*476*FLEN/8, x4, x1, x2)

inst_23517:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16000000000001f; valaddr_reg:x3; val_offset:70551*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70551*0 + 3*477*FLEN/8, x4, x1, x2)

inst_23518:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16000000000003f; valaddr_reg:x3; val_offset:70554*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70554*0 + 3*478*FLEN/8, x4, x1, x2)

inst_23519:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16000000000007f; valaddr_reg:x3; val_offset:70557*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70557*0 + 3*479*FLEN/8, x4, x1, x2)

inst_23520:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x1600000000000ff; valaddr_reg:x3; val_offset:70560*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70560*0 + 3*480*FLEN/8, x4, x1, x2)

inst_23521:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x1600000000001ff; valaddr_reg:x3; val_offset:70563*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70563*0 + 3*481*FLEN/8, x4, x1, x2)

inst_23522:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x1600000000003ff; valaddr_reg:x3; val_offset:70566*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70566*0 + 3*482*FLEN/8, x4, x1, x2)

inst_23523:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x1600000000007ff; valaddr_reg:x3; val_offset:70569*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70569*0 + 3*483*FLEN/8, x4, x1, x2)

inst_23524:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x160000000000fff; valaddr_reg:x3; val_offset:70572*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70572*0 + 3*484*FLEN/8, x4, x1, x2)

inst_23525:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x160000000001fff; valaddr_reg:x3; val_offset:70575*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70575*0 + 3*485*FLEN/8, x4, x1, x2)

inst_23526:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x160000000003fff; valaddr_reg:x3; val_offset:70578*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70578*0 + 3*486*FLEN/8, x4, x1, x2)

inst_23527:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x160000000007fff; valaddr_reg:x3; val_offset:70581*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70581*0 + 3*487*FLEN/8, x4, x1, x2)

inst_23528:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16000000000ffff; valaddr_reg:x3; val_offset:70584*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70584*0 + 3*488*FLEN/8, x4, x1, x2)

inst_23529:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16000000001ffff; valaddr_reg:x3; val_offset:70587*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70587*0 + 3*489*FLEN/8, x4, x1, x2)

inst_23530:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16000000003ffff; valaddr_reg:x3; val_offset:70590*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70590*0 + 3*490*FLEN/8, x4, x1, x2)

inst_23531:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16000000007ffff; valaddr_reg:x3; val_offset:70593*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70593*0 + 3*491*FLEN/8, x4, x1, x2)

inst_23532:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x1600000000fffff; valaddr_reg:x3; val_offset:70596*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70596*0 + 3*492*FLEN/8, x4, x1, x2)

inst_23533:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x1600000001fffff; valaddr_reg:x3; val_offset:70599*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70599*0 + 3*493*FLEN/8, x4, x1, x2)

inst_23534:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x1600000003fffff; valaddr_reg:x3; val_offset:70602*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70602*0 + 3*494*FLEN/8, x4, x1, x2)

inst_23535:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x1600000007fffff; valaddr_reg:x3; val_offset:70605*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70605*0 + 3*495*FLEN/8, x4, x1, x2)

inst_23536:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x160000000ffffff; valaddr_reg:x3; val_offset:70608*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70608*0 + 3*496*FLEN/8, x4, x1, x2)

inst_23537:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x160000001ffffff; valaddr_reg:x3; val_offset:70611*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70611*0 + 3*497*FLEN/8, x4, x1, x2)

inst_23538:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x160000003ffffff; valaddr_reg:x3; val_offset:70614*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70614*0 + 3*498*FLEN/8, x4, x1, x2)

inst_23539:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x160000007ffffff; valaddr_reg:x3; val_offset:70617*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70617*0 + 3*499*FLEN/8, x4, x1, x2)

inst_23540:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16000000fffffff; valaddr_reg:x3; val_offset:70620*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70620*0 + 3*500*FLEN/8, x4, x1, x2)

inst_23541:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16000001fffffff; valaddr_reg:x3; val_offset:70623*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70623*0 + 3*501*FLEN/8, x4, x1, x2)

inst_23542:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16000003fffffff; valaddr_reg:x3; val_offset:70626*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70626*0 + 3*502*FLEN/8, x4, x1, x2)

inst_23543:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16000007fffffff; valaddr_reg:x3; val_offset:70629*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70629*0 + 3*503*FLEN/8, x4, x1, x2)

inst_23544:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x1600000ffffffff; valaddr_reg:x3; val_offset:70632*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70632*0 + 3*504*FLEN/8, x4, x1, x2)

inst_23545:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x1600001ffffffff; valaddr_reg:x3; val_offset:70635*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70635*0 + 3*505*FLEN/8, x4, x1, x2)

inst_23546:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x1600003ffffffff; valaddr_reg:x3; val_offset:70638*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70638*0 + 3*506*FLEN/8, x4, x1, x2)

inst_23547:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x1600007ffffffff; valaddr_reg:x3; val_offset:70641*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70641*0 + 3*507*FLEN/8, x4, x1, x2)

inst_23548:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x160000fffffffff; valaddr_reg:x3; val_offset:70644*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70644*0 + 3*508*FLEN/8, x4, x1, x2)

inst_23549:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x160001fffffffff; valaddr_reg:x3; val_offset:70647*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70647*0 + 3*509*FLEN/8, x4, x1, x2)

inst_23550:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x160003fffffffff; valaddr_reg:x3; val_offset:70650*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70650*0 + 3*510*FLEN/8, x4, x1, x2)

inst_23551:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x160007fffffffff; valaddr_reg:x3; val_offset:70653*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70653*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_23552:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16000ffffffffff; valaddr_reg:x3; val_offset:70656*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70656*0 + 3*512*FLEN/8, x4, x1, x2)

inst_23553:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16001ffffffffff; valaddr_reg:x3; val_offset:70659*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70659*0 + 3*513*FLEN/8, x4, x1, x2)

inst_23554:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16003ffffffffff; valaddr_reg:x3; val_offset:70662*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70662*0 + 3*514*FLEN/8, x4, x1, x2)

inst_23555:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16007ffffffffff; valaddr_reg:x3; val_offset:70665*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70665*0 + 3*515*FLEN/8, x4, x1, x2)

inst_23556:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x1600fffffffffff; valaddr_reg:x3; val_offset:70668*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70668*0 + 3*516*FLEN/8, x4, x1, x2)

inst_23557:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x1601fffffffffff; valaddr_reg:x3; val_offset:70671*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70671*0 + 3*517*FLEN/8, x4, x1, x2)

inst_23558:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x1603fffffffffff; valaddr_reg:x3; val_offset:70674*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70674*0 + 3*518*FLEN/8, x4, x1, x2)

inst_23559:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x1607fffffffffff; valaddr_reg:x3; val_offset:70677*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70677*0 + 3*519*FLEN/8, x4, x1, x2)

inst_23560:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x160ffffffffffff; valaddr_reg:x3; val_offset:70680*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70680*0 + 3*520*FLEN/8, x4, x1, x2)

inst_23561:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x161ffffffffffff; valaddr_reg:x3; val_offset:70683*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70683*0 + 3*521*FLEN/8, x4, x1, x2)

inst_23562:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x163ffffffffffff; valaddr_reg:x3; val_offset:70686*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70686*0 + 3*522*FLEN/8, x4, x1, x2)

inst_23563:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x167ffffffffffff; valaddr_reg:x3; val_offset:70689*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70689*0 + 3*523*FLEN/8, x4, x1, x2)

inst_23564:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x168000000000000; valaddr_reg:x3; val_offset:70692*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70692*0 + 3*524*FLEN/8, x4, x1, x2)

inst_23565:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16c000000000000; valaddr_reg:x3; val_offset:70695*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70695*0 + 3*525*FLEN/8, x4, x1, x2)

inst_23566:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16e000000000000; valaddr_reg:x3; val_offset:70698*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70698*0 + 3*526*FLEN/8, x4, x1, x2)

inst_23567:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16f000000000000; valaddr_reg:x3; val_offset:70701*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70701*0 + 3*527*FLEN/8, x4, x1, x2)

inst_23568:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16f800000000000; valaddr_reg:x3; val_offset:70704*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70704*0 + 3*528*FLEN/8, x4, x1, x2)

inst_23569:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16fc00000000000; valaddr_reg:x3; val_offset:70707*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70707*0 + 3*529*FLEN/8, x4, x1, x2)

inst_23570:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16fe00000000000; valaddr_reg:x3; val_offset:70710*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70710*0 + 3*530*FLEN/8, x4, x1, x2)

inst_23571:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16ff00000000000; valaddr_reg:x3; val_offset:70713*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70713*0 + 3*531*FLEN/8, x4, x1, x2)

inst_23572:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16ff80000000000; valaddr_reg:x3; val_offset:70716*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70716*0 + 3*532*FLEN/8, x4, x1, x2)

inst_23573:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16ffc0000000000; valaddr_reg:x3; val_offset:70719*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70719*0 + 3*533*FLEN/8, x4, x1, x2)

inst_23574:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16ffe0000000000; valaddr_reg:x3; val_offset:70722*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70722*0 + 3*534*FLEN/8, x4, x1, x2)

inst_23575:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16fff0000000000; valaddr_reg:x3; val_offset:70725*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70725*0 + 3*535*FLEN/8, x4, x1, x2)

inst_23576:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16fff8000000000; valaddr_reg:x3; val_offset:70728*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70728*0 + 3*536*FLEN/8, x4, x1, x2)

inst_23577:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16fffc000000000; valaddr_reg:x3; val_offset:70731*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70731*0 + 3*537*FLEN/8, x4, x1, x2)

inst_23578:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16fffe000000000; valaddr_reg:x3; val_offset:70734*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70734*0 + 3*538*FLEN/8, x4, x1, x2)

inst_23579:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16ffff000000000; valaddr_reg:x3; val_offset:70737*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70737*0 + 3*539*FLEN/8, x4, x1, x2)

inst_23580:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16ffff800000000; valaddr_reg:x3; val_offset:70740*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70740*0 + 3*540*FLEN/8, x4, x1, x2)

inst_23581:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16ffffc00000000; valaddr_reg:x3; val_offset:70743*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70743*0 + 3*541*FLEN/8, x4, x1, x2)

inst_23582:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16ffffe00000000; valaddr_reg:x3; val_offset:70746*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70746*0 + 3*542*FLEN/8, x4, x1, x2)

inst_23583:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16fffff00000000; valaddr_reg:x3; val_offset:70749*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70749*0 + 3*543*FLEN/8, x4, x1, x2)

inst_23584:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16fffff80000000; valaddr_reg:x3; val_offset:70752*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70752*0 + 3*544*FLEN/8, x4, x1, x2)

inst_23585:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16fffffc0000000; valaddr_reg:x3; val_offset:70755*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70755*0 + 3*545*FLEN/8, x4, x1, x2)

inst_23586:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16fffffe0000000; valaddr_reg:x3; val_offset:70758*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70758*0 + 3*546*FLEN/8, x4, x1, x2)

inst_23587:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16ffffff0000000; valaddr_reg:x3; val_offset:70761*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70761*0 + 3*547*FLEN/8, x4, x1, x2)

inst_23588:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16ffffff8000000; valaddr_reg:x3; val_offset:70764*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70764*0 + 3*548*FLEN/8, x4, x1, x2)

inst_23589:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16ffffffc000000; valaddr_reg:x3; val_offset:70767*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70767*0 + 3*549*FLEN/8, x4, x1, x2)

inst_23590:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16ffffffe000000; valaddr_reg:x3; val_offset:70770*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70770*0 + 3*550*FLEN/8, x4, x1, x2)

inst_23591:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16fffffff000000; valaddr_reg:x3; val_offset:70773*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70773*0 + 3*551*FLEN/8, x4, x1, x2)

inst_23592:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16fffffff800000; valaddr_reg:x3; val_offset:70776*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70776*0 + 3*552*FLEN/8, x4, x1, x2)

inst_23593:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16fffffffc00000; valaddr_reg:x3; val_offset:70779*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70779*0 + 3*553*FLEN/8, x4, x1, x2)

inst_23594:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16fffffffe00000; valaddr_reg:x3; val_offset:70782*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70782*0 + 3*554*FLEN/8, x4, x1, x2)

inst_23595:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16ffffffff00000; valaddr_reg:x3; val_offset:70785*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70785*0 + 3*555*FLEN/8, x4, x1, x2)

inst_23596:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16ffffffff80000; valaddr_reg:x3; val_offset:70788*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70788*0 + 3*556*FLEN/8, x4, x1, x2)

inst_23597:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16ffffffffc0000; valaddr_reg:x3; val_offset:70791*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70791*0 + 3*557*FLEN/8, x4, x1, x2)

inst_23598:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16ffffffffe0000; valaddr_reg:x3; val_offset:70794*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70794*0 + 3*558*FLEN/8, x4, x1, x2)

inst_23599:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16fffffffff0000; valaddr_reg:x3; val_offset:70797*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70797*0 + 3*559*FLEN/8, x4, x1, x2)

inst_23600:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16fffffffff8000; valaddr_reg:x3; val_offset:70800*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70800*0 + 3*560*FLEN/8, x4, x1, x2)

inst_23601:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16fffffffffc000; valaddr_reg:x3; val_offset:70803*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70803*0 + 3*561*FLEN/8, x4, x1, x2)

inst_23602:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16fffffffffe000; valaddr_reg:x3; val_offset:70806*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70806*0 + 3*562*FLEN/8, x4, x1, x2)

inst_23603:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16ffffffffff000; valaddr_reg:x3; val_offset:70809*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70809*0 + 3*563*FLEN/8, x4, x1, x2)

inst_23604:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16ffffffffff800; valaddr_reg:x3; val_offset:70812*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70812*0 + 3*564*FLEN/8, x4, x1, x2)

inst_23605:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16ffffffffffc00; valaddr_reg:x3; val_offset:70815*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70815*0 + 3*565*FLEN/8, x4, x1, x2)

inst_23606:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16ffffffffffe00; valaddr_reg:x3; val_offset:70818*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70818*0 + 3*566*FLEN/8, x4, x1, x2)

inst_23607:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16fffffffffff00; valaddr_reg:x3; val_offset:70821*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70821*0 + 3*567*FLEN/8, x4, x1, x2)

inst_23608:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16fffffffffff80; valaddr_reg:x3; val_offset:70824*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70824*0 + 3*568*FLEN/8, x4, x1, x2)

inst_23609:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16fffffffffffc0; valaddr_reg:x3; val_offset:70827*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70827*0 + 3*569*FLEN/8, x4, x1, x2)

inst_23610:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16fffffffffffe0; valaddr_reg:x3; val_offset:70830*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70830*0 + 3*570*FLEN/8, x4, x1, x2)

inst_23611:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16ffffffffffff0; valaddr_reg:x3; val_offset:70833*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70833*0 + 3*571*FLEN/8, x4, x1, x2)

inst_23612:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16ffffffffffff8; valaddr_reg:x3; val_offset:70836*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70836*0 + 3*572*FLEN/8, x4, x1, x2)

inst_23613:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16ffffffffffffc; valaddr_reg:x3; val_offset:70839*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70839*0 + 3*573*FLEN/8, x4, x1, x2)

inst_23614:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16ffffffffffffe; valaddr_reg:x3; val_offset:70842*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70842*0 + 3*574*FLEN/8, x4, x1, x2)

inst_23615:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf6a1d50f68397 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f6a1d50f68397; op2val:0x0;
op3val:0x16fffffffffffff; valaddr_reg:x3; val_offset:70845*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70845*0 + 3*575*FLEN/8, x4, x1, x2)

inst_23616:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb970000000000000; valaddr_reg:x3; val_offset:70848*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70848*0 + 3*576*FLEN/8, x4, x1, x2)

inst_23617:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb970000000000001; valaddr_reg:x3; val_offset:70851*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70851*0 + 3*577*FLEN/8, x4, x1, x2)

inst_23618:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb970000000000003; valaddr_reg:x3; val_offset:70854*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70854*0 + 3*578*FLEN/8, x4, x1, x2)

inst_23619:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb970000000000007; valaddr_reg:x3; val_offset:70857*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70857*0 + 3*579*FLEN/8, x4, x1, x2)

inst_23620:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97000000000000f; valaddr_reg:x3; val_offset:70860*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70860*0 + 3*580*FLEN/8, x4, x1, x2)

inst_23621:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97000000000001f; valaddr_reg:x3; val_offset:70863*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70863*0 + 3*581*FLEN/8, x4, x1, x2)

inst_23622:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97000000000003f; valaddr_reg:x3; val_offset:70866*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70866*0 + 3*582*FLEN/8, x4, x1, x2)

inst_23623:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97000000000007f; valaddr_reg:x3; val_offset:70869*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70869*0 + 3*583*FLEN/8, x4, x1, x2)

inst_23624:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb9700000000000ff; valaddr_reg:x3; val_offset:70872*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70872*0 + 3*584*FLEN/8, x4, x1, x2)

inst_23625:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb9700000000001ff; valaddr_reg:x3; val_offset:70875*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70875*0 + 3*585*FLEN/8, x4, x1, x2)

inst_23626:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb9700000000003ff; valaddr_reg:x3; val_offset:70878*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70878*0 + 3*586*FLEN/8, x4, x1, x2)

inst_23627:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb9700000000007ff; valaddr_reg:x3; val_offset:70881*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70881*0 + 3*587*FLEN/8, x4, x1, x2)

inst_23628:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb970000000000fff; valaddr_reg:x3; val_offset:70884*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70884*0 + 3*588*FLEN/8, x4, x1, x2)

inst_23629:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb970000000001fff; valaddr_reg:x3; val_offset:70887*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70887*0 + 3*589*FLEN/8, x4, x1, x2)

inst_23630:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb970000000003fff; valaddr_reg:x3; val_offset:70890*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70890*0 + 3*590*FLEN/8, x4, x1, x2)

inst_23631:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb970000000007fff; valaddr_reg:x3; val_offset:70893*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70893*0 + 3*591*FLEN/8, x4, x1, x2)

inst_23632:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97000000000ffff; valaddr_reg:x3; val_offset:70896*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70896*0 + 3*592*FLEN/8, x4, x1, x2)

inst_23633:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97000000001ffff; valaddr_reg:x3; val_offset:70899*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70899*0 + 3*593*FLEN/8, x4, x1, x2)

inst_23634:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97000000003ffff; valaddr_reg:x3; val_offset:70902*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70902*0 + 3*594*FLEN/8, x4, x1, x2)

inst_23635:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97000000007ffff; valaddr_reg:x3; val_offset:70905*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70905*0 + 3*595*FLEN/8, x4, x1, x2)

inst_23636:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb9700000000fffff; valaddr_reg:x3; val_offset:70908*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70908*0 + 3*596*FLEN/8, x4, x1, x2)

inst_23637:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb9700000001fffff; valaddr_reg:x3; val_offset:70911*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70911*0 + 3*597*FLEN/8, x4, x1, x2)

inst_23638:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb9700000003fffff; valaddr_reg:x3; val_offset:70914*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70914*0 + 3*598*FLEN/8, x4, x1, x2)

inst_23639:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb9700000007fffff; valaddr_reg:x3; val_offset:70917*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70917*0 + 3*599*FLEN/8, x4, x1, x2)

inst_23640:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb970000000ffffff; valaddr_reg:x3; val_offset:70920*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70920*0 + 3*600*FLEN/8, x4, x1, x2)

inst_23641:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb970000001ffffff; valaddr_reg:x3; val_offset:70923*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70923*0 + 3*601*FLEN/8, x4, x1, x2)

inst_23642:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb970000003ffffff; valaddr_reg:x3; val_offset:70926*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70926*0 + 3*602*FLEN/8, x4, x1, x2)

inst_23643:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb970000007ffffff; valaddr_reg:x3; val_offset:70929*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70929*0 + 3*603*FLEN/8, x4, x1, x2)

inst_23644:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97000000fffffff; valaddr_reg:x3; val_offset:70932*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70932*0 + 3*604*FLEN/8, x4, x1, x2)

inst_23645:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97000001fffffff; valaddr_reg:x3; val_offset:70935*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70935*0 + 3*605*FLEN/8, x4, x1, x2)

inst_23646:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97000003fffffff; valaddr_reg:x3; val_offset:70938*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70938*0 + 3*606*FLEN/8, x4, x1, x2)

inst_23647:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97000007fffffff; valaddr_reg:x3; val_offset:70941*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70941*0 + 3*607*FLEN/8, x4, x1, x2)

inst_23648:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb9700000ffffffff; valaddr_reg:x3; val_offset:70944*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70944*0 + 3*608*FLEN/8, x4, x1, x2)

inst_23649:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb9700001ffffffff; valaddr_reg:x3; val_offset:70947*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70947*0 + 3*609*FLEN/8, x4, x1, x2)

inst_23650:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb9700003ffffffff; valaddr_reg:x3; val_offset:70950*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70950*0 + 3*610*FLEN/8, x4, x1, x2)

inst_23651:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb9700007ffffffff; valaddr_reg:x3; val_offset:70953*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70953*0 + 3*611*FLEN/8, x4, x1, x2)

inst_23652:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb970000fffffffff; valaddr_reg:x3; val_offset:70956*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70956*0 + 3*612*FLEN/8, x4, x1, x2)

inst_23653:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb970001fffffffff; valaddr_reg:x3; val_offset:70959*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70959*0 + 3*613*FLEN/8, x4, x1, x2)

inst_23654:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb970003fffffffff; valaddr_reg:x3; val_offset:70962*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70962*0 + 3*614*FLEN/8, x4, x1, x2)

inst_23655:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb970007fffffffff; valaddr_reg:x3; val_offset:70965*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70965*0 + 3*615*FLEN/8, x4, x1, x2)

inst_23656:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97000ffffffffff; valaddr_reg:x3; val_offset:70968*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70968*0 + 3*616*FLEN/8, x4, x1, x2)

inst_23657:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97001ffffffffff; valaddr_reg:x3; val_offset:70971*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70971*0 + 3*617*FLEN/8, x4, x1, x2)

inst_23658:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97003ffffffffff; valaddr_reg:x3; val_offset:70974*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70974*0 + 3*618*FLEN/8, x4, x1, x2)

inst_23659:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97007ffffffffff; valaddr_reg:x3; val_offset:70977*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70977*0 + 3*619*FLEN/8, x4, x1, x2)

inst_23660:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb9700fffffffffff; valaddr_reg:x3; val_offset:70980*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70980*0 + 3*620*FLEN/8, x4, x1, x2)

inst_23661:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb9701fffffffffff; valaddr_reg:x3; val_offset:70983*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70983*0 + 3*621*FLEN/8, x4, x1, x2)

inst_23662:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb9703fffffffffff; valaddr_reg:x3; val_offset:70986*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70986*0 + 3*622*FLEN/8, x4, x1, x2)

inst_23663:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb9707fffffffffff; valaddr_reg:x3; val_offset:70989*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70989*0 + 3*623*FLEN/8, x4, x1, x2)

inst_23664:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb970ffffffffffff; valaddr_reg:x3; val_offset:70992*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70992*0 + 3*624*FLEN/8, x4, x1, x2)

inst_23665:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb971ffffffffffff; valaddr_reg:x3; val_offset:70995*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70995*0 + 3*625*FLEN/8, x4, x1, x2)

inst_23666:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb973ffffffffffff; valaddr_reg:x3; val_offset:70998*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 70998*0 + 3*626*FLEN/8, x4, x1, x2)

inst_23667:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb977ffffffffffff; valaddr_reg:x3; val_offset:71001*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71001*0 + 3*627*FLEN/8, x4, x1, x2)

inst_23668:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb978000000000000; valaddr_reg:x3; val_offset:71004*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71004*0 + 3*628*FLEN/8, x4, x1, x2)

inst_23669:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97c000000000000; valaddr_reg:x3; val_offset:71007*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71007*0 + 3*629*FLEN/8, x4, x1, x2)

inst_23670:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97e000000000000; valaddr_reg:x3; val_offset:71010*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71010*0 + 3*630*FLEN/8, x4, x1, x2)

inst_23671:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97f000000000000; valaddr_reg:x3; val_offset:71013*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71013*0 + 3*631*FLEN/8, x4, x1, x2)

inst_23672:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97f800000000000; valaddr_reg:x3; val_offset:71016*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71016*0 + 3*632*FLEN/8, x4, x1, x2)

inst_23673:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97fc00000000000; valaddr_reg:x3; val_offset:71019*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71019*0 + 3*633*FLEN/8, x4, x1, x2)

inst_23674:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97fe00000000000; valaddr_reg:x3; val_offset:71022*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71022*0 + 3*634*FLEN/8, x4, x1, x2)

inst_23675:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97ff00000000000; valaddr_reg:x3; val_offset:71025*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71025*0 + 3*635*FLEN/8, x4, x1, x2)

inst_23676:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97ff80000000000; valaddr_reg:x3; val_offset:71028*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71028*0 + 3*636*FLEN/8, x4, x1, x2)

inst_23677:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97ffc0000000000; valaddr_reg:x3; val_offset:71031*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71031*0 + 3*637*FLEN/8, x4, x1, x2)

inst_23678:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97ffe0000000000; valaddr_reg:x3; val_offset:71034*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71034*0 + 3*638*FLEN/8, x4, x1, x2)

inst_23679:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97fff0000000000; valaddr_reg:x3; val_offset:71037*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71037*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_23680:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97fff8000000000; valaddr_reg:x3; val_offset:71040*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71040*0 + 3*640*FLEN/8, x4, x1, x2)

inst_23681:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97fffc000000000; valaddr_reg:x3; val_offset:71043*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71043*0 + 3*641*FLEN/8, x4, x1, x2)

inst_23682:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97fffe000000000; valaddr_reg:x3; val_offset:71046*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71046*0 + 3*642*FLEN/8, x4, x1, x2)

inst_23683:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97ffff000000000; valaddr_reg:x3; val_offset:71049*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71049*0 + 3*643*FLEN/8, x4, x1, x2)

inst_23684:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97ffff800000000; valaddr_reg:x3; val_offset:71052*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71052*0 + 3*644*FLEN/8, x4, x1, x2)

inst_23685:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97ffffc00000000; valaddr_reg:x3; val_offset:71055*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71055*0 + 3*645*FLEN/8, x4, x1, x2)

inst_23686:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97ffffe00000000; valaddr_reg:x3; val_offset:71058*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71058*0 + 3*646*FLEN/8, x4, x1, x2)

inst_23687:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97fffff00000000; valaddr_reg:x3; val_offset:71061*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71061*0 + 3*647*FLEN/8, x4, x1, x2)

inst_23688:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97fffff80000000; valaddr_reg:x3; val_offset:71064*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71064*0 + 3*648*FLEN/8, x4, x1, x2)

inst_23689:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97fffffc0000000; valaddr_reg:x3; val_offset:71067*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71067*0 + 3*649*FLEN/8, x4, x1, x2)

inst_23690:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97fffffe0000000; valaddr_reg:x3; val_offset:71070*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71070*0 + 3*650*FLEN/8, x4, x1, x2)

inst_23691:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97ffffff0000000; valaddr_reg:x3; val_offset:71073*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71073*0 + 3*651*FLEN/8, x4, x1, x2)

inst_23692:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97ffffff8000000; valaddr_reg:x3; val_offset:71076*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71076*0 + 3*652*FLEN/8, x4, x1, x2)

inst_23693:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97ffffffc000000; valaddr_reg:x3; val_offset:71079*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71079*0 + 3*653*FLEN/8, x4, x1, x2)

inst_23694:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97ffffffe000000; valaddr_reg:x3; val_offset:71082*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71082*0 + 3*654*FLEN/8, x4, x1, x2)

inst_23695:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97fffffff000000; valaddr_reg:x3; val_offset:71085*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71085*0 + 3*655*FLEN/8, x4, x1, x2)

inst_23696:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97fffffff800000; valaddr_reg:x3; val_offset:71088*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71088*0 + 3*656*FLEN/8, x4, x1, x2)

inst_23697:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97fffffffc00000; valaddr_reg:x3; val_offset:71091*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71091*0 + 3*657*FLEN/8, x4, x1, x2)

inst_23698:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97fffffffe00000; valaddr_reg:x3; val_offset:71094*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71094*0 + 3*658*FLEN/8, x4, x1, x2)

inst_23699:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97ffffffff00000; valaddr_reg:x3; val_offset:71097*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71097*0 + 3*659*FLEN/8, x4, x1, x2)

inst_23700:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97ffffffff80000; valaddr_reg:x3; val_offset:71100*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71100*0 + 3*660*FLEN/8, x4, x1, x2)

inst_23701:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97ffffffffc0000; valaddr_reg:x3; val_offset:71103*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71103*0 + 3*661*FLEN/8, x4, x1, x2)

inst_23702:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97ffffffffe0000; valaddr_reg:x3; val_offset:71106*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71106*0 + 3*662*FLEN/8, x4, x1, x2)

inst_23703:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97fffffffff0000; valaddr_reg:x3; val_offset:71109*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71109*0 + 3*663*FLEN/8, x4, x1, x2)

inst_23704:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97fffffffff8000; valaddr_reg:x3; val_offset:71112*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71112*0 + 3*664*FLEN/8, x4, x1, x2)

inst_23705:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97fffffffffc000; valaddr_reg:x3; val_offset:71115*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71115*0 + 3*665*FLEN/8, x4, x1, x2)

inst_23706:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97fffffffffe000; valaddr_reg:x3; val_offset:71118*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71118*0 + 3*666*FLEN/8, x4, x1, x2)

inst_23707:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97ffffffffff000; valaddr_reg:x3; val_offset:71121*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71121*0 + 3*667*FLEN/8, x4, x1, x2)

inst_23708:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97ffffffffff800; valaddr_reg:x3; val_offset:71124*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71124*0 + 3*668*FLEN/8, x4, x1, x2)

inst_23709:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97ffffffffffc00; valaddr_reg:x3; val_offset:71127*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71127*0 + 3*669*FLEN/8, x4, x1, x2)

inst_23710:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97ffffffffffe00; valaddr_reg:x3; val_offset:71130*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71130*0 + 3*670*FLEN/8, x4, x1, x2)

inst_23711:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97fffffffffff00; valaddr_reg:x3; val_offset:71133*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71133*0 + 3*671*FLEN/8, x4, x1, x2)

inst_23712:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97fffffffffff80; valaddr_reg:x3; val_offset:71136*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71136*0 + 3*672*FLEN/8, x4, x1, x2)

inst_23713:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97fffffffffffc0; valaddr_reg:x3; val_offset:71139*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71139*0 + 3*673*FLEN/8, x4, x1, x2)

inst_23714:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97fffffffffffe0; valaddr_reg:x3; val_offset:71142*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71142*0 + 3*674*FLEN/8, x4, x1, x2)

inst_23715:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97ffffffffffff0; valaddr_reg:x3; val_offset:71145*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71145*0 + 3*675*FLEN/8, x4, x1, x2)

inst_23716:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97ffffffffffff8; valaddr_reg:x3; val_offset:71148*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71148*0 + 3*676*FLEN/8, x4, x1, x2)

inst_23717:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97ffffffffffffc; valaddr_reg:x3; val_offset:71151*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71151*0 + 3*677*FLEN/8, x4, x1, x2)

inst_23718:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97ffffffffffffe; valaddr_reg:x3; val_offset:71154*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71154*0 + 3*678*FLEN/8, x4, x1, x2)

inst_23719:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xb97fffffffffffff; valaddr_reg:x3; val_offset:71157*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71157*0 + 3*679*FLEN/8, x4, x1, x2)

inst_23720:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:71160*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71160*0 + 3*680*FLEN/8, x4, x1, x2)

inst_23721:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:71163*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71163*0 + 3*681*FLEN/8, x4, x1, x2)

inst_23722:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:71166*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71166*0 + 3*682*FLEN/8, x4, x1, x2)

inst_23723:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:71169*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71169*0 + 3*683*FLEN/8, x4, x1, x2)

inst_23724:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:71172*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71172*0 + 3*684*FLEN/8, x4, x1, x2)

inst_23725:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:71175*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71175*0 + 3*685*FLEN/8, x4, x1, x2)

inst_23726:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:71178*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71178*0 + 3*686*FLEN/8, x4, x1, x2)

inst_23727:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:71181*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71181*0 + 3*687*FLEN/8, x4, x1, x2)

inst_23728:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:71184*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71184*0 + 3*688*FLEN/8, x4, x1, x2)

inst_23729:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:71187*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71187*0 + 3*689*FLEN/8, x4, x1, x2)

inst_23730:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:71190*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71190*0 + 3*690*FLEN/8, x4, x1, x2)

inst_23731:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:71193*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71193*0 + 3*691*FLEN/8, x4, x1, x2)

inst_23732:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:71196*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71196*0 + 3*692*FLEN/8, x4, x1, x2)

inst_23733:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:71199*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71199*0 + 3*693*FLEN/8, x4, x1, x2)

inst_23734:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:71202*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71202*0 + 3*694*FLEN/8, x4, x1, x2)

inst_23735:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:71205*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71205*0 + 3*695*FLEN/8, x4, x1, x2)

inst_23736:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:71208*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71208*0 + 3*696*FLEN/8, x4, x1, x2)

inst_23737:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:71211*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71211*0 + 3*697*FLEN/8, x4, x1, x2)

inst_23738:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:71214*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71214*0 + 3*698*FLEN/8, x4, x1, x2)

inst_23739:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:71217*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71217*0 + 3*699*FLEN/8, x4, x1, x2)

inst_23740:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:71220*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71220*0 + 3*700*FLEN/8, x4, x1, x2)

inst_23741:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf896b45c47573 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x03c294d06f328 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8f896b45c47573; op2val:0x9fe03c294d06f328;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:71223*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71223*0 + 3*701*FLEN/8, x4, x1, x2)

inst_23742:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:71226*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71226*0 + 3*702*FLEN/8, x4, x1, x2)

inst_23743:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:71229*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71229*0 + 3*703*FLEN/8, x4, x1, x2)

inst_23744:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:71232*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71232*0 + 3*704*FLEN/8, x4, x1, x2)

inst_23745:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:71235*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71235*0 + 3*705*FLEN/8, x4, x1, x2)

inst_23746:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:71238*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71238*0 + 3*706*FLEN/8, x4, x1, x2)

inst_23747:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:71241*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71241*0 + 3*707*FLEN/8, x4, x1, x2)

inst_23748:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:71244*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71244*0 + 3*708*FLEN/8, x4, x1, x2)

inst_23749:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:71247*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71247*0 + 3*709*FLEN/8, x4, x1, x2)

inst_23750:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:71250*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71250*0 + 3*710*FLEN/8, x4, x1, x2)

inst_23751:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:71253*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71253*0 + 3*711*FLEN/8, x4, x1, x2)

inst_23752:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:71256*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71256*0 + 3*712*FLEN/8, x4, x1, x2)

inst_23753:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:71259*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71259*0 + 3*713*FLEN/8, x4, x1, x2)

inst_23754:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:71262*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71262*0 + 3*714*FLEN/8, x4, x1, x2)

inst_23755:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:71265*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71265*0 + 3*715*FLEN/8, x4, x1, x2)

inst_23756:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:71268*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71268*0 + 3*716*FLEN/8, x4, x1, x2)

inst_23757:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:71271*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71271*0 + 3*717*FLEN/8, x4, x1, x2)

inst_23758:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:71274*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71274*0 + 3*718*FLEN/8, x4, x1, x2)

inst_23759:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:71277*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71277*0 + 3*719*FLEN/8, x4, x1, x2)

inst_23760:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:71280*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71280*0 + 3*720*FLEN/8, x4, x1, x2)

inst_23761:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:71283*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71283*0 + 3*721*FLEN/8, x4, x1, x2)

inst_23762:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:71286*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71286*0 + 3*722*FLEN/8, x4, x1, x2)

inst_23763:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:71289*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71289*0 + 3*723*FLEN/8, x4, x1, x2)

inst_23764:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x33c and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x33c0000000000000; valaddr_reg:x3; val_offset:71292*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71292*0 + 3*724*FLEN/8, x4, x1, x2)

inst_23765:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x33c and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x33c0000000000001; valaddr_reg:x3; val_offset:71295*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71295*0 + 3*725*FLEN/8, x4, x1, x2)

inst_23766:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x33c and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x33c0000000000003; valaddr_reg:x3; val_offset:71298*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71298*0 + 3*726*FLEN/8, x4, x1, x2)

inst_23767:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x33c and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x33c0000000000007; valaddr_reg:x3; val_offset:71301*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71301*0 + 3*727*FLEN/8, x4, x1, x2)

inst_23768:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x33c and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x33c000000000000f; valaddr_reg:x3; val_offset:71304*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71304*0 + 3*728*FLEN/8, x4, x1, x2)

inst_23769:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x33c and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x33c000000000001f; valaddr_reg:x3; val_offset:71307*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71307*0 + 3*729*FLEN/8, x4, x1, x2)

inst_23770:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x33c and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x33c000000000003f; valaddr_reg:x3; val_offset:71310*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71310*0 + 3*730*FLEN/8, x4, x1, x2)

inst_23771:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x33c and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x33c000000000007f; valaddr_reg:x3; val_offset:71313*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71313*0 + 3*731*FLEN/8, x4, x1, x2)

inst_23772:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x33c and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x33c00000000000ff; valaddr_reg:x3; val_offset:71316*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71316*0 + 3*732*FLEN/8, x4, x1, x2)

inst_23773:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x33c and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x33c00000000001ff; valaddr_reg:x3; val_offset:71319*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71319*0 + 3*733*FLEN/8, x4, x1, x2)

inst_23774:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x33c and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x33c00000000003ff; valaddr_reg:x3; val_offset:71322*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71322*0 + 3*734*FLEN/8, x4, x1, x2)

inst_23775:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x33c and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x33c00000000007ff; valaddr_reg:x3; val_offset:71325*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71325*0 + 3*735*FLEN/8, x4, x1, x2)

inst_23776:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x33c and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x33c0000000000fff; valaddr_reg:x3; val_offset:71328*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71328*0 + 3*736*FLEN/8, x4, x1, x2)

inst_23777:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x33c and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x33c0000000001fff; valaddr_reg:x3; val_offset:71331*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71331*0 + 3*737*FLEN/8, x4, x1, x2)

inst_23778:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x33c and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x33c0000000003fff; valaddr_reg:x3; val_offset:71334*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71334*0 + 3*738*FLEN/8, x4, x1, x2)

inst_23779:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x33c and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x33c0000000007fff; valaddr_reg:x3; val_offset:71337*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71337*0 + 3*739*FLEN/8, x4, x1, x2)

inst_23780:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x33c and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x33c000000000ffff; valaddr_reg:x3; val_offset:71340*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71340*0 + 3*740*FLEN/8, x4, x1, x2)

inst_23781:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x33c and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x33c000000001ffff; valaddr_reg:x3; val_offset:71343*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71343*0 + 3*741*FLEN/8, x4, x1, x2)

inst_23782:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x33c and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x33c000000003ffff; valaddr_reg:x3; val_offset:71346*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71346*0 + 3*742*FLEN/8, x4, x1, x2)

inst_23783:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x33c and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x33c000000007ffff; valaddr_reg:x3; val_offset:71349*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71349*0 + 3*743*FLEN/8, x4, x1, x2)

inst_23784:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x33c and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x33c00000000fffff; valaddr_reg:x3; val_offset:71352*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71352*0 + 3*744*FLEN/8, x4, x1, x2)

inst_23785:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x33c and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x33c00000001fffff; valaddr_reg:x3; val_offset:71355*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71355*0 + 3*745*FLEN/8, x4, x1, x2)

inst_23786:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x33c and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x33c00000003fffff; valaddr_reg:x3; val_offset:71358*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71358*0 + 3*746*FLEN/8, x4, x1, x2)

inst_23787:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x33c and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x33c00000007fffff; valaddr_reg:x3; val_offset:71361*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71361*0 + 3*747*FLEN/8, x4, x1, x2)

inst_23788:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x33c and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x33c0000000ffffff; valaddr_reg:x3; val_offset:71364*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71364*0 + 3*748*FLEN/8, x4, x1, x2)

inst_23789:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x33c and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x33c0000001ffffff; valaddr_reg:x3; val_offset:71367*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71367*0 + 3*749*FLEN/8, x4, x1, x2)

inst_23790:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x33c and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x33c0000003ffffff; valaddr_reg:x3; val_offset:71370*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71370*0 + 3*750*FLEN/8, x4, x1, x2)

inst_23791:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x33c and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x33c0000007ffffff; valaddr_reg:x3; val_offset:71373*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71373*0 + 3*751*FLEN/8, x4, x1, x2)

inst_23792:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x33c and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x33c000000fffffff; valaddr_reg:x3; val_offset:71376*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71376*0 + 3*752*FLEN/8, x4, x1, x2)

inst_23793:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x33c and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x33c000001fffffff; valaddr_reg:x3; val_offset:71379*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71379*0 + 3*753*FLEN/8, x4, x1, x2)

inst_23794:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x33c and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x33c000003fffffff; valaddr_reg:x3; val_offset:71382*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71382*0 + 3*754*FLEN/8, x4, x1, x2)

inst_23795:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x33c and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x33c000007fffffff; valaddr_reg:x3; val_offset:71385*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71385*0 + 3*755*FLEN/8, x4, x1, x2)

inst_23796:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x33c and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x33c00000ffffffff; valaddr_reg:x3; val_offset:71388*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71388*0 + 3*756*FLEN/8, x4, x1, x2)

inst_23797:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x33c and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x33c00001ffffffff; valaddr_reg:x3; val_offset:71391*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71391*0 + 3*757*FLEN/8, x4, x1, x2)

inst_23798:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x33c and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x33c00003ffffffff; valaddr_reg:x3; val_offset:71394*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71394*0 + 3*758*FLEN/8, x4, x1, x2)

inst_23799:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x33c and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x33c00007ffffffff; valaddr_reg:x3; val_offset:71397*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71397*0 + 3*759*FLEN/8, x4, x1, x2)

inst_23800:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x33c and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x33c0000fffffffff; valaddr_reg:x3; val_offset:71400*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71400*0 + 3*760*FLEN/8, x4, x1, x2)

inst_23801:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x33c and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x33c0001fffffffff; valaddr_reg:x3; val_offset:71403*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71403*0 + 3*761*FLEN/8, x4, x1, x2)

inst_23802:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x33c and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x33c0003fffffffff; valaddr_reg:x3; val_offset:71406*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71406*0 + 3*762*FLEN/8, x4, x1, x2)

inst_23803:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x33c and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x33c0007fffffffff; valaddr_reg:x3; val_offset:71409*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71409*0 + 3*763*FLEN/8, x4, x1, x2)

inst_23804:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x33c and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x33c000ffffffffff; valaddr_reg:x3; val_offset:71412*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71412*0 + 3*764*FLEN/8, x4, x1, x2)

inst_23805:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x33c and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x33c001ffffffffff; valaddr_reg:x3; val_offset:71415*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71415*0 + 3*765*FLEN/8, x4, x1, x2)

inst_23806:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x33c and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x33c003ffffffffff; valaddr_reg:x3; val_offset:71418*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71418*0 + 3*766*FLEN/8, x4, x1, x2)

inst_23807:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfb2628a3ee54b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x33c and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8fb2628a3ee54b; op2val:0x0;
op3val:0x33c007ffffffffff; valaddr_reg:x3; val_offset:71421*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71421*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13460696336256991232,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13460977811233701888,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13461118548722057216,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13461188917466234880,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13461224101838323712,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13461241694024368128,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13461250490117390336,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13461254888163901440,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13461257087187156992,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13461258186698784768,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13461258736454598656,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13461259011332505600,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13461259148771459072,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13461259217490935808,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13461259251850674176,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13461259269030543360,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13461259277620477952,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13461259281915445248,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13461259284062928896,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13461259285136670720,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13461259285673541632,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13461259285941977088,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13461259286076194816,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13461259286143303680,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13461259286176858112,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13461259286193635328,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13461259286202023936,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13461259286206218240,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13461259286208315392,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13461259286209363968,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13461259286209888256,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13461259286210150400,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13461259286210281472,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13461259286210347008,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13461259286210379776,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13461259286210396160,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13461259286210404352,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13461259286210408448,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13461259286210410496,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13461259286210411520,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13461259286210412032,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13461259286210412288,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13461259286210412416,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13461259286210412480,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13461259286210412512,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13461259286210412528,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13461259286210412536,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13461259286210412540,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13461259286210412542,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13461259286210412543,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6885778985329732147,64,FLEN)
NAN_BOXED(11520323147501699939,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488768,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488769,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488771,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488775,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488783,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488799,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488831,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488895,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387489023,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387489279,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387489791,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387490815,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387492863,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387496959,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387505151,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387521535,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387554303,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387619839,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387750911,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778388013055,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778388537343,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778389585919,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778391683071,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778395877375,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778404265983,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778421043199,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778454597631,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778521706495,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778655924223,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778924359679,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208779461230591,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208780534972415,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208782682456063,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208786977423359,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208795567357951,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208812747227135,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208847106965503,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208915826442239,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261209053265395711,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261209328143302655,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261209877899116543,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261210977410744319,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261213176433999871,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261217574480510975,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261226370573533183,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261243962759577599,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261279147131666431,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261349515875844095,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261490253364199423,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261771728340910079,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(262334678294331391,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(263460578201174015,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(263460578201174016,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(264586478108016640,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265149428061437952,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265430903038148608,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265571640526503936,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265642009270681600,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265677193642770432,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265694785828814848,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265703581921837056,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265707979968348160,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265710178991603712,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265711278503231488,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265711828259045376,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712103136952320,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712240575905792,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712309295382528,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712343655120896,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712360834990080,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712369424924672,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712373719891968,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712375867375616,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712376941117440,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712377477988352,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712377746423808,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712377880641536,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712377947750400,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712377981304832,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712377998082048,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378006470656,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378010664960,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378012762112,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378013810688,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014334976,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014597120,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014728192,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014793728,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014826496,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014842880,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014851072,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014855168,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014857216,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014858240,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014858752,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859008,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859136,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859200,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859232,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859248,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859256,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859260,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859262,64,FLEN)
NAN_BOXED(6885795852321828015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859263,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13447748487328301056,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13447748487328301057,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13447748487328301059,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13447748487328301063,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13447748487328301071,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13447748487328301087,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13447748487328301119,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13447748487328301183,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13447748487328301311,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13447748487328301567,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13447748487328302079,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13447748487328303103,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13447748487328305151,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13447748487328309247,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13447748487328317439,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13447748487328333823,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13447748487328366591,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13447748487328432127,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13447748487328563199,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13447748487328825343,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13447748487329349631,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13447748487330398207,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13447748487332495359,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13447748487336689663,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13447748487345078271,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13447748487361855487,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13447748487395409919,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13447748487462518783,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13447748487596736511,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13447748487865171967,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13447748488402042879,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13447748489475784703,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13447748491623268351,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13447748495918235647,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13447748504508170239,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13447748521688039423,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13447748556047777791,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13447748624767254527,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13447748762206207999,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13447749037084114943,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13447749586839928831,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13447750686351556607,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13447752885374812159,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13447757283421323263,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13447766079514345471,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13447783671700389887,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13447818856072478719,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13447889224816656383,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13448029962305011711,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13448311437281722367,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13448874387235143679,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13450000287141986303,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13450000287141986304,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13451126187048828928,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13451689137002250240,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13451970611978960896,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13452111349467316224,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13452181718211493888,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13452216902583582720,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13452234494769627136,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13452243290862649344,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13452247688909160448,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13452249887932416000,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13452250987444043776,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13452251537199857664,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13452251812077764608,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13452251949516718080,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13452252018236194816,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13452252052595933184,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13452252069775802368,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13452252078365736960,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13452252082660704256,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13452252084808187904,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13452252085881929728,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13452252086418800640,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13452252086687236096,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13452252086821453824,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13452252086888562688,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13452252086922117120,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13452252086938894336,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13452252086947282944,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13452252086951477248,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13452252086953574400,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13452252086954622976,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13452252086955147264,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13452252086955409408,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13452252086955540480,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13452252086955606016,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13452252086955638784,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13452252086955655168,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13452252086955663360,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13452252086955667456,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13452252086955669504,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13452252086955670528,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13452252086955671040,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13452252086955671296,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13452252086955671424,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13452252086955671488,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13452252086955671520,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13452252086955671536,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13452252086955671544,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13452252086955671548,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13452252086955671550,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13452252086955671551,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6885827217226842543,64,FLEN)
NAN_BOXED(11520297919468258282,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998784,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998785,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998787,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998791,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998799,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998815,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998847,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998911,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618999039,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618999295,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618999807,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619000831,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619002879,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619006975,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619015167,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619031551,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619064319,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619129855,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619260927,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619523071,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634620047359,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634621095935,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634623193087,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634627387391,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634635775999,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634652553215,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634686107647,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634753216511,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634887434239,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393635155869695,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393635692740607,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393636766482431,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393638913966079,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393643208933375,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393651798867967,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393668978737151,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393703338475519,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393772057952255,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393909496905727,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250394184374812671,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250394734130626559,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250395833642254335,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250398032665509887,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250402430712020991,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250411226805043199,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250428818991087615,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250464003363176447,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250534372107354111,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250675109595709439,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250956584572420095,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9251519534525841407,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9252645434432684031,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9252645434432684032,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9253771334339526656,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254334284292947968,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254615759269658624,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254756496758013952,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254826865502191616,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254862049874280448,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254879642060324864,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254888438153347072,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254892836199858176,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254895035223113728,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254896134734741504,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254896684490555392,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254896959368462336,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897096807415808,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897165526892544,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897199886630912,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897217066500096,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897225656434688,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897229951401984,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897232098885632,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897233172627456,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897233709498368,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897233977933824,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234112151552,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234179260416,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234212814848,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234229592064,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234237980672,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234242174976,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234244272128,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234245320704,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234245844992,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246107136,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246238208,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246303744,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246336512,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246352896,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246361088,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246365184,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246367232,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246368256,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246368768,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369024,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369152,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369216,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369248,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369264,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369272,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369276,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369278,64,FLEN)
NAN_BOXED(6885837737288218623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369279,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150912,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150913,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150915,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150919,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150927,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150943,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150975,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802151039,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802151167,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802151423,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802151935,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802152959,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802155007,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802159103,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802167295,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802183679,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802216447,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802281983,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802413055,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802675199,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191803199487,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191804248063,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191806345215,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191810539519,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191818928127,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191835705343,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191869259775,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191936368639,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079192070586367,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079192339021823,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079192875892735,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079193949634559,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079196097118207,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079200392085503,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079208982020095,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079226161889279,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079260521627647,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079329241104383,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079466680057855,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079741557964799,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99080291313778687,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99081390825406463,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99083589848662015,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99087987895173119,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99096783988195327,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99114376174239743,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99149560546328575,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99219929290506239,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99360666778861567,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99642141755572223,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(100205091708993535,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(101330991615836159,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(101330991615836160,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(102456891522678784,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103019841476100096,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103301316452810752,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103442053941166080,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103512422685343744,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103547607057432576,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103565199243476992,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103573995336499200,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103578393383010304,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103580592406265856,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103581691917893632,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582241673707520,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582516551614464,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582653990567936,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582722710044672,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582757069783040,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582774249652224,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582782839586816,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582787134554112,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582789282037760,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582790355779584,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582790892650496,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791161085952,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791295303680,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791362412544,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791395966976,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791412744192,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791421132800,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791425327104,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791427424256,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791428472832,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791428997120,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429259264,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429390336,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429455872,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429488640,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429505024,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429513216,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429517312,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429519360,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429520384,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429520896,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521152,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521280,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521344,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521376,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521392,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521400,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521404,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521406,64,FLEN)
NAN_BOXED(6885839029417706391,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521407,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13362180094408261632,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13362180094408261633,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13362180094408261635,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13362180094408261639,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13362180094408261647,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13362180094408261663,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13362180094408261695,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13362180094408261759,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13362180094408261887,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13362180094408262143,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13362180094408262655,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13362180094408263679,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13362180094408265727,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13362180094408269823,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13362180094408278015,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13362180094408294399,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13362180094408327167,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13362180094408392703,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13362180094408523775,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13362180094408785919,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13362180094409310207,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13362180094410358783,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13362180094412455935,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13362180094416650239,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13362180094425038847,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13362180094441816063,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13362180094475370495,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13362180094542479359,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13362180094676697087,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13362180094945132543,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13362180095482003455,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13362180096555745279,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13362180098703228927,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13362180102998196223,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13362180111588130815,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13362180128767999999,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13362180163127738367,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13362180231847215103,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13362180369286168575,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13362180644164075519,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13362181193919889407,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13362182293431517183,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13362184492454772735,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13362188890501283839,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13362197686594306047,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13362215278780350463,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13362250463152439295,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13362320831896616959,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13362461569384972287,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13362743044361682943,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13363305994315104255,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13364431894221946879,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13364431894221946880,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13365557794128789504,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13366120744082210816,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13366402219058921472,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13366542956547276800,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13366613325291454464,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13366648509663543296,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13366666101849587712,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13366674897942609920,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13366679295989121024,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13366681495012376576,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13366682594524004352,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13366683144279818240,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13366683419157725184,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13366683556596678656,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13366683625316155392,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13366683659675893760,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13366683676855762944,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13366683685445697536,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13366683689740664832,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13366683691888148480,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13366683692961890304,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13366683693498761216,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13366683693767196672,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13366683693901414400,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13366683693968523264,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13366683694002077696,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13366683694018854912,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13366683694027243520,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13366683694031437824,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13366683694033534976,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13366683694034583552,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13366683694035107840,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13366683694035369984,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13366683694035501056,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13366683694035566592,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13366683694035599360,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13366683694035615744,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13366683694035623936,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13366683694035628032,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13366683694035630080,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13366683694035631104,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13366683694035631616,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13366683694035631872,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13366683694035632000,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13366683694035632064,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13366683694035632096,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13366683694035632112,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13366683694035632120,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13366683694035632124,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13366683694035632126,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13366683694035632127,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6885873449097786739,64,FLEN)
NAN_BOXED(11520273994897355560,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3728980491462770688,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3728980491462770689,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3728980491462770691,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3728980491462770695,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3728980491462770703,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3728980491462770719,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3728980491462770751,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3728980491462770815,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3728980491462770943,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3728980491462771199,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3728980491462771711,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3728980491462772735,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3728980491462774783,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3728980491462778879,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3728980491462787071,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3728980491462803455,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3728980491462836223,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3728980491462901759,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3728980491463032831,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3728980491463294975,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3728980491463819263,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3728980491464867839,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3728980491466964991,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3728980491471159295,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3728980491479547903,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3728980491496325119,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3728980491529879551,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3728980491596988415,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3728980491731206143,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3728980491999641599,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3728980492536512511,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3728980493610254335,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3728980495757737983,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3728980500052705279,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3728980508642639871,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3728980525822509055,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3728980560182247423,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3728980628901724159,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3728980766340677631,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3728981041218584575,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3728981590974398463,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3728982690486026239,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3728984889509281791,64,FLEN)
NAN_BOXED(6885918491568694603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3728989287555792895,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
