
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:39 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_38400:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37f800000000000; valaddr_reg:x3; val_offset:115200*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115200*0 + 3*0*FLEN/8, x4, x1, x2)

inst_38401:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37fc00000000000; valaddr_reg:x3; val_offset:115203*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115203*0 + 3*1*FLEN/8, x4, x1, x2)

inst_38402:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37fe00000000000; valaddr_reg:x3; val_offset:115206*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115206*0 + 3*2*FLEN/8, x4, x1, x2)

inst_38403:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37ff00000000000; valaddr_reg:x3; val_offset:115209*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115209*0 + 3*3*FLEN/8, x4, x1, x2)

inst_38404:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37ff80000000000; valaddr_reg:x3; val_offset:115212*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115212*0 + 3*4*FLEN/8, x4, x1, x2)

inst_38405:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37ffc0000000000; valaddr_reg:x3; val_offset:115215*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115215*0 + 3*5*FLEN/8, x4, x1, x2)

inst_38406:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37ffe0000000000; valaddr_reg:x3; val_offset:115218*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115218*0 + 3*6*FLEN/8, x4, x1, x2)

inst_38407:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37fff0000000000; valaddr_reg:x3; val_offset:115221*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115221*0 + 3*7*FLEN/8, x4, x1, x2)

inst_38408:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37fff8000000000; valaddr_reg:x3; val_offset:115224*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115224*0 + 3*8*FLEN/8, x4, x1, x2)

inst_38409:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37fffc000000000; valaddr_reg:x3; val_offset:115227*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115227*0 + 3*9*FLEN/8, x4, x1, x2)

inst_38410:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37fffe000000000; valaddr_reg:x3; val_offset:115230*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115230*0 + 3*10*FLEN/8, x4, x1, x2)

inst_38411:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37ffff000000000; valaddr_reg:x3; val_offset:115233*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115233*0 + 3*11*FLEN/8, x4, x1, x2)

inst_38412:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37ffff800000000; valaddr_reg:x3; val_offset:115236*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115236*0 + 3*12*FLEN/8, x4, x1, x2)

inst_38413:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37ffffc00000000; valaddr_reg:x3; val_offset:115239*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115239*0 + 3*13*FLEN/8, x4, x1, x2)

inst_38414:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37ffffe00000000; valaddr_reg:x3; val_offset:115242*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115242*0 + 3*14*FLEN/8, x4, x1, x2)

inst_38415:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37fffff00000000; valaddr_reg:x3; val_offset:115245*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115245*0 + 3*15*FLEN/8, x4, x1, x2)

inst_38416:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37fffff80000000; valaddr_reg:x3; val_offset:115248*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115248*0 + 3*16*FLEN/8, x4, x1, x2)

inst_38417:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37fffffc0000000; valaddr_reg:x3; val_offset:115251*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115251*0 + 3*17*FLEN/8, x4, x1, x2)

inst_38418:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37fffffe0000000; valaddr_reg:x3; val_offset:115254*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115254*0 + 3*18*FLEN/8, x4, x1, x2)

inst_38419:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37ffffff0000000; valaddr_reg:x3; val_offset:115257*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115257*0 + 3*19*FLEN/8, x4, x1, x2)

inst_38420:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37ffffff8000000; valaddr_reg:x3; val_offset:115260*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115260*0 + 3*20*FLEN/8, x4, x1, x2)

inst_38421:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37ffffffc000000; valaddr_reg:x3; val_offset:115263*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115263*0 + 3*21*FLEN/8, x4, x1, x2)

inst_38422:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37ffffffe000000; valaddr_reg:x3; val_offset:115266*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115266*0 + 3*22*FLEN/8, x4, x1, x2)

inst_38423:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37fffffff000000; valaddr_reg:x3; val_offset:115269*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115269*0 + 3*23*FLEN/8, x4, x1, x2)

inst_38424:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37fffffff800000; valaddr_reg:x3; val_offset:115272*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115272*0 + 3*24*FLEN/8, x4, x1, x2)

inst_38425:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37fffffffc00000; valaddr_reg:x3; val_offset:115275*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115275*0 + 3*25*FLEN/8, x4, x1, x2)

inst_38426:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37fffffffe00000; valaddr_reg:x3; val_offset:115278*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115278*0 + 3*26*FLEN/8, x4, x1, x2)

inst_38427:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37ffffffff00000; valaddr_reg:x3; val_offset:115281*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115281*0 + 3*27*FLEN/8, x4, x1, x2)

inst_38428:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37ffffffff80000; valaddr_reg:x3; val_offset:115284*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115284*0 + 3*28*FLEN/8, x4, x1, x2)

inst_38429:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37ffffffffc0000; valaddr_reg:x3; val_offset:115287*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115287*0 + 3*29*FLEN/8, x4, x1, x2)

inst_38430:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37ffffffffe0000; valaddr_reg:x3; val_offset:115290*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115290*0 + 3*30*FLEN/8, x4, x1, x2)

inst_38431:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37fffffffff0000; valaddr_reg:x3; val_offset:115293*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115293*0 + 3*31*FLEN/8, x4, x1, x2)

inst_38432:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37fffffffff8000; valaddr_reg:x3; val_offset:115296*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115296*0 + 3*32*FLEN/8, x4, x1, x2)

inst_38433:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37fffffffffc000; valaddr_reg:x3; val_offset:115299*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115299*0 + 3*33*FLEN/8, x4, x1, x2)

inst_38434:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37fffffffffe000; valaddr_reg:x3; val_offset:115302*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115302*0 + 3*34*FLEN/8, x4, x1, x2)

inst_38435:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37ffffffffff000; valaddr_reg:x3; val_offset:115305*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115305*0 + 3*35*FLEN/8, x4, x1, x2)

inst_38436:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37ffffffffff800; valaddr_reg:x3; val_offset:115308*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115308*0 + 3*36*FLEN/8, x4, x1, x2)

inst_38437:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37ffffffffffc00; valaddr_reg:x3; val_offset:115311*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115311*0 + 3*37*FLEN/8, x4, x1, x2)

inst_38438:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37ffffffffffe00; valaddr_reg:x3; val_offset:115314*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115314*0 + 3*38*FLEN/8, x4, x1, x2)

inst_38439:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37fffffffffff00; valaddr_reg:x3; val_offset:115317*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115317*0 + 3*39*FLEN/8, x4, x1, x2)

inst_38440:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37fffffffffff80; valaddr_reg:x3; val_offset:115320*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115320*0 + 3*40*FLEN/8, x4, x1, x2)

inst_38441:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37fffffffffffc0; valaddr_reg:x3; val_offset:115323*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115323*0 + 3*41*FLEN/8, x4, x1, x2)

inst_38442:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37fffffffffffe0; valaddr_reg:x3; val_offset:115326*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115326*0 + 3*42*FLEN/8, x4, x1, x2)

inst_38443:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37ffffffffffff0; valaddr_reg:x3; val_offset:115329*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115329*0 + 3*43*FLEN/8, x4, x1, x2)

inst_38444:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37ffffffffffff8; valaddr_reg:x3; val_offset:115332*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115332*0 + 3*44*FLEN/8, x4, x1, x2)

inst_38445:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37ffffffffffffc; valaddr_reg:x3; val_offset:115335*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115335*0 + 3*45*FLEN/8, x4, x1, x2)

inst_38446:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37ffffffffffffe; valaddr_reg:x3; val_offset:115338*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115338*0 + 3*46*FLEN/8, x4, x1, x2)

inst_38447:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37fffffffffffff; valaddr_reg:x3; val_offset:115341*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115341*0 + 3*47*FLEN/8, x4, x1, x2)

inst_38448:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c80000000000000; valaddr_reg:x3; val_offset:115344*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115344*0 + 3*48*FLEN/8, x4, x1, x2)

inst_38449:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c80000000000001; valaddr_reg:x3; val_offset:115347*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115347*0 + 3*49*FLEN/8, x4, x1, x2)

inst_38450:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c80000000000003; valaddr_reg:x3; val_offset:115350*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115350*0 + 3*50*FLEN/8, x4, x1, x2)

inst_38451:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c80000000000007; valaddr_reg:x3; val_offset:115353*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115353*0 + 3*51*FLEN/8, x4, x1, x2)

inst_38452:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8000000000000f; valaddr_reg:x3; val_offset:115356*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115356*0 + 3*52*FLEN/8, x4, x1, x2)

inst_38453:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8000000000001f; valaddr_reg:x3; val_offset:115359*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115359*0 + 3*53*FLEN/8, x4, x1, x2)

inst_38454:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8000000000003f; valaddr_reg:x3; val_offset:115362*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115362*0 + 3*54*FLEN/8, x4, x1, x2)

inst_38455:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8000000000007f; valaddr_reg:x3; val_offset:115365*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115365*0 + 3*55*FLEN/8, x4, x1, x2)

inst_38456:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c800000000000ff; valaddr_reg:x3; val_offset:115368*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115368*0 + 3*56*FLEN/8, x4, x1, x2)

inst_38457:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c800000000001ff; valaddr_reg:x3; val_offset:115371*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115371*0 + 3*57*FLEN/8, x4, x1, x2)

inst_38458:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c800000000003ff; valaddr_reg:x3; val_offset:115374*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115374*0 + 3*58*FLEN/8, x4, x1, x2)

inst_38459:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c800000000007ff; valaddr_reg:x3; val_offset:115377*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115377*0 + 3*59*FLEN/8, x4, x1, x2)

inst_38460:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c80000000000fff; valaddr_reg:x3; val_offset:115380*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115380*0 + 3*60*FLEN/8, x4, x1, x2)

inst_38461:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c80000000001fff; valaddr_reg:x3; val_offset:115383*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115383*0 + 3*61*FLEN/8, x4, x1, x2)

inst_38462:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c80000000003fff; valaddr_reg:x3; val_offset:115386*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115386*0 + 3*62*FLEN/8, x4, x1, x2)

inst_38463:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c80000000007fff; valaddr_reg:x3; val_offset:115389*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115389*0 + 3*63*FLEN/8, x4, x1, x2)

inst_38464:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8000000000ffff; valaddr_reg:x3; val_offset:115392*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115392*0 + 3*64*FLEN/8, x4, x1, x2)

inst_38465:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8000000001ffff; valaddr_reg:x3; val_offset:115395*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115395*0 + 3*65*FLEN/8, x4, x1, x2)

inst_38466:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8000000003ffff; valaddr_reg:x3; val_offset:115398*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115398*0 + 3*66*FLEN/8, x4, x1, x2)

inst_38467:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8000000007ffff; valaddr_reg:x3; val_offset:115401*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115401*0 + 3*67*FLEN/8, x4, x1, x2)

inst_38468:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c800000000fffff; valaddr_reg:x3; val_offset:115404*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115404*0 + 3*68*FLEN/8, x4, x1, x2)

inst_38469:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c800000001fffff; valaddr_reg:x3; val_offset:115407*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115407*0 + 3*69*FLEN/8, x4, x1, x2)

inst_38470:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c800000003fffff; valaddr_reg:x3; val_offset:115410*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115410*0 + 3*70*FLEN/8, x4, x1, x2)

inst_38471:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c800000007fffff; valaddr_reg:x3; val_offset:115413*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115413*0 + 3*71*FLEN/8, x4, x1, x2)

inst_38472:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c80000000ffffff; valaddr_reg:x3; val_offset:115416*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115416*0 + 3*72*FLEN/8, x4, x1, x2)

inst_38473:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c80000001ffffff; valaddr_reg:x3; val_offset:115419*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115419*0 + 3*73*FLEN/8, x4, x1, x2)

inst_38474:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c80000003ffffff; valaddr_reg:x3; val_offset:115422*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115422*0 + 3*74*FLEN/8, x4, x1, x2)

inst_38475:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c80000007ffffff; valaddr_reg:x3; val_offset:115425*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115425*0 + 3*75*FLEN/8, x4, x1, x2)

inst_38476:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8000000fffffff; valaddr_reg:x3; val_offset:115428*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115428*0 + 3*76*FLEN/8, x4, x1, x2)

inst_38477:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8000001fffffff; valaddr_reg:x3; val_offset:115431*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115431*0 + 3*77*FLEN/8, x4, x1, x2)

inst_38478:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8000003fffffff; valaddr_reg:x3; val_offset:115434*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115434*0 + 3*78*FLEN/8, x4, x1, x2)

inst_38479:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8000007fffffff; valaddr_reg:x3; val_offset:115437*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115437*0 + 3*79*FLEN/8, x4, x1, x2)

inst_38480:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c800000ffffffff; valaddr_reg:x3; val_offset:115440*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115440*0 + 3*80*FLEN/8, x4, x1, x2)

inst_38481:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c800001ffffffff; valaddr_reg:x3; val_offset:115443*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115443*0 + 3*81*FLEN/8, x4, x1, x2)

inst_38482:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c800003ffffffff; valaddr_reg:x3; val_offset:115446*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115446*0 + 3*82*FLEN/8, x4, x1, x2)

inst_38483:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c800007ffffffff; valaddr_reg:x3; val_offset:115449*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115449*0 + 3*83*FLEN/8, x4, x1, x2)

inst_38484:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c80000fffffffff; valaddr_reg:x3; val_offset:115452*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115452*0 + 3*84*FLEN/8, x4, x1, x2)

inst_38485:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c80001fffffffff; valaddr_reg:x3; val_offset:115455*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115455*0 + 3*85*FLEN/8, x4, x1, x2)

inst_38486:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c80003fffffffff; valaddr_reg:x3; val_offset:115458*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115458*0 + 3*86*FLEN/8, x4, x1, x2)

inst_38487:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c80007fffffffff; valaddr_reg:x3; val_offset:115461*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115461*0 + 3*87*FLEN/8, x4, x1, x2)

inst_38488:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8000ffffffffff; valaddr_reg:x3; val_offset:115464*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115464*0 + 3*88*FLEN/8, x4, x1, x2)

inst_38489:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8001ffffffffff; valaddr_reg:x3; val_offset:115467*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115467*0 + 3*89*FLEN/8, x4, x1, x2)

inst_38490:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8003ffffffffff; valaddr_reg:x3; val_offset:115470*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115470*0 + 3*90*FLEN/8, x4, x1, x2)

inst_38491:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8007ffffffffff; valaddr_reg:x3; val_offset:115473*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115473*0 + 3*91*FLEN/8, x4, x1, x2)

inst_38492:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c800fffffffffff; valaddr_reg:x3; val_offset:115476*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115476*0 + 3*92*FLEN/8, x4, x1, x2)

inst_38493:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c801fffffffffff; valaddr_reg:x3; val_offset:115479*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115479*0 + 3*93*FLEN/8, x4, x1, x2)

inst_38494:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c803fffffffffff; valaddr_reg:x3; val_offset:115482*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115482*0 + 3*94*FLEN/8, x4, x1, x2)

inst_38495:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c807fffffffffff; valaddr_reg:x3; val_offset:115485*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115485*0 + 3*95*FLEN/8, x4, x1, x2)

inst_38496:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c80ffffffffffff; valaddr_reg:x3; val_offset:115488*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115488*0 + 3*96*FLEN/8, x4, x1, x2)

inst_38497:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c81ffffffffffff; valaddr_reg:x3; val_offset:115491*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115491*0 + 3*97*FLEN/8, x4, x1, x2)

inst_38498:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c83ffffffffffff; valaddr_reg:x3; val_offset:115494*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115494*0 + 3*98*FLEN/8, x4, x1, x2)

inst_38499:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c87ffffffffffff; valaddr_reg:x3; val_offset:115497*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115497*0 + 3*99*FLEN/8, x4, x1, x2)

inst_38500:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c88000000000000; valaddr_reg:x3; val_offset:115500*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115500*0 + 3*100*FLEN/8, x4, x1, x2)

inst_38501:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8c000000000000; valaddr_reg:x3; val_offset:115503*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115503*0 + 3*101*FLEN/8, x4, x1, x2)

inst_38502:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8e000000000000; valaddr_reg:x3; val_offset:115506*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115506*0 + 3*102*FLEN/8, x4, x1, x2)

inst_38503:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8f000000000000; valaddr_reg:x3; val_offset:115509*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115509*0 + 3*103*FLEN/8, x4, x1, x2)

inst_38504:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8f800000000000; valaddr_reg:x3; val_offset:115512*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115512*0 + 3*104*FLEN/8, x4, x1, x2)

inst_38505:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8fc00000000000; valaddr_reg:x3; val_offset:115515*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115515*0 + 3*105*FLEN/8, x4, x1, x2)

inst_38506:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8fe00000000000; valaddr_reg:x3; val_offset:115518*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115518*0 + 3*106*FLEN/8, x4, x1, x2)

inst_38507:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8ff00000000000; valaddr_reg:x3; val_offset:115521*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115521*0 + 3*107*FLEN/8, x4, x1, x2)

inst_38508:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8ff80000000000; valaddr_reg:x3; val_offset:115524*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115524*0 + 3*108*FLEN/8, x4, x1, x2)

inst_38509:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8ffc0000000000; valaddr_reg:x3; val_offset:115527*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115527*0 + 3*109*FLEN/8, x4, x1, x2)

inst_38510:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8ffe0000000000; valaddr_reg:x3; val_offset:115530*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115530*0 + 3*110*FLEN/8, x4, x1, x2)

inst_38511:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8fff0000000000; valaddr_reg:x3; val_offset:115533*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115533*0 + 3*111*FLEN/8, x4, x1, x2)

inst_38512:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8fff8000000000; valaddr_reg:x3; val_offset:115536*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115536*0 + 3*112*FLEN/8, x4, x1, x2)

inst_38513:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8fffc000000000; valaddr_reg:x3; val_offset:115539*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115539*0 + 3*113*FLEN/8, x4, x1, x2)

inst_38514:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8fffe000000000; valaddr_reg:x3; val_offset:115542*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115542*0 + 3*114*FLEN/8, x4, x1, x2)

inst_38515:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8ffff000000000; valaddr_reg:x3; val_offset:115545*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115545*0 + 3*115*FLEN/8, x4, x1, x2)

inst_38516:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8ffff800000000; valaddr_reg:x3; val_offset:115548*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115548*0 + 3*116*FLEN/8, x4, x1, x2)

inst_38517:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8ffffc00000000; valaddr_reg:x3; val_offset:115551*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115551*0 + 3*117*FLEN/8, x4, x1, x2)

inst_38518:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8ffffe00000000; valaddr_reg:x3; val_offset:115554*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115554*0 + 3*118*FLEN/8, x4, x1, x2)

inst_38519:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8fffff00000000; valaddr_reg:x3; val_offset:115557*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115557*0 + 3*119*FLEN/8, x4, x1, x2)

inst_38520:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8fffff80000000; valaddr_reg:x3; val_offset:115560*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115560*0 + 3*120*FLEN/8, x4, x1, x2)

inst_38521:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8fffffc0000000; valaddr_reg:x3; val_offset:115563*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115563*0 + 3*121*FLEN/8, x4, x1, x2)

inst_38522:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8fffffe0000000; valaddr_reg:x3; val_offset:115566*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115566*0 + 3*122*FLEN/8, x4, x1, x2)

inst_38523:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8ffffff0000000; valaddr_reg:x3; val_offset:115569*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115569*0 + 3*123*FLEN/8, x4, x1, x2)

inst_38524:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8ffffff8000000; valaddr_reg:x3; val_offset:115572*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115572*0 + 3*124*FLEN/8, x4, x1, x2)

inst_38525:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8ffffffc000000; valaddr_reg:x3; val_offset:115575*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115575*0 + 3*125*FLEN/8, x4, x1, x2)

inst_38526:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8ffffffe000000; valaddr_reg:x3; val_offset:115578*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115578*0 + 3*126*FLEN/8, x4, x1, x2)

inst_38527:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8fffffff000000; valaddr_reg:x3; val_offset:115581*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115581*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_38528:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8fffffff800000; valaddr_reg:x3; val_offset:115584*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115584*0 + 3*128*FLEN/8, x4, x1, x2)

inst_38529:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8fffffffc00000; valaddr_reg:x3; val_offset:115587*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115587*0 + 3*129*FLEN/8, x4, x1, x2)

inst_38530:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8fffffffe00000; valaddr_reg:x3; val_offset:115590*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115590*0 + 3*130*FLEN/8, x4, x1, x2)

inst_38531:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8ffffffff00000; valaddr_reg:x3; val_offset:115593*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115593*0 + 3*131*FLEN/8, x4, x1, x2)

inst_38532:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8ffffffff80000; valaddr_reg:x3; val_offset:115596*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115596*0 + 3*132*FLEN/8, x4, x1, x2)

inst_38533:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8ffffffffc0000; valaddr_reg:x3; val_offset:115599*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115599*0 + 3*133*FLEN/8, x4, x1, x2)

inst_38534:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8ffffffffe0000; valaddr_reg:x3; val_offset:115602*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115602*0 + 3*134*FLEN/8, x4, x1, x2)

inst_38535:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8fffffffff0000; valaddr_reg:x3; val_offset:115605*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115605*0 + 3*135*FLEN/8, x4, x1, x2)

inst_38536:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8fffffffff8000; valaddr_reg:x3; val_offset:115608*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115608*0 + 3*136*FLEN/8, x4, x1, x2)

inst_38537:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8fffffffffc000; valaddr_reg:x3; val_offset:115611*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115611*0 + 3*137*FLEN/8, x4, x1, x2)

inst_38538:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8fffffffffe000; valaddr_reg:x3; val_offset:115614*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115614*0 + 3*138*FLEN/8, x4, x1, x2)

inst_38539:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8ffffffffff000; valaddr_reg:x3; val_offset:115617*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115617*0 + 3*139*FLEN/8, x4, x1, x2)

inst_38540:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8ffffffffff800; valaddr_reg:x3; val_offset:115620*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115620*0 + 3*140*FLEN/8, x4, x1, x2)

inst_38541:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8ffffffffffc00; valaddr_reg:x3; val_offset:115623*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115623*0 + 3*141*FLEN/8, x4, x1, x2)

inst_38542:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8ffffffffffe00; valaddr_reg:x3; val_offset:115626*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115626*0 + 3*142*FLEN/8, x4, x1, x2)

inst_38543:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8fffffffffff00; valaddr_reg:x3; val_offset:115629*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115629*0 + 3*143*FLEN/8, x4, x1, x2)

inst_38544:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8fffffffffff80; valaddr_reg:x3; val_offset:115632*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115632*0 + 3*144*FLEN/8, x4, x1, x2)

inst_38545:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8fffffffffffc0; valaddr_reg:x3; val_offset:115635*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115635*0 + 3*145*FLEN/8, x4, x1, x2)

inst_38546:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8fffffffffffe0; valaddr_reg:x3; val_offset:115638*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115638*0 + 3*146*FLEN/8, x4, x1, x2)

inst_38547:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8ffffffffffff0; valaddr_reg:x3; val_offset:115641*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115641*0 + 3*147*FLEN/8, x4, x1, x2)

inst_38548:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8ffffffffffff8; valaddr_reg:x3; val_offset:115644*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115644*0 + 3*148*FLEN/8, x4, x1, x2)

inst_38549:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8ffffffffffffc; valaddr_reg:x3; val_offset:115647*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115647*0 + 3*149*FLEN/8, x4, x1, x2)

inst_38550:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8ffffffffffffe; valaddr_reg:x3; val_offset:115650*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115650*0 + 3*150*FLEN/8, x4, x1, x2)

inst_38551:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3c8fffffffffffff; valaddr_reg:x3; val_offset:115653*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115653*0 + 3*151*FLEN/8, x4, x1, x2)

inst_38552:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:115656*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115656*0 + 3*152*FLEN/8, x4, x1, x2)

inst_38553:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:115659*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115659*0 + 3*153*FLEN/8, x4, x1, x2)

inst_38554:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:115662*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115662*0 + 3*154*FLEN/8, x4, x1, x2)

inst_38555:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:115665*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115665*0 + 3*155*FLEN/8, x4, x1, x2)

inst_38556:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:115668*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115668*0 + 3*156*FLEN/8, x4, x1, x2)

inst_38557:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:115671*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115671*0 + 3*157*FLEN/8, x4, x1, x2)

inst_38558:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:115674*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115674*0 + 3*158*FLEN/8, x4, x1, x2)

inst_38559:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:115677*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115677*0 + 3*159*FLEN/8, x4, x1, x2)

inst_38560:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:115680*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115680*0 + 3*160*FLEN/8, x4, x1, x2)

inst_38561:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:115683*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115683*0 + 3*161*FLEN/8, x4, x1, x2)

inst_38562:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:115686*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115686*0 + 3*162*FLEN/8, x4, x1, x2)

inst_38563:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:115689*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115689*0 + 3*163*FLEN/8, x4, x1, x2)

inst_38564:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:115692*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115692*0 + 3*164*FLEN/8, x4, x1, x2)

inst_38565:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:115695*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115695*0 + 3*165*FLEN/8, x4, x1, x2)

inst_38566:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:115698*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115698*0 + 3*166*FLEN/8, x4, x1, x2)

inst_38567:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:115701*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115701*0 + 3*167*FLEN/8, x4, x1, x2)

inst_38568:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:115704*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115704*0 + 3*168*FLEN/8, x4, x1, x2)

inst_38569:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:115707*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115707*0 + 3*169*FLEN/8, x4, x1, x2)

inst_38570:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:115710*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115710*0 + 3*170*FLEN/8, x4, x1, x2)

inst_38571:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:115713*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115713*0 + 3*171*FLEN/8, x4, x1, x2)

inst_38572:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:115716*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115716*0 + 3*172*FLEN/8, x4, x1, x2)

inst_38573:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8455d77751eb3 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x5185d222a774f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98455d77751eb3; op2val:0x2045185d222a774f;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:115719*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115719*0 + 3*173*FLEN/8, x4, x1, x2)

inst_38574:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:115722*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115722*0 + 3*174*FLEN/8, x4, x1, x2)

inst_38575:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:115725*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115725*0 + 3*175*FLEN/8, x4, x1, x2)

inst_38576:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:115728*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115728*0 + 3*176*FLEN/8, x4, x1, x2)

inst_38577:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:115731*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115731*0 + 3*177*FLEN/8, x4, x1, x2)

inst_38578:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:115734*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115734*0 + 3*178*FLEN/8, x4, x1, x2)

inst_38579:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:115737*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115737*0 + 3*179*FLEN/8, x4, x1, x2)

inst_38580:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:115740*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115740*0 + 3*180*FLEN/8, x4, x1, x2)

inst_38581:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:115743*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115743*0 + 3*181*FLEN/8, x4, x1, x2)

inst_38582:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:115746*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115746*0 + 3*182*FLEN/8, x4, x1, x2)

inst_38583:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:115749*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115749*0 + 3*183*FLEN/8, x4, x1, x2)

inst_38584:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:115752*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115752*0 + 3*184*FLEN/8, x4, x1, x2)

inst_38585:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:115755*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115755*0 + 3*185*FLEN/8, x4, x1, x2)

inst_38586:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:115758*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115758*0 + 3*186*FLEN/8, x4, x1, x2)

inst_38587:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:115761*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115761*0 + 3*187*FLEN/8, x4, x1, x2)

inst_38588:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:115764*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115764*0 + 3*188*FLEN/8, x4, x1, x2)

inst_38589:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:115767*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115767*0 + 3*189*FLEN/8, x4, x1, x2)

inst_38590:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:115770*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115770*0 + 3*190*FLEN/8, x4, x1, x2)

inst_38591:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:115773*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115773*0 + 3*191*FLEN/8, x4, x1, x2)

inst_38592:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:115776*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115776*0 + 3*192*FLEN/8, x4, x1, x2)

inst_38593:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:115779*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115779*0 + 3*193*FLEN/8, x4, x1, x2)

inst_38594:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:115782*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115782*0 + 3*194*FLEN/8, x4, x1, x2)

inst_38595:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:115785*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115785*0 + 3*195*FLEN/8, x4, x1, x2)

inst_38596:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x40000000000000; valaddr_reg:x3; val_offset:115788*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115788*0 + 3*196*FLEN/8, x4, x1, x2)

inst_38597:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x40000000000001; valaddr_reg:x3; val_offset:115791*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115791*0 + 3*197*FLEN/8, x4, x1, x2)

inst_38598:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x40000000000003; valaddr_reg:x3; val_offset:115794*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115794*0 + 3*198*FLEN/8, x4, x1, x2)

inst_38599:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x40000000000007; valaddr_reg:x3; val_offset:115797*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115797*0 + 3*199*FLEN/8, x4, x1, x2)

inst_38600:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4000000000000f; valaddr_reg:x3; val_offset:115800*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115800*0 + 3*200*FLEN/8, x4, x1, x2)

inst_38601:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4000000000001f; valaddr_reg:x3; val_offset:115803*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115803*0 + 3*201*FLEN/8, x4, x1, x2)

inst_38602:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4000000000003f; valaddr_reg:x3; val_offset:115806*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115806*0 + 3*202*FLEN/8, x4, x1, x2)

inst_38603:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4000000000007f; valaddr_reg:x3; val_offset:115809*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115809*0 + 3*203*FLEN/8, x4, x1, x2)

inst_38604:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x400000000000ff; valaddr_reg:x3; val_offset:115812*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115812*0 + 3*204*FLEN/8, x4, x1, x2)

inst_38605:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x400000000001ff; valaddr_reg:x3; val_offset:115815*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115815*0 + 3*205*FLEN/8, x4, x1, x2)

inst_38606:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x400000000003ff; valaddr_reg:x3; val_offset:115818*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115818*0 + 3*206*FLEN/8, x4, x1, x2)

inst_38607:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x400000000007ff; valaddr_reg:x3; val_offset:115821*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115821*0 + 3*207*FLEN/8, x4, x1, x2)

inst_38608:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x40000000000fff; valaddr_reg:x3; val_offset:115824*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115824*0 + 3*208*FLEN/8, x4, x1, x2)

inst_38609:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x40000000001fff; valaddr_reg:x3; val_offset:115827*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115827*0 + 3*209*FLEN/8, x4, x1, x2)

inst_38610:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x40000000003fff; valaddr_reg:x3; val_offset:115830*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115830*0 + 3*210*FLEN/8, x4, x1, x2)

inst_38611:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x40000000007fff; valaddr_reg:x3; val_offset:115833*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115833*0 + 3*211*FLEN/8, x4, x1, x2)

inst_38612:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4000000000ffff; valaddr_reg:x3; val_offset:115836*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115836*0 + 3*212*FLEN/8, x4, x1, x2)

inst_38613:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4000000001ffff; valaddr_reg:x3; val_offset:115839*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115839*0 + 3*213*FLEN/8, x4, x1, x2)

inst_38614:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4000000003ffff; valaddr_reg:x3; val_offset:115842*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115842*0 + 3*214*FLEN/8, x4, x1, x2)

inst_38615:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4000000007ffff; valaddr_reg:x3; val_offset:115845*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115845*0 + 3*215*FLEN/8, x4, x1, x2)

inst_38616:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x400000000fffff; valaddr_reg:x3; val_offset:115848*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115848*0 + 3*216*FLEN/8, x4, x1, x2)

inst_38617:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x400000001fffff; valaddr_reg:x3; val_offset:115851*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115851*0 + 3*217*FLEN/8, x4, x1, x2)

inst_38618:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x400000003fffff; valaddr_reg:x3; val_offset:115854*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115854*0 + 3*218*FLEN/8, x4, x1, x2)

inst_38619:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x400000007fffff; valaddr_reg:x3; val_offset:115857*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115857*0 + 3*219*FLEN/8, x4, x1, x2)

inst_38620:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x40000000ffffff; valaddr_reg:x3; val_offset:115860*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115860*0 + 3*220*FLEN/8, x4, x1, x2)

inst_38621:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x40000001ffffff; valaddr_reg:x3; val_offset:115863*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115863*0 + 3*221*FLEN/8, x4, x1, x2)

inst_38622:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x40000003ffffff; valaddr_reg:x3; val_offset:115866*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115866*0 + 3*222*FLEN/8, x4, x1, x2)

inst_38623:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x40000007ffffff; valaddr_reg:x3; val_offset:115869*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115869*0 + 3*223*FLEN/8, x4, x1, x2)

inst_38624:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4000000fffffff; valaddr_reg:x3; val_offset:115872*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115872*0 + 3*224*FLEN/8, x4, x1, x2)

inst_38625:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4000001fffffff; valaddr_reg:x3; val_offset:115875*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115875*0 + 3*225*FLEN/8, x4, x1, x2)

inst_38626:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4000003fffffff; valaddr_reg:x3; val_offset:115878*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115878*0 + 3*226*FLEN/8, x4, x1, x2)

inst_38627:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4000007fffffff; valaddr_reg:x3; val_offset:115881*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115881*0 + 3*227*FLEN/8, x4, x1, x2)

inst_38628:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x400000ffffffff; valaddr_reg:x3; val_offset:115884*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115884*0 + 3*228*FLEN/8, x4, x1, x2)

inst_38629:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x400001ffffffff; valaddr_reg:x3; val_offset:115887*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115887*0 + 3*229*FLEN/8, x4, x1, x2)

inst_38630:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x400003ffffffff; valaddr_reg:x3; val_offset:115890*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115890*0 + 3*230*FLEN/8, x4, x1, x2)

inst_38631:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x400007ffffffff; valaddr_reg:x3; val_offset:115893*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115893*0 + 3*231*FLEN/8, x4, x1, x2)

inst_38632:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x40000fffffffff; valaddr_reg:x3; val_offset:115896*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115896*0 + 3*232*FLEN/8, x4, x1, x2)

inst_38633:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x40001fffffffff; valaddr_reg:x3; val_offset:115899*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115899*0 + 3*233*FLEN/8, x4, x1, x2)

inst_38634:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x40003fffffffff; valaddr_reg:x3; val_offset:115902*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115902*0 + 3*234*FLEN/8, x4, x1, x2)

inst_38635:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x40007fffffffff; valaddr_reg:x3; val_offset:115905*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115905*0 + 3*235*FLEN/8, x4, x1, x2)

inst_38636:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4000ffffffffff; valaddr_reg:x3; val_offset:115908*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115908*0 + 3*236*FLEN/8, x4, x1, x2)

inst_38637:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4001ffffffffff; valaddr_reg:x3; val_offset:115911*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115911*0 + 3*237*FLEN/8, x4, x1, x2)

inst_38638:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4003ffffffffff; valaddr_reg:x3; val_offset:115914*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115914*0 + 3*238*FLEN/8, x4, x1, x2)

inst_38639:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4007ffffffffff; valaddr_reg:x3; val_offset:115917*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115917*0 + 3*239*FLEN/8, x4, x1, x2)

inst_38640:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x400fffffffffff; valaddr_reg:x3; val_offset:115920*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115920*0 + 3*240*FLEN/8, x4, x1, x2)

inst_38641:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x401fffffffffff; valaddr_reg:x3; val_offset:115923*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115923*0 + 3*241*FLEN/8, x4, x1, x2)

inst_38642:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x403fffffffffff; valaddr_reg:x3; val_offset:115926*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115926*0 + 3*242*FLEN/8, x4, x1, x2)

inst_38643:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x407fffffffffff; valaddr_reg:x3; val_offset:115929*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115929*0 + 3*243*FLEN/8, x4, x1, x2)

inst_38644:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x40ffffffffffff; valaddr_reg:x3; val_offset:115932*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115932*0 + 3*244*FLEN/8, x4, x1, x2)

inst_38645:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x41ffffffffffff; valaddr_reg:x3; val_offset:115935*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115935*0 + 3*245*FLEN/8, x4, x1, x2)

inst_38646:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x43ffffffffffff; valaddr_reg:x3; val_offset:115938*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115938*0 + 3*246*FLEN/8, x4, x1, x2)

inst_38647:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x47ffffffffffff; valaddr_reg:x3; val_offset:115941*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115941*0 + 3*247*FLEN/8, x4, x1, x2)

inst_38648:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x48000000000000; valaddr_reg:x3; val_offset:115944*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115944*0 + 3*248*FLEN/8, x4, x1, x2)

inst_38649:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4c000000000000; valaddr_reg:x3; val_offset:115947*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115947*0 + 3*249*FLEN/8, x4, x1, x2)

inst_38650:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4e000000000000; valaddr_reg:x3; val_offset:115950*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115950*0 + 3*250*FLEN/8, x4, x1, x2)

inst_38651:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4f000000000000; valaddr_reg:x3; val_offset:115953*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115953*0 + 3*251*FLEN/8, x4, x1, x2)

inst_38652:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4f800000000000; valaddr_reg:x3; val_offset:115956*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115956*0 + 3*252*FLEN/8, x4, x1, x2)

inst_38653:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4fc00000000000; valaddr_reg:x3; val_offset:115959*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115959*0 + 3*253*FLEN/8, x4, x1, x2)

inst_38654:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4fe00000000000; valaddr_reg:x3; val_offset:115962*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115962*0 + 3*254*FLEN/8, x4, x1, x2)

inst_38655:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4ff00000000000; valaddr_reg:x3; val_offset:115965*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115965*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_38656:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4ff80000000000; valaddr_reg:x3; val_offset:115968*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115968*0 + 3*256*FLEN/8, x4, x1, x2)

inst_38657:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4ffc0000000000; valaddr_reg:x3; val_offset:115971*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115971*0 + 3*257*FLEN/8, x4, x1, x2)

inst_38658:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4ffe0000000000; valaddr_reg:x3; val_offset:115974*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115974*0 + 3*258*FLEN/8, x4, x1, x2)

inst_38659:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4fff0000000000; valaddr_reg:x3; val_offset:115977*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115977*0 + 3*259*FLEN/8, x4, x1, x2)

inst_38660:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4fff8000000000; valaddr_reg:x3; val_offset:115980*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115980*0 + 3*260*FLEN/8, x4, x1, x2)

inst_38661:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4fffc000000000; valaddr_reg:x3; val_offset:115983*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115983*0 + 3*261*FLEN/8, x4, x1, x2)

inst_38662:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4fffe000000000; valaddr_reg:x3; val_offset:115986*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115986*0 + 3*262*FLEN/8, x4, x1, x2)

inst_38663:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4ffff000000000; valaddr_reg:x3; val_offset:115989*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115989*0 + 3*263*FLEN/8, x4, x1, x2)

inst_38664:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4ffff800000000; valaddr_reg:x3; val_offset:115992*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115992*0 + 3*264*FLEN/8, x4, x1, x2)

inst_38665:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4ffffc00000000; valaddr_reg:x3; val_offset:115995*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115995*0 + 3*265*FLEN/8, x4, x1, x2)

inst_38666:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4ffffe00000000; valaddr_reg:x3; val_offset:115998*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115998*0 + 3*266*FLEN/8, x4, x1, x2)

inst_38667:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4fffff00000000; valaddr_reg:x3; val_offset:116001*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116001*0 + 3*267*FLEN/8, x4, x1, x2)

inst_38668:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4fffff80000000; valaddr_reg:x3; val_offset:116004*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116004*0 + 3*268*FLEN/8, x4, x1, x2)

inst_38669:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4fffffc0000000; valaddr_reg:x3; val_offset:116007*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116007*0 + 3*269*FLEN/8, x4, x1, x2)

inst_38670:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4fffffe0000000; valaddr_reg:x3; val_offset:116010*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116010*0 + 3*270*FLEN/8, x4, x1, x2)

inst_38671:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4ffffff0000000; valaddr_reg:x3; val_offset:116013*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116013*0 + 3*271*FLEN/8, x4, x1, x2)

inst_38672:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4ffffff8000000; valaddr_reg:x3; val_offset:116016*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116016*0 + 3*272*FLEN/8, x4, x1, x2)

inst_38673:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4ffffffc000000; valaddr_reg:x3; val_offset:116019*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116019*0 + 3*273*FLEN/8, x4, x1, x2)

inst_38674:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4ffffffe000000; valaddr_reg:x3; val_offset:116022*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116022*0 + 3*274*FLEN/8, x4, x1, x2)

inst_38675:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4fffffff000000; valaddr_reg:x3; val_offset:116025*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116025*0 + 3*275*FLEN/8, x4, x1, x2)

inst_38676:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4fffffff800000; valaddr_reg:x3; val_offset:116028*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116028*0 + 3*276*FLEN/8, x4, x1, x2)

inst_38677:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4fffffffc00000; valaddr_reg:x3; val_offset:116031*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116031*0 + 3*277*FLEN/8, x4, x1, x2)

inst_38678:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4fffffffe00000; valaddr_reg:x3; val_offset:116034*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116034*0 + 3*278*FLEN/8, x4, x1, x2)

inst_38679:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4ffffffff00000; valaddr_reg:x3; val_offset:116037*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116037*0 + 3*279*FLEN/8, x4, x1, x2)

inst_38680:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4ffffffff80000; valaddr_reg:x3; val_offset:116040*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116040*0 + 3*280*FLEN/8, x4, x1, x2)

inst_38681:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4ffffffffc0000; valaddr_reg:x3; val_offset:116043*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116043*0 + 3*281*FLEN/8, x4, x1, x2)

inst_38682:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4ffffffffe0000; valaddr_reg:x3; val_offset:116046*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116046*0 + 3*282*FLEN/8, x4, x1, x2)

inst_38683:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4fffffffff0000; valaddr_reg:x3; val_offset:116049*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116049*0 + 3*283*FLEN/8, x4, x1, x2)

inst_38684:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4fffffffff8000; valaddr_reg:x3; val_offset:116052*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116052*0 + 3*284*FLEN/8, x4, x1, x2)

inst_38685:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4fffffffffc000; valaddr_reg:x3; val_offset:116055*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116055*0 + 3*285*FLEN/8, x4, x1, x2)

inst_38686:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4fffffffffe000; valaddr_reg:x3; val_offset:116058*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116058*0 + 3*286*FLEN/8, x4, x1, x2)

inst_38687:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4ffffffffff000; valaddr_reg:x3; val_offset:116061*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116061*0 + 3*287*FLEN/8, x4, x1, x2)

inst_38688:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4ffffffffff800; valaddr_reg:x3; val_offset:116064*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116064*0 + 3*288*FLEN/8, x4, x1, x2)

inst_38689:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4ffffffffffc00; valaddr_reg:x3; val_offset:116067*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116067*0 + 3*289*FLEN/8, x4, x1, x2)

inst_38690:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4ffffffffffe00; valaddr_reg:x3; val_offset:116070*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116070*0 + 3*290*FLEN/8, x4, x1, x2)

inst_38691:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4fffffffffff00; valaddr_reg:x3; val_offset:116073*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116073*0 + 3*291*FLEN/8, x4, x1, x2)

inst_38692:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4fffffffffff80; valaddr_reg:x3; val_offset:116076*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116076*0 + 3*292*FLEN/8, x4, x1, x2)

inst_38693:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4fffffffffffc0; valaddr_reg:x3; val_offset:116079*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116079*0 + 3*293*FLEN/8, x4, x1, x2)

inst_38694:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4fffffffffffe0; valaddr_reg:x3; val_offset:116082*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116082*0 + 3*294*FLEN/8, x4, x1, x2)

inst_38695:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4ffffffffffff0; valaddr_reg:x3; val_offset:116085*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116085*0 + 3*295*FLEN/8, x4, x1, x2)

inst_38696:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4ffffffffffff8; valaddr_reg:x3; val_offset:116088*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116088*0 + 3*296*FLEN/8, x4, x1, x2)

inst_38697:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4ffffffffffffc; valaddr_reg:x3; val_offset:116091*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116091*0 + 3*297*FLEN/8, x4, x1, x2)

inst_38698:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4ffffffffffffe; valaddr_reg:x3; val_offset:116094*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116094*0 + 3*298*FLEN/8, x4, x1, x2)

inst_38699:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x84b9da64f4e2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x004 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f984b9da64f4e2f; op2val:0x0;
op3val:0x4fffffffffffff; valaddr_reg:x3; val_offset:116097*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116097*0 + 3*299*FLEN/8, x4, x1, x2)

inst_38700:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e30000000000000; valaddr_reg:x3; val_offset:116100*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116100*0 + 3*300*FLEN/8, x4, x1, x2)

inst_38701:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e30000000000001; valaddr_reg:x3; val_offset:116103*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116103*0 + 3*301*FLEN/8, x4, x1, x2)

inst_38702:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e30000000000003; valaddr_reg:x3; val_offset:116106*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116106*0 + 3*302*FLEN/8, x4, x1, x2)

inst_38703:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e30000000000007; valaddr_reg:x3; val_offset:116109*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116109*0 + 3*303*FLEN/8, x4, x1, x2)

inst_38704:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3000000000000f; valaddr_reg:x3; val_offset:116112*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116112*0 + 3*304*FLEN/8, x4, x1, x2)

inst_38705:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3000000000001f; valaddr_reg:x3; val_offset:116115*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116115*0 + 3*305*FLEN/8, x4, x1, x2)

inst_38706:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3000000000003f; valaddr_reg:x3; val_offset:116118*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116118*0 + 3*306*FLEN/8, x4, x1, x2)

inst_38707:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3000000000007f; valaddr_reg:x3; val_offset:116121*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116121*0 + 3*307*FLEN/8, x4, x1, x2)

inst_38708:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e300000000000ff; valaddr_reg:x3; val_offset:116124*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116124*0 + 3*308*FLEN/8, x4, x1, x2)

inst_38709:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e300000000001ff; valaddr_reg:x3; val_offset:116127*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116127*0 + 3*309*FLEN/8, x4, x1, x2)

inst_38710:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e300000000003ff; valaddr_reg:x3; val_offset:116130*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116130*0 + 3*310*FLEN/8, x4, x1, x2)

inst_38711:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e300000000007ff; valaddr_reg:x3; val_offset:116133*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116133*0 + 3*311*FLEN/8, x4, x1, x2)

inst_38712:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e30000000000fff; valaddr_reg:x3; val_offset:116136*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116136*0 + 3*312*FLEN/8, x4, x1, x2)

inst_38713:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e30000000001fff; valaddr_reg:x3; val_offset:116139*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116139*0 + 3*313*FLEN/8, x4, x1, x2)

inst_38714:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e30000000003fff; valaddr_reg:x3; val_offset:116142*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116142*0 + 3*314*FLEN/8, x4, x1, x2)

inst_38715:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e30000000007fff; valaddr_reg:x3; val_offset:116145*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116145*0 + 3*315*FLEN/8, x4, x1, x2)

inst_38716:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3000000000ffff; valaddr_reg:x3; val_offset:116148*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116148*0 + 3*316*FLEN/8, x4, x1, x2)

inst_38717:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3000000001ffff; valaddr_reg:x3; val_offset:116151*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116151*0 + 3*317*FLEN/8, x4, x1, x2)

inst_38718:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3000000003ffff; valaddr_reg:x3; val_offset:116154*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116154*0 + 3*318*FLEN/8, x4, x1, x2)

inst_38719:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3000000007ffff; valaddr_reg:x3; val_offset:116157*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116157*0 + 3*319*FLEN/8, x4, x1, x2)

inst_38720:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e300000000fffff; valaddr_reg:x3; val_offset:116160*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116160*0 + 3*320*FLEN/8, x4, x1, x2)

inst_38721:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e300000001fffff; valaddr_reg:x3; val_offset:116163*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116163*0 + 3*321*FLEN/8, x4, x1, x2)

inst_38722:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e300000003fffff; valaddr_reg:x3; val_offset:116166*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116166*0 + 3*322*FLEN/8, x4, x1, x2)

inst_38723:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e300000007fffff; valaddr_reg:x3; val_offset:116169*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116169*0 + 3*323*FLEN/8, x4, x1, x2)

inst_38724:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e30000000ffffff; valaddr_reg:x3; val_offset:116172*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116172*0 + 3*324*FLEN/8, x4, x1, x2)

inst_38725:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e30000001ffffff; valaddr_reg:x3; val_offset:116175*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116175*0 + 3*325*FLEN/8, x4, x1, x2)

inst_38726:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e30000003ffffff; valaddr_reg:x3; val_offset:116178*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116178*0 + 3*326*FLEN/8, x4, x1, x2)

inst_38727:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e30000007ffffff; valaddr_reg:x3; val_offset:116181*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116181*0 + 3*327*FLEN/8, x4, x1, x2)

inst_38728:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3000000fffffff; valaddr_reg:x3; val_offset:116184*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116184*0 + 3*328*FLEN/8, x4, x1, x2)

inst_38729:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3000001fffffff; valaddr_reg:x3; val_offset:116187*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116187*0 + 3*329*FLEN/8, x4, x1, x2)

inst_38730:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3000003fffffff; valaddr_reg:x3; val_offset:116190*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116190*0 + 3*330*FLEN/8, x4, x1, x2)

inst_38731:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3000007fffffff; valaddr_reg:x3; val_offset:116193*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116193*0 + 3*331*FLEN/8, x4, x1, x2)

inst_38732:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e300000ffffffff; valaddr_reg:x3; val_offset:116196*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116196*0 + 3*332*FLEN/8, x4, x1, x2)

inst_38733:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e300001ffffffff; valaddr_reg:x3; val_offset:116199*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116199*0 + 3*333*FLEN/8, x4, x1, x2)

inst_38734:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e300003ffffffff; valaddr_reg:x3; val_offset:116202*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116202*0 + 3*334*FLEN/8, x4, x1, x2)

inst_38735:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e300007ffffffff; valaddr_reg:x3; val_offset:116205*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116205*0 + 3*335*FLEN/8, x4, x1, x2)

inst_38736:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e30000fffffffff; valaddr_reg:x3; val_offset:116208*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116208*0 + 3*336*FLEN/8, x4, x1, x2)

inst_38737:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e30001fffffffff; valaddr_reg:x3; val_offset:116211*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116211*0 + 3*337*FLEN/8, x4, x1, x2)

inst_38738:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e30003fffffffff; valaddr_reg:x3; val_offset:116214*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116214*0 + 3*338*FLEN/8, x4, x1, x2)

inst_38739:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e30007fffffffff; valaddr_reg:x3; val_offset:116217*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116217*0 + 3*339*FLEN/8, x4, x1, x2)

inst_38740:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3000ffffffffff; valaddr_reg:x3; val_offset:116220*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116220*0 + 3*340*FLEN/8, x4, x1, x2)

inst_38741:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3001ffffffffff; valaddr_reg:x3; val_offset:116223*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116223*0 + 3*341*FLEN/8, x4, x1, x2)

inst_38742:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3003ffffffffff; valaddr_reg:x3; val_offset:116226*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116226*0 + 3*342*FLEN/8, x4, x1, x2)

inst_38743:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3007ffffffffff; valaddr_reg:x3; val_offset:116229*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116229*0 + 3*343*FLEN/8, x4, x1, x2)

inst_38744:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e300fffffffffff; valaddr_reg:x3; val_offset:116232*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116232*0 + 3*344*FLEN/8, x4, x1, x2)

inst_38745:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e301fffffffffff; valaddr_reg:x3; val_offset:116235*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116235*0 + 3*345*FLEN/8, x4, x1, x2)

inst_38746:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e303fffffffffff; valaddr_reg:x3; val_offset:116238*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116238*0 + 3*346*FLEN/8, x4, x1, x2)

inst_38747:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e307fffffffffff; valaddr_reg:x3; val_offset:116241*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116241*0 + 3*347*FLEN/8, x4, x1, x2)

inst_38748:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e30ffffffffffff; valaddr_reg:x3; val_offset:116244*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116244*0 + 3*348*FLEN/8, x4, x1, x2)

inst_38749:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e31ffffffffffff; valaddr_reg:x3; val_offset:116247*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116247*0 + 3*349*FLEN/8, x4, x1, x2)

inst_38750:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e33ffffffffffff; valaddr_reg:x3; val_offset:116250*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116250*0 + 3*350*FLEN/8, x4, x1, x2)

inst_38751:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e37ffffffffffff; valaddr_reg:x3; val_offset:116253*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116253*0 + 3*351*FLEN/8, x4, x1, x2)

inst_38752:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e38000000000000; valaddr_reg:x3; val_offset:116256*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116256*0 + 3*352*FLEN/8, x4, x1, x2)

inst_38753:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3c000000000000; valaddr_reg:x3; val_offset:116259*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116259*0 + 3*353*FLEN/8, x4, x1, x2)

inst_38754:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3e000000000000; valaddr_reg:x3; val_offset:116262*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116262*0 + 3*354*FLEN/8, x4, x1, x2)

inst_38755:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3f000000000000; valaddr_reg:x3; val_offset:116265*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116265*0 + 3*355*FLEN/8, x4, x1, x2)

inst_38756:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3f800000000000; valaddr_reg:x3; val_offset:116268*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116268*0 + 3*356*FLEN/8, x4, x1, x2)

inst_38757:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3fc00000000000; valaddr_reg:x3; val_offset:116271*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116271*0 + 3*357*FLEN/8, x4, x1, x2)

inst_38758:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3fe00000000000; valaddr_reg:x3; val_offset:116274*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116274*0 + 3*358*FLEN/8, x4, x1, x2)

inst_38759:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3ff00000000000; valaddr_reg:x3; val_offset:116277*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116277*0 + 3*359*FLEN/8, x4, x1, x2)

inst_38760:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3ff80000000000; valaddr_reg:x3; val_offset:116280*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116280*0 + 3*360*FLEN/8, x4, x1, x2)

inst_38761:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3ffc0000000000; valaddr_reg:x3; val_offset:116283*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116283*0 + 3*361*FLEN/8, x4, x1, x2)

inst_38762:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3ffe0000000000; valaddr_reg:x3; val_offset:116286*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116286*0 + 3*362*FLEN/8, x4, x1, x2)

inst_38763:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3fff0000000000; valaddr_reg:x3; val_offset:116289*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116289*0 + 3*363*FLEN/8, x4, x1, x2)

inst_38764:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3fff8000000000; valaddr_reg:x3; val_offset:116292*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116292*0 + 3*364*FLEN/8, x4, x1, x2)

inst_38765:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3fffc000000000; valaddr_reg:x3; val_offset:116295*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116295*0 + 3*365*FLEN/8, x4, x1, x2)

inst_38766:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3fffe000000000; valaddr_reg:x3; val_offset:116298*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116298*0 + 3*366*FLEN/8, x4, x1, x2)

inst_38767:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3ffff000000000; valaddr_reg:x3; val_offset:116301*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116301*0 + 3*367*FLEN/8, x4, x1, x2)

inst_38768:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3ffff800000000; valaddr_reg:x3; val_offset:116304*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116304*0 + 3*368*FLEN/8, x4, x1, x2)

inst_38769:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3ffffc00000000; valaddr_reg:x3; val_offset:116307*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116307*0 + 3*369*FLEN/8, x4, x1, x2)

inst_38770:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3ffffe00000000; valaddr_reg:x3; val_offset:116310*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116310*0 + 3*370*FLEN/8, x4, x1, x2)

inst_38771:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3fffff00000000; valaddr_reg:x3; val_offset:116313*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116313*0 + 3*371*FLEN/8, x4, x1, x2)

inst_38772:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3fffff80000000; valaddr_reg:x3; val_offset:116316*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116316*0 + 3*372*FLEN/8, x4, x1, x2)

inst_38773:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3fffffc0000000; valaddr_reg:x3; val_offset:116319*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116319*0 + 3*373*FLEN/8, x4, x1, x2)

inst_38774:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3fffffe0000000; valaddr_reg:x3; val_offset:116322*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116322*0 + 3*374*FLEN/8, x4, x1, x2)

inst_38775:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3ffffff0000000; valaddr_reg:x3; val_offset:116325*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116325*0 + 3*375*FLEN/8, x4, x1, x2)

inst_38776:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3ffffff8000000; valaddr_reg:x3; val_offset:116328*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116328*0 + 3*376*FLEN/8, x4, x1, x2)

inst_38777:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3ffffffc000000; valaddr_reg:x3; val_offset:116331*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116331*0 + 3*377*FLEN/8, x4, x1, x2)

inst_38778:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3ffffffe000000; valaddr_reg:x3; val_offset:116334*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116334*0 + 3*378*FLEN/8, x4, x1, x2)

inst_38779:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3fffffff000000; valaddr_reg:x3; val_offset:116337*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116337*0 + 3*379*FLEN/8, x4, x1, x2)

inst_38780:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3fffffff800000; valaddr_reg:x3; val_offset:116340*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116340*0 + 3*380*FLEN/8, x4, x1, x2)

inst_38781:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3fffffffc00000; valaddr_reg:x3; val_offset:116343*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116343*0 + 3*381*FLEN/8, x4, x1, x2)

inst_38782:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3fffffffe00000; valaddr_reg:x3; val_offset:116346*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116346*0 + 3*382*FLEN/8, x4, x1, x2)

inst_38783:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3ffffffff00000; valaddr_reg:x3; val_offset:116349*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116349*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_38784:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3ffffffff80000; valaddr_reg:x3; val_offset:116352*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116352*0 + 3*384*FLEN/8, x4, x1, x2)

inst_38785:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3ffffffffc0000; valaddr_reg:x3; val_offset:116355*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116355*0 + 3*385*FLEN/8, x4, x1, x2)

inst_38786:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3ffffffffe0000; valaddr_reg:x3; val_offset:116358*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116358*0 + 3*386*FLEN/8, x4, x1, x2)

inst_38787:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3fffffffff0000; valaddr_reg:x3; val_offset:116361*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116361*0 + 3*387*FLEN/8, x4, x1, x2)

inst_38788:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3fffffffff8000; valaddr_reg:x3; val_offset:116364*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116364*0 + 3*388*FLEN/8, x4, x1, x2)

inst_38789:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3fffffffffc000; valaddr_reg:x3; val_offset:116367*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116367*0 + 3*389*FLEN/8, x4, x1, x2)

inst_38790:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3fffffffffe000; valaddr_reg:x3; val_offset:116370*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116370*0 + 3*390*FLEN/8, x4, x1, x2)

inst_38791:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3ffffffffff000; valaddr_reg:x3; val_offset:116373*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116373*0 + 3*391*FLEN/8, x4, x1, x2)

inst_38792:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3ffffffffff800; valaddr_reg:x3; val_offset:116376*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116376*0 + 3*392*FLEN/8, x4, x1, x2)

inst_38793:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3ffffffffffc00; valaddr_reg:x3; val_offset:116379*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116379*0 + 3*393*FLEN/8, x4, x1, x2)

inst_38794:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3ffffffffffe00; valaddr_reg:x3; val_offset:116382*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116382*0 + 3*394*FLEN/8, x4, x1, x2)

inst_38795:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3fffffffffff00; valaddr_reg:x3; val_offset:116385*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116385*0 + 3*395*FLEN/8, x4, x1, x2)

inst_38796:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3fffffffffff80; valaddr_reg:x3; val_offset:116388*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116388*0 + 3*396*FLEN/8, x4, x1, x2)

inst_38797:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3fffffffffffc0; valaddr_reg:x3; val_offset:116391*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116391*0 + 3*397*FLEN/8, x4, x1, x2)

inst_38798:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3fffffffffffe0; valaddr_reg:x3; val_offset:116394*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116394*0 + 3*398*FLEN/8, x4, x1, x2)

inst_38799:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3ffffffffffff0; valaddr_reg:x3; val_offset:116397*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116397*0 + 3*399*FLEN/8, x4, x1, x2)

inst_38800:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3ffffffffffff8; valaddr_reg:x3; val_offset:116400*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116400*0 + 3*400*FLEN/8, x4, x1, x2)

inst_38801:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3ffffffffffffc; valaddr_reg:x3; val_offset:116403*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116403*0 + 3*401*FLEN/8, x4, x1, x2)

inst_38802:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3ffffffffffffe; valaddr_reg:x3; val_offset:116406*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116406*0 + 3*402*FLEN/8, x4, x1, x2)

inst_38803:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3e3 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3e3fffffffffffff; valaddr_reg:x3; val_offset:116409*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116409*0 + 3*403*FLEN/8, x4, x1, x2)

inst_38804:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:116412*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116412*0 + 3*404*FLEN/8, x4, x1, x2)

inst_38805:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:116415*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116415*0 + 3*405*FLEN/8, x4, x1, x2)

inst_38806:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:116418*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116418*0 + 3*406*FLEN/8, x4, x1, x2)

inst_38807:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:116421*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116421*0 + 3*407*FLEN/8, x4, x1, x2)

inst_38808:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:116424*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116424*0 + 3*408*FLEN/8, x4, x1, x2)

inst_38809:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:116427*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116427*0 + 3*409*FLEN/8, x4, x1, x2)

inst_38810:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:116430*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116430*0 + 3*410*FLEN/8, x4, x1, x2)

inst_38811:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:116433*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116433*0 + 3*411*FLEN/8, x4, x1, x2)

inst_38812:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:116436*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116436*0 + 3*412*FLEN/8, x4, x1, x2)

inst_38813:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:116439*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116439*0 + 3*413*FLEN/8, x4, x1, x2)

inst_38814:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:116442*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116442*0 + 3*414*FLEN/8, x4, x1, x2)

inst_38815:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:116445*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116445*0 + 3*415*FLEN/8, x4, x1, x2)

inst_38816:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:116448*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116448*0 + 3*416*FLEN/8, x4, x1, x2)

inst_38817:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:116451*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116451*0 + 3*417*FLEN/8, x4, x1, x2)

inst_38818:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:116454*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116454*0 + 3*418*FLEN/8, x4, x1, x2)

inst_38819:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:116457*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116457*0 + 3*419*FLEN/8, x4, x1, x2)

inst_38820:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:116460*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116460*0 + 3*420*FLEN/8, x4, x1, x2)

inst_38821:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:116463*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116463*0 + 3*421*FLEN/8, x4, x1, x2)

inst_38822:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:116466*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116466*0 + 3*422*FLEN/8, x4, x1, x2)

inst_38823:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:116469*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116469*0 + 3*423*FLEN/8, x4, x1, x2)

inst_38824:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:116472*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116472*0 + 3*424*FLEN/8, x4, x1, x2)

inst_38825:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x855b136ede9ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x50a35d09e0d96 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9855b136ede9ab; op2val:0x20450a35d09e0d96;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:116475*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116475*0 + 3*425*FLEN/8, x4, x1, x2)

inst_38826:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:116478*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116478*0 + 3*426*FLEN/8, x4, x1, x2)

inst_38827:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:116481*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116481*0 + 3*427*FLEN/8, x4, x1, x2)

inst_38828:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:116484*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116484*0 + 3*428*FLEN/8, x4, x1, x2)

inst_38829:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:116487*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116487*0 + 3*429*FLEN/8, x4, x1, x2)

inst_38830:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:116490*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116490*0 + 3*430*FLEN/8, x4, x1, x2)

inst_38831:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:116493*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116493*0 + 3*431*FLEN/8, x4, x1, x2)

inst_38832:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:116496*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116496*0 + 3*432*FLEN/8, x4, x1, x2)

inst_38833:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:116499*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116499*0 + 3*433*FLEN/8, x4, x1, x2)

inst_38834:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:116502*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116502*0 + 3*434*FLEN/8, x4, x1, x2)

inst_38835:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:116505*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116505*0 + 3*435*FLEN/8, x4, x1, x2)

inst_38836:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:116508*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116508*0 + 3*436*FLEN/8, x4, x1, x2)

inst_38837:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:116511*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116511*0 + 3*437*FLEN/8, x4, x1, x2)

inst_38838:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:116514*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116514*0 + 3*438*FLEN/8, x4, x1, x2)

inst_38839:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:116517*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116517*0 + 3*439*FLEN/8, x4, x1, x2)

inst_38840:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:116520*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116520*0 + 3*440*FLEN/8, x4, x1, x2)

inst_38841:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:116523*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116523*0 + 3*441*FLEN/8, x4, x1, x2)

inst_38842:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:116526*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116526*0 + 3*442*FLEN/8, x4, x1, x2)

inst_38843:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:116529*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116529*0 + 3*443*FLEN/8, x4, x1, x2)

inst_38844:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:116532*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116532*0 + 3*444*FLEN/8, x4, x1, x2)

inst_38845:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:116535*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116535*0 + 3*445*FLEN/8, x4, x1, x2)

inst_38846:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:116538*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116538*0 + 3*446*FLEN/8, x4, x1, x2)

inst_38847:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:116541*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116541*0 + 3*447*FLEN/8, x4, x1, x2)

inst_38848:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x8370000000000000; valaddr_reg:x3; val_offset:116544*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116544*0 + 3*448*FLEN/8, x4, x1, x2)

inst_38849:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x8370000000000001; valaddr_reg:x3; val_offset:116547*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116547*0 + 3*449*FLEN/8, x4, x1, x2)

inst_38850:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x8370000000000003; valaddr_reg:x3; val_offset:116550*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116550*0 + 3*450*FLEN/8, x4, x1, x2)

inst_38851:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x8370000000000007; valaddr_reg:x3; val_offset:116553*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116553*0 + 3*451*FLEN/8, x4, x1, x2)

inst_38852:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837000000000000f; valaddr_reg:x3; val_offset:116556*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116556*0 + 3*452*FLEN/8, x4, x1, x2)

inst_38853:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837000000000001f; valaddr_reg:x3; val_offset:116559*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116559*0 + 3*453*FLEN/8, x4, x1, x2)

inst_38854:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837000000000003f; valaddr_reg:x3; val_offset:116562*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116562*0 + 3*454*FLEN/8, x4, x1, x2)

inst_38855:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837000000000007f; valaddr_reg:x3; val_offset:116565*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116565*0 + 3*455*FLEN/8, x4, x1, x2)

inst_38856:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x83700000000000ff; valaddr_reg:x3; val_offset:116568*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116568*0 + 3*456*FLEN/8, x4, x1, x2)

inst_38857:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x83700000000001ff; valaddr_reg:x3; val_offset:116571*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116571*0 + 3*457*FLEN/8, x4, x1, x2)

inst_38858:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x83700000000003ff; valaddr_reg:x3; val_offset:116574*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116574*0 + 3*458*FLEN/8, x4, x1, x2)

inst_38859:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x83700000000007ff; valaddr_reg:x3; val_offset:116577*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116577*0 + 3*459*FLEN/8, x4, x1, x2)

inst_38860:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x8370000000000fff; valaddr_reg:x3; val_offset:116580*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116580*0 + 3*460*FLEN/8, x4, x1, x2)

inst_38861:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x8370000000001fff; valaddr_reg:x3; val_offset:116583*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116583*0 + 3*461*FLEN/8, x4, x1, x2)

inst_38862:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x8370000000003fff; valaddr_reg:x3; val_offset:116586*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116586*0 + 3*462*FLEN/8, x4, x1, x2)

inst_38863:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x8370000000007fff; valaddr_reg:x3; val_offset:116589*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116589*0 + 3*463*FLEN/8, x4, x1, x2)

inst_38864:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837000000000ffff; valaddr_reg:x3; val_offset:116592*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116592*0 + 3*464*FLEN/8, x4, x1, x2)

inst_38865:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837000000001ffff; valaddr_reg:x3; val_offset:116595*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116595*0 + 3*465*FLEN/8, x4, x1, x2)

inst_38866:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837000000003ffff; valaddr_reg:x3; val_offset:116598*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116598*0 + 3*466*FLEN/8, x4, x1, x2)

inst_38867:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837000000007ffff; valaddr_reg:x3; val_offset:116601*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116601*0 + 3*467*FLEN/8, x4, x1, x2)

inst_38868:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x83700000000fffff; valaddr_reg:x3; val_offset:116604*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116604*0 + 3*468*FLEN/8, x4, x1, x2)

inst_38869:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x83700000001fffff; valaddr_reg:x3; val_offset:116607*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116607*0 + 3*469*FLEN/8, x4, x1, x2)

inst_38870:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x83700000003fffff; valaddr_reg:x3; val_offset:116610*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116610*0 + 3*470*FLEN/8, x4, x1, x2)

inst_38871:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x83700000007fffff; valaddr_reg:x3; val_offset:116613*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116613*0 + 3*471*FLEN/8, x4, x1, x2)

inst_38872:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x8370000000ffffff; valaddr_reg:x3; val_offset:116616*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116616*0 + 3*472*FLEN/8, x4, x1, x2)

inst_38873:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x8370000001ffffff; valaddr_reg:x3; val_offset:116619*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116619*0 + 3*473*FLEN/8, x4, x1, x2)

inst_38874:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x8370000003ffffff; valaddr_reg:x3; val_offset:116622*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116622*0 + 3*474*FLEN/8, x4, x1, x2)

inst_38875:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x8370000007ffffff; valaddr_reg:x3; val_offset:116625*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116625*0 + 3*475*FLEN/8, x4, x1, x2)

inst_38876:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837000000fffffff; valaddr_reg:x3; val_offset:116628*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116628*0 + 3*476*FLEN/8, x4, x1, x2)

inst_38877:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837000001fffffff; valaddr_reg:x3; val_offset:116631*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116631*0 + 3*477*FLEN/8, x4, x1, x2)

inst_38878:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837000003fffffff; valaddr_reg:x3; val_offset:116634*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116634*0 + 3*478*FLEN/8, x4, x1, x2)

inst_38879:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837000007fffffff; valaddr_reg:x3; val_offset:116637*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116637*0 + 3*479*FLEN/8, x4, x1, x2)

inst_38880:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x83700000ffffffff; valaddr_reg:x3; val_offset:116640*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116640*0 + 3*480*FLEN/8, x4, x1, x2)

inst_38881:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x83700001ffffffff; valaddr_reg:x3; val_offset:116643*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116643*0 + 3*481*FLEN/8, x4, x1, x2)

inst_38882:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x83700003ffffffff; valaddr_reg:x3; val_offset:116646*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116646*0 + 3*482*FLEN/8, x4, x1, x2)

inst_38883:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x83700007ffffffff; valaddr_reg:x3; val_offset:116649*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116649*0 + 3*483*FLEN/8, x4, x1, x2)

inst_38884:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x8370000fffffffff; valaddr_reg:x3; val_offset:116652*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116652*0 + 3*484*FLEN/8, x4, x1, x2)

inst_38885:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x8370001fffffffff; valaddr_reg:x3; val_offset:116655*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116655*0 + 3*485*FLEN/8, x4, x1, x2)

inst_38886:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x8370003fffffffff; valaddr_reg:x3; val_offset:116658*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116658*0 + 3*486*FLEN/8, x4, x1, x2)

inst_38887:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x8370007fffffffff; valaddr_reg:x3; val_offset:116661*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116661*0 + 3*487*FLEN/8, x4, x1, x2)

inst_38888:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837000ffffffffff; valaddr_reg:x3; val_offset:116664*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116664*0 + 3*488*FLEN/8, x4, x1, x2)

inst_38889:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837001ffffffffff; valaddr_reg:x3; val_offset:116667*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116667*0 + 3*489*FLEN/8, x4, x1, x2)

inst_38890:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837003ffffffffff; valaddr_reg:x3; val_offset:116670*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116670*0 + 3*490*FLEN/8, x4, x1, x2)

inst_38891:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837007ffffffffff; valaddr_reg:x3; val_offset:116673*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116673*0 + 3*491*FLEN/8, x4, x1, x2)

inst_38892:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x83700fffffffffff; valaddr_reg:x3; val_offset:116676*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116676*0 + 3*492*FLEN/8, x4, x1, x2)

inst_38893:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x83701fffffffffff; valaddr_reg:x3; val_offset:116679*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116679*0 + 3*493*FLEN/8, x4, x1, x2)

inst_38894:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x83703fffffffffff; valaddr_reg:x3; val_offset:116682*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116682*0 + 3*494*FLEN/8, x4, x1, x2)

inst_38895:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x83707fffffffffff; valaddr_reg:x3; val_offset:116685*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116685*0 + 3*495*FLEN/8, x4, x1, x2)

inst_38896:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x8370ffffffffffff; valaddr_reg:x3; val_offset:116688*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116688*0 + 3*496*FLEN/8, x4, x1, x2)

inst_38897:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x8371ffffffffffff; valaddr_reg:x3; val_offset:116691*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116691*0 + 3*497*FLEN/8, x4, x1, x2)

inst_38898:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x8373ffffffffffff; valaddr_reg:x3; val_offset:116694*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116694*0 + 3*498*FLEN/8, x4, x1, x2)

inst_38899:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x8377ffffffffffff; valaddr_reg:x3; val_offset:116697*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116697*0 + 3*499*FLEN/8, x4, x1, x2)

inst_38900:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x8378000000000000; valaddr_reg:x3; val_offset:116700*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116700*0 + 3*500*FLEN/8, x4, x1, x2)

inst_38901:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837c000000000000; valaddr_reg:x3; val_offset:116703*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116703*0 + 3*501*FLEN/8, x4, x1, x2)

inst_38902:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837e000000000000; valaddr_reg:x3; val_offset:116706*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116706*0 + 3*502*FLEN/8, x4, x1, x2)

inst_38903:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837f000000000000; valaddr_reg:x3; val_offset:116709*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116709*0 + 3*503*FLEN/8, x4, x1, x2)

inst_38904:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837f800000000000; valaddr_reg:x3; val_offset:116712*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116712*0 + 3*504*FLEN/8, x4, x1, x2)

inst_38905:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837fc00000000000; valaddr_reg:x3; val_offset:116715*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116715*0 + 3*505*FLEN/8, x4, x1, x2)

inst_38906:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837fe00000000000; valaddr_reg:x3; val_offset:116718*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116718*0 + 3*506*FLEN/8, x4, x1, x2)

inst_38907:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837ff00000000000; valaddr_reg:x3; val_offset:116721*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116721*0 + 3*507*FLEN/8, x4, x1, x2)

inst_38908:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837ff80000000000; valaddr_reg:x3; val_offset:116724*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116724*0 + 3*508*FLEN/8, x4, x1, x2)

inst_38909:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837ffc0000000000; valaddr_reg:x3; val_offset:116727*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116727*0 + 3*509*FLEN/8, x4, x1, x2)

inst_38910:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837ffe0000000000; valaddr_reg:x3; val_offset:116730*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116730*0 + 3*510*FLEN/8, x4, x1, x2)

inst_38911:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837fff0000000000; valaddr_reg:x3; val_offset:116733*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116733*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_38912:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837fff8000000000; valaddr_reg:x3; val_offset:116736*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116736*0 + 3*512*FLEN/8, x4, x1, x2)

inst_38913:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837fffc000000000; valaddr_reg:x3; val_offset:116739*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116739*0 + 3*513*FLEN/8, x4, x1, x2)

inst_38914:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837fffe000000000; valaddr_reg:x3; val_offset:116742*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116742*0 + 3*514*FLEN/8, x4, x1, x2)

inst_38915:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837ffff000000000; valaddr_reg:x3; val_offset:116745*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116745*0 + 3*515*FLEN/8, x4, x1, x2)

inst_38916:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837ffff800000000; valaddr_reg:x3; val_offset:116748*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116748*0 + 3*516*FLEN/8, x4, x1, x2)

inst_38917:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837ffffc00000000; valaddr_reg:x3; val_offset:116751*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116751*0 + 3*517*FLEN/8, x4, x1, x2)

inst_38918:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837ffffe00000000; valaddr_reg:x3; val_offset:116754*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116754*0 + 3*518*FLEN/8, x4, x1, x2)

inst_38919:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837fffff00000000; valaddr_reg:x3; val_offset:116757*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116757*0 + 3*519*FLEN/8, x4, x1, x2)

inst_38920:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837fffff80000000; valaddr_reg:x3; val_offset:116760*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116760*0 + 3*520*FLEN/8, x4, x1, x2)

inst_38921:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837fffffc0000000; valaddr_reg:x3; val_offset:116763*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116763*0 + 3*521*FLEN/8, x4, x1, x2)

inst_38922:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837fffffe0000000; valaddr_reg:x3; val_offset:116766*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116766*0 + 3*522*FLEN/8, x4, x1, x2)

inst_38923:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837ffffff0000000; valaddr_reg:x3; val_offset:116769*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116769*0 + 3*523*FLEN/8, x4, x1, x2)

inst_38924:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837ffffff8000000; valaddr_reg:x3; val_offset:116772*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116772*0 + 3*524*FLEN/8, x4, x1, x2)

inst_38925:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837ffffffc000000; valaddr_reg:x3; val_offset:116775*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116775*0 + 3*525*FLEN/8, x4, x1, x2)

inst_38926:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837ffffffe000000; valaddr_reg:x3; val_offset:116778*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116778*0 + 3*526*FLEN/8, x4, x1, x2)

inst_38927:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837fffffff000000; valaddr_reg:x3; val_offset:116781*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116781*0 + 3*527*FLEN/8, x4, x1, x2)

inst_38928:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837fffffff800000; valaddr_reg:x3; val_offset:116784*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116784*0 + 3*528*FLEN/8, x4, x1, x2)

inst_38929:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837fffffffc00000; valaddr_reg:x3; val_offset:116787*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116787*0 + 3*529*FLEN/8, x4, x1, x2)

inst_38930:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837fffffffe00000; valaddr_reg:x3; val_offset:116790*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116790*0 + 3*530*FLEN/8, x4, x1, x2)

inst_38931:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837ffffffff00000; valaddr_reg:x3; val_offset:116793*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116793*0 + 3*531*FLEN/8, x4, x1, x2)

inst_38932:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837ffffffff80000; valaddr_reg:x3; val_offset:116796*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116796*0 + 3*532*FLEN/8, x4, x1, x2)

inst_38933:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837ffffffffc0000; valaddr_reg:x3; val_offset:116799*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116799*0 + 3*533*FLEN/8, x4, x1, x2)

inst_38934:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837ffffffffe0000; valaddr_reg:x3; val_offset:116802*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116802*0 + 3*534*FLEN/8, x4, x1, x2)

inst_38935:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837fffffffff0000; valaddr_reg:x3; val_offset:116805*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116805*0 + 3*535*FLEN/8, x4, x1, x2)

inst_38936:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837fffffffff8000; valaddr_reg:x3; val_offset:116808*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116808*0 + 3*536*FLEN/8, x4, x1, x2)

inst_38937:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837fffffffffc000; valaddr_reg:x3; val_offset:116811*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116811*0 + 3*537*FLEN/8, x4, x1, x2)

inst_38938:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837fffffffffe000; valaddr_reg:x3; val_offset:116814*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116814*0 + 3*538*FLEN/8, x4, x1, x2)

inst_38939:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837ffffffffff000; valaddr_reg:x3; val_offset:116817*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116817*0 + 3*539*FLEN/8, x4, x1, x2)

inst_38940:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837ffffffffff800; valaddr_reg:x3; val_offset:116820*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116820*0 + 3*540*FLEN/8, x4, x1, x2)

inst_38941:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837ffffffffffc00; valaddr_reg:x3; val_offset:116823*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116823*0 + 3*541*FLEN/8, x4, x1, x2)

inst_38942:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837ffffffffffe00; valaddr_reg:x3; val_offset:116826*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116826*0 + 3*542*FLEN/8, x4, x1, x2)

inst_38943:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837fffffffffff00; valaddr_reg:x3; val_offset:116829*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116829*0 + 3*543*FLEN/8, x4, x1, x2)

inst_38944:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837fffffffffff80; valaddr_reg:x3; val_offset:116832*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116832*0 + 3*544*FLEN/8, x4, x1, x2)

inst_38945:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837fffffffffffc0; valaddr_reg:x3; val_offset:116835*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116835*0 + 3*545*FLEN/8, x4, x1, x2)

inst_38946:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837fffffffffffe0; valaddr_reg:x3; val_offset:116838*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116838*0 + 3*546*FLEN/8, x4, x1, x2)

inst_38947:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837ffffffffffff0; valaddr_reg:x3; val_offset:116841*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116841*0 + 3*547*FLEN/8, x4, x1, x2)

inst_38948:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837ffffffffffff8; valaddr_reg:x3; val_offset:116844*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116844*0 + 3*548*FLEN/8, x4, x1, x2)

inst_38949:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837ffffffffffffc; valaddr_reg:x3; val_offset:116847*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116847*0 + 3*549*FLEN/8, x4, x1, x2)

inst_38950:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837ffffffffffffe; valaddr_reg:x3; val_offset:116850*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116850*0 + 3*550*FLEN/8, x4, x1, x2)

inst_38951:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857d9ec886ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98857d9ec886ed; op2val:0x8000;
op3val:0x837fffffffffffff; valaddr_reg:x3; val_offset:116853*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116853*0 + 3*551*FLEN/8, x4, x1, x2)

inst_38952:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:116856*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116856*0 + 3*552*FLEN/8, x4, x1, x2)

inst_38953:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:116859*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116859*0 + 3*553*FLEN/8, x4, x1, x2)

inst_38954:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:116862*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116862*0 + 3*554*FLEN/8, x4, x1, x2)

inst_38955:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:116865*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116865*0 + 3*555*FLEN/8, x4, x1, x2)

inst_38956:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:116868*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116868*0 + 3*556*FLEN/8, x4, x1, x2)

inst_38957:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:116871*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116871*0 + 3*557*FLEN/8, x4, x1, x2)

inst_38958:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:116874*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116874*0 + 3*558*FLEN/8, x4, x1, x2)

inst_38959:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:116877*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116877*0 + 3*559*FLEN/8, x4, x1, x2)

inst_38960:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:116880*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116880*0 + 3*560*FLEN/8, x4, x1, x2)

inst_38961:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:116883*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116883*0 + 3*561*FLEN/8, x4, x1, x2)

inst_38962:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:116886*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116886*0 + 3*562*FLEN/8, x4, x1, x2)

inst_38963:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:116889*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116889*0 + 3*563*FLEN/8, x4, x1, x2)

inst_38964:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:116892*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116892*0 + 3*564*FLEN/8, x4, x1, x2)

inst_38965:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:116895*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116895*0 + 3*565*FLEN/8, x4, x1, x2)

inst_38966:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:116898*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116898*0 + 3*566*FLEN/8, x4, x1, x2)

inst_38967:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:116901*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116901*0 + 3*567*FLEN/8, x4, x1, x2)

inst_38968:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:116904*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116904*0 + 3*568*FLEN/8, x4, x1, x2)

inst_38969:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:116907*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116907*0 + 3*569*FLEN/8, x4, x1, x2)

inst_38970:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:116910*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116910*0 + 3*570*FLEN/8, x4, x1, x2)

inst_38971:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:116913*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116913*0 + 3*571*FLEN/8, x4, x1, x2)

inst_38972:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:116916*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116916*0 + 3*572*FLEN/8, x4, x1, x2)

inst_38973:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:116919*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116919*0 + 3*573*FLEN/8, x4, x1, x2)

inst_38974:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80b0000000000000; valaddr_reg:x3; val_offset:116922*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116922*0 + 3*574*FLEN/8, x4, x1, x2)

inst_38975:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80b0000000000001; valaddr_reg:x3; val_offset:116925*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116925*0 + 3*575*FLEN/8, x4, x1, x2)

inst_38976:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80b0000000000003; valaddr_reg:x3; val_offset:116928*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116928*0 + 3*576*FLEN/8, x4, x1, x2)

inst_38977:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80b0000000000007; valaddr_reg:x3; val_offset:116931*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116931*0 + 3*577*FLEN/8, x4, x1, x2)

inst_38978:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80b000000000000f; valaddr_reg:x3; val_offset:116934*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116934*0 + 3*578*FLEN/8, x4, x1, x2)

inst_38979:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80b000000000001f; valaddr_reg:x3; val_offset:116937*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116937*0 + 3*579*FLEN/8, x4, x1, x2)

inst_38980:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80b000000000003f; valaddr_reg:x3; val_offset:116940*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116940*0 + 3*580*FLEN/8, x4, x1, x2)

inst_38981:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80b000000000007f; valaddr_reg:x3; val_offset:116943*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116943*0 + 3*581*FLEN/8, x4, x1, x2)

inst_38982:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80b00000000000ff; valaddr_reg:x3; val_offset:116946*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116946*0 + 3*582*FLEN/8, x4, x1, x2)

inst_38983:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80b00000000001ff; valaddr_reg:x3; val_offset:116949*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116949*0 + 3*583*FLEN/8, x4, x1, x2)

inst_38984:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80b00000000003ff; valaddr_reg:x3; val_offset:116952*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116952*0 + 3*584*FLEN/8, x4, x1, x2)

inst_38985:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80b00000000007ff; valaddr_reg:x3; val_offset:116955*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116955*0 + 3*585*FLEN/8, x4, x1, x2)

inst_38986:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80b0000000000fff; valaddr_reg:x3; val_offset:116958*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116958*0 + 3*586*FLEN/8, x4, x1, x2)

inst_38987:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80b0000000001fff; valaddr_reg:x3; val_offset:116961*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116961*0 + 3*587*FLEN/8, x4, x1, x2)

inst_38988:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80b0000000003fff; valaddr_reg:x3; val_offset:116964*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116964*0 + 3*588*FLEN/8, x4, x1, x2)

inst_38989:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80b0000000007fff; valaddr_reg:x3; val_offset:116967*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116967*0 + 3*589*FLEN/8, x4, x1, x2)

inst_38990:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80b000000000ffff; valaddr_reg:x3; val_offset:116970*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116970*0 + 3*590*FLEN/8, x4, x1, x2)

inst_38991:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80b000000001ffff; valaddr_reg:x3; val_offset:116973*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116973*0 + 3*591*FLEN/8, x4, x1, x2)

inst_38992:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80b000000003ffff; valaddr_reg:x3; val_offset:116976*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116976*0 + 3*592*FLEN/8, x4, x1, x2)

inst_38993:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80b000000007ffff; valaddr_reg:x3; val_offset:116979*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116979*0 + 3*593*FLEN/8, x4, x1, x2)

inst_38994:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80b00000000fffff; valaddr_reg:x3; val_offset:116982*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116982*0 + 3*594*FLEN/8, x4, x1, x2)

inst_38995:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80b00000001fffff; valaddr_reg:x3; val_offset:116985*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116985*0 + 3*595*FLEN/8, x4, x1, x2)

inst_38996:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80b00000003fffff; valaddr_reg:x3; val_offset:116988*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116988*0 + 3*596*FLEN/8, x4, x1, x2)

inst_38997:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80b00000007fffff; valaddr_reg:x3; val_offset:116991*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116991*0 + 3*597*FLEN/8, x4, x1, x2)

inst_38998:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80b0000000ffffff; valaddr_reg:x3; val_offset:116994*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116994*0 + 3*598*FLEN/8, x4, x1, x2)

inst_38999:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80b0000001ffffff; valaddr_reg:x3; val_offset:116997*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 116997*0 + 3*599*FLEN/8, x4, x1, x2)

inst_39000:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80b0000003ffffff; valaddr_reg:x3; val_offset:117000*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117000*0 + 3*600*FLEN/8, x4, x1, x2)

inst_39001:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80b0000007ffffff; valaddr_reg:x3; val_offset:117003*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117003*0 + 3*601*FLEN/8, x4, x1, x2)

inst_39002:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80b000000fffffff; valaddr_reg:x3; val_offset:117006*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117006*0 + 3*602*FLEN/8, x4, x1, x2)

inst_39003:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80b000001fffffff; valaddr_reg:x3; val_offset:117009*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117009*0 + 3*603*FLEN/8, x4, x1, x2)

inst_39004:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80b000003fffffff; valaddr_reg:x3; val_offset:117012*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117012*0 + 3*604*FLEN/8, x4, x1, x2)

inst_39005:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80b000007fffffff; valaddr_reg:x3; val_offset:117015*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117015*0 + 3*605*FLEN/8, x4, x1, x2)

inst_39006:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80b00000ffffffff; valaddr_reg:x3; val_offset:117018*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117018*0 + 3*606*FLEN/8, x4, x1, x2)

inst_39007:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80b00001ffffffff; valaddr_reg:x3; val_offset:117021*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117021*0 + 3*607*FLEN/8, x4, x1, x2)

inst_39008:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80b00003ffffffff; valaddr_reg:x3; val_offset:117024*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117024*0 + 3*608*FLEN/8, x4, x1, x2)

inst_39009:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80b00007ffffffff; valaddr_reg:x3; val_offset:117027*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117027*0 + 3*609*FLEN/8, x4, x1, x2)

inst_39010:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80b0000fffffffff; valaddr_reg:x3; val_offset:117030*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117030*0 + 3*610*FLEN/8, x4, x1, x2)

inst_39011:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80b0001fffffffff; valaddr_reg:x3; val_offset:117033*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117033*0 + 3*611*FLEN/8, x4, x1, x2)

inst_39012:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80b0003fffffffff; valaddr_reg:x3; val_offset:117036*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117036*0 + 3*612*FLEN/8, x4, x1, x2)

inst_39013:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80b0007fffffffff; valaddr_reg:x3; val_offset:117039*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117039*0 + 3*613*FLEN/8, x4, x1, x2)

inst_39014:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80b000ffffffffff; valaddr_reg:x3; val_offset:117042*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117042*0 + 3*614*FLEN/8, x4, x1, x2)

inst_39015:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80b001ffffffffff; valaddr_reg:x3; val_offset:117045*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117045*0 + 3*615*FLEN/8, x4, x1, x2)

inst_39016:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80b003ffffffffff; valaddr_reg:x3; val_offset:117048*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117048*0 + 3*616*FLEN/8, x4, x1, x2)

inst_39017:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80b007ffffffffff; valaddr_reg:x3; val_offset:117051*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117051*0 + 3*617*FLEN/8, x4, x1, x2)

inst_39018:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80b00fffffffffff; valaddr_reg:x3; val_offset:117054*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117054*0 + 3*618*FLEN/8, x4, x1, x2)

inst_39019:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80b01fffffffffff; valaddr_reg:x3; val_offset:117057*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117057*0 + 3*619*FLEN/8, x4, x1, x2)

inst_39020:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80b03fffffffffff; valaddr_reg:x3; val_offset:117060*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117060*0 + 3*620*FLEN/8, x4, x1, x2)

inst_39021:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80b07fffffffffff; valaddr_reg:x3; val_offset:117063*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117063*0 + 3*621*FLEN/8, x4, x1, x2)

inst_39022:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80b0ffffffffffff; valaddr_reg:x3; val_offset:117066*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117066*0 + 3*622*FLEN/8, x4, x1, x2)

inst_39023:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80b1ffffffffffff; valaddr_reg:x3; val_offset:117069*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117069*0 + 3*623*FLEN/8, x4, x1, x2)

inst_39024:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80b3ffffffffffff; valaddr_reg:x3; val_offset:117072*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117072*0 + 3*624*FLEN/8, x4, x1, x2)

inst_39025:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80b7ffffffffffff; valaddr_reg:x3; val_offset:117075*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117075*0 + 3*625*FLEN/8, x4, x1, x2)

inst_39026:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80b8000000000000; valaddr_reg:x3; val_offset:117078*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117078*0 + 3*626*FLEN/8, x4, x1, x2)

inst_39027:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80bc000000000000; valaddr_reg:x3; val_offset:117081*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117081*0 + 3*627*FLEN/8, x4, x1, x2)

inst_39028:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80be000000000000; valaddr_reg:x3; val_offset:117084*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117084*0 + 3*628*FLEN/8, x4, x1, x2)

inst_39029:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80bf000000000000; valaddr_reg:x3; val_offset:117087*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117087*0 + 3*629*FLEN/8, x4, x1, x2)

inst_39030:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80bf800000000000; valaddr_reg:x3; val_offset:117090*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117090*0 + 3*630*FLEN/8, x4, x1, x2)

inst_39031:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80bfc00000000000; valaddr_reg:x3; val_offset:117093*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117093*0 + 3*631*FLEN/8, x4, x1, x2)

inst_39032:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80bfe00000000000; valaddr_reg:x3; val_offset:117096*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117096*0 + 3*632*FLEN/8, x4, x1, x2)

inst_39033:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80bff00000000000; valaddr_reg:x3; val_offset:117099*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117099*0 + 3*633*FLEN/8, x4, x1, x2)

inst_39034:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80bff80000000000; valaddr_reg:x3; val_offset:117102*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117102*0 + 3*634*FLEN/8, x4, x1, x2)

inst_39035:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80bffc0000000000; valaddr_reg:x3; val_offset:117105*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117105*0 + 3*635*FLEN/8, x4, x1, x2)

inst_39036:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80bffe0000000000; valaddr_reg:x3; val_offset:117108*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117108*0 + 3*636*FLEN/8, x4, x1, x2)

inst_39037:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80bfff0000000000; valaddr_reg:x3; val_offset:117111*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117111*0 + 3*637*FLEN/8, x4, x1, x2)

inst_39038:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80bfff8000000000; valaddr_reg:x3; val_offset:117114*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117114*0 + 3*638*FLEN/8, x4, x1, x2)

inst_39039:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80bfffc000000000; valaddr_reg:x3; val_offset:117117*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117117*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_39040:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80bfffe000000000; valaddr_reg:x3; val_offset:117120*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117120*0 + 3*640*FLEN/8, x4, x1, x2)

inst_39041:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80bffff000000000; valaddr_reg:x3; val_offset:117123*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117123*0 + 3*641*FLEN/8, x4, x1, x2)

inst_39042:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80bffff800000000; valaddr_reg:x3; val_offset:117126*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117126*0 + 3*642*FLEN/8, x4, x1, x2)

inst_39043:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80bffffc00000000; valaddr_reg:x3; val_offset:117129*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117129*0 + 3*643*FLEN/8, x4, x1, x2)

inst_39044:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80bffffe00000000; valaddr_reg:x3; val_offset:117132*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117132*0 + 3*644*FLEN/8, x4, x1, x2)

inst_39045:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80bfffff00000000; valaddr_reg:x3; val_offset:117135*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117135*0 + 3*645*FLEN/8, x4, x1, x2)

inst_39046:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80bfffff80000000; valaddr_reg:x3; val_offset:117138*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117138*0 + 3*646*FLEN/8, x4, x1, x2)

inst_39047:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80bfffffc0000000; valaddr_reg:x3; val_offset:117141*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117141*0 + 3*647*FLEN/8, x4, x1, x2)

inst_39048:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80bfffffe0000000; valaddr_reg:x3; val_offset:117144*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117144*0 + 3*648*FLEN/8, x4, x1, x2)

inst_39049:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80bffffff0000000; valaddr_reg:x3; val_offset:117147*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117147*0 + 3*649*FLEN/8, x4, x1, x2)

inst_39050:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80bffffff8000000; valaddr_reg:x3; val_offset:117150*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117150*0 + 3*650*FLEN/8, x4, x1, x2)

inst_39051:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80bffffffc000000; valaddr_reg:x3; val_offset:117153*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117153*0 + 3*651*FLEN/8, x4, x1, x2)

inst_39052:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80bffffffe000000; valaddr_reg:x3; val_offset:117156*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117156*0 + 3*652*FLEN/8, x4, x1, x2)

inst_39053:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80bfffffff000000; valaddr_reg:x3; val_offset:117159*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117159*0 + 3*653*FLEN/8, x4, x1, x2)

inst_39054:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80bfffffff800000; valaddr_reg:x3; val_offset:117162*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117162*0 + 3*654*FLEN/8, x4, x1, x2)

inst_39055:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80bfffffffc00000; valaddr_reg:x3; val_offset:117165*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117165*0 + 3*655*FLEN/8, x4, x1, x2)

inst_39056:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80bfffffffe00000; valaddr_reg:x3; val_offset:117168*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117168*0 + 3*656*FLEN/8, x4, x1, x2)

inst_39057:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80bffffffff00000; valaddr_reg:x3; val_offset:117171*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117171*0 + 3*657*FLEN/8, x4, x1, x2)

inst_39058:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80bffffffff80000; valaddr_reg:x3; val_offset:117174*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117174*0 + 3*658*FLEN/8, x4, x1, x2)

inst_39059:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80bffffffffc0000; valaddr_reg:x3; val_offset:117177*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117177*0 + 3*659*FLEN/8, x4, x1, x2)

inst_39060:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80bffffffffe0000; valaddr_reg:x3; val_offset:117180*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117180*0 + 3*660*FLEN/8, x4, x1, x2)

inst_39061:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80bfffffffff0000; valaddr_reg:x3; val_offset:117183*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117183*0 + 3*661*FLEN/8, x4, x1, x2)

inst_39062:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80bfffffffff8000; valaddr_reg:x3; val_offset:117186*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117186*0 + 3*662*FLEN/8, x4, x1, x2)

inst_39063:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80bfffffffffc000; valaddr_reg:x3; val_offset:117189*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117189*0 + 3*663*FLEN/8, x4, x1, x2)

inst_39064:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80bfffffffffe000; valaddr_reg:x3; val_offset:117192*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117192*0 + 3*664*FLEN/8, x4, x1, x2)

inst_39065:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80bffffffffff000; valaddr_reg:x3; val_offset:117195*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117195*0 + 3*665*FLEN/8, x4, x1, x2)

inst_39066:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80bffffffffff800; valaddr_reg:x3; val_offset:117198*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117198*0 + 3*666*FLEN/8, x4, x1, x2)

inst_39067:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80bffffffffffc00; valaddr_reg:x3; val_offset:117201*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117201*0 + 3*667*FLEN/8, x4, x1, x2)

inst_39068:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80bffffffffffe00; valaddr_reg:x3; val_offset:117204*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117204*0 + 3*668*FLEN/8, x4, x1, x2)

inst_39069:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80bfffffffffff00; valaddr_reg:x3; val_offset:117207*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117207*0 + 3*669*FLEN/8, x4, x1, x2)

inst_39070:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80bfffffffffff80; valaddr_reg:x3; val_offset:117210*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117210*0 + 3*670*FLEN/8, x4, x1, x2)

inst_39071:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80bfffffffffffc0; valaddr_reg:x3; val_offset:117213*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117213*0 + 3*671*FLEN/8, x4, x1, x2)

inst_39072:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80bfffffffffffe0; valaddr_reg:x3; val_offset:117216*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117216*0 + 3*672*FLEN/8, x4, x1, x2)

inst_39073:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80bffffffffffff0; valaddr_reg:x3; val_offset:117219*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117219*0 + 3*673*FLEN/8, x4, x1, x2)

inst_39074:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80bffffffffffff8; valaddr_reg:x3; val_offset:117222*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117222*0 + 3*674*FLEN/8, x4, x1, x2)

inst_39075:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80bffffffffffffc; valaddr_reg:x3; val_offset:117225*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117225*0 + 3*675*FLEN/8, x4, x1, x2)

inst_39076:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80bffffffffffffe; valaddr_reg:x3; val_offset:117228*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117228*0 + 3*676*FLEN/8, x4, x1, x2)

inst_39077:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f988745c9a37993; op2val:0x8000;
op3val:0x80bfffffffffffff; valaddr_reg:x3; val_offset:117231*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117231*0 + 3*677*FLEN/8, x4, x1, x2)

inst_39078:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:117234*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117234*0 + 3*678*FLEN/8, x4, x1, x2)

inst_39079:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:117237*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117237*0 + 3*679*FLEN/8, x4, x1, x2)

inst_39080:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:117240*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117240*0 + 3*680*FLEN/8, x4, x1, x2)

inst_39081:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:117243*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117243*0 + 3*681*FLEN/8, x4, x1, x2)

inst_39082:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:117246*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117246*0 + 3*682*FLEN/8, x4, x1, x2)

inst_39083:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:117249*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117249*0 + 3*683*FLEN/8, x4, x1, x2)

inst_39084:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:117252*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117252*0 + 3*684*FLEN/8, x4, x1, x2)

inst_39085:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:117255*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117255*0 + 3*685*FLEN/8, x4, x1, x2)

inst_39086:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:117258*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117258*0 + 3*686*FLEN/8, x4, x1, x2)

inst_39087:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:117261*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117261*0 + 3*687*FLEN/8, x4, x1, x2)

inst_39088:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:117264*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117264*0 + 3*688*FLEN/8, x4, x1, x2)

inst_39089:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:117267*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117267*0 + 3*689*FLEN/8, x4, x1, x2)

inst_39090:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:117270*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117270*0 + 3*690*FLEN/8, x4, x1, x2)

inst_39091:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:117273*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117273*0 + 3*691*FLEN/8, x4, x1, x2)

inst_39092:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:117276*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117276*0 + 3*692*FLEN/8, x4, x1, x2)

inst_39093:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:117279*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117279*0 + 3*693*FLEN/8, x4, x1, x2)

inst_39094:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:117282*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117282*0 + 3*694*FLEN/8, x4, x1, x2)

inst_39095:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:117285*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117285*0 + 3*695*FLEN/8, x4, x1, x2)

inst_39096:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:117288*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117288*0 + 3*696*FLEN/8, x4, x1, x2)

inst_39097:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:117291*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117291*0 + 3*697*FLEN/8, x4, x1, x2)

inst_39098:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:117294*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117294*0 + 3*698*FLEN/8, x4, x1, x2)

inst_39099:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:117297*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117297*0 + 3*699*FLEN/8, x4, x1, x2)

inst_39100:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x170000000000000; valaddr_reg:x3; val_offset:117300*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117300*0 + 3*700*FLEN/8, x4, x1, x2)

inst_39101:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x170000000000001; valaddr_reg:x3; val_offset:117303*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117303*0 + 3*701*FLEN/8, x4, x1, x2)

inst_39102:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x170000000000003; valaddr_reg:x3; val_offset:117306*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117306*0 + 3*702*FLEN/8, x4, x1, x2)

inst_39103:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x170000000000007; valaddr_reg:x3; val_offset:117309*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117309*0 + 3*703*FLEN/8, x4, x1, x2)

inst_39104:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x17000000000000f; valaddr_reg:x3; val_offset:117312*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117312*0 + 3*704*FLEN/8, x4, x1, x2)

inst_39105:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x17000000000001f; valaddr_reg:x3; val_offset:117315*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117315*0 + 3*705*FLEN/8, x4, x1, x2)

inst_39106:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x17000000000003f; valaddr_reg:x3; val_offset:117318*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117318*0 + 3*706*FLEN/8, x4, x1, x2)

inst_39107:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x17000000000007f; valaddr_reg:x3; val_offset:117321*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117321*0 + 3*707*FLEN/8, x4, x1, x2)

inst_39108:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x1700000000000ff; valaddr_reg:x3; val_offset:117324*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117324*0 + 3*708*FLEN/8, x4, x1, x2)

inst_39109:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x1700000000001ff; valaddr_reg:x3; val_offset:117327*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117327*0 + 3*709*FLEN/8, x4, x1, x2)

inst_39110:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x1700000000003ff; valaddr_reg:x3; val_offset:117330*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117330*0 + 3*710*FLEN/8, x4, x1, x2)

inst_39111:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x1700000000007ff; valaddr_reg:x3; val_offset:117333*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117333*0 + 3*711*FLEN/8, x4, x1, x2)

inst_39112:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x170000000000fff; valaddr_reg:x3; val_offset:117336*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117336*0 + 3*712*FLEN/8, x4, x1, x2)

inst_39113:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x170000000001fff; valaddr_reg:x3; val_offset:117339*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117339*0 + 3*713*FLEN/8, x4, x1, x2)

inst_39114:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x170000000003fff; valaddr_reg:x3; val_offset:117342*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117342*0 + 3*714*FLEN/8, x4, x1, x2)

inst_39115:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x170000000007fff; valaddr_reg:x3; val_offset:117345*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117345*0 + 3*715*FLEN/8, x4, x1, x2)

inst_39116:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x17000000000ffff; valaddr_reg:x3; val_offset:117348*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117348*0 + 3*716*FLEN/8, x4, x1, x2)

inst_39117:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x17000000001ffff; valaddr_reg:x3; val_offset:117351*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117351*0 + 3*717*FLEN/8, x4, x1, x2)

inst_39118:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x17000000003ffff; valaddr_reg:x3; val_offset:117354*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117354*0 + 3*718*FLEN/8, x4, x1, x2)

inst_39119:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x17000000007ffff; valaddr_reg:x3; val_offset:117357*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117357*0 + 3*719*FLEN/8, x4, x1, x2)

inst_39120:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x1700000000fffff; valaddr_reg:x3; val_offset:117360*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117360*0 + 3*720*FLEN/8, x4, x1, x2)

inst_39121:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x1700000001fffff; valaddr_reg:x3; val_offset:117363*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117363*0 + 3*721*FLEN/8, x4, x1, x2)

inst_39122:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x1700000003fffff; valaddr_reg:x3; val_offset:117366*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117366*0 + 3*722*FLEN/8, x4, x1, x2)

inst_39123:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x1700000007fffff; valaddr_reg:x3; val_offset:117369*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117369*0 + 3*723*FLEN/8, x4, x1, x2)

inst_39124:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x170000000ffffff; valaddr_reg:x3; val_offset:117372*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117372*0 + 3*724*FLEN/8, x4, x1, x2)

inst_39125:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x170000001ffffff; valaddr_reg:x3; val_offset:117375*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117375*0 + 3*725*FLEN/8, x4, x1, x2)

inst_39126:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x170000003ffffff; valaddr_reg:x3; val_offset:117378*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117378*0 + 3*726*FLEN/8, x4, x1, x2)

inst_39127:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x170000007ffffff; valaddr_reg:x3; val_offset:117381*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117381*0 + 3*727*FLEN/8, x4, x1, x2)

inst_39128:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x17000000fffffff; valaddr_reg:x3; val_offset:117384*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117384*0 + 3*728*FLEN/8, x4, x1, x2)

inst_39129:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x17000001fffffff; valaddr_reg:x3; val_offset:117387*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117387*0 + 3*729*FLEN/8, x4, x1, x2)

inst_39130:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x17000003fffffff; valaddr_reg:x3; val_offset:117390*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117390*0 + 3*730*FLEN/8, x4, x1, x2)

inst_39131:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x17000007fffffff; valaddr_reg:x3; val_offset:117393*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117393*0 + 3*731*FLEN/8, x4, x1, x2)

inst_39132:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x1700000ffffffff; valaddr_reg:x3; val_offset:117396*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117396*0 + 3*732*FLEN/8, x4, x1, x2)

inst_39133:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x1700001ffffffff; valaddr_reg:x3; val_offset:117399*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117399*0 + 3*733*FLEN/8, x4, x1, x2)

inst_39134:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x1700003ffffffff; valaddr_reg:x3; val_offset:117402*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117402*0 + 3*734*FLEN/8, x4, x1, x2)

inst_39135:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x1700007ffffffff; valaddr_reg:x3; val_offset:117405*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117405*0 + 3*735*FLEN/8, x4, x1, x2)

inst_39136:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x170000fffffffff; valaddr_reg:x3; val_offset:117408*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117408*0 + 3*736*FLEN/8, x4, x1, x2)

inst_39137:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x170001fffffffff; valaddr_reg:x3; val_offset:117411*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117411*0 + 3*737*FLEN/8, x4, x1, x2)

inst_39138:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x170003fffffffff; valaddr_reg:x3; val_offset:117414*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117414*0 + 3*738*FLEN/8, x4, x1, x2)

inst_39139:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x170007fffffffff; valaddr_reg:x3; val_offset:117417*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117417*0 + 3*739*FLEN/8, x4, x1, x2)

inst_39140:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x17000ffffffffff; valaddr_reg:x3; val_offset:117420*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117420*0 + 3*740*FLEN/8, x4, x1, x2)

inst_39141:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x17001ffffffffff; valaddr_reg:x3; val_offset:117423*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117423*0 + 3*741*FLEN/8, x4, x1, x2)

inst_39142:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x17003ffffffffff; valaddr_reg:x3; val_offset:117426*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117426*0 + 3*742*FLEN/8, x4, x1, x2)

inst_39143:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x17007ffffffffff; valaddr_reg:x3; val_offset:117429*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117429*0 + 3*743*FLEN/8, x4, x1, x2)

inst_39144:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x1700fffffffffff; valaddr_reg:x3; val_offset:117432*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117432*0 + 3*744*FLEN/8, x4, x1, x2)

inst_39145:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x1701fffffffffff; valaddr_reg:x3; val_offset:117435*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117435*0 + 3*745*FLEN/8, x4, x1, x2)

inst_39146:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x1703fffffffffff; valaddr_reg:x3; val_offset:117438*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117438*0 + 3*746*FLEN/8, x4, x1, x2)

inst_39147:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x1707fffffffffff; valaddr_reg:x3; val_offset:117441*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117441*0 + 3*747*FLEN/8, x4, x1, x2)

inst_39148:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x170ffffffffffff; valaddr_reg:x3; val_offset:117444*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117444*0 + 3*748*FLEN/8, x4, x1, x2)

inst_39149:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x171ffffffffffff; valaddr_reg:x3; val_offset:117447*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117447*0 + 3*749*FLEN/8, x4, x1, x2)

inst_39150:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x173ffffffffffff; valaddr_reg:x3; val_offset:117450*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117450*0 + 3*750*FLEN/8, x4, x1, x2)

inst_39151:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x177ffffffffffff; valaddr_reg:x3; val_offset:117453*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117453*0 + 3*751*FLEN/8, x4, x1, x2)

inst_39152:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x178000000000000; valaddr_reg:x3; val_offset:117456*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117456*0 + 3*752*FLEN/8, x4, x1, x2)

inst_39153:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x17c000000000000; valaddr_reg:x3; val_offset:117459*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117459*0 + 3*753*FLEN/8, x4, x1, x2)

inst_39154:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x17e000000000000; valaddr_reg:x3; val_offset:117462*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117462*0 + 3*754*FLEN/8, x4, x1, x2)

inst_39155:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x17f000000000000; valaddr_reg:x3; val_offset:117465*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117465*0 + 3*755*FLEN/8, x4, x1, x2)

inst_39156:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x17f800000000000; valaddr_reg:x3; val_offset:117468*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117468*0 + 3*756*FLEN/8, x4, x1, x2)

inst_39157:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x17fc00000000000; valaddr_reg:x3; val_offset:117471*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117471*0 + 3*757*FLEN/8, x4, x1, x2)

inst_39158:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x17fe00000000000; valaddr_reg:x3; val_offset:117474*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117474*0 + 3*758*FLEN/8, x4, x1, x2)

inst_39159:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x17ff00000000000; valaddr_reg:x3; val_offset:117477*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117477*0 + 3*759*FLEN/8, x4, x1, x2)

inst_39160:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x17ff80000000000; valaddr_reg:x3; val_offset:117480*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117480*0 + 3*760*FLEN/8, x4, x1, x2)

inst_39161:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x17ffc0000000000; valaddr_reg:x3; val_offset:117483*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117483*0 + 3*761*FLEN/8, x4, x1, x2)

inst_39162:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x17ffe0000000000; valaddr_reg:x3; val_offset:117486*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117486*0 + 3*762*FLEN/8, x4, x1, x2)

inst_39163:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x17fff0000000000; valaddr_reg:x3; val_offset:117489*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117489*0 + 3*763*FLEN/8, x4, x1, x2)

inst_39164:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x17fff8000000000; valaddr_reg:x3; val_offset:117492*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117492*0 + 3*764*FLEN/8, x4, x1, x2)

inst_39165:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x17fffc000000000; valaddr_reg:x3; val_offset:117495*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117495*0 + 3*765*FLEN/8, x4, x1, x2)

inst_39166:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x17fffe000000000; valaddr_reg:x3; val_offset:117498*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117498*0 + 3*766*FLEN/8, x4, x1, x2)

inst_39167:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x89312dc1ed591 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f989312dc1ed591; op2val:0x0;
op3val:0x17ffff000000000; valaddr_reg:x3; val_offset:117501*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117501*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252060841644392448,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252131210388570112,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252166394760658944,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252183986946703360,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252192783039725568,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252197181086236672,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252199380109492224,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252200479621120000,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201029376933888,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201304254840832,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201441693794304,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201510413271040,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201544773009408,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201561952878592,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201570542813184,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201574837780480,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201576985264128,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201578059005952,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201578595876864,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201578864312320,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201578998530048,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579065638912,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579099193344,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579115970560,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579124359168,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579128553472,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579130650624,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579131699200,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132223488,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132485632,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132616704,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132682240,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132715008,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132731392,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132739584,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132743680,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132745728,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132746752,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747264,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747520,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747648,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747712,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747744,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747760,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747768,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747772,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747774,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747775,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4359484439294640128,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4359484439294640129,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4359484439294640131,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4359484439294640135,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4359484439294640143,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4359484439294640159,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4359484439294640191,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4359484439294640255,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4359484439294640383,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4359484439294640639,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4359484439294641151,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4359484439294642175,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4359484439294644223,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4359484439294648319,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4359484439294656511,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4359484439294672895,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4359484439294705663,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4359484439294771199,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4359484439294902271,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4359484439295164415,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4359484439295688703,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4359484439296737279,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4359484439298834431,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4359484439303028735,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4359484439311417343,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4359484439328194559,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4359484439361748991,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4359484439428857855,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4359484439563075583,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4359484439831511039,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4359484440368381951,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4359484441442123775,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4359484443589607423,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4359484447884574719,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4359484456474509311,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4359484473654378495,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4359484508014116863,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4359484576733593599,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4359484714172547071,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4359484989050454015,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4359485538806267903,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4359486638317895679,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4359488837341151231,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4359493235387662335,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4359502031480684543,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4359519623666728959,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4359554808038817791,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4359625176782995455,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4359765914271350783,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4360047389248061439,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4360610339201482751,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4361736239108325375,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4361736239108325376,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4362862139015168000,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4363425088968589312,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4363706563945299968,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4363847301433655296,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4363917670177832960,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4363952854549921792,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4363970446735966208,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4363979242828988416,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4363983640875499520,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4363985839898755072,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4363986939410382848,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4363987489166196736,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4363987764044103680,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4363987901483057152,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4363987970202533888,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4363988004562272256,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4363988021742141440,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4363988030332076032,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4363988034627043328,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4363988036774526976,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4363988037848268800,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4363988038385139712,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4363988038653575168,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4363988038787792896,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4363988038854901760,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4363988038888456192,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4363988038905233408,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4363988038913622016,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4363988038917816320,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4363988038919913472,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4363988038920962048,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4363988038921486336,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4363988038921748480,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4363988038921879552,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4363988038921945088,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4363988038921977856,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4363988038921994240,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4363988038922002432,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4363988038922006528,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4363988038922008576,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4363988038922009600,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4363988038922010112,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4363988038922010368,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4363988038922010496,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4363988038922010560,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4363988038922010592,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4363988038922010608,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4363988038922010616,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4363988038922010620,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4363988038922010622,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4363988038922010623,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6888331897801612979,64,FLEN)
NAN_BOXED(2325291570890962767,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481984,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481985,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481987,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481991,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481999,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509482015,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509482047,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509482111,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509482239,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509482495,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509483007,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509484031,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509486079,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509490175,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509498367,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509514751,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509547519,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509613055,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509744127,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398510006271,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398510530559,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398511579135,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398513676287,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398517870591,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398526259199,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398543036415,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398576590847,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398643699711,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398777917439,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014399046352895,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014399583223807,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014400656965631,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014402804449279,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014407099416575,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014415689351167,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014432869220351,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014467228958719,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014535948435455,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014673387388927,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014948265295871,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18015498021109759,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18016597532737535,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18018796555993087,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18023194602504191,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18031990695526399,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18049582881570815,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18084767253659647,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18155135997837311,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18295873486192639,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18577348462903295,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(19140298416324607,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(20266198323167231,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(20266198323167232,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(21392098230009856,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(21955048183431168,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22236523160141824,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22377260648497152,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22447629392674816,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22482813764763648,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22500405950808064,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22509202043830272,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22513600090341376,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22515799113596928,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22516898625224704,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517448381038592,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517723258945536,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517860697899008,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517929417375744,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517963777114112,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517980956983296,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517989546917888,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517993841885184,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517995989368832,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517997063110656,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517997599981568,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517997868417024,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998002634752,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998069743616,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998103298048,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998120075264,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998128463872,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998132658176,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998134755328,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998135803904,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136328192,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136590336,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136721408,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136786944,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136819712,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136836096,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136844288,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136848384,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136850432,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136851456,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136851968,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852224,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852352,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852416,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852448,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852464,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852472,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852476,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852478,64,FLEN)
NAN_BOXED(6888338770535337519,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998136852479,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4481081629233643520,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4481081629233643521,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4481081629233643523,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4481081629233643527,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4481081629233643535,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4481081629233643551,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4481081629233643583,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4481081629233643647,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4481081629233643775,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4481081629233644031,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4481081629233644543,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4481081629233645567,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4481081629233647615,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4481081629233651711,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4481081629233659903,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4481081629233676287,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4481081629233709055,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4481081629233774591,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4481081629233905663,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4481081629234167807,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4481081629234692095,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4481081629235740671,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4481081629237837823,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4481081629242032127,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4481081629250420735,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4481081629267197951,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4481081629300752383,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4481081629367861247,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4481081629502078975,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4481081629770514431,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4481081630307385343,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4481081631381127167,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4481081633528610815,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4481081637823578111,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4481081646413512703,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4481081663593381887,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4481081697953120255,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4481081766672596991,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4481081904111550463,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4481082178989457407,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4481082728745271295,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4481083828256899071,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4481086027280154623,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4481090425326665727,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4481099221419687935,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4481116813605732351,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4481151997977821183,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4481222366721998847,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4481363104210354175,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4481644579187064831,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4482207529140486143,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4483333429047328767,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4483333429047328768,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4484459328954171392,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4485022278907592704,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4485303753884303360,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4485444491372658688,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4485514860116836352,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4485550044488925184,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4485567636674969600,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4485576432767991808,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4485580830814502912,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4485583029837758464,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4485584129349386240,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4485584679105200128,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4485584953983107072,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4485585091422060544,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4485585160141537280,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4485585194501275648,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4485585211681144832,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4485585220271079424,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4485585224566046720,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4485585226713530368,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4485585227787272192,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4485585228324143104,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4485585228592578560,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4485585228726796288,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4485585228793905152,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4485585228827459584,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4485585228844236800,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4485585228852625408,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4485585228856819712,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4485585228858916864,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4485585228859965440,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4485585228860489728,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4485585228860751872,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4485585228860882944,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4485585228860948480,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4485585228860981248,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4485585228860997632,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4485585228861005824,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4485585228861009920,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4485585228861011968,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4485585228861012992,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4485585228861013504,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4485585228861013760,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4485585228861013888,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4485585228861013952,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4485585228861013984,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4485585228861014000,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4485585228861014008,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4485585228861014012,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4485585228861014014,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4485585228861014015,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6888349849682307499,64,FLEN)
NAN_BOXED(2325276008856292758,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153088,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153089,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153091,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153095,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153103,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153119,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153151,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153215,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153343,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153599,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360154111,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360155135,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360157183,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360161279,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360169471,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360185855,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360218623,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360284159,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360415231,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360677375,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016361201663,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016362250239,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016364347391,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016368541695,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016376930303,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016393707519,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016427261951,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016494370815,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016628588543,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016897023999,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070017433894911,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070018507636735,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070020655120383,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070024950087679,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070033540022271,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070050719891455,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070085079629823,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070153799106559,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070291238060031,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070566115966975,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471071115871780863,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471072215383408639,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471074414406664191,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471078812453175295,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471087608546197503,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471105200732241919,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471140385104330751,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471210753848508415,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471351491336863743,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471632966313574399,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9472195916266995711,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9473321816173838335,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9473321816173838336,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9474447716080680960,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475010666034102272,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475292141010812928,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475432878499168256,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475503247243345920,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475538431615434752,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475556023801479168,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475564819894501376,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475569217941012480,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475571416964268032,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475572516475895808,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573066231709696,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573341109616640,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573478548570112,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573547268046848,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573581627785216,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573598807654400,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573607397588992,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573611692556288,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573613840039936,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573614913781760,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615450652672,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615719088128,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615853305856,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615920414720,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615953969152,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615970746368,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615979134976,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615983329280,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615985426432,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615986475008,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615986999296,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987261440,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987392512,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987458048,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987490816,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987507200,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987515392,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987519488,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987521536,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987522560,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523072,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523328,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523456,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523520,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523552,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523568,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523576,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523580,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523582,64,FLEN)
NAN_BOXED(6888402404644521709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523583,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851264,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851265,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851267,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851271,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851279,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851295,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851327,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851391,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851519,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851775,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755852287,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755853311,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755855359,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755859455,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755867647,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755884031,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755916799,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755982335,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632756113407,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632756375551,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632756899839,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632757948415,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632760045567,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632764239871,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632772628479,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632789405695,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632822960127,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632890068991,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911633024286719,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911633292722175,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911633829593087,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911634903334911,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911637050818559,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911641345785855,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911649935720447,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911667115589631,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911701475327999,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911770194804735,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911907633758207,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272912182511665151,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272912732267479039,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272913831779106815,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272916030802362367,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272920428848873471,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272929224941895679,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272946817127940095,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272982001500028927,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9273052370244206591,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9273193107732561919,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9273474582709272575,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9274037532662693887,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9275163432569536511,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9275163432569536512,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9276289332476379136,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9276852282429800448,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277133757406511104,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277274494894866432,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277344863639044096,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277380048011132928,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277397640197177344,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277406436290199552,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277410834336710656,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277413033359966208,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277414132871593984,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277414682627407872,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277414957505314816,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415094944268288,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415163663745024,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415198023483392,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415215203352576,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415223793287168,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415228088254464,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415230235738112,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415231309479936,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415231846350848,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232114786304,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232249004032,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232316112896,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232349667328,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232366444544,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232374833152,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232379027456,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232381124608,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232382173184,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232382697472,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232382959616,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383090688,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383156224,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383188992,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383205376,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383213568,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383217664,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383219712,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383220736,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383221248,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383221504,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383221632,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383221696,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383221728,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383221744,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383221752,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383221756,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383221758,64,FLEN)
NAN_BOXED(6888404363868600723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383221759,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521408,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521409,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521411,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521415,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521423,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521439,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521471,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521535,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521663,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521919,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429522431,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429523455,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429525503,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429529599,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429537791,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429554175,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429586943,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429652479,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429783551,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791430045695,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791430569983,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791431618559,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791433715711,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791437910015,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791446298623,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791463075839,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791496630271,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791563739135,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791697956863,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791966392319,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582792503263231,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582793577005055,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582795724488703,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582800019455999,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582808609390591,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582825789259775,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582860148998143,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582928868474879,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103583066307428351,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103583341185335295,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103583890941149183,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103584990452776959,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103587189476032511,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103591587522543615,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103600383615565823,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103617975801610239,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103653160173699071,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103723528917876735,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103864266406232063,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(104145741382942719,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(104708691336364031,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(105834591243206655,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(105834591243206656,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(106960491150049280,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(107523441103470592,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(107804916080181248,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(107945653568536576,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108016022312714240,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108051206684803072,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108068798870847488,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108077594963869696,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108081993010380800,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108084192033636352,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108085291545264128,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108085841301078016,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086116178984960,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086253617938432,64,FLEN)
NAN_BOXED(6888417339274876305,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086322337415168,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
