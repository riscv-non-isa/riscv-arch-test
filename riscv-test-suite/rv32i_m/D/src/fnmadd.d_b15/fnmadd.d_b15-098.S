
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:39 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_74496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x173ffffffffffff; valaddr_reg:x3; val_offset:223488*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223488*0 + 3*0*FLEN/8, x4, x1, x2)

inst_74497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x177ffffffffffff; valaddr_reg:x3; val_offset:223491*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223491*0 + 3*1*FLEN/8, x4, x1, x2)

inst_74498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x178000000000000; valaddr_reg:x3; val_offset:223494*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223494*0 + 3*2*FLEN/8, x4, x1, x2)

inst_74499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x17c000000000000; valaddr_reg:x3; val_offset:223497*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223497*0 + 3*3*FLEN/8, x4, x1, x2)

inst_74500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x17e000000000000; valaddr_reg:x3; val_offset:223500*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223500*0 + 3*4*FLEN/8, x4, x1, x2)

inst_74501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x17f000000000000; valaddr_reg:x3; val_offset:223503*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223503*0 + 3*5*FLEN/8, x4, x1, x2)

inst_74502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x17f800000000000; valaddr_reg:x3; val_offset:223506*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223506*0 + 3*6*FLEN/8, x4, x1, x2)

inst_74503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x17fc00000000000; valaddr_reg:x3; val_offset:223509*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223509*0 + 3*7*FLEN/8, x4, x1, x2)

inst_74504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x17fe00000000000; valaddr_reg:x3; val_offset:223512*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223512*0 + 3*8*FLEN/8, x4, x1, x2)

inst_74505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x17ff00000000000; valaddr_reg:x3; val_offset:223515*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223515*0 + 3*9*FLEN/8, x4, x1, x2)

inst_74506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x17ff80000000000; valaddr_reg:x3; val_offset:223518*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223518*0 + 3*10*FLEN/8, x4, x1, x2)

inst_74507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x17ffc0000000000; valaddr_reg:x3; val_offset:223521*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223521*0 + 3*11*FLEN/8, x4, x1, x2)

inst_74508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x17ffe0000000000; valaddr_reg:x3; val_offset:223524*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223524*0 + 3*12*FLEN/8, x4, x1, x2)

inst_74509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x17fff0000000000; valaddr_reg:x3; val_offset:223527*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223527*0 + 3*13*FLEN/8, x4, x1, x2)

inst_74510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x17fff8000000000; valaddr_reg:x3; val_offset:223530*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223530*0 + 3*14*FLEN/8, x4, x1, x2)

inst_74511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x17fffc000000000; valaddr_reg:x3; val_offset:223533*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223533*0 + 3*15*FLEN/8, x4, x1, x2)

inst_74512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x17fffe000000000; valaddr_reg:x3; val_offset:223536*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223536*0 + 3*16*FLEN/8, x4, x1, x2)

inst_74513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x17ffff000000000; valaddr_reg:x3; val_offset:223539*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223539*0 + 3*17*FLEN/8, x4, x1, x2)

inst_74514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x17ffff800000000; valaddr_reg:x3; val_offset:223542*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223542*0 + 3*18*FLEN/8, x4, x1, x2)

inst_74515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x17ffffc00000000; valaddr_reg:x3; val_offset:223545*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223545*0 + 3*19*FLEN/8, x4, x1, x2)

inst_74516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x17ffffe00000000; valaddr_reg:x3; val_offset:223548*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223548*0 + 3*20*FLEN/8, x4, x1, x2)

inst_74517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x17fffff00000000; valaddr_reg:x3; val_offset:223551*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223551*0 + 3*21*FLEN/8, x4, x1, x2)

inst_74518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x17fffff80000000; valaddr_reg:x3; val_offset:223554*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223554*0 + 3*22*FLEN/8, x4, x1, x2)

inst_74519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x17fffffc0000000; valaddr_reg:x3; val_offset:223557*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223557*0 + 3*23*FLEN/8, x4, x1, x2)

inst_74520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x17fffffe0000000; valaddr_reg:x3; val_offset:223560*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223560*0 + 3*24*FLEN/8, x4, x1, x2)

inst_74521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x17ffffff0000000; valaddr_reg:x3; val_offset:223563*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223563*0 + 3*25*FLEN/8, x4, x1, x2)

inst_74522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x17ffffff8000000; valaddr_reg:x3; val_offset:223566*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223566*0 + 3*26*FLEN/8, x4, x1, x2)

inst_74523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x17ffffffc000000; valaddr_reg:x3; val_offset:223569*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223569*0 + 3*27*FLEN/8, x4, x1, x2)

inst_74524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x17ffffffe000000; valaddr_reg:x3; val_offset:223572*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223572*0 + 3*28*FLEN/8, x4, x1, x2)

inst_74525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x17fffffff000000; valaddr_reg:x3; val_offset:223575*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223575*0 + 3*29*FLEN/8, x4, x1, x2)

inst_74526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x17fffffff800000; valaddr_reg:x3; val_offset:223578*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223578*0 + 3*30*FLEN/8, x4, x1, x2)

inst_74527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x17fffffffc00000; valaddr_reg:x3; val_offset:223581*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223581*0 + 3*31*FLEN/8, x4, x1, x2)

inst_74528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x17fffffffe00000; valaddr_reg:x3; val_offset:223584*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223584*0 + 3*32*FLEN/8, x4, x1, x2)

inst_74529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x17ffffffff00000; valaddr_reg:x3; val_offset:223587*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223587*0 + 3*33*FLEN/8, x4, x1, x2)

inst_74530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x17ffffffff80000; valaddr_reg:x3; val_offset:223590*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223590*0 + 3*34*FLEN/8, x4, x1, x2)

inst_74531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x17ffffffffc0000; valaddr_reg:x3; val_offset:223593*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223593*0 + 3*35*FLEN/8, x4, x1, x2)

inst_74532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x17ffffffffe0000; valaddr_reg:x3; val_offset:223596*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223596*0 + 3*36*FLEN/8, x4, x1, x2)

inst_74533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x17fffffffff0000; valaddr_reg:x3; val_offset:223599*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223599*0 + 3*37*FLEN/8, x4, x1, x2)

inst_74534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x17fffffffff8000; valaddr_reg:x3; val_offset:223602*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223602*0 + 3*38*FLEN/8, x4, x1, x2)

inst_74535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x17fffffffffc000; valaddr_reg:x3; val_offset:223605*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223605*0 + 3*39*FLEN/8, x4, x1, x2)

inst_74536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x17fffffffffe000; valaddr_reg:x3; val_offset:223608*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223608*0 + 3*40*FLEN/8, x4, x1, x2)

inst_74537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x17ffffffffff000; valaddr_reg:x3; val_offset:223611*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223611*0 + 3*41*FLEN/8, x4, x1, x2)

inst_74538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x17ffffffffff800; valaddr_reg:x3; val_offset:223614*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223614*0 + 3*42*FLEN/8, x4, x1, x2)

inst_74539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x17ffffffffffc00; valaddr_reg:x3; val_offset:223617*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223617*0 + 3*43*FLEN/8, x4, x1, x2)

inst_74540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x17ffffffffffe00; valaddr_reg:x3; val_offset:223620*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223620*0 + 3*44*FLEN/8, x4, x1, x2)

inst_74541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x17fffffffffff00; valaddr_reg:x3; val_offset:223623*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223623*0 + 3*45*FLEN/8, x4, x1, x2)

inst_74542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x17fffffffffff80; valaddr_reg:x3; val_offset:223626*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223626*0 + 3*46*FLEN/8, x4, x1, x2)

inst_74543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x17fffffffffffc0; valaddr_reg:x3; val_offset:223629*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223629*0 + 3*47*FLEN/8, x4, x1, x2)

inst_74544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x17fffffffffffe0; valaddr_reg:x3; val_offset:223632*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223632*0 + 3*48*FLEN/8, x4, x1, x2)

inst_74545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x17ffffffffffff0; valaddr_reg:x3; val_offset:223635*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223635*0 + 3*49*FLEN/8, x4, x1, x2)

inst_74546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x17ffffffffffff8; valaddr_reg:x3; val_offset:223638*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223638*0 + 3*50*FLEN/8, x4, x1, x2)

inst_74547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x17ffffffffffffc; valaddr_reg:x3; val_offset:223641*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223641*0 + 3*51*FLEN/8, x4, x1, x2)

inst_74548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x17ffffffffffffe; valaddr_reg:x3; val_offset:223644*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223644*0 + 3*52*FLEN/8, x4, x1, x2)

inst_74549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73a2f3c1dbcdd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa73a2f3c1dbcdd; op2val:0x0;
op3val:0x17fffffffffffff; valaddr_reg:x3; val_offset:223647*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223647*0 + 3*53*FLEN/8, x4, x1, x2)

inst_74550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:223650*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223650*0 + 3*54*FLEN/8, x4, x1, x2)

inst_74551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:223653*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223653*0 + 3*55*FLEN/8, x4, x1, x2)

inst_74552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:223656*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223656*0 + 3*56*FLEN/8, x4, x1, x2)

inst_74553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:223659*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223659*0 + 3*57*FLEN/8, x4, x1, x2)

inst_74554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:223662*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223662*0 + 3*58*FLEN/8, x4, x1, x2)

inst_74555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:223665*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223665*0 + 3*59*FLEN/8, x4, x1, x2)

inst_74556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:223668*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223668*0 + 3*60*FLEN/8, x4, x1, x2)

inst_74557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:223671*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223671*0 + 3*61*FLEN/8, x4, x1, x2)

inst_74558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:223674*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223674*0 + 3*62*FLEN/8, x4, x1, x2)

inst_74559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:223677*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223677*0 + 3*63*FLEN/8, x4, x1, x2)

inst_74560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:223680*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223680*0 + 3*64*FLEN/8, x4, x1, x2)

inst_74561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:223683*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223683*0 + 3*65*FLEN/8, x4, x1, x2)

inst_74562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:223686*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223686*0 + 3*66*FLEN/8, x4, x1, x2)

inst_74563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:223689*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223689*0 + 3*67*FLEN/8, x4, x1, x2)

inst_74564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:223692*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223692*0 + 3*68*FLEN/8, x4, x1, x2)

inst_74565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:223695*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223695*0 + 3*69*FLEN/8, x4, x1, x2)

inst_74566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:223698*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223698*0 + 3*70*FLEN/8, x4, x1, x2)

inst_74567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:223701*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223701*0 + 3*71*FLEN/8, x4, x1, x2)

inst_74568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:223704*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223704*0 + 3*72*FLEN/8, x4, x1, x2)

inst_74569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:223707*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223707*0 + 3*73*FLEN/8, x4, x1, x2)

inst_74570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:223710*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223710*0 + 3*74*FLEN/8, x4, x1, x2)

inst_74571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:223713*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223713*0 + 3*75*FLEN/8, x4, x1, x2)

inst_74572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x8050000000000000; valaddr_reg:x3; val_offset:223716*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223716*0 + 3*76*FLEN/8, x4, x1, x2)

inst_74573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x8050000000000001; valaddr_reg:x3; val_offset:223719*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223719*0 + 3*77*FLEN/8, x4, x1, x2)

inst_74574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x8050000000000003; valaddr_reg:x3; val_offset:223722*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223722*0 + 3*78*FLEN/8, x4, x1, x2)

inst_74575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x8050000000000007; valaddr_reg:x3; val_offset:223725*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223725*0 + 3*79*FLEN/8, x4, x1, x2)

inst_74576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805000000000000f; valaddr_reg:x3; val_offset:223728*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223728*0 + 3*80*FLEN/8, x4, x1, x2)

inst_74577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805000000000001f; valaddr_reg:x3; val_offset:223731*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223731*0 + 3*81*FLEN/8, x4, x1, x2)

inst_74578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805000000000003f; valaddr_reg:x3; val_offset:223734*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223734*0 + 3*82*FLEN/8, x4, x1, x2)

inst_74579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805000000000007f; valaddr_reg:x3; val_offset:223737*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223737*0 + 3*83*FLEN/8, x4, x1, x2)

inst_74580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x80500000000000ff; valaddr_reg:x3; val_offset:223740*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223740*0 + 3*84*FLEN/8, x4, x1, x2)

inst_74581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x80500000000001ff; valaddr_reg:x3; val_offset:223743*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223743*0 + 3*85*FLEN/8, x4, x1, x2)

inst_74582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x80500000000003ff; valaddr_reg:x3; val_offset:223746*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223746*0 + 3*86*FLEN/8, x4, x1, x2)

inst_74583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x80500000000007ff; valaddr_reg:x3; val_offset:223749*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223749*0 + 3*87*FLEN/8, x4, x1, x2)

inst_74584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x8050000000000fff; valaddr_reg:x3; val_offset:223752*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223752*0 + 3*88*FLEN/8, x4, x1, x2)

inst_74585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x8050000000001fff; valaddr_reg:x3; val_offset:223755*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223755*0 + 3*89*FLEN/8, x4, x1, x2)

inst_74586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x8050000000003fff; valaddr_reg:x3; val_offset:223758*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223758*0 + 3*90*FLEN/8, x4, x1, x2)

inst_74587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x8050000000007fff; valaddr_reg:x3; val_offset:223761*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223761*0 + 3*91*FLEN/8, x4, x1, x2)

inst_74588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805000000000ffff; valaddr_reg:x3; val_offset:223764*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223764*0 + 3*92*FLEN/8, x4, x1, x2)

inst_74589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805000000001ffff; valaddr_reg:x3; val_offset:223767*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223767*0 + 3*93*FLEN/8, x4, x1, x2)

inst_74590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805000000003ffff; valaddr_reg:x3; val_offset:223770*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223770*0 + 3*94*FLEN/8, x4, x1, x2)

inst_74591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805000000007ffff; valaddr_reg:x3; val_offset:223773*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223773*0 + 3*95*FLEN/8, x4, x1, x2)

inst_74592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x80500000000fffff; valaddr_reg:x3; val_offset:223776*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223776*0 + 3*96*FLEN/8, x4, x1, x2)

inst_74593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x80500000001fffff; valaddr_reg:x3; val_offset:223779*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223779*0 + 3*97*FLEN/8, x4, x1, x2)

inst_74594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x80500000003fffff; valaddr_reg:x3; val_offset:223782*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223782*0 + 3*98*FLEN/8, x4, x1, x2)

inst_74595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x80500000007fffff; valaddr_reg:x3; val_offset:223785*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223785*0 + 3*99*FLEN/8, x4, x1, x2)

inst_74596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x8050000000ffffff; valaddr_reg:x3; val_offset:223788*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223788*0 + 3*100*FLEN/8, x4, x1, x2)

inst_74597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x8050000001ffffff; valaddr_reg:x3; val_offset:223791*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223791*0 + 3*101*FLEN/8, x4, x1, x2)

inst_74598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x8050000003ffffff; valaddr_reg:x3; val_offset:223794*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223794*0 + 3*102*FLEN/8, x4, x1, x2)

inst_74599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x8050000007ffffff; valaddr_reg:x3; val_offset:223797*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223797*0 + 3*103*FLEN/8, x4, x1, x2)

inst_74600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805000000fffffff; valaddr_reg:x3; val_offset:223800*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223800*0 + 3*104*FLEN/8, x4, x1, x2)

inst_74601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805000001fffffff; valaddr_reg:x3; val_offset:223803*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223803*0 + 3*105*FLEN/8, x4, x1, x2)

inst_74602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805000003fffffff; valaddr_reg:x3; val_offset:223806*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223806*0 + 3*106*FLEN/8, x4, x1, x2)

inst_74603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805000007fffffff; valaddr_reg:x3; val_offset:223809*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223809*0 + 3*107*FLEN/8, x4, x1, x2)

inst_74604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x80500000ffffffff; valaddr_reg:x3; val_offset:223812*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223812*0 + 3*108*FLEN/8, x4, x1, x2)

inst_74605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x80500001ffffffff; valaddr_reg:x3; val_offset:223815*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223815*0 + 3*109*FLEN/8, x4, x1, x2)

inst_74606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x80500003ffffffff; valaddr_reg:x3; val_offset:223818*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223818*0 + 3*110*FLEN/8, x4, x1, x2)

inst_74607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x80500007ffffffff; valaddr_reg:x3; val_offset:223821*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223821*0 + 3*111*FLEN/8, x4, x1, x2)

inst_74608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x8050000fffffffff; valaddr_reg:x3; val_offset:223824*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223824*0 + 3*112*FLEN/8, x4, x1, x2)

inst_74609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x8050001fffffffff; valaddr_reg:x3; val_offset:223827*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223827*0 + 3*113*FLEN/8, x4, x1, x2)

inst_74610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x8050003fffffffff; valaddr_reg:x3; val_offset:223830*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223830*0 + 3*114*FLEN/8, x4, x1, x2)

inst_74611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x8050007fffffffff; valaddr_reg:x3; val_offset:223833*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223833*0 + 3*115*FLEN/8, x4, x1, x2)

inst_74612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805000ffffffffff; valaddr_reg:x3; val_offset:223836*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223836*0 + 3*116*FLEN/8, x4, x1, x2)

inst_74613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805001ffffffffff; valaddr_reg:x3; val_offset:223839*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223839*0 + 3*117*FLEN/8, x4, x1, x2)

inst_74614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805003ffffffffff; valaddr_reg:x3; val_offset:223842*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223842*0 + 3*118*FLEN/8, x4, x1, x2)

inst_74615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805007ffffffffff; valaddr_reg:x3; val_offset:223845*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223845*0 + 3*119*FLEN/8, x4, x1, x2)

inst_74616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x80500fffffffffff; valaddr_reg:x3; val_offset:223848*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223848*0 + 3*120*FLEN/8, x4, x1, x2)

inst_74617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x80501fffffffffff; valaddr_reg:x3; val_offset:223851*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223851*0 + 3*121*FLEN/8, x4, x1, x2)

inst_74618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x80503fffffffffff; valaddr_reg:x3; val_offset:223854*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223854*0 + 3*122*FLEN/8, x4, x1, x2)

inst_74619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x80507fffffffffff; valaddr_reg:x3; val_offset:223857*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223857*0 + 3*123*FLEN/8, x4, x1, x2)

inst_74620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x8050ffffffffffff; valaddr_reg:x3; val_offset:223860*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223860*0 + 3*124*FLEN/8, x4, x1, x2)

inst_74621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x8051ffffffffffff; valaddr_reg:x3; val_offset:223863*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223863*0 + 3*125*FLEN/8, x4, x1, x2)

inst_74622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x8053ffffffffffff; valaddr_reg:x3; val_offset:223866*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223866*0 + 3*126*FLEN/8, x4, x1, x2)

inst_74623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x8057ffffffffffff; valaddr_reg:x3; val_offset:223869*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223869*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_74624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x8058000000000000; valaddr_reg:x3; val_offset:223872*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223872*0 + 3*128*FLEN/8, x4, x1, x2)

inst_74625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805c000000000000; valaddr_reg:x3; val_offset:223875*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223875*0 + 3*129*FLEN/8, x4, x1, x2)

inst_74626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805e000000000000; valaddr_reg:x3; val_offset:223878*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223878*0 + 3*130*FLEN/8, x4, x1, x2)

inst_74627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805f000000000000; valaddr_reg:x3; val_offset:223881*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223881*0 + 3*131*FLEN/8, x4, x1, x2)

inst_74628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805f800000000000; valaddr_reg:x3; val_offset:223884*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223884*0 + 3*132*FLEN/8, x4, x1, x2)

inst_74629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805fc00000000000; valaddr_reg:x3; val_offset:223887*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223887*0 + 3*133*FLEN/8, x4, x1, x2)

inst_74630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805fe00000000000; valaddr_reg:x3; val_offset:223890*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223890*0 + 3*134*FLEN/8, x4, x1, x2)

inst_74631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805ff00000000000; valaddr_reg:x3; val_offset:223893*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223893*0 + 3*135*FLEN/8, x4, x1, x2)

inst_74632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805ff80000000000; valaddr_reg:x3; val_offset:223896*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223896*0 + 3*136*FLEN/8, x4, x1, x2)

inst_74633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805ffc0000000000; valaddr_reg:x3; val_offset:223899*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223899*0 + 3*137*FLEN/8, x4, x1, x2)

inst_74634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805ffe0000000000; valaddr_reg:x3; val_offset:223902*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223902*0 + 3*138*FLEN/8, x4, x1, x2)

inst_74635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805fff0000000000; valaddr_reg:x3; val_offset:223905*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223905*0 + 3*139*FLEN/8, x4, x1, x2)

inst_74636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805fff8000000000; valaddr_reg:x3; val_offset:223908*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223908*0 + 3*140*FLEN/8, x4, x1, x2)

inst_74637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805fffc000000000; valaddr_reg:x3; val_offset:223911*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223911*0 + 3*141*FLEN/8, x4, x1, x2)

inst_74638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805fffe000000000; valaddr_reg:x3; val_offset:223914*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223914*0 + 3*142*FLEN/8, x4, x1, x2)

inst_74639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805ffff000000000; valaddr_reg:x3; val_offset:223917*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223917*0 + 3*143*FLEN/8, x4, x1, x2)

inst_74640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805ffff800000000; valaddr_reg:x3; val_offset:223920*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223920*0 + 3*144*FLEN/8, x4, x1, x2)

inst_74641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805ffffc00000000; valaddr_reg:x3; val_offset:223923*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223923*0 + 3*145*FLEN/8, x4, x1, x2)

inst_74642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805ffffe00000000; valaddr_reg:x3; val_offset:223926*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223926*0 + 3*146*FLEN/8, x4, x1, x2)

inst_74643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805fffff00000000; valaddr_reg:x3; val_offset:223929*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223929*0 + 3*147*FLEN/8, x4, x1, x2)

inst_74644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805fffff80000000; valaddr_reg:x3; val_offset:223932*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223932*0 + 3*148*FLEN/8, x4, x1, x2)

inst_74645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805fffffc0000000; valaddr_reg:x3; val_offset:223935*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223935*0 + 3*149*FLEN/8, x4, x1, x2)

inst_74646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805fffffe0000000; valaddr_reg:x3; val_offset:223938*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223938*0 + 3*150*FLEN/8, x4, x1, x2)

inst_74647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805ffffff0000000; valaddr_reg:x3; val_offset:223941*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223941*0 + 3*151*FLEN/8, x4, x1, x2)

inst_74648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805ffffff8000000; valaddr_reg:x3; val_offset:223944*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223944*0 + 3*152*FLEN/8, x4, x1, x2)

inst_74649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805ffffffc000000; valaddr_reg:x3; val_offset:223947*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223947*0 + 3*153*FLEN/8, x4, x1, x2)

inst_74650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805ffffffe000000; valaddr_reg:x3; val_offset:223950*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223950*0 + 3*154*FLEN/8, x4, x1, x2)

inst_74651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805fffffff000000; valaddr_reg:x3; val_offset:223953*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223953*0 + 3*155*FLEN/8, x4, x1, x2)

inst_74652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805fffffff800000; valaddr_reg:x3; val_offset:223956*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223956*0 + 3*156*FLEN/8, x4, x1, x2)

inst_74653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805fffffffc00000; valaddr_reg:x3; val_offset:223959*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223959*0 + 3*157*FLEN/8, x4, x1, x2)

inst_74654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805fffffffe00000; valaddr_reg:x3; val_offset:223962*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223962*0 + 3*158*FLEN/8, x4, x1, x2)

inst_74655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805ffffffff00000; valaddr_reg:x3; val_offset:223965*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223965*0 + 3*159*FLEN/8, x4, x1, x2)

inst_74656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805ffffffff80000; valaddr_reg:x3; val_offset:223968*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223968*0 + 3*160*FLEN/8, x4, x1, x2)

inst_74657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805ffffffffc0000; valaddr_reg:x3; val_offset:223971*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223971*0 + 3*161*FLEN/8, x4, x1, x2)

inst_74658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805ffffffffe0000; valaddr_reg:x3; val_offset:223974*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223974*0 + 3*162*FLEN/8, x4, x1, x2)

inst_74659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805fffffffff0000; valaddr_reg:x3; val_offset:223977*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223977*0 + 3*163*FLEN/8, x4, x1, x2)

inst_74660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805fffffffff8000; valaddr_reg:x3; val_offset:223980*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223980*0 + 3*164*FLEN/8, x4, x1, x2)

inst_74661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805fffffffffc000; valaddr_reg:x3; val_offset:223983*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223983*0 + 3*165*FLEN/8, x4, x1, x2)

inst_74662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805fffffffffe000; valaddr_reg:x3; val_offset:223986*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223986*0 + 3*166*FLEN/8, x4, x1, x2)

inst_74663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805ffffffffff000; valaddr_reg:x3; val_offset:223989*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223989*0 + 3*167*FLEN/8, x4, x1, x2)

inst_74664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805ffffffffff800; valaddr_reg:x3; val_offset:223992*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223992*0 + 3*168*FLEN/8, x4, x1, x2)

inst_74665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805ffffffffffc00; valaddr_reg:x3; val_offset:223995*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223995*0 + 3*169*FLEN/8, x4, x1, x2)

inst_74666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805ffffffffffe00; valaddr_reg:x3; val_offset:223998*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223998*0 + 3*170*FLEN/8, x4, x1, x2)

inst_74667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805fffffffffff00; valaddr_reg:x3; val_offset:224001*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224001*0 + 3*171*FLEN/8, x4, x1, x2)

inst_74668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805fffffffffff80; valaddr_reg:x3; val_offset:224004*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224004*0 + 3*172*FLEN/8, x4, x1, x2)

inst_74669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805fffffffffffc0; valaddr_reg:x3; val_offset:224007*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224007*0 + 3*173*FLEN/8, x4, x1, x2)

inst_74670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805fffffffffffe0; valaddr_reg:x3; val_offset:224010*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224010*0 + 3*174*FLEN/8, x4, x1, x2)

inst_74671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805ffffffffffff0; valaddr_reg:x3; val_offset:224013*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224013*0 + 3*175*FLEN/8, x4, x1, x2)

inst_74672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805ffffffffffff8; valaddr_reg:x3; val_offset:224016*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224016*0 + 3*176*FLEN/8, x4, x1, x2)

inst_74673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805ffffffffffffc; valaddr_reg:x3; val_offset:224019*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224019*0 + 3*177*FLEN/8, x4, x1, x2)

inst_74674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805ffffffffffffe; valaddr_reg:x3; val_offset:224022*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224022*0 + 3*178*FLEN/8, x4, x1, x2)

inst_74675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x74dce6c97bc83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa74dce6c97bc83; op2val:0x8000;
op3val:0x805fffffffffffff; valaddr_reg:x3; val_offset:224025*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224025*0 + 3*179*FLEN/8, x4, x1, x2)

inst_74676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x3860000000000000; valaddr_reg:x3; val_offset:224028*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224028*0 + 3*180*FLEN/8, x4, x1, x2)

inst_74677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x3860000000000001; valaddr_reg:x3; val_offset:224031*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224031*0 + 3*181*FLEN/8, x4, x1, x2)

inst_74678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x3860000000000003; valaddr_reg:x3; val_offset:224034*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224034*0 + 3*182*FLEN/8, x4, x1, x2)

inst_74679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x3860000000000007; valaddr_reg:x3; val_offset:224037*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224037*0 + 3*183*FLEN/8, x4, x1, x2)

inst_74680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386000000000000f; valaddr_reg:x3; val_offset:224040*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224040*0 + 3*184*FLEN/8, x4, x1, x2)

inst_74681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386000000000001f; valaddr_reg:x3; val_offset:224043*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224043*0 + 3*185*FLEN/8, x4, x1, x2)

inst_74682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386000000000003f; valaddr_reg:x3; val_offset:224046*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224046*0 + 3*186*FLEN/8, x4, x1, x2)

inst_74683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386000000000007f; valaddr_reg:x3; val_offset:224049*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224049*0 + 3*187*FLEN/8, x4, x1, x2)

inst_74684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x38600000000000ff; valaddr_reg:x3; val_offset:224052*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224052*0 + 3*188*FLEN/8, x4, x1, x2)

inst_74685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x38600000000001ff; valaddr_reg:x3; val_offset:224055*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224055*0 + 3*189*FLEN/8, x4, x1, x2)

inst_74686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x38600000000003ff; valaddr_reg:x3; val_offset:224058*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224058*0 + 3*190*FLEN/8, x4, x1, x2)

inst_74687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x38600000000007ff; valaddr_reg:x3; val_offset:224061*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224061*0 + 3*191*FLEN/8, x4, x1, x2)

inst_74688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x3860000000000fff; valaddr_reg:x3; val_offset:224064*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224064*0 + 3*192*FLEN/8, x4, x1, x2)

inst_74689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x3860000000001fff; valaddr_reg:x3; val_offset:224067*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224067*0 + 3*193*FLEN/8, x4, x1, x2)

inst_74690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x3860000000003fff; valaddr_reg:x3; val_offset:224070*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224070*0 + 3*194*FLEN/8, x4, x1, x2)

inst_74691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x3860000000007fff; valaddr_reg:x3; val_offset:224073*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224073*0 + 3*195*FLEN/8, x4, x1, x2)

inst_74692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386000000000ffff; valaddr_reg:x3; val_offset:224076*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224076*0 + 3*196*FLEN/8, x4, x1, x2)

inst_74693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386000000001ffff; valaddr_reg:x3; val_offset:224079*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224079*0 + 3*197*FLEN/8, x4, x1, x2)

inst_74694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386000000003ffff; valaddr_reg:x3; val_offset:224082*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224082*0 + 3*198*FLEN/8, x4, x1, x2)

inst_74695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386000000007ffff; valaddr_reg:x3; val_offset:224085*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224085*0 + 3*199*FLEN/8, x4, x1, x2)

inst_74696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x38600000000fffff; valaddr_reg:x3; val_offset:224088*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224088*0 + 3*200*FLEN/8, x4, x1, x2)

inst_74697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x38600000001fffff; valaddr_reg:x3; val_offset:224091*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224091*0 + 3*201*FLEN/8, x4, x1, x2)

inst_74698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x38600000003fffff; valaddr_reg:x3; val_offset:224094*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224094*0 + 3*202*FLEN/8, x4, x1, x2)

inst_74699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x38600000007fffff; valaddr_reg:x3; val_offset:224097*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224097*0 + 3*203*FLEN/8, x4, x1, x2)

inst_74700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x3860000000ffffff; valaddr_reg:x3; val_offset:224100*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224100*0 + 3*204*FLEN/8, x4, x1, x2)

inst_74701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x3860000001ffffff; valaddr_reg:x3; val_offset:224103*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224103*0 + 3*205*FLEN/8, x4, x1, x2)

inst_74702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x3860000003ffffff; valaddr_reg:x3; val_offset:224106*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224106*0 + 3*206*FLEN/8, x4, x1, x2)

inst_74703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x3860000007ffffff; valaddr_reg:x3; val_offset:224109*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224109*0 + 3*207*FLEN/8, x4, x1, x2)

inst_74704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386000000fffffff; valaddr_reg:x3; val_offset:224112*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224112*0 + 3*208*FLEN/8, x4, x1, x2)

inst_74705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386000001fffffff; valaddr_reg:x3; val_offset:224115*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224115*0 + 3*209*FLEN/8, x4, x1, x2)

inst_74706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386000003fffffff; valaddr_reg:x3; val_offset:224118*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224118*0 + 3*210*FLEN/8, x4, x1, x2)

inst_74707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386000007fffffff; valaddr_reg:x3; val_offset:224121*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224121*0 + 3*211*FLEN/8, x4, x1, x2)

inst_74708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x38600000ffffffff; valaddr_reg:x3; val_offset:224124*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224124*0 + 3*212*FLEN/8, x4, x1, x2)

inst_74709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x38600001ffffffff; valaddr_reg:x3; val_offset:224127*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224127*0 + 3*213*FLEN/8, x4, x1, x2)

inst_74710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x38600003ffffffff; valaddr_reg:x3; val_offset:224130*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224130*0 + 3*214*FLEN/8, x4, x1, x2)

inst_74711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x38600007ffffffff; valaddr_reg:x3; val_offset:224133*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224133*0 + 3*215*FLEN/8, x4, x1, x2)

inst_74712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x3860000fffffffff; valaddr_reg:x3; val_offset:224136*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224136*0 + 3*216*FLEN/8, x4, x1, x2)

inst_74713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x3860001fffffffff; valaddr_reg:x3; val_offset:224139*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224139*0 + 3*217*FLEN/8, x4, x1, x2)

inst_74714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x3860003fffffffff; valaddr_reg:x3; val_offset:224142*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224142*0 + 3*218*FLEN/8, x4, x1, x2)

inst_74715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x3860007fffffffff; valaddr_reg:x3; val_offset:224145*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224145*0 + 3*219*FLEN/8, x4, x1, x2)

inst_74716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386000ffffffffff; valaddr_reg:x3; val_offset:224148*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224148*0 + 3*220*FLEN/8, x4, x1, x2)

inst_74717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386001ffffffffff; valaddr_reg:x3; val_offset:224151*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224151*0 + 3*221*FLEN/8, x4, x1, x2)

inst_74718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386003ffffffffff; valaddr_reg:x3; val_offset:224154*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224154*0 + 3*222*FLEN/8, x4, x1, x2)

inst_74719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386007ffffffffff; valaddr_reg:x3; val_offset:224157*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224157*0 + 3*223*FLEN/8, x4, x1, x2)

inst_74720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x38600fffffffffff; valaddr_reg:x3; val_offset:224160*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224160*0 + 3*224*FLEN/8, x4, x1, x2)

inst_74721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x38601fffffffffff; valaddr_reg:x3; val_offset:224163*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224163*0 + 3*225*FLEN/8, x4, x1, x2)

inst_74722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x38603fffffffffff; valaddr_reg:x3; val_offset:224166*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224166*0 + 3*226*FLEN/8, x4, x1, x2)

inst_74723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x38607fffffffffff; valaddr_reg:x3; val_offset:224169*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224169*0 + 3*227*FLEN/8, x4, x1, x2)

inst_74724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x3860ffffffffffff; valaddr_reg:x3; val_offset:224172*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224172*0 + 3*228*FLEN/8, x4, x1, x2)

inst_74725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x3861ffffffffffff; valaddr_reg:x3; val_offset:224175*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224175*0 + 3*229*FLEN/8, x4, x1, x2)

inst_74726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x3863ffffffffffff; valaddr_reg:x3; val_offset:224178*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224178*0 + 3*230*FLEN/8, x4, x1, x2)

inst_74727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x3867ffffffffffff; valaddr_reg:x3; val_offset:224181*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224181*0 + 3*231*FLEN/8, x4, x1, x2)

inst_74728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x3868000000000000; valaddr_reg:x3; val_offset:224184*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224184*0 + 3*232*FLEN/8, x4, x1, x2)

inst_74729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386c000000000000; valaddr_reg:x3; val_offset:224187*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224187*0 + 3*233*FLEN/8, x4, x1, x2)

inst_74730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386e000000000000; valaddr_reg:x3; val_offset:224190*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224190*0 + 3*234*FLEN/8, x4, x1, x2)

inst_74731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386f000000000000; valaddr_reg:x3; val_offset:224193*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224193*0 + 3*235*FLEN/8, x4, x1, x2)

inst_74732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386f800000000000; valaddr_reg:x3; val_offset:224196*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224196*0 + 3*236*FLEN/8, x4, x1, x2)

inst_74733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386fc00000000000; valaddr_reg:x3; val_offset:224199*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224199*0 + 3*237*FLEN/8, x4, x1, x2)

inst_74734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386fe00000000000; valaddr_reg:x3; val_offset:224202*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224202*0 + 3*238*FLEN/8, x4, x1, x2)

inst_74735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386ff00000000000; valaddr_reg:x3; val_offset:224205*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224205*0 + 3*239*FLEN/8, x4, x1, x2)

inst_74736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386ff80000000000; valaddr_reg:x3; val_offset:224208*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224208*0 + 3*240*FLEN/8, x4, x1, x2)

inst_74737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386ffc0000000000; valaddr_reg:x3; val_offset:224211*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224211*0 + 3*241*FLEN/8, x4, x1, x2)

inst_74738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386ffe0000000000; valaddr_reg:x3; val_offset:224214*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224214*0 + 3*242*FLEN/8, x4, x1, x2)

inst_74739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386fff0000000000; valaddr_reg:x3; val_offset:224217*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224217*0 + 3*243*FLEN/8, x4, x1, x2)

inst_74740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386fff8000000000; valaddr_reg:x3; val_offset:224220*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224220*0 + 3*244*FLEN/8, x4, x1, x2)

inst_74741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386fffc000000000; valaddr_reg:x3; val_offset:224223*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224223*0 + 3*245*FLEN/8, x4, x1, x2)

inst_74742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386fffe000000000; valaddr_reg:x3; val_offset:224226*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224226*0 + 3*246*FLEN/8, x4, x1, x2)

inst_74743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386ffff000000000; valaddr_reg:x3; val_offset:224229*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224229*0 + 3*247*FLEN/8, x4, x1, x2)

inst_74744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386ffff800000000; valaddr_reg:x3; val_offset:224232*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224232*0 + 3*248*FLEN/8, x4, x1, x2)

inst_74745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386ffffc00000000; valaddr_reg:x3; val_offset:224235*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224235*0 + 3*249*FLEN/8, x4, x1, x2)

inst_74746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386ffffe00000000; valaddr_reg:x3; val_offset:224238*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224238*0 + 3*250*FLEN/8, x4, x1, x2)

inst_74747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386fffff00000000; valaddr_reg:x3; val_offset:224241*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224241*0 + 3*251*FLEN/8, x4, x1, x2)

inst_74748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386fffff80000000; valaddr_reg:x3; val_offset:224244*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224244*0 + 3*252*FLEN/8, x4, x1, x2)

inst_74749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386fffffc0000000; valaddr_reg:x3; val_offset:224247*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224247*0 + 3*253*FLEN/8, x4, x1, x2)

inst_74750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386fffffe0000000; valaddr_reg:x3; val_offset:224250*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224250*0 + 3*254*FLEN/8, x4, x1, x2)

inst_74751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386ffffff0000000; valaddr_reg:x3; val_offset:224253*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224253*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_74752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386ffffff8000000; valaddr_reg:x3; val_offset:224256*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224256*0 + 3*256*FLEN/8, x4, x1, x2)

inst_74753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386ffffffc000000; valaddr_reg:x3; val_offset:224259*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224259*0 + 3*257*FLEN/8, x4, x1, x2)

inst_74754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386ffffffe000000; valaddr_reg:x3; val_offset:224262*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224262*0 + 3*258*FLEN/8, x4, x1, x2)

inst_74755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386fffffff000000; valaddr_reg:x3; val_offset:224265*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224265*0 + 3*259*FLEN/8, x4, x1, x2)

inst_74756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386fffffff800000; valaddr_reg:x3; val_offset:224268*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224268*0 + 3*260*FLEN/8, x4, x1, x2)

inst_74757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386fffffffc00000; valaddr_reg:x3; val_offset:224271*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224271*0 + 3*261*FLEN/8, x4, x1, x2)

inst_74758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386fffffffe00000; valaddr_reg:x3; val_offset:224274*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224274*0 + 3*262*FLEN/8, x4, x1, x2)

inst_74759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386ffffffff00000; valaddr_reg:x3; val_offset:224277*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224277*0 + 3*263*FLEN/8, x4, x1, x2)

inst_74760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386ffffffff80000; valaddr_reg:x3; val_offset:224280*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224280*0 + 3*264*FLEN/8, x4, x1, x2)

inst_74761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386ffffffffc0000; valaddr_reg:x3; val_offset:224283*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224283*0 + 3*265*FLEN/8, x4, x1, x2)

inst_74762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386ffffffffe0000; valaddr_reg:x3; val_offset:224286*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224286*0 + 3*266*FLEN/8, x4, x1, x2)

inst_74763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386fffffffff0000; valaddr_reg:x3; val_offset:224289*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224289*0 + 3*267*FLEN/8, x4, x1, x2)

inst_74764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386fffffffff8000; valaddr_reg:x3; val_offset:224292*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224292*0 + 3*268*FLEN/8, x4, x1, x2)

inst_74765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386fffffffffc000; valaddr_reg:x3; val_offset:224295*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224295*0 + 3*269*FLEN/8, x4, x1, x2)

inst_74766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386fffffffffe000; valaddr_reg:x3; val_offset:224298*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224298*0 + 3*270*FLEN/8, x4, x1, x2)

inst_74767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386ffffffffff000; valaddr_reg:x3; val_offset:224301*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224301*0 + 3*271*FLEN/8, x4, x1, x2)

inst_74768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386ffffffffff800; valaddr_reg:x3; val_offset:224304*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224304*0 + 3*272*FLEN/8, x4, x1, x2)

inst_74769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386ffffffffffc00; valaddr_reg:x3; val_offset:224307*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224307*0 + 3*273*FLEN/8, x4, x1, x2)

inst_74770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386ffffffffffe00; valaddr_reg:x3; val_offset:224310*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224310*0 + 3*274*FLEN/8, x4, x1, x2)

inst_74771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386fffffffffff00; valaddr_reg:x3; val_offset:224313*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224313*0 + 3*275*FLEN/8, x4, x1, x2)

inst_74772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386fffffffffff80; valaddr_reg:x3; val_offset:224316*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224316*0 + 3*276*FLEN/8, x4, x1, x2)

inst_74773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386fffffffffffc0; valaddr_reg:x3; val_offset:224319*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224319*0 + 3*277*FLEN/8, x4, x1, x2)

inst_74774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386fffffffffffe0; valaddr_reg:x3; val_offset:224322*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224322*0 + 3*278*FLEN/8, x4, x1, x2)

inst_74775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386ffffffffffff0; valaddr_reg:x3; val_offset:224325*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224325*0 + 3*279*FLEN/8, x4, x1, x2)

inst_74776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386ffffffffffff8; valaddr_reg:x3; val_offset:224328*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224328*0 + 3*280*FLEN/8, x4, x1, x2)

inst_74777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386ffffffffffffc; valaddr_reg:x3; val_offset:224331*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224331*0 + 3*281*FLEN/8, x4, x1, x2)

inst_74778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386ffffffffffffe; valaddr_reg:x3; val_offset:224334*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224334*0 + 3*282*FLEN/8, x4, x1, x2)

inst_74779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x386 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x386fffffffffffff; valaddr_reg:x3; val_offset:224337*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224337*0 + 3*283*FLEN/8, x4, x1, x2)

inst_74780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:224340*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224340*0 + 3*284*FLEN/8, x4, x1, x2)

inst_74781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:224343*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224343*0 + 3*285*FLEN/8, x4, x1, x2)

inst_74782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:224346*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224346*0 + 3*286*FLEN/8, x4, x1, x2)

inst_74783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:224349*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224349*0 + 3*287*FLEN/8, x4, x1, x2)

inst_74784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:224352*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224352*0 + 3*288*FLEN/8, x4, x1, x2)

inst_74785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:224355*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224355*0 + 3*289*FLEN/8, x4, x1, x2)

inst_74786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:224358*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224358*0 + 3*290*FLEN/8, x4, x1, x2)

inst_74787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:224361*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224361*0 + 3*291*FLEN/8, x4, x1, x2)

inst_74788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:224364*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224364*0 + 3*292*FLEN/8, x4, x1, x2)

inst_74789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:224367*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224367*0 + 3*293*FLEN/8, x4, x1, x2)

inst_74790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:224370*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224370*0 + 3*294*FLEN/8, x4, x1, x2)

inst_74791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:224373*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224373*0 + 3*295*FLEN/8, x4, x1, x2)

inst_74792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:224376*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224376*0 + 3*296*FLEN/8, x4, x1, x2)

inst_74793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:224379*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224379*0 + 3*297*FLEN/8, x4, x1, x2)

inst_74794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:224382*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224382*0 + 3*298*FLEN/8, x4, x1, x2)

inst_74795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:224385*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224385*0 + 3*299*FLEN/8, x4, x1, x2)

inst_74796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:224388*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224388*0 + 3*300*FLEN/8, x4, x1, x2)

inst_74797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:224391*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224391*0 + 3*301*FLEN/8, x4, x1, x2)

inst_74798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:224394*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224394*0 + 3*302*FLEN/8, x4, x1, x2)

inst_74799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:224397*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224397*0 + 3*303*FLEN/8, x4, x1, x2)

inst_74800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:224400*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224400*0 + 3*304*FLEN/8, x4, x1, x2)

inst_74801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75d68360a5bd6 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x5e9ca0028eee1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75d68360a5bd6; op2val:0x2035e9ca0028eee1;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:224403*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224403*0 + 3*305*FLEN/8, x4, x1, x2)

inst_74802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf30000000000000; valaddr_reg:x3; val_offset:224406*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224406*0 + 3*306*FLEN/8, x4, x1, x2)

inst_74803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf30000000000001; valaddr_reg:x3; val_offset:224409*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224409*0 + 3*307*FLEN/8, x4, x1, x2)

inst_74804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf30000000000003; valaddr_reg:x3; val_offset:224412*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224412*0 + 3*308*FLEN/8, x4, x1, x2)

inst_74805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf30000000000007; valaddr_reg:x3; val_offset:224415*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224415*0 + 3*309*FLEN/8, x4, x1, x2)

inst_74806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3000000000000f; valaddr_reg:x3; val_offset:224418*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224418*0 + 3*310*FLEN/8, x4, x1, x2)

inst_74807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3000000000001f; valaddr_reg:x3; val_offset:224421*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224421*0 + 3*311*FLEN/8, x4, x1, x2)

inst_74808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3000000000003f; valaddr_reg:x3; val_offset:224424*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224424*0 + 3*312*FLEN/8, x4, x1, x2)

inst_74809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3000000000007f; valaddr_reg:x3; val_offset:224427*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224427*0 + 3*313*FLEN/8, x4, x1, x2)

inst_74810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf300000000000ff; valaddr_reg:x3; val_offset:224430*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224430*0 + 3*314*FLEN/8, x4, x1, x2)

inst_74811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf300000000001ff; valaddr_reg:x3; val_offset:224433*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224433*0 + 3*315*FLEN/8, x4, x1, x2)

inst_74812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf300000000003ff; valaddr_reg:x3; val_offset:224436*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224436*0 + 3*316*FLEN/8, x4, x1, x2)

inst_74813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf300000000007ff; valaddr_reg:x3; val_offset:224439*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224439*0 + 3*317*FLEN/8, x4, x1, x2)

inst_74814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf30000000000fff; valaddr_reg:x3; val_offset:224442*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224442*0 + 3*318*FLEN/8, x4, x1, x2)

inst_74815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf30000000001fff; valaddr_reg:x3; val_offset:224445*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224445*0 + 3*319*FLEN/8, x4, x1, x2)

inst_74816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf30000000003fff; valaddr_reg:x3; val_offset:224448*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224448*0 + 3*320*FLEN/8, x4, x1, x2)

inst_74817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf30000000007fff; valaddr_reg:x3; val_offset:224451*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224451*0 + 3*321*FLEN/8, x4, x1, x2)

inst_74818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3000000000ffff; valaddr_reg:x3; val_offset:224454*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224454*0 + 3*322*FLEN/8, x4, x1, x2)

inst_74819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3000000001ffff; valaddr_reg:x3; val_offset:224457*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224457*0 + 3*323*FLEN/8, x4, x1, x2)

inst_74820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3000000003ffff; valaddr_reg:x3; val_offset:224460*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224460*0 + 3*324*FLEN/8, x4, x1, x2)

inst_74821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3000000007ffff; valaddr_reg:x3; val_offset:224463*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224463*0 + 3*325*FLEN/8, x4, x1, x2)

inst_74822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf300000000fffff; valaddr_reg:x3; val_offset:224466*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224466*0 + 3*326*FLEN/8, x4, x1, x2)

inst_74823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf300000001fffff; valaddr_reg:x3; val_offset:224469*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224469*0 + 3*327*FLEN/8, x4, x1, x2)

inst_74824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf300000003fffff; valaddr_reg:x3; val_offset:224472*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224472*0 + 3*328*FLEN/8, x4, x1, x2)

inst_74825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf300000007fffff; valaddr_reg:x3; val_offset:224475*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224475*0 + 3*329*FLEN/8, x4, x1, x2)

inst_74826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf30000000ffffff; valaddr_reg:x3; val_offset:224478*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224478*0 + 3*330*FLEN/8, x4, x1, x2)

inst_74827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf30000001ffffff; valaddr_reg:x3; val_offset:224481*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224481*0 + 3*331*FLEN/8, x4, x1, x2)

inst_74828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf30000003ffffff; valaddr_reg:x3; val_offset:224484*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224484*0 + 3*332*FLEN/8, x4, x1, x2)

inst_74829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf30000007ffffff; valaddr_reg:x3; val_offset:224487*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224487*0 + 3*333*FLEN/8, x4, x1, x2)

inst_74830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3000000fffffff; valaddr_reg:x3; val_offset:224490*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224490*0 + 3*334*FLEN/8, x4, x1, x2)

inst_74831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3000001fffffff; valaddr_reg:x3; val_offset:224493*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224493*0 + 3*335*FLEN/8, x4, x1, x2)

inst_74832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3000003fffffff; valaddr_reg:x3; val_offset:224496*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224496*0 + 3*336*FLEN/8, x4, x1, x2)

inst_74833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3000007fffffff; valaddr_reg:x3; val_offset:224499*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224499*0 + 3*337*FLEN/8, x4, x1, x2)

inst_74834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf300000ffffffff; valaddr_reg:x3; val_offset:224502*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224502*0 + 3*338*FLEN/8, x4, x1, x2)

inst_74835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf300001ffffffff; valaddr_reg:x3; val_offset:224505*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224505*0 + 3*339*FLEN/8, x4, x1, x2)

inst_74836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf300003ffffffff; valaddr_reg:x3; val_offset:224508*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224508*0 + 3*340*FLEN/8, x4, x1, x2)

inst_74837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf300007ffffffff; valaddr_reg:x3; val_offset:224511*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224511*0 + 3*341*FLEN/8, x4, x1, x2)

inst_74838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf30000fffffffff; valaddr_reg:x3; val_offset:224514*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224514*0 + 3*342*FLEN/8, x4, x1, x2)

inst_74839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf30001fffffffff; valaddr_reg:x3; val_offset:224517*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224517*0 + 3*343*FLEN/8, x4, x1, x2)

inst_74840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf30003fffffffff; valaddr_reg:x3; val_offset:224520*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224520*0 + 3*344*FLEN/8, x4, x1, x2)

inst_74841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf30007fffffffff; valaddr_reg:x3; val_offset:224523*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224523*0 + 3*345*FLEN/8, x4, x1, x2)

inst_74842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3000ffffffffff; valaddr_reg:x3; val_offset:224526*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224526*0 + 3*346*FLEN/8, x4, x1, x2)

inst_74843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3001ffffffffff; valaddr_reg:x3; val_offset:224529*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224529*0 + 3*347*FLEN/8, x4, x1, x2)

inst_74844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3003ffffffffff; valaddr_reg:x3; val_offset:224532*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224532*0 + 3*348*FLEN/8, x4, x1, x2)

inst_74845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3007ffffffffff; valaddr_reg:x3; val_offset:224535*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224535*0 + 3*349*FLEN/8, x4, x1, x2)

inst_74846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf300fffffffffff; valaddr_reg:x3; val_offset:224538*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224538*0 + 3*350*FLEN/8, x4, x1, x2)

inst_74847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf301fffffffffff; valaddr_reg:x3; val_offset:224541*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224541*0 + 3*351*FLEN/8, x4, x1, x2)

inst_74848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf303fffffffffff; valaddr_reg:x3; val_offset:224544*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224544*0 + 3*352*FLEN/8, x4, x1, x2)

inst_74849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf307fffffffffff; valaddr_reg:x3; val_offset:224547*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224547*0 + 3*353*FLEN/8, x4, x1, x2)

inst_74850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf30ffffffffffff; valaddr_reg:x3; val_offset:224550*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224550*0 + 3*354*FLEN/8, x4, x1, x2)

inst_74851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf31ffffffffffff; valaddr_reg:x3; val_offset:224553*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224553*0 + 3*355*FLEN/8, x4, x1, x2)

inst_74852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf33ffffffffffff; valaddr_reg:x3; val_offset:224556*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224556*0 + 3*356*FLEN/8, x4, x1, x2)

inst_74853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf37ffffffffffff; valaddr_reg:x3; val_offset:224559*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224559*0 + 3*357*FLEN/8, x4, x1, x2)

inst_74854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf38000000000000; valaddr_reg:x3; val_offset:224562*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224562*0 + 3*358*FLEN/8, x4, x1, x2)

inst_74855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3c000000000000; valaddr_reg:x3; val_offset:224565*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224565*0 + 3*359*FLEN/8, x4, x1, x2)

inst_74856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3e000000000000; valaddr_reg:x3; val_offset:224568*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224568*0 + 3*360*FLEN/8, x4, x1, x2)

inst_74857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3f000000000000; valaddr_reg:x3; val_offset:224571*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224571*0 + 3*361*FLEN/8, x4, x1, x2)

inst_74858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3f800000000000; valaddr_reg:x3; val_offset:224574*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224574*0 + 3*362*FLEN/8, x4, x1, x2)

inst_74859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3fc00000000000; valaddr_reg:x3; val_offset:224577*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224577*0 + 3*363*FLEN/8, x4, x1, x2)

inst_74860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3fe00000000000; valaddr_reg:x3; val_offset:224580*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224580*0 + 3*364*FLEN/8, x4, x1, x2)

inst_74861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3ff00000000000; valaddr_reg:x3; val_offset:224583*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224583*0 + 3*365*FLEN/8, x4, x1, x2)

inst_74862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3ff80000000000; valaddr_reg:x3; val_offset:224586*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224586*0 + 3*366*FLEN/8, x4, x1, x2)

inst_74863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3ffc0000000000; valaddr_reg:x3; val_offset:224589*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224589*0 + 3*367*FLEN/8, x4, x1, x2)

inst_74864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3ffe0000000000; valaddr_reg:x3; val_offset:224592*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224592*0 + 3*368*FLEN/8, x4, x1, x2)

inst_74865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3fff0000000000; valaddr_reg:x3; val_offset:224595*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224595*0 + 3*369*FLEN/8, x4, x1, x2)

inst_74866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3fff8000000000; valaddr_reg:x3; val_offset:224598*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224598*0 + 3*370*FLEN/8, x4, x1, x2)

inst_74867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3fffc000000000; valaddr_reg:x3; val_offset:224601*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224601*0 + 3*371*FLEN/8, x4, x1, x2)

inst_74868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3fffe000000000; valaddr_reg:x3; val_offset:224604*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224604*0 + 3*372*FLEN/8, x4, x1, x2)

inst_74869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3ffff000000000; valaddr_reg:x3; val_offset:224607*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224607*0 + 3*373*FLEN/8, x4, x1, x2)

inst_74870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3ffff800000000; valaddr_reg:x3; val_offset:224610*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224610*0 + 3*374*FLEN/8, x4, x1, x2)

inst_74871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3ffffc00000000; valaddr_reg:x3; val_offset:224613*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224613*0 + 3*375*FLEN/8, x4, x1, x2)

inst_74872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3ffffe00000000; valaddr_reg:x3; val_offset:224616*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224616*0 + 3*376*FLEN/8, x4, x1, x2)

inst_74873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3fffff00000000; valaddr_reg:x3; val_offset:224619*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224619*0 + 3*377*FLEN/8, x4, x1, x2)

inst_74874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3fffff80000000; valaddr_reg:x3; val_offset:224622*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224622*0 + 3*378*FLEN/8, x4, x1, x2)

inst_74875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3fffffc0000000; valaddr_reg:x3; val_offset:224625*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224625*0 + 3*379*FLEN/8, x4, x1, x2)

inst_74876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3fffffe0000000; valaddr_reg:x3; val_offset:224628*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224628*0 + 3*380*FLEN/8, x4, x1, x2)

inst_74877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3ffffff0000000; valaddr_reg:x3; val_offset:224631*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224631*0 + 3*381*FLEN/8, x4, x1, x2)

inst_74878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3ffffff8000000; valaddr_reg:x3; val_offset:224634*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224634*0 + 3*382*FLEN/8, x4, x1, x2)

inst_74879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3ffffffc000000; valaddr_reg:x3; val_offset:224637*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224637*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_74880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3ffffffe000000; valaddr_reg:x3; val_offset:224640*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224640*0 + 3*384*FLEN/8, x4, x1, x2)

inst_74881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3fffffff000000; valaddr_reg:x3; val_offset:224643*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224643*0 + 3*385*FLEN/8, x4, x1, x2)

inst_74882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3fffffff800000; valaddr_reg:x3; val_offset:224646*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224646*0 + 3*386*FLEN/8, x4, x1, x2)

inst_74883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3fffffffc00000; valaddr_reg:x3; val_offset:224649*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224649*0 + 3*387*FLEN/8, x4, x1, x2)

inst_74884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3fffffffe00000; valaddr_reg:x3; val_offset:224652*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224652*0 + 3*388*FLEN/8, x4, x1, x2)

inst_74885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3ffffffff00000; valaddr_reg:x3; val_offset:224655*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224655*0 + 3*389*FLEN/8, x4, x1, x2)

inst_74886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3ffffffff80000; valaddr_reg:x3; val_offset:224658*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224658*0 + 3*390*FLEN/8, x4, x1, x2)

inst_74887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3ffffffffc0000; valaddr_reg:x3; val_offset:224661*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224661*0 + 3*391*FLEN/8, x4, x1, x2)

inst_74888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3ffffffffe0000; valaddr_reg:x3; val_offset:224664*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224664*0 + 3*392*FLEN/8, x4, x1, x2)

inst_74889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3fffffffff0000; valaddr_reg:x3; val_offset:224667*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224667*0 + 3*393*FLEN/8, x4, x1, x2)

inst_74890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3fffffffff8000; valaddr_reg:x3; val_offset:224670*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224670*0 + 3*394*FLEN/8, x4, x1, x2)

inst_74891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3fffffffffc000; valaddr_reg:x3; val_offset:224673*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224673*0 + 3*395*FLEN/8, x4, x1, x2)

inst_74892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3fffffffffe000; valaddr_reg:x3; val_offset:224676*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224676*0 + 3*396*FLEN/8, x4, x1, x2)

inst_74893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3ffffffffff000; valaddr_reg:x3; val_offset:224679*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224679*0 + 3*397*FLEN/8, x4, x1, x2)

inst_74894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3ffffffffff800; valaddr_reg:x3; val_offset:224682*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224682*0 + 3*398*FLEN/8, x4, x1, x2)

inst_74895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3ffffffffffc00; valaddr_reg:x3; val_offset:224685*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224685*0 + 3*399*FLEN/8, x4, x1, x2)

inst_74896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3ffffffffffe00; valaddr_reg:x3; val_offset:224688*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224688*0 + 3*400*FLEN/8, x4, x1, x2)

inst_74897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3fffffffffff00; valaddr_reg:x3; val_offset:224691*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224691*0 + 3*401*FLEN/8, x4, x1, x2)

inst_74898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3fffffffffff80; valaddr_reg:x3; val_offset:224694*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224694*0 + 3*402*FLEN/8, x4, x1, x2)

inst_74899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3fffffffffffc0; valaddr_reg:x3; val_offset:224697*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224697*0 + 3*403*FLEN/8, x4, x1, x2)

inst_74900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3fffffffffffe0; valaddr_reg:x3; val_offset:224700*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224700*0 + 3*404*FLEN/8, x4, x1, x2)

inst_74901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3ffffffffffff0; valaddr_reg:x3; val_offset:224703*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224703*0 + 3*405*FLEN/8, x4, x1, x2)

inst_74902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3ffffffffffff8; valaddr_reg:x3; val_offset:224706*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224706*0 + 3*406*FLEN/8, x4, x1, x2)

inst_74903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3ffffffffffffc; valaddr_reg:x3; val_offset:224709*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224709*0 + 3*407*FLEN/8, x4, x1, x2)

inst_74904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3ffffffffffffe; valaddr_reg:x3; val_offset:224712*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224712*0 + 3*408*FLEN/8, x4, x1, x2)

inst_74905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf3fffffffffffff; valaddr_reg:x3; val_offset:224715*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224715*0 + 3*409*FLEN/8, x4, x1, x2)

inst_74906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:224718*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224718*0 + 3*410*FLEN/8, x4, x1, x2)

inst_74907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:224721*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224721*0 + 3*411*FLEN/8, x4, x1, x2)

inst_74908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:224724*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224724*0 + 3*412*FLEN/8, x4, x1, x2)

inst_74909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:224727*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224727*0 + 3*413*FLEN/8, x4, x1, x2)

inst_74910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:224730*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224730*0 + 3*414*FLEN/8, x4, x1, x2)

inst_74911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:224733*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224733*0 + 3*415*FLEN/8, x4, x1, x2)

inst_74912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:224736*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224736*0 + 3*416*FLEN/8, x4, x1, x2)

inst_74913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:224739*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224739*0 + 3*417*FLEN/8, x4, x1, x2)

inst_74914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:224742*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224742*0 + 3*418*FLEN/8, x4, x1, x2)

inst_74915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:224745*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224745*0 + 3*419*FLEN/8, x4, x1, x2)

inst_74916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:224748*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224748*0 + 3*420*FLEN/8, x4, x1, x2)

inst_74917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:224751*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224751*0 + 3*421*FLEN/8, x4, x1, x2)

inst_74918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:224754*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224754*0 + 3*422*FLEN/8, x4, x1, x2)

inst_74919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:224757*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224757*0 + 3*423*FLEN/8, x4, x1, x2)

inst_74920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:224760*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224760*0 + 3*424*FLEN/8, x4, x1, x2)

inst_74921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:224763*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224763*0 + 3*425*FLEN/8, x4, x1, x2)

inst_74922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:224766*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224766*0 + 3*426*FLEN/8, x4, x1, x2)

inst_74923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:224769*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224769*0 + 3*427*FLEN/8, x4, x1, x2)

inst_74924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:224772*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224772*0 + 3*428*FLEN/8, x4, x1, x2)

inst_74925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:224775*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224775*0 + 3*429*FLEN/8, x4, x1, x2)

inst_74926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:224778*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224778*0 + 3*430*FLEN/8, x4, x1, x2)

inst_74927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5e00cfad1aba0 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa767cf00e725e9; op2val:0x9fc5e00cfad1aba0;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:224781*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224781*0 + 3*431*FLEN/8, x4, x1, x2)

inst_74928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:224784*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224784*0 + 3*432*FLEN/8, x4, x1, x2)

inst_74929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:224787*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224787*0 + 3*433*FLEN/8, x4, x1, x2)

inst_74930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:224790*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224790*0 + 3*434*FLEN/8, x4, x1, x2)

inst_74931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:224793*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224793*0 + 3*435*FLEN/8, x4, x1, x2)

inst_74932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:224796*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224796*0 + 3*436*FLEN/8, x4, x1, x2)

inst_74933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:224799*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224799*0 + 3*437*FLEN/8, x4, x1, x2)

inst_74934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:224802*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224802*0 + 3*438*FLEN/8, x4, x1, x2)

inst_74935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:224805*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224805*0 + 3*439*FLEN/8, x4, x1, x2)

inst_74936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:224808*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224808*0 + 3*440*FLEN/8, x4, x1, x2)

inst_74937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:224811*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224811*0 + 3*441*FLEN/8, x4, x1, x2)

inst_74938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:224814*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224814*0 + 3*442*FLEN/8, x4, x1, x2)

inst_74939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:224817*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224817*0 + 3*443*FLEN/8, x4, x1, x2)

inst_74940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:224820*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224820*0 + 3*444*FLEN/8, x4, x1, x2)

inst_74941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:224823*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224823*0 + 3*445*FLEN/8, x4, x1, x2)

inst_74942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:224826*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224826*0 + 3*446*FLEN/8, x4, x1, x2)

inst_74943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:224829*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224829*0 + 3*447*FLEN/8, x4, x1, x2)

inst_74944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:224832*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224832*0 + 3*448*FLEN/8, x4, x1, x2)

inst_74945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:224835*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224835*0 + 3*449*FLEN/8, x4, x1, x2)

inst_74946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:224838*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224838*0 + 3*450*FLEN/8, x4, x1, x2)

inst_74947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:224841*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224841*0 + 3*451*FLEN/8, x4, x1, x2)

inst_74948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:224844*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224844*0 + 3*452*FLEN/8, x4, x1, x2)

inst_74949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:224847*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224847*0 + 3*453*FLEN/8, x4, x1, x2)

inst_74950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83e0000000000000; valaddr_reg:x3; val_offset:224850*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224850*0 + 3*454*FLEN/8, x4, x1, x2)

inst_74951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83e0000000000001; valaddr_reg:x3; val_offset:224853*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224853*0 + 3*455*FLEN/8, x4, x1, x2)

inst_74952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83e0000000000003; valaddr_reg:x3; val_offset:224856*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224856*0 + 3*456*FLEN/8, x4, x1, x2)

inst_74953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83e0000000000007; valaddr_reg:x3; val_offset:224859*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224859*0 + 3*457*FLEN/8, x4, x1, x2)

inst_74954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83e000000000000f; valaddr_reg:x3; val_offset:224862*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224862*0 + 3*458*FLEN/8, x4, x1, x2)

inst_74955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83e000000000001f; valaddr_reg:x3; val_offset:224865*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224865*0 + 3*459*FLEN/8, x4, x1, x2)

inst_74956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83e000000000003f; valaddr_reg:x3; val_offset:224868*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224868*0 + 3*460*FLEN/8, x4, x1, x2)

inst_74957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83e000000000007f; valaddr_reg:x3; val_offset:224871*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224871*0 + 3*461*FLEN/8, x4, x1, x2)

inst_74958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83e00000000000ff; valaddr_reg:x3; val_offset:224874*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224874*0 + 3*462*FLEN/8, x4, x1, x2)

inst_74959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83e00000000001ff; valaddr_reg:x3; val_offset:224877*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224877*0 + 3*463*FLEN/8, x4, x1, x2)

inst_74960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83e00000000003ff; valaddr_reg:x3; val_offset:224880*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224880*0 + 3*464*FLEN/8, x4, x1, x2)

inst_74961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83e00000000007ff; valaddr_reg:x3; val_offset:224883*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224883*0 + 3*465*FLEN/8, x4, x1, x2)

inst_74962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83e0000000000fff; valaddr_reg:x3; val_offset:224886*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224886*0 + 3*466*FLEN/8, x4, x1, x2)

inst_74963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83e0000000001fff; valaddr_reg:x3; val_offset:224889*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224889*0 + 3*467*FLEN/8, x4, x1, x2)

inst_74964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83e0000000003fff; valaddr_reg:x3; val_offset:224892*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224892*0 + 3*468*FLEN/8, x4, x1, x2)

inst_74965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83e0000000007fff; valaddr_reg:x3; val_offset:224895*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224895*0 + 3*469*FLEN/8, x4, x1, x2)

inst_74966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83e000000000ffff; valaddr_reg:x3; val_offset:224898*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224898*0 + 3*470*FLEN/8, x4, x1, x2)

inst_74967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83e000000001ffff; valaddr_reg:x3; val_offset:224901*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224901*0 + 3*471*FLEN/8, x4, x1, x2)

inst_74968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83e000000003ffff; valaddr_reg:x3; val_offset:224904*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224904*0 + 3*472*FLEN/8, x4, x1, x2)

inst_74969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83e000000007ffff; valaddr_reg:x3; val_offset:224907*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224907*0 + 3*473*FLEN/8, x4, x1, x2)

inst_74970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83e00000000fffff; valaddr_reg:x3; val_offset:224910*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224910*0 + 3*474*FLEN/8, x4, x1, x2)

inst_74971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83e00000001fffff; valaddr_reg:x3; val_offset:224913*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224913*0 + 3*475*FLEN/8, x4, x1, x2)

inst_74972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83e00000003fffff; valaddr_reg:x3; val_offset:224916*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224916*0 + 3*476*FLEN/8, x4, x1, x2)

inst_74973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83e00000007fffff; valaddr_reg:x3; val_offset:224919*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224919*0 + 3*477*FLEN/8, x4, x1, x2)

inst_74974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83e0000000ffffff; valaddr_reg:x3; val_offset:224922*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224922*0 + 3*478*FLEN/8, x4, x1, x2)

inst_74975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83e0000001ffffff; valaddr_reg:x3; val_offset:224925*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224925*0 + 3*479*FLEN/8, x4, x1, x2)

inst_74976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83e0000003ffffff; valaddr_reg:x3; val_offset:224928*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224928*0 + 3*480*FLEN/8, x4, x1, x2)

inst_74977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83e0000007ffffff; valaddr_reg:x3; val_offset:224931*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224931*0 + 3*481*FLEN/8, x4, x1, x2)

inst_74978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83e000000fffffff; valaddr_reg:x3; val_offset:224934*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224934*0 + 3*482*FLEN/8, x4, x1, x2)

inst_74979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83e000001fffffff; valaddr_reg:x3; val_offset:224937*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224937*0 + 3*483*FLEN/8, x4, x1, x2)

inst_74980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83e000003fffffff; valaddr_reg:x3; val_offset:224940*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224940*0 + 3*484*FLEN/8, x4, x1, x2)

inst_74981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83e000007fffffff; valaddr_reg:x3; val_offset:224943*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224943*0 + 3*485*FLEN/8, x4, x1, x2)

inst_74982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83e00000ffffffff; valaddr_reg:x3; val_offset:224946*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224946*0 + 3*486*FLEN/8, x4, x1, x2)

inst_74983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83e00001ffffffff; valaddr_reg:x3; val_offset:224949*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224949*0 + 3*487*FLEN/8, x4, x1, x2)

inst_74984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83e00003ffffffff; valaddr_reg:x3; val_offset:224952*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224952*0 + 3*488*FLEN/8, x4, x1, x2)

inst_74985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83e00007ffffffff; valaddr_reg:x3; val_offset:224955*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224955*0 + 3*489*FLEN/8, x4, x1, x2)

inst_74986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83e0000fffffffff; valaddr_reg:x3; val_offset:224958*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224958*0 + 3*490*FLEN/8, x4, x1, x2)

inst_74987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83e0001fffffffff; valaddr_reg:x3; val_offset:224961*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224961*0 + 3*491*FLEN/8, x4, x1, x2)

inst_74988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83e0003fffffffff; valaddr_reg:x3; val_offset:224964*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224964*0 + 3*492*FLEN/8, x4, x1, x2)

inst_74989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83e0007fffffffff; valaddr_reg:x3; val_offset:224967*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224967*0 + 3*493*FLEN/8, x4, x1, x2)

inst_74990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83e000ffffffffff; valaddr_reg:x3; val_offset:224970*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224970*0 + 3*494*FLEN/8, x4, x1, x2)

inst_74991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83e001ffffffffff; valaddr_reg:x3; val_offset:224973*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224973*0 + 3*495*FLEN/8, x4, x1, x2)

inst_74992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83e003ffffffffff; valaddr_reg:x3; val_offset:224976*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224976*0 + 3*496*FLEN/8, x4, x1, x2)

inst_74993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83e007ffffffffff; valaddr_reg:x3; val_offset:224979*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224979*0 + 3*497*FLEN/8, x4, x1, x2)

inst_74994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83e00fffffffffff; valaddr_reg:x3; val_offset:224982*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224982*0 + 3*498*FLEN/8, x4, x1, x2)

inst_74995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83e01fffffffffff; valaddr_reg:x3; val_offset:224985*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224985*0 + 3*499*FLEN/8, x4, x1, x2)

inst_74996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83e03fffffffffff; valaddr_reg:x3; val_offset:224988*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224988*0 + 3*500*FLEN/8, x4, x1, x2)

inst_74997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83e07fffffffffff; valaddr_reg:x3; val_offset:224991*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224991*0 + 3*501*FLEN/8, x4, x1, x2)

inst_74998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83e0ffffffffffff; valaddr_reg:x3; val_offset:224994*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224994*0 + 3*502*FLEN/8, x4, x1, x2)

inst_74999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83e1ffffffffffff; valaddr_reg:x3; val_offset:224997*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 224997*0 + 3*503*FLEN/8, x4, x1, x2)

inst_75000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83e3ffffffffffff; valaddr_reg:x3; val_offset:225000*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225000*0 + 3*504*FLEN/8, x4, x1, x2)

inst_75001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83e7ffffffffffff; valaddr_reg:x3; val_offset:225003*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225003*0 + 3*505*FLEN/8, x4, x1, x2)

inst_75002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83e8000000000000; valaddr_reg:x3; val_offset:225006*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225006*0 + 3*506*FLEN/8, x4, x1, x2)

inst_75003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83ec000000000000; valaddr_reg:x3; val_offset:225009*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225009*0 + 3*507*FLEN/8, x4, x1, x2)

inst_75004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83ee000000000000; valaddr_reg:x3; val_offset:225012*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225012*0 + 3*508*FLEN/8, x4, x1, x2)

inst_75005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83ef000000000000; valaddr_reg:x3; val_offset:225015*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225015*0 + 3*509*FLEN/8, x4, x1, x2)

inst_75006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83ef800000000000; valaddr_reg:x3; val_offset:225018*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225018*0 + 3*510*FLEN/8, x4, x1, x2)

inst_75007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83efc00000000000; valaddr_reg:x3; val_offset:225021*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225021*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_75008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83efe00000000000; valaddr_reg:x3; val_offset:225024*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225024*0 + 3*512*FLEN/8, x4, x1, x2)

inst_75009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83eff00000000000; valaddr_reg:x3; val_offset:225027*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225027*0 + 3*513*FLEN/8, x4, x1, x2)

inst_75010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83eff80000000000; valaddr_reg:x3; val_offset:225030*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225030*0 + 3*514*FLEN/8, x4, x1, x2)

inst_75011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83effc0000000000; valaddr_reg:x3; val_offset:225033*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225033*0 + 3*515*FLEN/8, x4, x1, x2)

inst_75012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83effe0000000000; valaddr_reg:x3; val_offset:225036*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225036*0 + 3*516*FLEN/8, x4, x1, x2)

inst_75013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83efff0000000000; valaddr_reg:x3; val_offset:225039*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225039*0 + 3*517*FLEN/8, x4, x1, x2)

inst_75014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83efff8000000000; valaddr_reg:x3; val_offset:225042*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225042*0 + 3*518*FLEN/8, x4, x1, x2)

inst_75015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83efffc000000000; valaddr_reg:x3; val_offset:225045*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225045*0 + 3*519*FLEN/8, x4, x1, x2)

inst_75016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83efffe000000000; valaddr_reg:x3; val_offset:225048*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225048*0 + 3*520*FLEN/8, x4, x1, x2)

inst_75017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83effff000000000; valaddr_reg:x3; val_offset:225051*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225051*0 + 3*521*FLEN/8, x4, x1, x2)

inst_75018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83effff800000000; valaddr_reg:x3; val_offset:225054*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225054*0 + 3*522*FLEN/8, x4, x1, x2)

inst_75019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83effffc00000000; valaddr_reg:x3; val_offset:225057*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225057*0 + 3*523*FLEN/8, x4, x1, x2)

inst_75020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83effffe00000000; valaddr_reg:x3; val_offset:225060*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225060*0 + 3*524*FLEN/8, x4, x1, x2)

inst_75021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83efffff00000000; valaddr_reg:x3; val_offset:225063*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225063*0 + 3*525*FLEN/8, x4, x1, x2)

inst_75022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83efffff80000000; valaddr_reg:x3; val_offset:225066*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225066*0 + 3*526*FLEN/8, x4, x1, x2)

inst_75023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83efffffc0000000; valaddr_reg:x3; val_offset:225069*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225069*0 + 3*527*FLEN/8, x4, x1, x2)

inst_75024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83efffffe0000000; valaddr_reg:x3; val_offset:225072*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225072*0 + 3*528*FLEN/8, x4, x1, x2)

inst_75025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83effffff0000000; valaddr_reg:x3; val_offset:225075*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225075*0 + 3*529*FLEN/8, x4, x1, x2)

inst_75026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83effffff8000000; valaddr_reg:x3; val_offset:225078*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225078*0 + 3*530*FLEN/8, x4, x1, x2)

inst_75027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83effffffc000000; valaddr_reg:x3; val_offset:225081*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225081*0 + 3*531*FLEN/8, x4, x1, x2)

inst_75028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83effffffe000000; valaddr_reg:x3; val_offset:225084*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225084*0 + 3*532*FLEN/8, x4, x1, x2)

inst_75029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83efffffff000000; valaddr_reg:x3; val_offset:225087*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225087*0 + 3*533*FLEN/8, x4, x1, x2)

inst_75030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83efffffff800000; valaddr_reg:x3; val_offset:225090*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225090*0 + 3*534*FLEN/8, x4, x1, x2)

inst_75031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83efffffffc00000; valaddr_reg:x3; val_offset:225093*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225093*0 + 3*535*FLEN/8, x4, x1, x2)

inst_75032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83efffffffe00000; valaddr_reg:x3; val_offset:225096*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225096*0 + 3*536*FLEN/8, x4, x1, x2)

inst_75033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83effffffff00000; valaddr_reg:x3; val_offset:225099*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225099*0 + 3*537*FLEN/8, x4, x1, x2)

inst_75034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83effffffff80000; valaddr_reg:x3; val_offset:225102*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225102*0 + 3*538*FLEN/8, x4, x1, x2)

inst_75035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83effffffffc0000; valaddr_reg:x3; val_offset:225105*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225105*0 + 3*539*FLEN/8, x4, x1, x2)

inst_75036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83effffffffe0000; valaddr_reg:x3; val_offset:225108*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225108*0 + 3*540*FLEN/8, x4, x1, x2)

inst_75037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83efffffffff0000; valaddr_reg:x3; val_offset:225111*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225111*0 + 3*541*FLEN/8, x4, x1, x2)

inst_75038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83efffffffff8000; valaddr_reg:x3; val_offset:225114*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225114*0 + 3*542*FLEN/8, x4, x1, x2)

inst_75039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83efffffffffc000; valaddr_reg:x3; val_offset:225117*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225117*0 + 3*543*FLEN/8, x4, x1, x2)

inst_75040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83efffffffffe000; valaddr_reg:x3; val_offset:225120*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225120*0 + 3*544*FLEN/8, x4, x1, x2)

inst_75041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83effffffffff000; valaddr_reg:x3; val_offset:225123*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225123*0 + 3*545*FLEN/8, x4, x1, x2)

inst_75042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83effffffffff800; valaddr_reg:x3; val_offset:225126*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225126*0 + 3*546*FLEN/8, x4, x1, x2)

inst_75043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83effffffffffc00; valaddr_reg:x3; val_offset:225129*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225129*0 + 3*547*FLEN/8, x4, x1, x2)

inst_75044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83effffffffffe00; valaddr_reg:x3; val_offset:225132*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225132*0 + 3*548*FLEN/8, x4, x1, x2)

inst_75045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83efffffffffff00; valaddr_reg:x3; val_offset:225135*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225135*0 + 3*549*FLEN/8, x4, x1, x2)

inst_75046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83efffffffffff80; valaddr_reg:x3; val_offset:225138*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225138*0 + 3*550*FLEN/8, x4, x1, x2)

inst_75047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83efffffffffffc0; valaddr_reg:x3; val_offset:225141*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225141*0 + 3*551*FLEN/8, x4, x1, x2)

inst_75048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83efffffffffffe0; valaddr_reg:x3; val_offset:225144*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225144*0 + 3*552*FLEN/8, x4, x1, x2)

inst_75049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83effffffffffff0; valaddr_reg:x3; val_offset:225147*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225147*0 + 3*553*FLEN/8, x4, x1, x2)

inst_75050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83effffffffffff8; valaddr_reg:x3; val_offset:225150*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225150*0 + 3*554*FLEN/8, x4, x1, x2)

inst_75051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83effffffffffffc; valaddr_reg:x3; val_offset:225153*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225153*0 + 3*555*FLEN/8, x4, x1, x2)

inst_75052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83effffffffffffe; valaddr_reg:x3; val_offset:225156*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225156*0 + 3*556*FLEN/8, x4, x1, x2)

inst_75053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77b8ab6cc4ab4; op2val:0x8000;
op3val:0x83efffffffffffff; valaddr_reg:x3; val_offset:225159*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225159*0 + 3*557*FLEN/8, x4, x1, x2)

inst_75054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:225162*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225162*0 + 3*558*FLEN/8, x4, x1, x2)

inst_75055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:225165*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225165*0 + 3*559*FLEN/8, x4, x1, x2)

inst_75056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:225168*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225168*0 + 3*560*FLEN/8, x4, x1, x2)

inst_75057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:225171*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225171*0 + 3*561*FLEN/8, x4, x1, x2)

inst_75058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:225174*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225174*0 + 3*562*FLEN/8, x4, x1, x2)

inst_75059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:225177*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225177*0 + 3*563*FLEN/8, x4, x1, x2)

inst_75060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:225180*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225180*0 + 3*564*FLEN/8, x4, x1, x2)

inst_75061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:225183*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225183*0 + 3*565*FLEN/8, x4, x1, x2)

inst_75062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:225186*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225186*0 + 3*566*FLEN/8, x4, x1, x2)

inst_75063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:225189*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225189*0 + 3*567*FLEN/8, x4, x1, x2)

inst_75064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:225192*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225192*0 + 3*568*FLEN/8, x4, x1, x2)

inst_75065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:225195*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225195*0 + 3*569*FLEN/8, x4, x1, x2)

inst_75066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:225198*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225198*0 + 3*570*FLEN/8, x4, x1, x2)

inst_75067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:225201*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225201*0 + 3*571*FLEN/8, x4, x1, x2)

inst_75068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:225204*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225204*0 + 3*572*FLEN/8, x4, x1, x2)

inst_75069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:225207*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225207*0 + 3*573*FLEN/8, x4, x1, x2)

inst_75070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:225210*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225210*0 + 3*574*FLEN/8, x4, x1, x2)

inst_75071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:225213*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225213*0 + 3*575*FLEN/8, x4, x1, x2)

inst_75072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:225216*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225216*0 + 3*576*FLEN/8, x4, x1, x2)

inst_75073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:225219*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225219*0 + 3*577*FLEN/8, x4, x1, x2)

inst_75074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:225222*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225222*0 + 3*578*FLEN/8, x4, x1, x2)

inst_75075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:225225*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225225*0 + 3*579*FLEN/8, x4, x1, x2)

inst_75076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2d0000000000000; valaddr_reg:x3; val_offset:225228*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225228*0 + 3*580*FLEN/8, x4, x1, x2)

inst_75077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2d0000000000001; valaddr_reg:x3; val_offset:225231*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225231*0 + 3*581*FLEN/8, x4, x1, x2)

inst_75078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2d0000000000003; valaddr_reg:x3; val_offset:225234*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225234*0 + 3*582*FLEN/8, x4, x1, x2)

inst_75079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2d0000000000007; valaddr_reg:x3; val_offset:225237*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225237*0 + 3*583*FLEN/8, x4, x1, x2)

inst_75080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2d000000000000f; valaddr_reg:x3; val_offset:225240*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225240*0 + 3*584*FLEN/8, x4, x1, x2)

inst_75081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2d000000000001f; valaddr_reg:x3; val_offset:225243*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225243*0 + 3*585*FLEN/8, x4, x1, x2)

inst_75082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2d000000000003f; valaddr_reg:x3; val_offset:225246*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225246*0 + 3*586*FLEN/8, x4, x1, x2)

inst_75083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2d000000000007f; valaddr_reg:x3; val_offset:225249*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225249*0 + 3*587*FLEN/8, x4, x1, x2)

inst_75084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2d00000000000ff; valaddr_reg:x3; val_offset:225252*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225252*0 + 3*588*FLEN/8, x4, x1, x2)

inst_75085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2d00000000001ff; valaddr_reg:x3; val_offset:225255*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225255*0 + 3*589*FLEN/8, x4, x1, x2)

inst_75086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2d00000000003ff; valaddr_reg:x3; val_offset:225258*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225258*0 + 3*590*FLEN/8, x4, x1, x2)

inst_75087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2d00000000007ff; valaddr_reg:x3; val_offset:225261*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225261*0 + 3*591*FLEN/8, x4, x1, x2)

inst_75088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2d0000000000fff; valaddr_reg:x3; val_offset:225264*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225264*0 + 3*592*FLEN/8, x4, x1, x2)

inst_75089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2d0000000001fff; valaddr_reg:x3; val_offset:225267*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225267*0 + 3*593*FLEN/8, x4, x1, x2)

inst_75090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2d0000000003fff; valaddr_reg:x3; val_offset:225270*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225270*0 + 3*594*FLEN/8, x4, x1, x2)

inst_75091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2d0000000007fff; valaddr_reg:x3; val_offset:225273*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225273*0 + 3*595*FLEN/8, x4, x1, x2)

inst_75092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2d000000000ffff; valaddr_reg:x3; val_offset:225276*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225276*0 + 3*596*FLEN/8, x4, x1, x2)

inst_75093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2d000000001ffff; valaddr_reg:x3; val_offset:225279*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225279*0 + 3*597*FLEN/8, x4, x1, x2)

inst_75094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2d000000003ffff; valaddr_reg:x3; val_offset:225282*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225282*0 + 3*598*FLEN/8, x4, x1, x2)

inst_75095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2d000000007ffff; valaddr_reg:x3; val_offset:225285*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225285*0 + 3*599*FLEN/8, x4, x1, x2)

inst_75096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2d00000000fffff; valaddr_reg:x3; val_offset:225288*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225288*0 + 3*600*FLEN/8, x4, x1, x2)

inst_75097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2d00000001fffff; valaddr_reg:x3; val_offset:225291*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225291*0 + 3*601*FLEN/8, x4, x1, x2)

inst_75098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2d00000003fffff; valaddr_reg:x3; val_offset:225294*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225294*0 + 3*602*FLEN/8, x4, x1, x2)

inst_75099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2d00000007fffff; valaddr_reg:x3; val_offset:225297*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225297*0 + 3*603*FLEN/8, x4, x1, x2)

inst_75100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2d0000000ffffff; valaddr_reg:x3; val_offset:225300*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225300*0 + 3*604*FLEN/8, x4, x1, x2)

inst_75101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2d0000001ffffff; valaddr_reg:x3; val_offset:225303*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225303*0 + 3*605*FLEN/8, x4, x1, x2)

inst_75102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2d0000003ffffff; valaddr_reg:x3; val_offset:225306*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225306*0 + 3*606*FLEN/8, x4, x1, x2)

inst_75103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2d0000007ffffff; valaddr_reg:x3; val_offset:225309*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225309*0 + 3*607*FLEN/8, x4, x1, x2)

inst_75104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2d000000fffffff; valaddr_reg:x3; val_offset:225312*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225312*0 + 3*608*FLEN/8, x4, x1, x2)

inst_75105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2d000001fffffff; valaddr_reg:x3; val_offset:225315*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225315*0 + 3*609*FLEN/8, x4, x1, x2)

inst_75106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2d000003fffffff; valaddr_reg:x3; val_offset:225318*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225318*0 + 3*610*FLEN/8, x4, x1, x2)

inst_75107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2d000007fffffff; valaddr_reg:x3; val_offset:225321*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225321*0 + 3*611*FLEN/8, x4, x1, x2)

inst_75108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2d00000ffffffff; valaddr_reg:x3; val_offset:225324*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225324*0 + 3*612*FLEN/8, x4, x1, x2)

inst_75109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2d00001ffffffff; valaddr_reg:x3; val_offset:225327*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225327*0 + 3*613*FLEN/8, x4, x1, x2)

inst_75110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2d00003ffffffff; valaddr_reg:x3; val_offset:225330*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225330*0 + 3*614*FLEN/8, x4, x1, x2)

inst_75111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2d00007ffffffff; valaddr_reg:x3; val_offset:225333*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225333*0 + 3*615*FLEN/8, x4, x1, x2)

inst_75112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2d0000fffffffff; valaddr_reg:x3; val_offset:225336*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225336*0 + 3*616*FLEN/8, x4, x1, x2)

inst_75113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2d0001fffffffff; valaddr_reg:x3; val_offset:225339*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225339*0 + 3*617*FLEN/8, x4, x1, x2)

inst_75114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2d0003fffffffff; valaddr_reg:x3; val_offset:225342*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225342*0 + 3*618*FLEN/8, x4, x1, x2)

inst_75115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2d0007fffffffff; valaddr_reg:x3; val_offset:225345*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225345*0 + 3*619*FLEN/8, x4, x1, x2)

inst_75116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2d000ffffffffff; valaddr_reg:x3; val_offset:225348*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225348*0 + 3*620*FLEN/8, x4, x1, x2)

inst_75117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2d001ffffffffff; valaddr_reg:x3; val_offset:225351*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225351*0 + 3*621*FLEN/8, x4, x1, x2)

inst_75118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2d003ffffffffff; valaddr_reg:x3; val_offset:225354*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225354*0 + 3*622*FLEN/8, x4, x1, x2)

inst_75119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2d007ffffffffff; valaddr_reg:x3; val_offset:225357*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225357*0 + 3*623*FLEN/8, x4, x1, x2)

inst_75120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2d00fffffffffff; valaddr_reg:x3; val_offset:225360*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225360*0 + 3*624*FLEN/8, x4, x1, x2)

inst_75121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2d01fffffffffff; valaddr_reg:x3; val_offset:225363*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225363*0 + 3*625*FLEN/8, x4, x1, x2)

inst_75122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2d03fffffffffff; valaddr_reg:x3; val_offset:225366*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225366*0 + 3*626*FLEN/8, x4, x1, x2)

inst_75123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2d07fffffffffff; valaddr_reg:x3; val_offset:225369*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225369*0 + 3*627*FLEN/8, x4, x1, x2)

inst_75124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2d0ffffffffffff; valaddr_reg:x3; val_offset:225372*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225372*0 + 3*628*FLEN/8, x4, x1, x2)

inst_75125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2d1ffffffffffff; valaddr_reg:x3; val_offset:225375*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225375*0 + 3*629*FLEN/8, x4, x1, x2)

inst_75126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2d3ffffffffffff; valaddr_reg:x3; val_offset:225378*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225378*0 + 3*630*FLEN/8, x4, x1, x2)

inst_75127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2d7ffffffffffff; valaddr_reg:x3; val_offset:225381*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225381*0 + 3*631*FLEN/8, x4, x1, x2)

inst_75128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2d8000000000000; valaddr_reg:x3; val_offset:225384*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225384*0 + 3*632*FLEN/8, x4, x1, x2)

inst_75129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2dc000000000000; valaddr_reg:x3; val_offset:225387*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225387*0 + 3*633*FLEN/8, x4, x1, x2)

inst_75130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2de000000000000; valaddr_reg:x3; val_offset:225390*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225390*0 + 3*634*FLEN/8, x4, x1, x2)

inst_75131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2df000000000000; valaddr_reg:x3; val_offset:225393*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225393*0 + 3*635*FLEN/8, x4, x1, x2)

inst_75132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2df800000000000; valaddr_reg:x3; val_offset:225396*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225396*0 + 3*636*FLEN/8, x4, x1, x2)

inst_75133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2dfc00000000000; valaddr_reg:x3; val_offset:225399*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225399*0 + 3*637*FLEN/8, x4, x1, x2)

inst_75134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2dfe00000000000; valaddr_reg:x3; val_offset:225402*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225402*0 + 3*638*FLEN/8, x4, x1, x2)

inst_75135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2dff00000000000; valaddr_reg:x3; val_offset:225405*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225405*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_75136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2dff80000000000; valaddr_reg:x3; val_offset:225408*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225408*0 + 3*640*FLEN/8, x4, x1, x2)

inst_75137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2dffc0000000000; valaddr_reg:x3; val_offset:225411*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225411*0 + 3*641*FLEN/8, x4, x1, x2)

inst_75138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2dffe0000000000; valaddr_reg:x3; val_offset:225414*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225414*0 + 3*642*FLEN/8, x4, x1, x2)

inst_75139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2dfff0000000000; valaddr_reg:x3; val_offset:225417*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225417*0 + 3*643*FLEN/8, x4, x1, x2)

inst_75140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2dfff8000000000; valaddr_reg:x3; val_offset:225420*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225420*0 + 3*644*FLEN/8, x4, x1, x2)

inst_75141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2dfffc000000000; valaddr_reg:x3; val_offset:225423*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225423*0 + 3*645*FLEN/8, x4, x1, x2)

inst_75142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2dfffe000000000; valaddr_reg:x3; val_offset:225426*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225426*0 + 3*646*FLEN/8, x4, x1, x2)

inst_75143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2dffff000000000; valaddr_reg:x3; val_offset:225429*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225429*0 + 3*647*FLEN/8, x4, x1, x2)

inst_75144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2dffff800000000; valaddr_reg:x3; val_offset:225432*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225432*0 + 3*648*FLEN/8, x4, x1, x2)

inst_75145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2dffffc00000000; valaddr_reg:x3; val_offset:225435*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225435*0 + 3*649*FLEN/8, x4, x1, x2)

inst_75146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2dffffe00000000; valaddr_reg:x3; val_offset:225438*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225438*0 + 3*650*FLEN/8, x4, x1, x2)

inst_75147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2dfffff00000000; valaddr_reg:x3; val_offset:225441*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225441*0 + 3*651*FLEN/8, x4, x1, x2)

inst_75148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2dfffff80000000; valaddr_reg:x3; val_offset:225444*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225444*0 + 3*652*FLEN/8, x4, x1, x2)

inst_75149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2dfffffc0000000; valaddr_reg:x3; val_offset:225447*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225447*0 + 3*653*FLEN/8, x4, x1, x2)

inst_75150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2dfffffe0000000; valaddr_reg:x3; val_offset:225450*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225450*0 + 3*654*FLEN/8, x4, x1, x2)

inst_75151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2dffffff0000000; valaddr_reg:x3; val_offset:225453*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225453*0 + 3*655*FLEN/8, x4, x1, x2)

inst_75152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2dffffff8000000; valaddr_reg:x3; val_offset:225456*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225456*0 + 3*656*FLEN/8, x4, x1, x2)

inst_75153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2dffffffc000000; valaddr_reg:x3; val_offset:225459*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225459*0 + 3*657*FLEN/8, x4, x1, x2)

inst_75154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2dffffffe000000; valaddr_reg:x3; val_offset:225462*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225462*0 + 3*658*FLEN/8, x4, x1, x2)

inst_75155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2dfffffff000000; valaddr_reg:x3; val_offset:225465*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225465*0 + 3*659*FLEN/8, x4, x1, x2)

inst_75156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2dfffffff800000; valaddr_reg:x3; val_offset:225468*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225468*0 + 3*660*FLEN/8, x4, x1, x2)

inst_75157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2dfffffffc00000; valaddr_reg:x3; val_offset:225471*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225471*0 + 3*661*FLEN/8, x4, x1, x2)

inst_75158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2dfffffffe00000; valaddr_reg:x3; val_offset:225474*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225474*0 + 3*662*FLEN/8, x4, x1, x2)

inst_75159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2dffffffff00000; valaddr_reg:x3; val_offset:225477*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225477*0 + 3*663*FLEN/8, x4, x1, x2)

inst_75160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2dffffffff80000; valaddr_reg:x3; val_offset:225480*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225480*0 + 3*664*FLEN/8, x4, x1, x2)

inst_75161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2dffffffffc0000; valaddr_reg:x3; val_offset:225483*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225483*0 + 3*665*FLEN/8, x4, x1, x2)

inst_75162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2dffffffffe0000; valaddr_reg:x3; val_offset:225486*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225486*0 + 3*666*FLEN/8, x4, x1, x2)

inst_75163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2dfffffffff0000; valaddr_reg:x3; val_offset:225489*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225489*0 + 3*667*FLEN/8, x4, x1, x2)

inst_75164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2dfffffffff8000; valaddr_reg:x3; val_offset:225492*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225492*0 + 3*668*FLEN/8, x4, x1, x2)

inst_75165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2dfffffffffc000; valaddr_reg:x3; val_offset:225495*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225495*0 + 3*669*FLEN/8, x4, x1, x2)

inst_75166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2dfffffffffe000; valaddr_reg:x3; val_offset:225498*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225498*0 + 3*670*FLEN/8, x4, x1, x2)

inst_75167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2dffffffffff000; valaddr_reg:x3; val_offset:225501*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225501*0 + 3*671*FLEN/8, x4, x1, x2)

inst_75168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2dffffffffff800; valaddr_reg:x3; val_offset:225504*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225504*0 + 3*672*FLEN/8, x4, x1, x2)

inst_75169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2dffffffffffc00; valaddr_reg:x3; val_offset:225507*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225507*0 + 3*673*FLEN/8, x4, x1, x2)

inst_75170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2dffffffffffe00; valaddr_reg:x3; val_offset:225510*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225510*0 + 3*674*FLEN/8, x4, x1, x2)

inst_75171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2dfffffffffff00; valaddr_reg:x3; val_offset:225513*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225513*0 + 3*675*FLEN/8, x4, x1, x2)

inst_75172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2dfffffffffff80; valaddr_reg:x3; val_offset:225516*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225516*0 + 3*676*FLEN/8, x4, x1, x2)

inst_75173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2dfffffffffffc0; valaddr_reg:x3; val_offset:225519*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225519*0 + 3*677*FLEN/8, x4, x1, x2)

inst_75174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2dfffffffffffe0; valaddr_reg:x3; val_offset:225522*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225522*0 + 3*678*FLEN/8, x4, x1, x2)

inst_75175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2dffffffffffff0; valaddr_reg:x3; val_offset:225525*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225525*0 + 3*679*FLEN/8, x4, x1, x2)

inst_75176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2dffffffffffff8; valaddr_reg:x3; val_offset:225528*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225528*0 + 3*680*FLEN/8, x4, x1, x2)

inst_75177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2dffffffffffffc; valaddr_reg:x3; val_offset:225531*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225531*0 + 3*681*FLEN/8, x4, x1, x2)

inst_75178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2dffffffffffffe; valaddr_reg:x3; val_offset:225534*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225534*0 + 3*682*FLEN/8, x4, x1, x2)

inst_75179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x785d3feda8f39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa785d3feda8f39; op2val:0x0;
op3val:0x2dfffffffffffff; valaddr_reg:x3; val_offset:225537*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225537*0 + 3*683*FLEN/8, x4, x1, x2)

inst_75180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:225540*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225540*0 + 3*684*FLEN/8, x4, x1, x2)

inst_75181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:225543*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225543*0 + 3*685*FLEN/8, x4, x1, x2)

inst_75182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:225546*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225546*0 + 3*686*FLEN/8, x4, x1, x2)

inst_75183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:225549*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225549*0 + 3*687*FLEN/8, x4, x1, x2)

inst_75184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:225552*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225552*0 + 3*688*FLEN/8, x4, x1, x2)

inst_75185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:225555*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225555*0 + 3*689*FLEN/8, x4, x1, x2)

inst_75186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:225558*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225558*0 + 3*690*FLEN/8, x4, x1, x2)

inst_75187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:225561*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225561*0 + 3*691*FLEN/8, x4, x1, x2)

inst_75188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:225564*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225564*0 + 3*692*FLEN/8, x4, x1, x2)

inst_75189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:225567*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225567*0 + 3*693*FLEN/8, x4, x1, x2)

inst_75190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:225570*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225570*0 + 3*694*FLEN/8, x4, x1, x2)

inst_75191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:225573*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225573*0 + 3*695*FLEN/8, x4, x1, x2)

inst_75192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:225576*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225576*0 + 3*696*FLEN/8, x4, x1, x2)

inst_75193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:225579*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225579*0 + 3*697*FLEN/8, x4, x1, x2)

inst_75194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:225582*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225582*0 + 3*698*FLEN/8, x4, x1, x2)

inst_75195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:225585*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225585*0 + 3*699*FLEN/8, x4, x1, x2)

inst_75196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:225588*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225588*0 + 3*700*FLEN/8, x4, x1, x2)

inst_75197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:225591*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225591*0 + 3*701*FLEN/8, x4, x1, x2)

inst_75198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:225594*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225594*0 + 3*702*FLEN/8, x4, x1, x2)

inst_75199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:225597*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225597*0 + 3*703*FLEN/8, x4, x1, x2)

inst_75200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:225600*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225600*0 + 3*704*FLEN/8, x4, x1, x2)

inst_75201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:225603*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225603*0 + 3*705*FLEN/8, x4, x1, x2)

inst_75202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3c0000000000000; valaddr_reg:x3; val_offset:225606*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225606*0 + 3*706*FLEN/8, x4, x1, x2)

inst_75203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3c0000000000001; valaddr_reg:x3; val_offset:225609*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225609*0 + 3*707*FLEN/8, x4, x1, x2)

inst_75204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3c0000000000003; valaddr_reg:x3; val_offset:225612*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225612*0 + 3*708*FLEN/8, x4, x1, x2)

inst_75205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3c0000000000007; valaddr_reg:x3; val_offset:225615*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225615*0 + 3*709*FLEN/8, x4, x1, x2)

inst_75206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3c000000000000f; valaddr_reg:x3; val_offset:225618*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225618*0 + 3*710*FLEN/8, x4, x1, x2)

inst_75207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3c000000000001f; valaddr_reg:x3; val_offset:225621*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225621*0 + 3*711*FLEN/8, x4, x1, x2)

inst_75208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3c000000000003f; valaddr_reg:x3; val_offset:225624*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225624*0 + 3*712*FLEN/8, x4, x1, x2)

inst_75209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3c000000000007f; valaddr_reg:x3; val_offset:225627*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225627*0 + 3*713*FLEN/8, x4, x1, x2)

inst_75210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3c00000000000ff; valaddr_reg:x3; val_offset:225630*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225630*0 + 3*714*FLEN/8, x4, x1, x2)

inst_75211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3c00000000001ff; valaddr_reg:x3; val_offset:225633*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225633*0 + 3*715*FLEN/8, x4, x1, x2)

inst_75212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3c00000000003ff; valaddr_reg:x3; val_offset:225636*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225636*0 + 3*716*FLEN/8, x4, x1, x2)

inst_75213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3c00000000007ff; valaddr_reg:x3; val_offset:225639*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225639*0 + 3*717*FLEN/8, x4, x1, x2)

inst_75214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3c0000000000fff; valaddr_reg:x3; val_offset:225642*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225642*0 + 3*718*FLEN/8, x4, x1, x2)

inst_75215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3c0000000001fff; valaddr_reg:x3; val_offset:225645*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225645*0 + 3*719*FLEN/8, x4, x1, x2)

inst_75216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3c0000000003fff; valaddr_reg:x3; val_offset:225648*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225648*0 + 3*720*FLEN/8, x4, x1, x2)

inst_75217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3c0000000007fff; valaddr_reg:x3; val_offset:225651*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225651*0 + 3*721*FLEN/8, x4, x1, x2)

inst_75218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3c000000000ffff; valaddr_reg:x3; val_offset:225654*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225654*0 + 3*722*FLEN/8, x4, x1, x2)

inst_75219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3c000000001ffff; valaddr_reg:x3; val_offset:225657*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225657*0 + 3*723*FLEN/8, x4, x1, x2)

inst_75220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3c000000003ffff; valaddr_reg:x3; val_offset:225660*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225660*0 + 3*724*FLEN/8, x4, x1, x2)

inst_75221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3c000000007ffff; valaddr_reg:x3; val_offset:225663*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225663*0 + 3*725*FLEN/8, x4, x1, x2)

inst_75222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3c00000000fffff; valaddr_reg:x3; val_offset:225666*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225666*0 + 3*726*FLEN/8, x4, x1, x2)

inst_75223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3c00000001fffff; valaddr_reg:x3; val_offset:225669*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225669*0 + 3*727*FLEN/8, x4, x1, x2)

inst_75224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3c00000003fffff; valaddr_reg:x3; val_offset:225672*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225672*0 + 3*728*FLEN/8, x4, x1, x2)

inst_75225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3c00000007fffff; valaddr_reg:x3; val_offset:225675*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225675*0 + 3*729*FLEN/8, x4, x1, x2)

inst_75226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3c0000000ffffff; valaddr_reg:x3; val_offset:225678*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225678*0 + 3*730*FLEN/8, x4, x1, x2)

inst_75227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3c0000001ffffff; valaddr_reg:x3; val_offset:225681*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225681*0 + 3*731*FLEN/8, x4, x1, x2)

inst_75228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3c0000003ffffff; valaddr_reg:x3; val_offset:225684*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225684*0 + 3*732*FLEN/8, x4, x1, x2)

inst_75229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3c0000007ffffff; valaddr_reg:x3; val_offset:225687*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225687*0 + 3*733*FLEN/8, x4, x1, x2)

inst_75230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3c000000fffffff; valaddr_reg:x3; val_offset:225690*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225690*0 + 3*734*FLEN/8, x4, x1, x2)

inst_75231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3c000001fffffff; valaddr_reg:x3; val_offset:225693*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225693*0 + 3*735*FLEN/8, x4, x1, x2)

inst_75232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3c000003fffffff; valaddr_reg:x3; val_offset:225696*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225696*0 + 3*736*FLEN/8, x4, x1, x2)

inst_75233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3c000007fffffff; valaddr_reg:x3; val_offset:225699*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225699*0 + 3*737*FLEN/8, x4, x1, x2)

inst_75234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3c00000ffffffff; valaddr_reg:x3; val_offset:225702*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225702*0 + 3*738*FLEN/8, x4, x1, x2)

inst_75235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3c00001ffffffff; valaddr_reg:x3; val_offset:225705*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225705*0 + 3*739*FLEN/8, x4, x1, x2)

inst_75236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3c00003ffffffff; valaddr_reg:x3; val_offset:225708*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225708*0 + 3*740*FLEN/8, x4, x1, x2)

inst_75237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3c00007ffffffff; valaddr_reg:x3; val_offset:225711*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225711*0 + 3*741*FLEN/8, x4, x1, x2)

inst_75238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3c0000fffffffff; valaddr_reg:x3; val_offset:225714*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225714*0 + 3*742*FLEN/8, x4, x1, x2)

inst_75239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3c0001fffffffff; valaddr_reg:x3; val_offset:225717*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225717*0 + 3*743*FLEN/8, x4, x1, x2)

inst_75240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3c0003fffffffff; valaddr_reg:x3; val_offset:225720*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225720*0 + 3*744*FLEN/8, x4, x1, x2)

inst_75241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3c0007fffffffff; valaddr_reg:x3; val_offset:225723*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225723*0 + 3*745*FLEN/8, x4, x1, x2)

inst_75242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3c000ffffffffff; valaddr_reg:x3; val_offset:225726*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225726*0 + 3*746*FLEN/8, x4, x1, x2)

inst_75243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3c001ffffffffff; valaddr_reg:x3; val_offset:225729*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225729*0 + 3*747*FLEN/8, x4, x1, x2)

inst_75244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3c003ffffffffff; valaddr_reg:x3; val_offset:225732*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225732*0 + 3*748*FLEN/8, x4, x1, x2)

inst_75245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3c007ffffffffff; valaddr_reg:x3; val_offset:225735*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225735*0 + 3*749*FLEN/8, x4, x1, x2)

inst_75246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3c00fffffffffff; valaddr_reg:x3; val_offset:225738*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225738*0 + 3*750*FLEN/8, x4, x1, x2)

inst_75247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3c01fffffffffff; valaddr_reg:x3; val_offset:225741*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225741*0 + 3*751*FLEN/8, x4, x1, x2)

inst_75248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3c03fffffffffff; valaddr_reg:x3; val_offset:225744*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225744*0 + 3*752*FLEN/8, x4, x1, x2)

inst_75249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3c07fffffffffff; valaddr_reg:x3; val_offset:225747*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225747*0 + 3*753*FLEN/8, x4, x1, x2)

inst_75250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3c0ffffffffffff; valaddr_reg:x3; val_offset:225750*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225750*0 + 3*754*FLEN/8, x4, x1, x2)

inst_75251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3c1ffffffffffff; valaddr_reg:x3; val_offset:225753*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225753*0 + 3*755*FLEN/8, x4, x1, x2)

inst_75252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3c3ffffffffffff; valaddr_reg:x3; val_offset:225756*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225756*0 + 3*756*FLEN/8, x4, x1, x2)

inst_75253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3c7ffffffffffff; valaddr_reg:x3; val_offset:225759*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225759*0 + 3*757*FLEN/8, x4, x1, x2)

inst_75254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3c8000000000000; valaddr_reg:x3; val_offset:225762*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225762*0 + 3*758*FLEN/8, x4, x1, x2)

inst_75255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3cc000000000000; valaddr_reg:x3; val_offset:225765*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225765*0 + 3*759*FLEN/8, x4, x1, x2)

inst_75256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3ce000000000000; valaddr_reg:x3; val_offset:225768*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225768*0 + 3*760*FLEN/8, x4, x1, x2)

inst_75257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3cf000000000000; valaddr_reg:x3; val_offset:225771*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225771*0 + 3*761*FLEN/8, x4, x1, x2)

inst_75258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3cf800000000000; valaddr_reg:x3; val_offset:225774*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225774*0 + 3*762*FLEN/8, x4, x1, x2)

inst_75259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3cfc00000000000; valaddr_reg:x3; val_offset:225777*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225777*0 + 3*763*FLEN/8, x4, x1, x2)

inst_75260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3cfe00000000000; valaddr_reg:x3; val_offset:225780*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225780*0 + 3*764*FLEN/8, x4, x1, x2)

inst_75261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3cff00000000000; valaddr_reg:x3; val_offset:225783*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225783*0 + 3*765*FLEN/8, x4, x1, x2)

inst_75262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3cff80000000000; valaddr_reg:x3; val_offset:225786*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225786*0 + 3*766*FLEN/8, x4, x1, x2)

inst_75263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7926fae191907 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03c and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7926fae191907; op2val:0x0;
op3val:0x3cffc0000000000; valaddr_reg:x3; val_offset:225789*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225789*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(104708691336364031,64,FLEN)
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(105834591243206655,64,FLEN)
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(105834591243206656,64,FLEN)
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(106960491150049280,64,FLEN)
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(107523441103470592,64,FLEN)
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(107804916080181248,64,FLEN)
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(107945653568536576,64,FLEN)
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108016022312714240,64,FLEN)
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108051206684803072,64,FLEN)
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108068798870847488,64,FLEN)
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108077594963869696,64,FLEN)
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108081993010380800,64,FLEN)
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108084192033636352,64,FLEN)
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108085291545264128,64,FLEN)
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108085841301078016,64,FLEN)
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086116178984960,64,FLEN)
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086253617938432,64,FLEN)
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086322337415168,64,FLEN)
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086356697153536,64,FLEN)
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086373877022720,64,FLEN)
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086382466957312,64,FLEN)
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086386761924608,64,FLEN)
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086388909408256,64,FLEN)
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086389983150080,64,FLEN)
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086390520020992,64,FLEN)
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086390788456448,64,FLEN)
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086390922674176,64,FLEN)
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086390989783040,64,FLEN)
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391023337472,64,FLEN)
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391040114688,64,FLEN)
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391048503296,64,FLEN)
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391052697600,64,FLEN)
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391054794752,64,FLEN)
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391055843328,64,FLEN)
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056367616,64,FLEN)
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056629760,64,FLEN)
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056760832,64,FLEN)
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056826368,64,FLEN)
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056859136,64,FLEN)
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056875520,64,FLEN)
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056883712,64,FLEN)
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056887808,64,FLEN)
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056889856,64,FLEN)
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056890880,64,FLEN)
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891392,64,FLEN)
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891648,64,FLEN)
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891776,64,FLEN)
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891840,64,FLEN)
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891872,64,FLEN)
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891888,64,FLEN)
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891896,64,FLEN)
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891900,64,FLEN)
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891902,64,FLEN)
NAN_BOXED(6892541729260289245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891903,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628288,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628289,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628291,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628295,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628303,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628319,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628351,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628415,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628543,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628799,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991629311,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991630335,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991632383,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991636479,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991644671,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991661055,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991693823,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991759359,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991890431,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034992152575,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034992676863,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034993725439,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034995822591,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890035000016895,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890035008405503,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890035025182719,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890035058737151,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890035125846015,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890035260063743,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890035528499199,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890036065370111,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890037139111935,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890039286595583,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890043581562879,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890052171497471,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890069351366655,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890103711105023,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890172430581759,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890309869535231,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890584747442175,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245891134503256063,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245892234014883839,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245894433038139391,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245898831084650495,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245907627177672703,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245925219363717119,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245960403735805951,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9246030772479983615,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9246171509968338943,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9246452984945049599,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9247015934898470911,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9248141834805313535,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9248141834805313536,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9249267734712156160,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9249830684665577472,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250112159642288128,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250252897130643456,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250323265874821120,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250358450246909952,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250376042432954368,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250384838525976576,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250389236572487680,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250391435595743232,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250392535107371008,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393084863184896,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393359741091840,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393497180045312,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393565899522048,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393600259260416,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393617439129600,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393626029064192,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393630324031488,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393632471515136,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393633545256960,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634082127872,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634350563328,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634484781056,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634551889920,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634585444352,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634602221568,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634610610176,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634614804480,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634616901632,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634617950208,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618474496,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618736640,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618867712,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618933248,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618966016,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618982400,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618990592,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618994688,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618996736,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618997760,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998272,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998528,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998656,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998720,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998752,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998768,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998776,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998780,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998782,64,FLEN)
NAN_BOXED(6892563303694318723,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998783,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4062246863888187392,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4062246863888187393,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4062246863888187395,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4062246863888187399,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4062246863888187407,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4062246863888187423,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4062246863888187455,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4062246863888187519,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4062246863888187647,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4062246863888187903,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4062246863888188415,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4062246863888189439,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4062246863888191487,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4062246863888195583,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4062246863888203775,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4062246863888220159,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4062246863888252927,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4062246863888318463,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4062246863888449535,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4062246863888711679,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4062246863889235967,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4062246863890284543,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4062246863892381695,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4062246863896575999,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4062246863904964607,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4062246863921741823,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4062246863955296255,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4062246864022405119,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4062246864156622847,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4062246864425058303,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4062246864961929215,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4062246866035671039,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4062246868183154687,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4062246872478121983,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4062246881068056575,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4062246898247925759,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4062246932607664127,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4062247001327140863,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4062247138766094335,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4062247413644001279,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4062247963399815167,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4062249062911442943,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4062251261934698495,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4062255659981209599,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4062264456074231807,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4062282048260276223,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4062317232632365055,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4062387601376542719,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4062528338864898047,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4062809813841608703,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4063372763795030015,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4064498663701872639,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4064498663701872640,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4065624563608715264,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4066187513562136576,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4066468988538847232,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4066609726027202560,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4066680094771380224,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4066715279143469056,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4066732871329513472,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4066741667422535680,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4066746065469046784,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4066748264492302336,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4066749364003930112,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4066749913759744000,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4066750188637650944,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4066750326076604416,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4066750394796081152,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4066750429155819520,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4066750446335688704,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4066750454925623296,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4066750459220590592,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4066750461368074240,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4066750462441816064,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4066750462978686976,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4066750463247122432,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4066750463381340160,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4066750463448449024,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4066750463482003456,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4066750463498780672,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4066750463507169280,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4066750463511363584,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4066750463513460736,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4066750463514509312,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4066750463515033600,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4066750463515295744,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4066750463515426816,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4066750463515492352,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4066750463515525120,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4066750463515541504,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4066750463515549696,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4066750463515553792,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4066750463515555840,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4066750463515556864,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4066750463515557376,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4066750463515557632,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4066750463515557760,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4066750463515557824,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4066750463515557856,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4066750463515557872,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4066750463515557880,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4066750463515557884,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4066750463515557886,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4066750463515557887,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6892580456878463958,64,FLEN)
NAN_BOXED(2321018236774706913,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13776511260126347264,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13776511260126347265,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13776511260126347267,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13776511260126347271,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13776511260126347279,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13776511260126347295,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13776511260126347327,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13776511260126347391,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13776511260126347519,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13776511260126347775,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13776511260126348287,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13776511260126349311,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13776511260126351359,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13776511260126355455,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13776511260126363647,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13776511260126380031,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13776511260126412799,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13776511260126478335,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13776511260126609407,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13776511260126871551,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13776511260127395839,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13776511260128444415,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13776511260130541567,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13776511260134735871,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13776511260143124479,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13776511260159901695,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13776511260193456127,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13776511260260564991,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13776511260394782719,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13776511260663218175,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13776511261200089087,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13776511262273830911,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13776511264421314559,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13776511268716281855,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13776511277306216447,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13776511294486085631,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13776511328845823999,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13776511397565300735,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13776511535004254207,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13776511809882161151,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13776512359637975039,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13776513459149602815,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13776515658172858367,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13776520056219369471,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13776528852312391679,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13776546444498436095,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13776581628870524927,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13776651997614702591,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13776792735103057919,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13777074210079768575,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13777637160033189887,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13778763059940032511,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13778763059940032512,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13779888959846875136,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13780451909800296448,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13780733384777007104,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13780874122265362432,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13780944491009540096,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13780979675381628928,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13780997267567673344,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13781006063660695552,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13781010461707206656,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13781012660730462208,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13781013760242089984,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13781014309997903872,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13781014584875810816,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13781014722314764288,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13781014791034241024,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13781014825393979392,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13781014842573848576,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13781014851163783168,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13781014855458750464,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13781014857606234112,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13781014858679975936,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13781014859216846848,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13781014859485282304,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13781014859619500032,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13781014859686608896,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13781014859720163328,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13781014859736940544,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13781014859745329152,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13781014859749523456,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13781014859751620608,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13781014859752669184,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13781014859753193472,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13781014859753455616,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13781014859753586688,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13781014859753652224,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13781014859753684992,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13781014859753701376,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13781014859753709568,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13781014859753713664,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13781014859753715712,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13781014859753716736,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13781014859753717248,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13781014859753717504,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13781014859753717632,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13781014859753717696,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13781014859753717728,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13781014859753717744,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13781014859753717752,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13781014859753717756,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13781014859753717758,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13781014859753717759,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6892591893484873193,64,FLEN)
NAN_BOXED(11512854368794815392,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746560,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746561,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746563,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746567,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746575,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746591,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746623,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746687,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746815,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751747071,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751747583,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751748607,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751750655,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751754751,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751762943,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751779327,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751812095,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751877631,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213752008703,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213752270847,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213752795135,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213753843711,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213755940863,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213760135167,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213768523775,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213785300991,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213818855423,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213885964287,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595214020182015,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595214288617471,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595214825488383,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595215899230207,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595218046713855,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595222341681151,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595230931615743,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595248111484927,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595282471223295,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595351190700031,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595488629653503,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595763507560447,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502596313263374335,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502597412775002111,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502599611798257663,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502604009844768767,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502612805937790975,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502630398123835391,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502665582495924223,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502735951240101887,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502876688728457215,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9503158163705167871,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9503721113658589183,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9504847013565431807,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9504847013565431808,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9505972913472274432,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9506535863425695744,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9506817338402406400,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9506958075890761728,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507028444634939392,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507063629007028224,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507081221193072640,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507090017286094848,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507094415332605952,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507096614355861504,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507097713867489280,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098263623303168,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098538501210112,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098675940163584,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098744659640320,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098779019378688,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098796199247872,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098804789182464,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098809084149760,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098811231633408,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098812305375232,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098812842246144,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813110681600,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813244899328,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813312008192,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813345562624,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813362339840,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813370728448,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813374922752,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813377019904,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813378068480,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813378592768,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813378854912,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813378985984,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379051520,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379084288,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379100672,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379108864,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379112960,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379115008,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379116032,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379116544,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379116800,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379116928,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379116992,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117024,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117040,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117048,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117052,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117054,64,FLEN)
NAN_BOXED(6892613590416378548,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117055,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672320,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672321,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672323,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672327,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672335,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672351,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672383,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672447,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672575,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672831,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231673343,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231674367,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231676415,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231680511,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231688703,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231705087,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231737855,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231803391,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231934463,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983232196607,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983232720895,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983233769471,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983235866623,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983240060927,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983248449535,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983265226751,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983298781183,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983365890047,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983500107775,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983768543231,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661984305414143,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661985379155967,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661987526639615,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661991821606911,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202662000411541503,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202662017591410687,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202662051951149055,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202662120670625791,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202662258109579263,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202662532987486207,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202663082743300095,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202664182254927871,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202666381278183423,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202670779324694527,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202679575417716735,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202697167603761151,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202732351975849983,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202802720720027647,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202943458208382975,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(203224933185093631,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(203787883138514943,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(204913783045357567,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(204913783045357568,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(206039682952200192,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(206602632905621504,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(206884107882332160,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207024845370687488,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207095214114865152,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207130398486953984,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207147990672998400,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207156786766020608,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207161184812531712,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207163383835787264,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207164483347415040,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165033103228928,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165307981135872,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165445420089344,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165514139566080,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165548499304448,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165565679173632,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165574269108224,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165578564075520,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165580711559168,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165581785300992,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582322171904,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582590607360,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582724825088,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582791933952,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582825488384,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582842265600,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582850654208,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582854848512,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582856945664,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582857994240,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582858518528,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582858780672,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582858911744,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582858977280,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859010048,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859026432,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859034624,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859038720,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859040768,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859041792,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042304,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042560,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042688,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042752,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042784,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042800,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042808,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042812,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042814,64,FLEN)
NAN_BOXED(6892624900274163513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042815,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229760,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229761,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229763,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229767,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229775,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229791,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229823,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229887,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642230015,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642230271,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642230783,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642231807,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642233855,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642237951,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642246143,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642262527,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642295295,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642360831,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642491903,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642754047,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977643278335,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977644326911,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977646424063,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977650618367,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977659006975,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977675784191,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977709338623,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977776447487,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977910665215,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215978179100671,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215978715971583,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215979789713407,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215981937197055,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215986232164351,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215994822098943,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270216012001968127,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270216046361706495,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270216115081183231,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270216252520136703,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270216527398043647,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270217077153857535,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270218176665485311,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270220375688740863,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270224773735251967,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270233569828274175,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270251162014318591,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270286346386407423,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270356715130585087,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270497452618940415,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270778927595651071,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(271341877549072383,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(272467777455915007,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(272467777455915008,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(273593677362757632,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274156627316178944,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274438102292889600,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274578839781244928,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274649208525422592,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274684392897511424,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274701985083555840,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274710781176578048,64,FLEN)
NAN_BOXED(6892638763073739015,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274715179223089152,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
