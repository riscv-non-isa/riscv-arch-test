
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:39 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_47616:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbeedbcc1b201 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbeedbcc1b201; op2val:0x0;
op3val:0x9ffffffffe0000; valaddr_reg:x3; val_offset:142848*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142848*0 + 3*0*FLEN/8, x4, x1, x2)

inst_47617:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbeedbcc1b201 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbeedbcc1b201; op2val:0x0;
op3val:0x9fffffffff0000; valaddr_reg:x3; val_offset:142851*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142851*0 + 3*1*FLEN/8, x4, x1, x2)

inst_47618:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbeedbcc1b201 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbeedbcc1b201; op2val:0x0;
op3val:0x9fffffffff8000; valaddr_reg:x3; val_offset:142854*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142854*0 + 3*2*FLEN/8, x4, x1, x2)

inst_47619:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbeedbcc1b201 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbeedbcc1b201; op2val:0x0;
op3val:0x9fffffffffc000; valaddr_reg:x3; val_offset:142857*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142857*0 + 3*3*FLEN/8, x4, x1, x2)

inst_47620:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbeedbcc1b201 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbeedbcc1b201; op2val:0x0;
op3val:0x9fffffffffe000; valaddr_reg:x3; val_offset:142860*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142860*0 + 3*4*FLEN/8, x4, x1, x2)

inst_47621:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbeedbcc1b201 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbeedbcc1b201; op2val:0x0;
op3val:0x9ffffffffff000; valaddr_reg:x3; val_offset:142863*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142863*0 + 3*5*FLEN/8, x4, x1, x2)

inst_47622:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbeedbcc1b201 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbeedbcc1b201; op2val:0x0;
op3val:0x9ffffffffff800; valaddr_reg:x3; val_offset:142866*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142866*0 + 3*6*FLEN/8, x4, x1, x2)

inst_47623:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbeedbcc1b201 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbeedbcc1b201; op2val:0x0;
op3val:0x9ffffffffffc00; valaddr_reg:x3; val_offset:142869*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142869*0 + 3*7*FLEN/8, x4, x1, x2)

inst_47624:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbeedbcc1b201 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbeedbcc1b201; op2val:0x0;
op3val:0x9ffffffffffe00; valaddr_reg:x3; val_offset:142872*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142872*0 + 3*8*FLEN/8, x4, x1, x2)

inst_47625:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbeedbcc1b201 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbeedbcc1b201; op2val:0x0;
op3val:0x9fffffffffff00; valaddr_reg:x3; val_offset:142875*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142875*0 + 3*9*FLEN/8, x4, x1, x2)

inst_47626:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbeedbcc1b201 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbeedbcc1b201; op2val:0x0;
op3val:0x9fffffffffff80; valaddr_reg:x3; val_offset:142878*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142878*0 + 3*10*FLEN/8, x4, x1, x2)

inst_47627:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbeedbcc1b201 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbeedbcc1b201; op2val:0x0;
op3val:0x9fffffffffffc0; valaddr_reg:x3; val_offset:142881*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142881*0 + 3*11*FLEN/8, x4, x1, x2)

inst_47628:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbeedbcc1b201 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbeedbcc1b201; op2val:0x0;
op3val:0x9fffffffffffe0; valaddr_reg:x3; val_offset:142884*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142884*0 + 3*12*FLEN/8, x4, x1, x2)

inst_47629:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbeedbcc1b201 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbeedbcc1b201; op2val:0x0;
op3val:0x9ffffffffffff0; valaddr_reg:x3; val_offset:142887*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142887*0 + 3*13*FLEN/8, x4, x1, x2)

inst_47630:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbeedbcc1b201 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbeedbcc1b201; op2val:0x0;
op3val:0x9ffffffffffff8; valaddr_reg:x3; val_offset:142890*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142890*0 + 3*14*FLEN/8, x4, x1, x2)

inst_47631:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbeedbcc1b201 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbeedbcc1b201; op2val:0x0;
op3val:0x9ffffffffffffc; valaddr_reg:x3; val_offset:142893*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142893*0 + 3*15*FLEN/8, x4, x1, x2)

inst_47632:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbeedbcc1b201 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbeedbcc1b201; op2val:0x0;
op3val:0x9ffffffffffffe; valaddr_reg:x3; val_offset:142896*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142896*0 + 3*16*FLEN/8, x4, x1, x2)

inst_47633:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbeedbcc1b201 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbeedbcc1b201; op2val:0x0;
op3val:0x9fffffffffffff; valaddr_reg:x3; val_offset:142899*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142899*0 + 3*17*FLEN/8, x4, x1, x2)

inst_47634:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:142902*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142902*0 + 3*18*FLEN/8, x4, x1, x2)

inst_47635:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:142905*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142905*0 + 3*19*FLEN/8, x4, x1, x2)

inst_47636:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:142908*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142908*0 + 3*20*FLEN/8, x4, x1, x2)

inst_47637:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:142911*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142911*0 + 3*21*FLEN/8, x4, x1, x2)

inst_47638:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:142914*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142914*0 + 3*22*FLEN/8, x4, x1, x2)

inst_47639:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:142917*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142917*0 + 3*23*FLEN/8, x4, x1, x2)

inst_47640:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:142920*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142920*0 + 3*24*FLEN/8, x4, x1, x2)

inst_47641:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:142923*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142923*0 + 3*25*FLEN/8, x4, x1, x2)

inst_47642:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:142926*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142926*0 + 3*26*FLEN/8, x4, x1, x2)

inst_47643:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:142929*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142929*0 + 3*27*FLEN/8, x4, x1, x2)

inst_47644:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:142932*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142932*0 + 3*28*FLEN/8, x4, x1, x2)

inst_47645:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:142935*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142935*0 + 3*29*FLEN/8, x4, x1, x2)

inst_47646:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:142938*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142938*0 + 3*30*FLEN/8, x4, x1, x2)

inst_47647:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:142941*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142941*0 + 3*31*FLEN/8, x4, x1, x2)

inst_47648:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:142944*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142944*0 + 3*32*FLEN/8, x4, x1, x2)

inst_47649:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:142947*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142947*0 + 3*33*FLEN/8, x4, x1, x2)

inst_47650:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:142950*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142950*0 + 3*34*FLEN/8, x4, x1, x2)

inst_47651:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:142953*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142953*0 + 3*35*FLEN/8, x4, x1, x2)

inst_47652:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:142956*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142956*0 + 3*36*FLEN/8, x4, x1, x2)

inst_47653:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:142959*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142959*0 + 3*37*FLEN/8, x4, x1, x2)

inst_47654:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:142962*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142962*0 + 3*38*FLEN/8, x4, x1, x2)

inst_47655:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:142965*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142965*0 + 3*39*FLEN/8, x4, x1, x2)

inst_47656:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x290000000000000; valaddr_reg:x3; val_offset:142968*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142968*0 + 3*40*FLEN/8, x4, x1, x2)

inst_47657:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x290000000000001; valaddr_reg:x3; val_offset:142971*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142971*0 + 3*41*FLEN/8, x4, x1, x2)

inst_47658:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x290000000000003; valaddr_reg:x3; val_offset:142974*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142974*0 + 3*42*FLEN/8, x4, x1, x2)

inst_47659:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x290000000000007; valaddr_reg:x3; val_offset:142977*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142977*0 + 3*43*FLEN/8, x4, x1, x2)

inst_47660:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29000000000000f; valaddr_reg:x3; val_offset:142980*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142980*0 + 3*44*FLEN/8, x4, x1, x2)

inst_47661:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29000000000001f; valaddr_reg:x3; val_offset:142983*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142983*0 + 3*45*FLEN/8, x4, x1, x2)

inst_47662:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29000000000003f; valaddr_reg:x3; val_offset:142986*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142986*0 + 3*46*FLEN/8, x4, x1, x2)

inst_47663:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29000000000007f; valaddr_reg:x3; val_offset:142989*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142989*0 + 3*47*FLEN/8, x4, x1, x2)

inst_47664:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x2900000000000ff; valaddr_reg:x3; val_offset:142992*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142992*0 + 3*48*FLEN/8, x4, x1, x2)

inst_47665:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x2900000000001ff; valaddr_reg:x3; val_offset:142995*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142995*0 + 3*49*FLEN/8, x4, x1, x2)

inst_47666:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x2900000000003ff; valaddr_reg:x3; val_offset:142998*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142998*0 + 3*50*FLEN/8, x4, x1, x2)

inst_47667:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x2900000000007ff; valaddr_reg:x3; val_offset:143001*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143001*0 + 3*51*FLEN/8, x4, x1, x2)

inst_47668:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x290000000000fff; valaddr_reg:x3; val_offset:143004*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143004*0 + 3*52*FLEN/8, x4, x1, x2)

inst_47669:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x290000000001fff; valaddr_reg:x3; val_offset:143007*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143007*0 + 3*53*FLEN/8, x4, x1, x2)

inst_47670:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x290000000003fff; valaddr_reg:x3; val_offset:143010*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143010*0 + 3*54*FLEN/8, x4, x1, x2)

inst_47671:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x290000000007fff; valaddr_reg:x3; val_offset:143013*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143013*0 + 3*55*FLEN/8, x4, x1, x2)

inst_47672:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29000000000ffff; valaddr_reg:x3; val_offset:143016*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143016*0 + 3*56*FLEN/8, x4, x1, x2)

inst_47673:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29000000001ffff; valaddr_reg:x3; val_offset:143019*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143019*0 + 3*57*FLEN/8, x4, x1, x2)

inst_47674:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29000000003ffff; valaddr_reg:x3; val_offset:143022*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143022*0 + 3*58*FLEN/8, x4, x1, x2)

inst_47675:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29000000007ffff; valaddr_reg:x3; val_offset:143025*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143025*0 + 3*59*FLEN/8, x4, x1, x2)

inst_47676:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x2900000000fffff; valaddr_reg:x3; val_offset:143028*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143028*0 + 3*60*FLEN/8, x4, x1, x2)

inst_47677:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x2900000001fffff; valaddr_reg:x3; val_offset:143031*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143031*0 + 3*61*FLEN/8, x4, x1, x2)

inst_47678:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x2900000003fffff; valaddr_reg:x3; val_offset:143034*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143034*0 + 3*62*FLEN/8, x4, x1, x2)

inst_47679:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x2900000007fffff; valaddr_reg:x3; val_offset:143037*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143037*0 + 3*63*FLEN/8, x4, x1, x2)

inst_47680:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x290000000ffffff; valaddr_reg:x3; val_offset:143040*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143040*0 + 3*64*FLEN/8, x4, x1, x2)

inst_47681:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x290000001ffffff; valaddr_reg:x3; val_offset:143043*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143043*0 + 3*65*FLEN/8, x4, x1, x2)

inst_47682:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x290000003ffffff; valaddr_reg:x3; val_offset:143046*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143046*0 + 3*66*FLEN/8, x4, x1, x2)

inst_47683:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x290000007ffffff; valaddr_reg:x3; val_offset:143049*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143049*0 + 3*67*FLEN/8, x4, x1, x2)

inst_47684:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29000000fffffff; valaddr_reg:x3; val_offset:143052*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143052*0 + 3*68*FLEN/8, x4, x1, x2)

inst_47685:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29000001fffffff; valaddr_reg:x3; val_offset:143055*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143055*0 + 3*69*FLEN/8, x4, x1, x2)

inst_47686:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29000003fffffff; valaddr_reg:x3; val_offset:143058*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143058*0 + 3*70*FLEN/8, x4, x1, x2)

inst_47687:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29000007fffffff; valaddr_reg:x3; val_offset:143061*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143061*0 + 3*71*FLEN/8, x4, x1, x2)

inst_47688:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x2900000ffffffff; valaddr_reg:x3; val_offset:143064*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143064*0 + 3*72*FLEN/8, x4, x1, x2)

inst_47689:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x2900001ffffffff; valaddr_reg:x3; val_offset:143067*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143067*0 + 3*73*FLEN/8, x4, x1, x2)

inst_47690:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x2900003ffffffff; valaddr_reg:x3; val_offset:143070*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143070*0 + 3*74*FLEN/8, x4, x1, x2)

inst_47691:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x2900007ffffffff; valaddr_reg:x3; val_offset:143073*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143073*0 + 3*75*FLEN/8, x4, x1, x2)

inst_47692:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x290000fffffffff; valaddr_reg:x3; val_offset:143076*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143076*0 + 3*76*FLEN/8, x4, x1, x2)

inst_47693:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x290001fffffffff; valaddr_reg:x3; val_offset:143079*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143079*0 + 3*77*FLEN/8, x4, x1, x2)

inst_47694:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x290003fffffffff; valaddr_reg:x3; val_offset:143082*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143082*0 + 3*78*FLEN/8, x4, x1, x2)

inst_47695:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x290007fffffffff; valaddr_reg:x3; val_offset:143085*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143085*0 + 3*79*FLEN/8, x4, x1, x2)

inst_47696:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29000ffffffffff; valaddr_reg:x3; val_offset:143088*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143088*0 + 3*80*FLEN/8, x4, x1, x2)

inst_47697:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29001ffffffffff; valaddr_reg:x3; val_offset:143091*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143091*0 + 3*81*FLEN/8, x4, x1, x2)

inst_47698:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29003ffffffffff; valaddr_reg:x3; val_offset:143094*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143094*0 + 3*82*FLEN/8, x4, x1, x2)

inst_47699:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29007ffffffffff; valaddr_reg:x3; val_offset:143097*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143097*0 + 3*83*FLEN/8, x4, x1, x2)

inst_47700:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x2900fffffffffff; valaddr_reg:x3; val_offset:143100*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143100*0 + 3*84*FLEN/8, x4, x1, x2)

inst_47701:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x2901fffffffffff; valaddr_reg:x3; val_offset:143103*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143103*0 + 3*85*FLEN/8, x4, x1, x2)

inst_47702:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x2903fffffffffff; valaddr_reg:x3; val_offset:143106*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143106*0 + 3*86*FLEN/8, x4, x1, x2)

inst_47703:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x2907fffffffffff; valaddr_reg:x3; val_offset:143109*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143109*0 + 3*87*FLEN/8, x4, x1, x2)

inst_47704:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x290ffffffffffff; valaddr_reg:x3; val_offset:143112*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143112*0 + 3*88*FLEN/8, x4, x1, x2)

inst_47705:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x291ffffffffffff; valaddr_reg:x3; val_offset:143115*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143115*0 + 3*89*FLEN/8, x4, x1, x2)

inst_47706:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x293ffffffffffff; valaddr_reg:x3; val_offset:143118*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143118*0 + 3*90*FLEN/8, x4, x1, x2)

inst_47707:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x297ffffffffffff; valaddr_reg:x3; val_offset:143121*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143121*0 + 3*91*FLEN/8, x4, x1, x2)

inst_47708:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x298000000000000; valaddr_reg:x3; val_offset:143124*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143124*0 + 3*92*FLEN/8, x4, x1, x2)

inst_47709:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29c000000000000; valaddr_reg:x3; val_offset:143127*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143127*0 + 3*93*FLEN/8, x4, x1, x2)

inst_47710:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29e000000000000; valaddr_reg:x3; val_offset:143130*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143130*0 + 3*94*FLEN/8, x4, x1, x2)

inst_47711:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29f000000000000; valaddr_reg:x3; val_offset:143133*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143133*0 + 3*95*FLEN/8, x4, x1, x2)

inst_47712:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29f800000000000; valaddr_reg:x3; val_offset:143136*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143136*0 + 3*96*FLEN/8, x4, x1, x2)

inst_47713:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29fc00000000000; valaddr_reg:x3; val_offset:143139*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143139*0 + 3*97*FLEN/8, x4, x1, x2)

inst_47714:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29fe00000000000; valaddr_reg:x3; val_offset:143142*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143142*0 + 3*98*FLEN/8, x4, x1, x2)

inst_47715:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29ff00000000000; valaddr_reg:x3; val_offset:143145*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143145*0 + 3*99*FLEN/8, x4, x1, x2)

inst_47716:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29ff80000000000; valaddr_reg:x3; val_offset:143148*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143148*0 + 3*100*FLEN/8, x4, x1, x2)

inst_47717:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29ffc0000000000; valaddr_reg:x3; val_offset:143151*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143151*0 + 3*101*FLEN/8, x4, x1, x2)

inst_47718:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29ffe0000000000; valaddr_reg:x3; val_offset:143154*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143154*0 + 3*102*FLEN/8, x4, x1, x2)

inst_47719:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29fff0000000000; valaddr_reg:x3; val_offset:143157*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143157*0 + 3*103*FLEN/8, x4, x1, x2)

inst_47720:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29fff8000000000; valaddr_reg:x3; val_offset:143160*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143160*0 + 3*104*FLEN/8, x4, x1, x2)

inst_47721:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29fffc000000000; valaddr_reg:x3; val_offset:143163*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143163*0 + 3*105*FLEN/8, x4, x1, x2)

inst_47722:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29fffe000000000; valaddr_reg:x3; val_offset:143166*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143166*0 + 3*106*FLEN/8, x4, x1, x2)

inst_47723:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29ffff000000000; valaddr_reg:x3; val_offset:143169*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143169*0 + 3*107*FLEN/8, x4, x1, x2)

inst_47724:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29ffff800000000; valaddr_reg:x3; val_offset:143172*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143172*0 + 3*108*FLEN/8, x4, x1, x2)

inst_47725:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29ffffc00000000; valaddr_reg:x3; val_offset:143175*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143175*0 + 3*109*FLEN/8, x4, x1, x2)

inst_47726:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29ffffe00000000; valaddr_reg:x3; val_offset:143178*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143178*0 + 3*110*FLEN/8, x4, x1, x2)

inst_47727:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29fffff00000000; valaddr_reg:x3; val_offset:143181*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143181*0 + 3*111*FLEN/8, x4, x1, x2)

inst_47728:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29fffff80000000; valaddr_reg:x3; val_offset:143184*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143184*0 + 3*112*FLEN/8, x4, x1, x2)

inst_47729:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29fffffc0000000; valaddr_reg:x3; val_offset:143187*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143187*0 + 3*113*FLEN/8, x4, x1, x2)

inst_47730:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29fffffe0000000; valaddr_reg:x3; val_offset:143190*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143190*0 + 3*114*FLEN/8, x4, x1, x2)

inst_47731:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29ffffff0000000; valaddr_reg:x3; val_offset:143193*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143193*0 + 3*115*FLEN/8, x4, x1, x2)

inst_47732:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29ffffff8000000; valaddr_reg:x3; val_offset:143196*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143196*0 + 3*116*FLEN/8, x4, x1, x2)

inst_47733:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29ffffffc000000; valaddr_reg:x3; val_offset:143199*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143199*0 + 3*117*FLEN/8, x4, x1, x2)

inst_47734:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29ffffffe000000; valaddr_reg:x3; val_offset:143202*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143202*0 + 3*118*FLEN/8, x4, x1, x2)

inst_47735:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29fffffff000000; valaddr_reg:x3; val_offset:143205*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143205*0 + 3*119*FLEN/8, x4, x1, x2)

inst_47736:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29fffffff800000; valaddr_reg:x3; val_offset:143208*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143208*0 + 3*120*FLEN/8, x4, x1, x2)

inst_47737:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29fffffffc00000; valaddr_reg:x3; val_offset:143211*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143211*0 + 3*121*FLEN/8, x4, x1, x2)

inst_47738:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29fffffffe00000; valaddr_reg:x3; val_offset:143214*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143214*0 + 3*122*FLEN/8, x4, x1, x2)

inst_47739:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29ffffffff00000; valaddr_reg:x3; val_offset:143217*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143217*0 + 3*123*FLEN/8, x4, x1, x2)

inst_47740:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29ffffffff80000; valaddr_reg:x3; val_offset:143220*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143220*0 + 3*124*FLEN/8, x4, x1, x2)

inst_47741:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29ffffffffc0000; valaddr_reg:x3; val_offset:143223*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143223*0 + 3*125*FLEN/8, x4, x1, x2)

inst_47742:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29ffffffffe0000; valaddr_reg:x3; val_offset:143226*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143226*0 + 3*126*FLEN/8, x4, x1, x2)

inst_47743:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29fffffffff0000; valaddr_reg:x3; val_offset:143229*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143229*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_47744:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29fffffffff8000; valaddr_reg:x3; val_offset:143232*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143232*0 + 3*128*FLEN/8, x4, x1, x2)

inst_47745:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29fffffffffc000; valaddr_reg:x3; val_offset:143235*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143235*0 + 3*129*FLEN/8, x4, x1, x2)

inst_47746:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29fffffffffe000; valaddr_reg:x3; val_offset:143238*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143238*0 + 3*130*FLEN/8, x4, x1, x2)

inst_47747:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29ffffffffff000; valaddr_reg:x3; val_offset:143241*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143241*0 + 3*131*FLEN/8, x4, x1, x2)

inst_47748:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29ffffffffff800; valaddr_reg:x3; val_offset:143244*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143244*0 + 3*132*FLEN/8, x4, x1, x2)

inst_47749:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29ffffffffffc00; valaddr_reg:x3; val_offset:143247*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143247*0 + 3*133*FLEN/8, x4, x1, x2)

inst_47750:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29ffffffffffe00; valaddr_reg:x3; val_offset:143250*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143250*0 + 3*134*FLEN/8, x4, x1, x2)

inst_47751:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29fffffffffff00; valaddr_reg:x3; val_offset:143253*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143253*0 + 3*135*FLEN/8, x4, x1, x2)

inst_47752:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29fffffffffff80; valaddr_reg:x3; val_offset:143256*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143256*0 + 3*136*FLEN/8, x4, x1, x2)

inst_47753:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29fffffffffffc0; valaddr_reg:x3; val_offset:143259*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143259*0 + 3*137*FLEN/8, x4, x1, x2)

inst_47754:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29fffffffffffe0; valaddr_reg:x3; val_offset:143262*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143262*0 + 3*138*FLEN/8, x4, x1, x2)

inst_47755:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29ffffffffffff0; valaddr_reg:x3; val_offset:143265*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143265*0 + 3*139*FLEN/8, x4, x1, x2)

inst_47756:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29ffffffffffff8; valaddr_reg:x3; val_offset:143268*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143268*0 + 3*140*FLEN/8, x4, x1, x2)

inst_47757:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29ffffffffffffc; valaddr_reg:x3; val_offset:143271*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143271*0 + 3*141*FLEN/8, x4, x1, x2)

inst_47758:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29ffffffffffffe; valaddr_reg:x3; val_offset:143274*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143274*0 + 3*142*FLEN/8, x4, x1, x2)

inst_47759:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdf2ac7c179739 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9df2ac7c179739; op2val:0x0;
op3val:0x29fffffffffffff; valaddr_reg:x3; val_offset:143277*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143277*0 + 3*143*FLEN/8, x4, x1, x2)

inst_47760:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:143280*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143280*0 + 3*144*FLEN/8, x4, x1, x2)

inst_47761:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:143283*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143283*0 + 3*145*FLEN/8, x4, x1, x2)

inst_47762:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:143286*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143286*0 + 3*146*FLEN/8, x4, x1, x2)

inst_47763:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:143289*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143289*0 + 3*147*FLEN/8, x4, x1, x2)

inst_47764:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:143292*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143292*0 + 3*148*FLEN/8, x4, x1, x2)

inst_47765:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:143295*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143295*0 + 3*149*FLEN/8, x4, x1, x2)

inst_47766:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:143298*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143298*0 + 3*150*FLEN/8, x4, x1, x2)

inst_47767:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:143301*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143301*0 + 3*151*FLEN/8, x4, x1, x2)

inst_47768:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:143304*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143304*0 + 3*152*FLEN/8, x4, x1, x2)

inst_47769:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:143307*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143307*0 + 3*153*FLEN/8, x4, x1, x2)

inst_47770:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:143310*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143310*0 + 3*154*FLEN/8, x4, x1, x2)

inst_47771:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:143313*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143313*0 + 3*155*FLEN/8, x4, x1, x2)

inst_47772:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:143316*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143316*0 + 3*156*FLEN/8, x4, x1, x2)

inst_47773:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:143319*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143319*0 + 3*157*FLEN/8, x4, x1, x2)

inst_47774:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:143322*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143322*0 + 3*158*FLEN/8, x4, x1, x2)

inst_47775:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:143325*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143325*0 + 3*159*FLEN/8, x4, x1, x2)

inst_47776:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:143328*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143328*0 + 3*160*FLEN/8, x4, x1, x2)

inst_47777:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:143331*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143331*0 + 3*161*FLEN/8, x4, x1, x2)

inst_47778:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:143334*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143334*0 + 3*162*FLEN/8, x4, x1, x2)

inst_47779:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:143337*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143337*0 + 3*163*FLEN/8, x4, x1, x2)

inst_47780:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:143340*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143340*0 + 3*164*FLEN/8, x4, x1, x2)

inst_47781:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:143343*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143343*0 + 3*165*FLEN/8, x4, x1, x2)

inst_47782:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x30000000000000; valaddr_reg:x3; val_offset:143346*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143346*0 + 3*166*FLEN/8, x4, x1, x2)

inst_47783:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x30000000000001; valaddr_reg:x3; val_offset:143349*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143349*0 + 3*167*FLEN/8, x4, x1, x2)

inst_47784:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x30000000000003; valaddr_reg:x3; val_offset:143352*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143352*0 + 3*168*FLEN/8, x4, x1, x2)

inst_47785:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x30000000000007; valaddr_reg:x3; val_offset:143355*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143355*0 + 3*169*FLEN/8, x4, x1, x2)

inst_47786:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3000000000000f; valaddr_reg:x3; val_offset:143358*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143358*0 + 3*170*FLEN/8, x4, x1, x2)

inst_47787:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3000000000001f; valaddr_reg:x3; val_offset:143361*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143361*0 + 3*171*FLEN/8, x4, x1, x2)

inst_47788:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3000000000003f; valaddr_reg:x3; val_offset:143364*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143364*0 + 3*172*FLEN/8, x4, x1, x2)

inst_47789:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3000000000007f; valaddr_reg:x3; val_offset:143367*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143367*0 + 3*173*FLEN/8, x4, x1, x2)

inst_47790:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x300000000000ff; valaddr_reg:x3; val_offset:143370*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143370*0 + 3*174*FLEN/8, x4, x1, x2)

inst_47791:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x300000000001ff; valaddr_reg:x3; val_offset:143373*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143373*0 + 3*175*FLEN/8, x4, x1, x2)

inst_47792:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x300000000003ff; valaddr_reg:x3; val_offset:143376*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143376*0 + 3*176*FLEN/8, x4, x1, x2)

inst_47793:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x300000000007ff; valaddr_reg:x3; val_offset:143379*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143379*0 + 3*177*FLEN/8, x4, x1, x2)

inst_47794:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x30000000000fff; valaddr_reg:x3; val_offset:143382*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143382*0 + 3*178*FLEN/8, x4, x1, x2)

inst_47795:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x30000000001fff; valaddr_reg:x3; val_offset:143385*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143385*0 + 3*179*FLEN/8, x4, x1, x2)

inst_47796:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x30000000003fff; valaddr_reg:x3; val_offset:143388*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143388*0 + 3*180*FLEN/8, x4, x1, x2)

inst_47797:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x30000000007fff; valaddr_reg:x3; val_offset:143391*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143391*0 + 3*181*FLEN/8, x4, x1, x2)

inst_47798:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3000000000ffff; valaddr_reg:x3; val_offset:143394*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143394*0 + 3*182*FLEN/8, x4, x1, x2)

inst_47799:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3000000001ffff; valaddr_reg:x3; val_offset:143397*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143397*0 + 3*183*FLEN/8, x4, x1, x2)

inst_47800:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3000000003ffff; valaddr_reg:x3; val_offset:143400*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143400*0 + 3*184*FLEN/8, x4, x1, x2)

inst_47801:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3000000007ffff; valaddr_reg:x3; val_offset:143403*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143403*0 + 3*185*FLEN/8, x4, x1, x2)

inst_47802:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x300000000fffff; valaddr_reg:x3; val_offset:143406*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143406*0 + 3*186*FLEN/8, x4, x1, x2)

inst_47803:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x300000001fffff; valaddr_reg:x3; val_offset:143409*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143409*0 + 3*187*FLEN/8, x4, x1, x2)

inst_47804:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x300000003fffff; valaddr_reg:x3; val_offset:143412*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143412*0 + 3*188*FLEN/8, x4, x1, x2)

inst_47805:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x300000007fffff; valaddr_reg:x3; val_offset:143415*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143415*0 + 3*189*FLEN/8, x4, x1, x2)

inst_47806:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x30000000ffffff; valaddr_reg:x3; val_offset:143418*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143418*0 + 3*190*FLEN/8, x4, x1, x2)

inst_47807:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x30000001ffffff; valaddr_reg:x3; val_offset:143421*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143421*0 + 3*191*FLEN/8, x4, x1, x2)

inst_47808:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x30000003ffffff; valaddr_reg:x3; val_offset:143424*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143424*0 + 3*192*FLEN/8, x4, x1, x2)

inst_47809:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x30000007ffffff; valaddr_reg:x3; val_offset:143427*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143427*0 + 3*193*FLEN/8, x4, x1, x2)

inst_47810:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3000000fffffff; valaddr_reg:x3; val_offset:143430*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143430*0 + 3*194*FLEN/8, x4, x1, x2)

inst_47811:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3000001fffffff; valaddr_reg:x3; val_offset:143433*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143433*0 + 3*195*FLEN/8, x4, x1, x2)

inst_47812:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3000003fffffff; valaddr_reg:x3; val_offset:143436*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143436*0 + 3*196*FLEN/8, x4, x1, x2)

inst_47813:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3000007fffffff; valaddr_reg:x3; val_offset:143439*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143439*0 + 3*197*FLEN/8, x4, x1, x2)

inst_47814:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x300000ffffffff; valaddr_reg:x3; val_offset:143442*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143442*0 + 3*198*FLEN/8, x4, x1, x2)

inst_47815:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x300001ffffffff; valaddr_reg:x3; val_offset:143445*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143445*0 + 3*199*FLEN/8, x4, x1, x2)

inst_47816:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x300003ffffffff; valaddr_reg:x3; val_offset:143448*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143448*0 + 3*200*FLEN/8, x4, x1, x2)

inst_47817:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x300007ffffffff; valaddr_reg:x3; val_offset:143451*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143451*0 + 3*201*FLEN/8, x4, x1, x2)

inst_47818:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x30000fffffffff; valaddr_reg:x3; val_offset:143454*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143454*0 + 3*202*FLEN/8, x4, x1, x2)

inst_47819:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x30001fffffffff; valaddr_reg:x3; val_offset:143457*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143457*0 + 3*203*FLEN/8, x4, x1, x2)

inst_47820:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x30003fffffffff; valaddr_reg:x3; val_offset:143460*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143460*0 + 3*204*FLEN/8, x4, x1, x2)

inst_47821:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x30007fffffffff; valaddr_reg:x3; val_offset:143463*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143463*0 + 3*205*FLEN/8, x4, x1, x2)

inst_47822:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3000ffffffffff; valaddr_reg:x3; val_offset:143466*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143466*0 + 3*206*FLEN/8, x4, x1, x2)

inst_47823:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3001ffffffffff; valaddr_reg:x3; val_offset:143469*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143469*0 + 3*207*FLEN/8, x4, x1, x2)

inst_47824:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3003ffffffffff; valaddr_reg:x3; val_offset:143472*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143472*0 + 3*208*FLEN/8, x4, x1, x2)

inst_47825:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3007ffffffffff; valaddr_reg:x3; val_offset:143475*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143475*0 + 3*209*FLEN/8, x4, x1, x2)

inst_47826:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x300fffffffffff; valaddr_reg:x3; val_offset:143478*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143478*0 + 3*210*FLEN/8, x4, x1, x2)

inst_47827:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x301fffffffffff; valaddr_reg:x3; val_offset:143481*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143481*0 + 3*211*FLEN/8, x4, x1, x2)

inst_47828:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x303fffffffffff; valaddr_reg:x3; val_offset:143484*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143484*0 + 3*212*FLEN/8, x4, x1, x2)

inst_47829:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x307fffffffffff; valaddr_reg:x3; val_offset:143487*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143487*0 + 3*213*FLEN/8, x4, x1, x2)

inst_47830:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x30ffffffffffff; valaddr_reg:x3; val_offset:143490*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143490*0 + 3*214*FLEN/8, x4, x1, x2)

inst_47831:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x31ffffffffffff; valaddr_reg:x3; val_offset:143493*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143493*0 + 3*215*FLEN/8, x4, x1, x2)

inst_47832:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x33ffffffffffff; valaddr_reg:x3; val_offset:143496*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143496*0 + 3*216*FLEN/8, x4, x1, x2)

inst_47833:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x37ffffffffffff; valaddr_reg:x3; val_offset:143499*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143499*0 + 3*217*FLEN/8, x4, x1, x2)

inst_47834:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x38000000000000; valaddr_reg:x3; val_offset:143502*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143502*0 + 3*218*FLEN/8, x4, x1, x2)

inst_47835:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3c000000000000; valaddr_reg:x3; val_offset:143505*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143505*0 + 3*219*FLEN/8, x4, x1, x2)

inst_47836:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3e000000000000; valaddr_reg:x3; val_offset:143508*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143508*0 + 3*220*FLEN/8, x4, x1, x2)

inst_47837:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3f000000000000; valaddr_reg:x3; val_offset:143511*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143511*0 + 3*221*FLEN/8, x4, x1, x2)

inst_47838:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3f800000000000; valaddr_reg:x3; val_offset:143514*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143514*0 + 3*222*FLEN/8, x4, x1, x2)

inst_47839:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3fc00000000000; valaddr_reg:x3; val_offset:143517*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143517*0 + 3*223*FLEN/8, x4, x1, x2)

inst_47840:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3fe00000000000; valaddr_reg:x3; val_offset:143520*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143520*0 + 3*224*FLEN/8, x4, x1, x2)

inst_47841:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3ff00000000000; valaddr_reg:x3; val_offset:143523*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143523*0 + 3*225*FLEN/8, x4, x1, x2)

inst_47842:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3ff80000000000; valaddr_reg:x3; val_offset:143526*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143526*0 + 3*226*FLEN/8, x4, x1, x2)

inst_47843:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3ffc0000000000; valaddr_reg:x3; val_offset:143529*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143529*0 + 3*227*FLEN/8, x4, x1, x2)

inst_47844:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3ffe0000000000; valaddr_reg:x3; val_offset:143532*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143532*0 + 3*228*FLEN/8, x4, x1, x2)

inst_47845:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3fff0000000000; valaddr_reg:x3; val_offset:143535*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143535*0 + 3*229*FLEN/8, x4, x1, x2)

inst_47846:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3fff8000000000; valaddr_reg:x3; val_offset:143538*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143538*0 + 3*230*FLEN/8, x4, x1, x2)

inst_47847:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3fffc000000000; valaddr_reg:x3; val_offset:143541*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143541*0 + 3*231*FLEN/8, x4, x1, x2)

inst_47848:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3fffe000000000; valaddr_reg:x3; val_offset:143544*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143544*0 + 3*232*FLEN/8, x4, x1, x2)

inst_47849:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3ffff000000000; valaddr_reg:x3; val_offset:143547*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143547*0 + 3*233*FLEN/8, x4, x1, x2)

inst_47850:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3ffff800000000; valaddr_reg:x3; val_offset:143550*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143550*0 + 3*234*FLEN/8, x4, x1, x2)

inst_47851:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3ffffc00000000; valaddr_reg:x3; val_offset:143553*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143553*0 + 3*235*FLEN/8, x4, x1, x2)

inst_47852:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3ffffe00000000; valaddr_reg:x3; val_offset:143556*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143556*0 + 3*236*FLEN/8, x4, x1, x2)

inst_47853:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3fffff00000000; valaddr_reg:x3; val_offset:143559*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143559*0 + 3*237*FLEN/8, x4, x1, x2)

inst_47854:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3fffff80000000; valaddr_reg:x3; val_offset:143562*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143562*0 + 3*238*FLEN/8, x4, x1, x2)

inst_47855:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3fffffc0000000; valaddr_reg:x3; val_offset:143565*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143565*0 + 3*239*FLEN/8, x4, x1, x2)

inst_47856:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3fffffe0000000; valaddr_reg:x3; val_offset:143568*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143568*0 + 3*240*FLEN/8, x4, x1, x2)

inst_47857:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3ffffff0000000; valaddr_reg:x3; val_offset:143571*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143571*0 + 3*241*FLEN/8, x4, x1, x2)

inst_47858:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3ffffff8000000; valaddr_reg:x3; val_offset:143574*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143574*0 + 3*242*FLEN/8, x4, x1, x2)

inst_47859:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3ffffffc000000; valaddr_reg:x3; val_offset:143577*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143577*0 + 3*243*FLEN/8, x4, x1, x2)

inst_47860:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3ffffffe000000; valaddr_reg:x3; val_offset:143580*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143580*0 + 3*244*FLEN/8, x4, x1, x2)

inst_47861:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3fffffff000000; valaddr_reg:x3; val_offset:143583*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143583*0 + 3*245*FLEN/8, x4, x1, x2)

inst_47862:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3fffffff800000; valaddr_reg:x3; val_offset:143586*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143586*0 + 3*246*FLEN/8, x4, x1, x2)

inst_47863:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3fffffffc00000; valaddr_reg:x3; val_offset:143589*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143589*0 + 3*247*FLEN/8, x4, x1, x2)

inst_47864:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3fffffffe00000; valaddr_reg:x3; val_offset:143592*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143592*0 + 3*248*FLEN/8, x4, x1, x2)

inst_47865:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3ffffffff00000; valaddr_reg:x3; val_offset:143595*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143595*0 + 3*249*FLEN/8, x4, x1, x2)

inst_47866:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3ffffffff80000; valaddr_reg:x3; val_offset:143598*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143598*0 + 3*250*FLEN/8, x4, x1, x2)

inst_47867:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3ffffffffc0000; valaddr_reg:x3; val_offset:143601*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143601*0 + 3*251*FLEN/8, x4, x1, x2)

inst_47868:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3ffffffffe0000; valaddr_reg:x3; val_offset:143604*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143604*0 + 3*252*FLEN/8, x4, x1, x2)

inst_47869:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3fffffffff0000; valaddr_reg:x3; val_offset:143607*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143607*0 + 3*253*FLEN/8, x4, x1, x2)

inst_47870:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3fffffffff8000; valaddr_reg:x3; val_offset:143610*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143610*0 + 3*254*FLEN/8, x4, x1, x2)

inst_47871:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3fffffffffc000; valaddr_reg:x3; val_offset:143613*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143613*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_47872:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3fffffffffe000; valaddr_reg:x3; val_offset:143616*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143616*0 + 3*256*FLEN/8, x4, x1, x2)

inst_47873:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3ffffffffff000; valaddr_reg:x3; val_offset:143619*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143619*0 + 3*257*FLEN/8, x4, x1, x2)

inst_47874:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3ffffffffff800; valaddr_reg:x3; val_offset:143622*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143622*0 + 3*258*FLEN/8, x4, x1, x2)

inst_47875:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3ffffffffffc00; valaddr_reg:x3; val_offset:143625*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143625*0 + 3*259*FLEN/8, x4, x1, x2)

inst_47876:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3ffffffffffe00; valaddr_reg:x3; val_offset:143628*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143628*0 + 3*260*FLEN/8, x4, x1, x2)

inst_47877:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3fffffffffff00; valaddr_reg:x3; val_offset:143631*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143631*0 + 3*261*FLEN/8, x4, x1, x2)

inst_47878:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3fffffffffff80; valaddr_reg:x3; val_offset:143634*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143634*0 + 3*262*FLEN/8, x4, x1, x2)

inst_47879:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3fffffffffffc0; valaddr_reg:x3; val_offset:143637*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143637*0 + 3*263*FLEN/8, x4, x1, x2)

inst_47880:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3fffffffffffe0; valaddr_reg:x3; val_offset:143640*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143640*0 + 3*264*FLEN/8, x4, x1, x2)

inst_47881:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3ffffffffffff0; valaddr_reg:x3; val_offset:143643*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143643*0 + 3*265*FLEN/8, x4, x1, x2)

inst_47882:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3ffffffffffff8; valaddr_reg:x3; val_offset:143646*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143646*0 + 3*266*FLEN/8, x4, x1, x2)

inst_47883:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3ffffffffffffc; valaddr_reg:x3; val_offset:143649*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143649*0 + 3*267*FLEN/8, x4, x1, x2)

inst_47884:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3ffffffffffffe; valaddr_reg:x3; val_offset:143652*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143652*0 + 3*268*FLEN/8, x4, x1, x2)

inst_47885:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe39441d36765f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e39441d36765f; op2val:0x0;
op3val:0x3fffffffffffff; valaddr_reg:x3; val_offset:143655*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143655*0 + 3*269*FLEN/8, x4, x1, x2)

inst_47886:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7f0000000000000; valaddr_reg:x3; val_offset:143658*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143658*0 + 3*270*FLEN/8, x4, x1, x2)

inst_47887:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7f0000000000001; valaddr_reg:x3; val_offset:143661*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143661*0 + 3*271*FLEN/8, x4, x1, x2)

inst_47888:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7f0000000000003; valaddr_reg:x3; val_offset:143664*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143664*0 + 3*272*FLEN/8, x4, x1, x2)

inst_47889:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7f0000000000007; valaddr_reg:x3; val_offset:143667*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143667*0 + 3*273*FLEN/8, x4, x1, x2)

inst_47890:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7f000000000000f; valaddr_reg:x3; val_offset:143670*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143670*0 + 3*274*FLEN/8, x4, x1, x2)

inst_47891:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7f000000000001f; valaddr_reg:x3; val_offset:143673*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143673*0 + 3*275*FLEN/8, x4, x1, x2)

inst_47892:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7f000000000003f; valaddr_reg:x3; val_offset:143676*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143676*0 + 3*276*FLEN/8, x4, x1, x2)

inst_47893:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7f000000000007f; valaddr_reg:x3; val_offset:143679*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143679*0 + 3*277*FLEN/8, x4, x1, x2)

inst_47894:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7f00000000000ff; valaddr_reg:x3; val_offset:143682*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143682*0 + 3*278*FLEN/8, x4, x1, x2)

inst_47895:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7f00000000001ff; valaddr_reg:x3; val_offset:143685*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143685*0 + 3*279*FLEN/8, x4, x1, x2)

inst_47896:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7f00000000003ff; valaddr_reg:x3; val_offset:143688*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143688*0 + 3*280*FLEN/8, x4, x1, x2)

inst_47897:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7f00000000007ff; valaddr_reg:x3; val_offset:143691*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143691*0 + 3*281*FLEN/8, x4, x1, x2)

inst_47898:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7f0000000000fff; valaddr_reg:x3; val_offset:143694*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143694*0 + 3*282*FLEN/8, x4, x1, x2)

inst_47899:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7f0000000001fff; valaddr_reg:x3; val_offset:143697*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143697*0 + 3*283*FLEN/8, x4, x1, x2)

inst_47900:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7f0000000003fff; valaddr_reg:x3; val_offset:143700*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143700*0 + 3*284*FLEN/8, x4, x1, x2)

inst_47901:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7f0000000007fff; valaddr_reg:x3; val_offset:143703*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143703*0 + 3*285*FLEN/8, x4, x1, x2)

inst_47902:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7f000000000ffff; valaddr_reg:x3; val_offset:143706*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143706*0 + 3*286*FLEN/8, x4, x1, x2)

inst_47903:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7f000000001ffff; valaddr_reg:x3; val_offset:143709*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143709*0 + 3*287*FLEN/8, x4, x1, x2)

inst_47904:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7f000000003ffff; valaddr_reg:x3; val_offset:143712*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143712*0 + 3*288*FLEN/8, x4, x1, x2)

inst_47905:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7f000000007ffff; valaddr_reg:x3; val_offset:143715*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143715*0 + 3*289*FLEN/8, x4, x1, x2)

inst_47906:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7f00000000fffff; valaddr_reg:x3; val_offset:143718*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143718*0 + 3*290*FLEN/8, x4, x1, x2)

inst_47907:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7f00000001fffff; valaddr_reg:x3; val_offset:143721*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143721*0 + 3*291*FLEN/8, x4, x1, x2)

inst_47908:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7f00000003fffff; valaddr_reg:x3; val_offset:143724*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143724*0 + 3*292*FLEN/8, x4, x1, x2)

inst_47909:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7f00000007fffff; valaddr_reg:x3; val_offset:143727*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143727*0 + 3*293*FLEN/8, x4, x1, x2)

inst_47910:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7f0000000ffffff; valaddr_reg:x3; val_offset:143730*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143730*0 + 3*294*FLEN/8, x4, x1, x2)

inst_47911:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7f0000001ffffff; valaddr_reg:x3; val_offset:143733*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143733*0 + 3*295*FLEN/8, x4, x1, x2)

inst_47912:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7f0000003ffffff; valaddr_reg:x3; val_offset:143736*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143736*0 + 3*296*FLEN/8, x4, x1, x2)

inst_47913:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7f0000007ffffff; valaddr_reg:x3; val_offset:143739*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143739*0 + 3*297*FLEN/8, x4, x1, x2)

inst_47914:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7f000000fffffff; valaddr_reg:x3; val_offset:143742*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143742*0 + 3*298*FLEN/8, x4, x1, x2)

inst_47915:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7f000001fffffff; valaddr_reg:x3; val_offset:143745*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143745*0 + 3*299*FLEN/8, x4, x1, x2)

inst_47916:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7f000003fffffff; valaddr_reg:x3; val_offset:143748*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143748*0 + 3*300*FLEN/8, x4, x1, x2)

inst_47917:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7f000007fffffff; valaddr_reg:x3; val_offset:143751*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143751*0 + 3*301*FLEN/8, x4, x1, x2)

inst_47918:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7f00000ffffffff; valaddr_reg:x3; val_offset:143754*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143754*0 + 3*302*FLEN/8, x4, x1, x2)

inst_47919:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7f00001ffffffff; valaddr_reg:x3; val_offset:143757*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143757*0 + 3*303*FLEN/8, x4, x1, x2)

inst_47920:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7f00003ffffffff; valaddr_reg:x3; val_offset:143760*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143760*0 + 3*304*FLEN/8, x4, x1, x2)

inst_47921:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7f00007ffffffff; valaddr_reg:x3; val_offset:143763*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143763*0 + 3*305*FLEN/8, x4, x1, x2)

inst_47922:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7f0000fffffffff; valaddr_reg:x3; val_offset:143766*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143766*0 + 3*306*FLEN/8, x4, x1, x2)

inst_47923:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7f0001fffffffff; valaddr_reg:x3; val_offset:143769*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143769*0 + 3*307*FLEN/8, x4, x1, x2)

inst_47924:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7f0003fffffffff; valaddr_reg:x3; val_offset:143772*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143772*0 + 3*308*FLEN/8, x4, x1, x2)

inst_47925:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7f0007fffffffff; valaddr_reg:x3; val_offset:143775*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143775*0 + 3*309*FLEN/8, x4, x1, x2)

inst_47926:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7f000ffffffffff; valaddr_reg:x3; val_offset:143778*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143778*0 + 3*310*FLEN/8, x4, x1, x2)

inst_47927:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7f001ffffffffff; valaddr_reg:x3; val_offset:143781*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143781*0 + 3*311*FLEN/8, x4, x1, x2)

inst_47928:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7f003ffffffffff; valaddr_reg:x3; val_offset:143784*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143784*0 + 3*312*FLEN/8, x4, x1, x2)

inst_47929:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7f007ffffffffff; valaddr_reg:x3; val_offset:143787*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143787*0 + 3*313*FLEN/8, x4, x1, x2)

inst_47930:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7f00fffffffffff; valaddr_reg:x3; val_offset:143790*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143790*0 + 3*314*FLEN/8, x4, x1, x2)

inst_47931:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7f01fffffffffff; valaddr_reg:x3; val_offset:143793*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143793*0 + 3*315*FLEN/8, x4, x1, x2)

inst_47932:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7f03fffffffffff; valaddr_reg:x3; val_offset:143796*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143796*0 + 3*316*FLEN/8, x4, x1, x2)

inst_47933:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7f07fffffffffff; valaddr_reg:x3; val_offset:143799*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143799*0 + 3*317*FLEN/8, x4, x1, x2)

inst_47934:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7f0ffffffffffff; valaddr_reg:x3; val_offset:143802*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143802*0 + 3*318*FLEN/8, x4, x1, x2)

inst_47935:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7f1ffffffffffff; valaddr_reg:x3; val_offset:143805*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143805*0 + 3*319*FLEN/8, x4, x1, x2)

inst_47936:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7f3ffffffffffff; valaddr_reg:x3; val_offset:143808*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143808*0 + 3*320*FLEN/8, x4, x1, x2)

inst_47937:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7f7ffffffffffff; valaddr_reg:x3; val_offset:143811*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143811*0 + 3*321*FLEN/8, x4, x1, x2)

inst_47938:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7f8000000000000; valaddr_reg:x3; val_offset:143814*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143814*0 + 3*322*FLEN/8, x4, x1, x2)

inst_47939:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7fc000000000000; valaddr_reg:x3; val_offset:143817*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143817*0 + 3*323*FLEN/8, x4, x1, x2)

inst_47940:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7fe000000000000; valaddr_reg:x3; val_offset:143820*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143820*0 + 3*324*FLEN/8, x4, x1, x2)

inst_47941:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7ff000000000000; valaddr_reg:x3; val_offset:143823*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143823*0 + 3*325*FLEN/8, x4, x1, x2)

inst_47942:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7ff800000000000; valaddr_reg:x3; val_offset:143826*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143826*0 + 3*326*FLEN/8, x4, x1, x2)

inst_47943:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7ffc00000000000; valaddr_reg:x3; val_offset:143829*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143829*0 + 3*327*FLEN/8, x4, x1, x2)

inst_47944:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7ffe00000000000; valaddr_reg:x3; val_offset:143832*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143832*0 + 3*328*FLEN/8, x4, x1, x2)

inst_47945:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7fff00000000000; valaddr_reg:x3; val_offset:143835*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143835*0 + 3*329*FLEN/8, x4, x1, x2)

inst_47946:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7fff80000000000; valaddr_reg:x3; val_offset:143838*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143838*0 + 3*330*FLEN/8, x4, x1, x2)

inst_47947:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7fffc0000000000; valaddr_reg:x3; val_offset:143841*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143841*0 + 3*331*FLEN/8, x4, x1, x2)

inst_47948:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7fffe0000000000; valaddr_reg:x3; val_offset:143844*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143844*0 + 3*332*FLEN/8, x4, x1, x2)

inst_47949:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7ffff0000000000; valaddr_reg:x3; val_offset:143847*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143847*0 + 3*333*FLEN/8, x4, x1, x2)

inst_47950:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7ffff8000000000; valaddr_reg:x3; val_offset:143850*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143850*0 + 3*334*FLEN/8, x4, x1, x2)

inst_47951:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7ffffc000000000; valaddr_reg:x3; val_offset:143853*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143853*0 + 3*335*FLEN/8, x4, x1, x2)

inst_47952:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7ffffe000000000; valaddr_reg:x3; val_offset:143856*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143856*0 + 3*336*FLEN/8, x4, x1, x2)

inst_47953:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7fffff000000000; valaddr_reg:x3; val_offset:143859*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143859*0 + 3*337*FLEN/8, x4, x1, x2)

inst_47954:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7fffff800000000; valaddr_reg:x3; val_offset:143862*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143862*0 + 3*338*FLEN/8, x4, x1, x2)

inst_47955:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7fffffc00000000; valaddr_reg:x3; val_offset:143865*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143865*0 + 3*339*FLEN/8, x4, x1, x2)

inst_47956:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7fffffe00000000; valaddr_reg:x3; val_offset:143868*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143868*0 + 3*340*FLEN/8, x4, x1, x2)

inst_47957:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7ffffff00000000; valaddr_reg:x3; val_offset:143871*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143871*0 + 3*341*FLEN/8, x4, x1, x2)

inst_47958:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7ffffff80000000; valaddr_reg:x3; val_offset:143874*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143874*0 + 3*342*FLEN/8, x4, x1, x2)

inst_47959:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7ffffffc0000000; valaddr_reg:x3; val_offset:143877*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143877*0 + 3*343*FLEN/8, x4, x1, x2)

inst_47960:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7ffffffe0000000; valaddr_reg:x3; val_offset:143880*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143880*0 + 3*344*FLEN/8, x4, x1, x2)

inst_47961:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7fffffff0000000; valaddr_reg:x3; val_offset:143883*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143883*0 + 3*345*FLEN/8, x4, x1, x2)

inst_47962:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7fffffff8000000; valaddr_reg:x3; val_offset:143886*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143886*0 + 3*346*FLEN/8, x4, x1, x2)

inst_47963:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7fffffffc000000; valaddr_reg:x3; val_offset:143889*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143889*0 + 3*347*FLEN/8, x4, x1, x2)

inst_47964:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7fffffffe000000; valaddr_reg:x3; val_offset:143892*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143892*0 + 3*348*FLEN/8, x4, x1, x2)

inst_47965:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7ffffffff000000; valaddr_reg:x3; val_offset:143895*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143895*0 + 3*349*FLEN/8, x4, x1, x2)

inst_47966:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7ffffffff800000; valaddr_reg:x3; val_offset:143898*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143898*0 + 3*350*FLEN/8, x4, x1, x2)

inst_47967:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7ffffffffc00000; valaddr_reg:x3; val_offset:143901*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143901*0 + 3*351*FLEN/8, x4, x1, x2)

inst_47968:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7ffffffffe00000; valaddr_reg:x3; val_offset:143904*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143904*0 + 3*352*FLEN/8, x4, x1, x2)

inst_47969:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7fffffffff00000; valaddr_reg:x3; val_offset:143907*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143907*0 + 3*353*FLEN/8, x4, x1, x2)

inst_47970:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7fffffffff80000; valaddr_reg:x3; val_offset:143910*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143910*0 + 3*354*FLEN/8, x4, x1, x2)

inst_47971:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7fffffffffc0000; valaddr_reg:x3; val_offset:143913*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143913*0 + 3*355*FLEN/8, x4, x1, x2)

inst_47972:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7fffffffffe0000; valaddr_reg:x3; val_offset:143916*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143916*0 + 3*356*FLEN/8, x4, x1, x2)

inst_47973:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7ffffffffff0000; valaddr_reg:x3; val_offset:143919*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143919*0 + 3*357*FLEN/8, x4, x1, x2)

inst_47974:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7ffffffffff8000; valaddr_reg:x3; val_offset:143922*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143922*0 + 3*358*FLEN/8, x4, x1, x2)

inst_47975:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7ffffffffffc000; valaddr_reg:x3; val_offset:143925*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143925*0 + 3*359*FLEN/8, x4, x1, x2)

inst_47976:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7ffffffffffe000; valaddr_reg:x3; val_offset:143928*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143928*0 + 3*360*FLEN/8, x4, x1, x2)

inst_47977:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7fffffffffff000; valaddr_reg:x3; val_offset:143931*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143931*0 + 3*361*FLEN/8, x4, x1, x2)

inst_47978:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7fffffffffff800; valaddr_reg:x3; val_offset:143934*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143934*0 + 3*362*FLEN/8, x4, x1, x2)

inst_47979:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7fffffffffffc00; valaddr_reg:x3; val_offset:143937*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143937*0 + 3*363*FLEN/8, x4, x1, x2)

inst_47980:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7fffffffffffe00; valaddr_reg:x3; val_offset:143940*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143940*0 + 3*364*FLEN/8, x4, x1, x2)

inst_47981:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7ffffffffffff00; valaddr_reg:x3; val_offset:143943*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143943*0 + 3*365*FLEN/8, x4, x1, x2)

inst_47982:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7ffffffffffff80; valaddr_reg:x3; val_offset:143946*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143946*0 + 3*366*FLEN/8, x4, x1, x2)

inst_47983:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7ffffffffffffc0; valaddr_reg:x3; val_offset:143949*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143949*0 + 3*367*FLEN/8, x4, x1, x2)

inst_47984:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7ffffffffffffe0; valaddr_reg:x3; val_offset:143952*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143952*0 + 3*368*FLEN/8, x4, x1, x2)

inst_47985:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7fffffffffffff0; valaddr_reg:x3; val_offset:143955*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143955*0 + 3*369*FLEN/8, x4, x1, x2)

inst_47986:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7fffffffffffff8; valaddr_reg:x3; val_offset:143958*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143958*0 + 3*370*FLEN/8, x4, x1, x2)

inst_47987:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7fffffffffffffc; valaddr_reg:x3; val_offset:143961*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143961*0 + 3*371*FLEN/8, x4, x1, x2)

inst_47988:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7fffffffffffffe; valaddr_reg:x3; val_offset:143964*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143964*0 + 3*372*FLEN/8, x4, x1, x2)

inst_47989:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x37f and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xb7ffffffffffffff; valaddr_reg:x3; val_offset:143967*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143967*0 + 3*373*FLEN/8, x4, x1, x2)

inst_47990:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:143970*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143970*0 + 3*374*FLEN/8, x4, x1, x2)

inst_47991:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:143973*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143973*0 + 3*375*FLEN/8, x4, x1, x2)

inst_47992:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:143976*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143976*0 + 3*376*FLEN/8, x4, x1, x2)

inst_47993:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:143979*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143979*0 + 3*377*FLEN/8, x4, x1, x2)

inst_47994:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:143982*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143982*0 + 3*378*FLEN/8, x4, x1, x2)

inst_47995:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:143985*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143985*0 + 3*379*FLEN/8, x4, x1, x2)

inst_47996:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:143988*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143988*0 + 3*380*FLEN/8, x4, x1, x2)

inst_47997:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:143991*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143991*0 + 3*381*FLEN/8, x4, x1, x2)

inst_47998:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:143994*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143994*0 + 3*382*FLEN/8, x4, x1, x2)

inst_47999:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:143997*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 143997*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_48000:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:144000*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144000*0 + 3*384*FLEN/8, x4, x1, x2)

inst_48001:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:144003*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144003*0 + 3*385*FLEN/8, x4, x1, x2)

inst_48002:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:144006*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144006*0 + 3*386*FLEN/8, x4, x1, x2)

inst_48003:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:144009*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144009*0 + 3*387*FLEN/8, x4, x1, x2)

inst_48004:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:144012*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144012*0 + 3*388*FLEN/8, x4, x1, x2)

inst_48005:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:144015*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144015*0 + 3*389*FLEN/8, x4, x1, x2)

inst_48006:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:144018*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144018*0 + 3*390*FLEN/8, x4, x1, x2)

inst_48007:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:144021*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144021*0 + 3*391*FLEN/8, x4, x1, x2)

inst_48008:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:144024*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144024*0 + 3*392*FLEN/8, x4, x1, x2)

inst_48009:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:144027*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144027*0 + 3*393*FLEN/8, x4, x1, x2)

inst_48010:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:144030*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144030*0 + 3*394*FLEN/8, x4, x1, x2)

inst_48011:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe87555a840377 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0c5690147c290 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e87555a840377; op2val:0x9fd0c5690147c290;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:144033*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144033*0 + 3*395*FLEN/8, x4, x1, x2)

inst_48012:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf60000000000000; valaddr_reg:x3; val_offset:144036*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144036*0 + 3*396*FLEN/8, x4, x1, x2)

inst_48013:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf60000000000001; valaddr_reg:x3; val_offset:144039*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144039*0 + 3*397*FLEN/8, x4, x1, x2)

inst_48014:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf60000000000003; valaddr_reg:x3; val_offset:144042*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144042*0 + 3*398*FLEN/8, x4, x1, x2)

inst_48015:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf60000000000007; valaddr_reg:x3; val_offset:144045*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144045*0 + 3*399*FLEN/8, x4, x1, x2)

inst_48016:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6000000000000f; valaddr_reg:x3; val_offset:144048*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144048*0 + 3*400*FLEN/8, x4, x1, x2)

inst_48017:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6000000000001f; valaddr_reg:x3; val_offset:144051*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144051*0 + 3*401*FLEN/8, x4, x1, x2)

inst_48018:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6000000000003f; valaddr_reg:x3; val_offset:144054*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144054*0 + 3*402*FLEN/8, x4, x1, x2)

inst_48019:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6000000000007f; valaddr_reg:x3; val_offset:144057*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144057*0 + 3*403*FLEN/8, x4, x1, x2)

inst_48020:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf600000000000ff; valaddr_reg:x3; val_offset:144060*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144060*0 + 3*404*FLEN/8, x4, x1, x2)

inst_48021:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf600000000001ff; valaddr_reg:x3; val_offset:144063*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144063*0 + 3*405*FLEN/8, x4, x1, x2)

inst_48022:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf600000000003ff; valaddr_reg:x3; val_offset:144066*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144066*0 + 3*406*FLEN/8, x4, x1, x2)

inst_48023:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf600000000007ff; valaddr_reg:x3; val_offset:144069*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144069*0 + 3*407*FLEN/8, x4, x1, x2)

inst_48024:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf60000000000fff; valaddr_reg:x3; val_offset:144072*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144072*0 + 3*408*FLEN/8, x4, x1, x2)

inst_48025:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf60000000001fff; valaddr_reg:x3; val_offset:144075*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144075*0 + 3*409*FLEN/8, x4, x1, x2)

inst_48026:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf60000000003fff; valaddr_reg:x3; val_offset:144078*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144078*0 + 3*410*FLEN/8, x4, x1, x2)

inst_48027:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf60000000007fff; valaddr_reg:x3; val_offset:144081*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144081*0 + 3*411*FLEN/8, x4, x1, x2)

inst_48028:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6000000000ffff; valaddr_reg:x3; val_offset:144084*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144084*0 + 3*412*FLEN/8, x4, x1, x2)

inst_48029:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6000000001ffff; valaddr_reg:x3; val_offset:144087*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144087*0 + 3*413*FLEN/8, x4, x1, x2)

inst_48030:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6000000003ffff; valaddr_reg:x3; val_offset:144090*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144090*0 + 3*414*FLEN/8, x4, x1, x2)

inst_48031:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6000000007ffff; valaddr_reg:x3; val_offset:144093*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144093*0 + 3*415*FLEN/8, x4, x1, x2)

inst_48032:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf600000000fffff; valaddr_reg:x3; val_offset:144096*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144096*0 + 3*416*FLEN/8, x4, x1, x2)

inst_48033:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf600000001fffff; valaddr_reg:x3; val_offset:144099*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144099*0 + 3*417*FLEN/8, x4, x1, x2)

inst_48034:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf600000003fffff; valaddr_reg:x3; val_offset:144102*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144102*0 + 3*418*FLEN/8, x4, x1, x2)

inst_48035:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf600000007fffff; valaddr_reg:x3; val_offset:144105*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144105*0 + 3*419*FLEN/8, x4, x1, x2)

inst_48036:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf60000000ffffff; valaddr_reg:x3; val_offset:144108*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144108*0 + 3*420*FLEN/8, x4, x1, x2)

inst_48037:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf60000001ffffff; valaddr_reg:x3; val_offset:144111*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144111*0 + 3*421*FLEN/8, x4, x1, x2)

inst_48038:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf60000003ffffff; valaddr_reg:x3; val_offset:144114*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144114*0 + 3*422*FLEN/8, x4, x1, x2)

inst_48039:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf60000007ffffff; valaddr_reg:x3; val_offset:144117*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144117*0 + 3*423*FLEN/8, x4, x1, x2)

inst_48040:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6000000fffffff; valaddr_reg:x3; val_offset:144120*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144120*0 + 3*424*FLEN/8, x4, x1, x2)

inst_48041:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6000001fffffff; valaddr_reg:x3; val_offset:144123*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144123*0 + 3*425*FLEN/8, x4, x1, x2)

inst_48042:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6000003fffffff; valaddr_reg:x3; val_offset:144126*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144126*0 + 3*426*FLEN/8, x4, x1, x2)

inst_48043:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6000007fffffff; valaddr_reg:x3; val_offset:144129*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144129*0 + 3*427*FLEN/8, x4, x1, x2)

inst_48044:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf600000ffffffff; valaddr_reg:x3; val_offset:144132*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144132*0 + 3*428*FLEN/8, x4, x1, x2)

inst_48045:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf600001ffffffff; valaddr_reg:x3; val_offset:144135*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144135*0 + 3*429*FLEN/8, x4, x1, x2)

inst_48046:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf600003ffffffff; valaddr_reg:x3; val_offset:144138*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144138*0 + 3*430*FLEN/8, x4, x1, x2)

inst_48047:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf600007ffffffff; valaddr_reg:x3; val_offset:144141*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144141*0 + 3*431*FLEN/8, x4, x1, x2)

inst_48048:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf60000fffffffff; valaddr_reg:x3; val_offset:144144*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144144*0 + 3*432*FLEN/8, x4, x1, x2)

inst_48049:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf60001fffffffff; valaddr_reg:x3; val_offset:144147*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144147*0 + 3*433*FLEN/8, x4, x1, x2)

inst_48050:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf60003fffffffff; valaddr_reg:x3; val_offset:144150*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144150*0 + 3*434*FLEN/8, x4, x1, x2)

inst_48051:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf60007fffffffff; valaddr_reg:x3; val_offset:144153*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144153*0 + 3*435*FLEN/8, x4, x1, x2)

inst_48052:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6000ffffffffff; valaddr_reg:x3; val_offset:144156*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144156*0 + 3*436*FLEN/8, x4, x1, x2)

inst_48053:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6001ffffffffff; valaddr_reg:x3; val_offset:144159*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144159*0 + 3*437*FLEN/8, x4, x1, x2)

inst_48054:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6003ffffffffff; valaddr_reg:x3; val_offset:144162*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144162*0 + 3*438*FLEN/8, x4, x1, x2)

inst_48055:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6007ffffffffff; valaddr_reg:x3; val_offset:144165*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144165*0 + 3*439*FLEN/8, x4, x1, x2)

inst_48056:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf600fffffffffff; valaddr_reg:x3; val_offset:144168*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144168*0 + 3*440*FLEN/8, x4, x1, x2)

inst_48057:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf601fffffffffff; valaddr_reg:x3; val_offset:144171*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144171*0 + 3*441*FLEN/8, x4, x1, x2)

inst_48058:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf603fffffffffff; valaddr_reg:x3; val_offset:144174*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144174*0 + 3*442*FLEN/8, x4, x1, x2)

inst_48059:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf607fffffffffff; valaddr_reg:x3; val_offset:144177*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144177*0 + 3*443*FLEN/8, x4, x1, x2)

inst_48060:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf60ffffffffffff; valaddr_reg:x3; val_offset:144180*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144180*0 + 3*444*FLEN/8, x4, x1, x2)

inst_48061:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf61ffffffffffff; valaddr_reg:x3; val_offset:144183*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144183*0 + 3*445*FLEN/8, x4, x1, x2)

inst_48062:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf63ffffffffffff; valaddr_reg:x3; val_offset:144186*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144186*0 + 3*446*FLEN/8, x4, x1, x2)

inst_48063:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf67ffffffffffff; valaddr_reg:x3; val_offset:144189*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144189*0 + 3*447*FLEN/8, x4, x1, x2)

inst_48064:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf68000000000000; valaddr_reg:x3; val_offset:144192*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144192*0 + 3*448*FLEN/8, x4, x1, x2)

inst_48065:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6c000000000000; valaddr_reg:x3; val_offset:144195*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144195*0 + 3*449*FLEN/8, x4, x1, x2)

inst_48066:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6e000000000000; valaddr_reg:x3; val_offset:144198*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144198*0 + 3*450*FLEN/8, x4, x1, x2)

inst_48067:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6f000000000000; valaddr_reg:x3; val_offset:144201*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144201*0 + 3*451*FLEN/8, x4, x1, x2)

inst_48068:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6f800000000000; valaddr_reg:x3; val_offset:144204*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144204*0 + 3*452*FLEN/8, x4, x1, x2)

inst_48069:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6fc00000000000; valaddr_reg:x3; val_offset:144207*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144207*0 + 3*453*FLEN/8, x4, x1, x2)

inst_48070:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6fe00000000000; valaddr_reg:x3; val_offset:144210*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144210*0 + 3*454*FLEN/8, x4, x1, x2)

inst_48071:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6ff00000000000; valaddr_reg:x3; val_offset:144213*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144213*0 + 3*455*FLEN/8, x4, x1, x2)

inst_48072:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6ff80000000000; valaddr_reg:x3; val_offset:144216*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144216*0 + 3*456*FLEN/8, x4, x1, x2)

inst_48073:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6ffc0000000000; valaddr_reg:x3; val_offset:144219*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144219*0 + 3*457*FLEN/8, x4, x1, x2)

inst_48074:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6ffe0000000000; valaddr_reg:x3; val_offset:144222*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144222*0 + 3*458*FLEN/8, x4, x1, x2)

inst_48075:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6fff0000000000; valaddr_reg:x3; val_offset:144225*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144225*0 + 3*459*FLEN/8, x4, x1, x2)

inst_48076:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6fff8000000000; valaddr_reg:x3; val_offset:144228*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144228*0 + 3*460*FLEN/8, x4, x1, x2)

inst_48077:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6fffc000000000; valaddr_reg:x3; val_offset:144231*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144231*0 + 3*461*FLEN/8, x4, x1, x2)

inst_48078:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6fffe000000000; valaddr_reg:x3; val_offset:144234*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144234*0 + 3*462*FLEN/8, x4, x1, x2)

inst_48079:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6ffff000000000; valaddr_reg:x3; val_offset:144237*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144237*0 + 3*463*FLEN/8, x4, x1, x2)

inst_48080:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6ffff800000000; valaddr_reg:x3; val_offset:144240*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144240*0 + 3*464*FLEN/8, x4, x1, x2)

inst_48081:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6ffffc00000000; valaddr_reg:x3; val_offset:144243*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144243*0 + 3*465*FLEN/8, x4, x1, x2)

inst_48082:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6ffffe00000000; valaddr_reg:x3; val_offset:144246*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144246*0 + 3*466*FLEN/8, x4, x1, x2)

inst_48083:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6fffff00000000; valaddr_reg:x3; val_offset:144249*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144249*0 + 3*467*FLEN/8, x4, x1, x2)

inst_48084:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6fffff80000000; valaddr_reg:x3; val_offset:144252*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144252*0 + 3*468*FLEN/8, x4, x1, x2)

inst_48085:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6fffffc0000000; valaddr_reg:x3; val_offset:144255*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144255*0 + 3*469*FLEN/8, x4, x1, x2)

inst_48086:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6fffffe0000000; valaddr_reg:x3; val_offset:144258*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144258*0 + 3*470*FLEN/8, x4, x1, x2)

inst_48087:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6ffffff0000000; valaddr_reg:x3; val_offset:144261*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144261*0 + 3*471*FLEN/8, x4, x1, x2)

inst_48088:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6ffffff8000000; valaddr_reg:x3; val_offset:144264*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144264*0 + 3*472*FLEN/8, x4, x1, x2)

inst_48089:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6ffffffc000000; valaddr_reg:x3; val_offset:144267*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144267*0 + 3*473*FLEN/8, x4, x1, x2)

inst_48090:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6ffffffe000000; valaddr_reg:x3; val_offset:144270*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144270*0 + 3*474*FLEN/8, x4, x1, x2)

inst_48091:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6fffffff000000; valaddr_reg:x3; val_offset:144273*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144273*0 + 3*475*FLEN/8, x4, x1, x2)

inst_48092:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6fffffff800000; valaddr_reg:x3; val_offset:144276*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144276*0 + 3*476*FLEN/8, x4, x1, x2)

inst_48093:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6fffffffc00000; valaddr_reg:x3; val_offset:144279*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144279*0 + 3*477*FLEN/8, x4, x1, x2)

inst_48094:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6fffffffe00000; valaddr_reg:x3; val_offset:144282*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144282*0 + 3*478*FLEN/8, x4, x1, x2)

inst_48095:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6ffffffff00000; valaddr_reg:x3; val_offset:144285*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144285*0 + 3*479*FLEN/8, x4, x1, x2)

inst_48096:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6ffffffff80000; valaddr_reg:x3; val_offset:144288*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144288*0 + 3*480*FLEN/8, x4, x1, x2)

inst_48097:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6ffffffffc0000; valaddr_reg:x3; val_offset:144291*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144291*0 + 3*481*FLEN/8, x4, x1, x2)

inst_48098:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6ffffffffe0000; valaddr_reg:x3; val_offset:144294*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144294*0 + 3*482*FLEN/8, x4, x1, x2)

inst_48099:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6fffffffff0000; valaddr_reg:x3; val_offset:144297*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144297*0 + 3*483*FLEN/8, x4, x1, x2)

inst_48100:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6fffffffff8000; valaddr_reg:x3; val_offset:144300*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144300*0 + 3*484*FLEN/8, x4, x1, x2)

inst_48101:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6fffffffffc000; valaddr_reg:x3; val_offset:144303*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144303*0 + 3*485*FLEN/8, x4, x1, x2)

inst_48102:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6fffffffffe000; valaddr_reg:x3; val_offset:144306*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144306*0 + 3*486*FLEN/8, x4, x1, x2)

inst_48103:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6ffffffffff000; valaddr_reg:x3; val_offset:144309*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144309*0 + 3*487*FLEN/8, x4, x1, x2)

inst_48104:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6ffffffffff800; valaddr_reg:x3; val_offset:144312*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144312*0 + 3*488*FLEN/8, x4, x1, x2)

inst_48105:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6ffffffffffc00; valaddr_reg:x3; val_offset:144315*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144315*0 + 3*489*FLEN/8, x4, x1, x2)

inst_48106:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6ffffffffffe00; valaddr_reg:x3; val_offset:144318*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144318*0 + 3*490*FLEN/8, x4, x1, x2)

inst_48107:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6fffffffffff00; valaddr_reg:x3; val_offset:144321*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144321*0 + 3*491*FLEN/8, x4, x1, x2)

inst_48108:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6fffffffffff80; valaddr_reg:x3; val_offset:144324*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144324*0 + 3*492*FLEN/8, x4, x1, x2)

inst_48109:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6fffffffffffc0; valaddr_reg:x3; val_offset:144327*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144327*0 + 3*493*FLEN/8, x4, x1, x2)

inst_48110:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6fffffffffffe0; valaddr_reg:x3; val_offset:144330*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144330*0 + 3*494*FLEN/8, x4, x1, x2)

inst_48111:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6ffffffffffff0; valaddr_reg:x3; val_offset:144333*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144333*0 + 3*495*FLEN/8, x4, x1, x2)

inst_48112:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6ffffffffffff8; valaddr_reg:x3; val_offset:144336*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144336*0 + 3*496*FLEN/8, x4, x1, x2)

inst_48113:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6ffffffffffffc; valaddr_reg:x3; val_offset:144339*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144339*0 + 3*497*FLEN/8, x4, x1, x2)

inst_48114:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6ffffffffffffe; valaddr_reg:x3; val_offset:144342*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144342*0 + 3*498*FLEN/8, x4, x1, x2)

inst_48115:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf6fffffffffffff; valaddr_reg:x3; val_offset:144345*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144345*0 + 3*499*FLEN/8, x4, x1, x2)

inst_48116:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:144348*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144348*0 + 3*500*FLEN/8, x4, x1, x2)

inst_48117:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:144351*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144351*0 + 3*501*FLEN/8, x4, x1, x2)

inst_48118:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:144354*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144354*0 + 3*502*FLEN/8, x4, x1, x2)

inst_48119:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:144357*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144357*0 + 3*503*FLEN/8, x4, x1, x2)

inst_48120:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:144360*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144360*0 + 3*504*FLEN/8, x4, x1, x2)

inst_48121:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:144363*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144363*0 + 3*505*FLEN/8, x4, x1, x2)

inst_48122:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:144366*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144366*0 + 3*506*FLEN/8, x4, x1, x2)

inst_48123:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:144369*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144369*0 + 3*507*FLEN/8, x4, x1, x2)

inst_48124:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:144372*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144372*0 + 3*508*FLEN/8, x4, x1, x2)

inst_48125:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:144375*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144375*0 + 3*509*FLEN/8, x4, x1, x2)

inst_48126:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:144378*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144378*0 + 3*510*FLEN/8, x4, x1, x2)

inst_48127:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:144381*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144381*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_48128:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:144384*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144384*0 + 3*512*FLEN/8, x4, x1, x2)

inst_48129:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:144387*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144387*0 + 3*513*FLEN/8, x4, x1, x2)

inst_48130:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:144390*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144390*0 + 3*514*FLEN/8, x4, x1, x2)

inst_48131:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:144393*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144393*0 + 3*515*FLEN/8, x4, x1, x2)

inst_48132:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:144396*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144396*0 + 3*516*FLEN/8, x4, x1, x2)

inst_48133:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:144399*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144399*0 + 3*517*FLEN/8, x4, x1, x2)

inst_48134:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:144402*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144402*0 + 3*518*FLEN/8, x4, x1, x2)

inst_48135:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:144405*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144405*0 + 3*519*FLEN/8, x4, x1, x2)

inst_48136:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:144408*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144408*0 + 3*520*FLEN/8, x4, x1, x2)

inst_48137:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b51eb0763e8d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea51987a6fe4b; op2val:0x9fd0b51eb0763e8d;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:144411*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144411*0 + 3*521*FLEN/8, x4, x1, x2)

inst_48138:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:144414*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144414*0 + 3*522*FLEN/8, x4, x1, x2)

inst_48139:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:144417*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144417*0 + 3*523*FLEN/8, x4, x1, x2)

inst_48140:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:144420*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144420*0 + 3*524*FLEN/8, x4, x1, x2)

inst_48141:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:144423*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144423*0 + 3*525*FLEN/8, x4, x1, x2)

inst_48142:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:144426*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144426*0 + 3*526*FLEN/8, x4, x1, x2)

inst_48143:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:144429*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144429*0 + 3*527*FLEN/8, x4, x1, x2)

inst_48144:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:144432*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144432*0 + 3*528*FLEN/8, x4, x1, x2)

inst_48145:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:144435*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144435*0 + 3*529*FLEN/8, x4, x1, x2)

inst_48146:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:144438*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144438*0 + 3*530*FLEN/8, x4, x1, x2)

inst_48147:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:144441*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144441*0 + 3*531*FLEN/8, x4, x1, x2)

inst_48148:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:144444*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144444*0 + 3*532*FLEN/8, x4, x1, x2)

inst_48149:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:144447*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144447*0 + 3*533*FLEN/8, x4, x1, x2)

inst_48150:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:144450*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144450*0 + 3*534*FLEN/8, x4, x1, x2)

inst_48151:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:144453*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144453*0 + 3*535*FLEN/8, x4, x1, x2)

inst_48152:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:144456*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144456*0 + 3*536*FLEN/8, x4, x1, x2)

inst_48153:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:144459*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144459*0 + 3*537*FLEN/8, x4, x1, x2)

inst_48154:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:144462*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144462*0 + 3*538*FLEN/8, x4, x1, x2)

inst_48155:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:144465*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144465*0 + 3*539*FLEN/8, x4, x1, x2)

inst_48156:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:144468*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144468*0 + 3*540*FLEN/8, x4, x1, x2)

inst_48157:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:144471*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144471*0 + 3*541*FLEN/8, x4, x1, x2)

inst_48158:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:144474*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144474*0 + 3*542*FLEN/8, x4, x1, x2)

inst_48159:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:144477*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144477*0 + 3*543*FLEN/8, x4, x1, x2)

inst_48160:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82e0000000000000; valaddr_reg:x3; val_offset:144480*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144480*0 + 3*544*FLEN/8, x4, x1, x2)

inst_48161:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82e0000000000001; valaddr_reg:x3; val_offset:144483*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144483*0 + 3*545*FLEN/8, x4, x1, x2)

inst_48162:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82e0000000000003; valaddr_reg:x3; val_offset:144486*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144486*0 + 3*546*FLEN/8, x4, x1, x2)

inst_48163:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82e0000000000007; valaddr_reg:x3; val_offset:144489*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144489*0 + 3*547*FLEN/8, x4, x1, x2)

inst_48164:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82e000000000000f; valaddr_reg:x3; val_offset:144492*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144492*0 + 3*548*FLEN/8, x4, x1, x2)

inst_48165:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82e000000000001f; valaddr_reg:x3; val_offset:144495*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144495*0 + 3*549*FLEN/8, x4, x1, x2)

inst_48166:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82e000000000003f; valaddr_reg:x3; val_offset:144498*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144498*0 + 3*550*FLEN/8, x4, x1, x2)

inst_48167:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82e000000000007f; valaddr_reg:x3; val_offset:144501*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144501*0 + 3*551*FLEN/8, x4, x1, x2)

inst_48168:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82e00000000000ff; valaddr_reg:x3; val_offset:144504*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144504*0 + 3*552*FLEN/8, x4, x1, x2)

inst_48169:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82e00000000001ff; valaddr_reg:x3; val_offset:144507*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144507*0 + 3*553*FLEN/8, x4, x1, x2)

inst_48170:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82e00000000003ff; valaddr_reg:x3; val_offset:144510*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144510*0 + 3*554*FLEN/8, x4, x1, x2)

inst_48171:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82e00000000007ff; valaddr_reg:x3; val_offset:144513*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144513*0 + 3*555*FLEN/8, x4, x1, x2)

inst_48172:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82e0000000000fff; valaddr_reg:x3; val_offset:144516*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144516*0 + 3*556*FLEN/8, x4, x1, x2)

inst_48173:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82e0000000001fff; valaddr_reg:x3; val_offset:144519*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144519*0 + 3*557*FLEN/8, x4, x1, x2)

inst_48174:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82e0000000003fff; valaddr_reg:x3; val_offset:144522*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144522*0 + 3*558*FLEN/8, x4, x1, x2)

inst_48175:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82e0000000007fff; valaddr_reg:x3; val_offset:144525*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144525*0 + 3*559*FLEN/8, x4, x1, x2)

inst_48176:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82e000000000ffff; valaddr_reg:x3; val_offset:144528*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144528*0 + 3*560*FLEN/8, x4, x1, x2)

inst_48177:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82e000000001ffff; valaddr_reg:x3; val_offset:144531*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144531*0 + 3*561*FLEN/8, x4, x1, x2)

inst_48178:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82e000000003ffff; valaddr_reg:x3; val_offset:144534*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144534*0 + 3*562*FLEN/8, x4, x1, x2)

inst_48179:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82e000000007ffff; valaddr_reg:x3; val_offset:144537*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144537*0 + 3*563*FLEN/8, x4, x1, x2)

inst_48180:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82e00000000fffff; valaddr_reg:x3; val_offset:144540*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144540*0 + 3*564*FLEN/8, x4, x1, x2)

inst_48181:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82e00000001fffff; valaddr_reg:x3; val_offset:144543*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144543*0 + 3*565*FLEN/8, x4, x1, x2)

inst_48182:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82e00000003fffff; valaddr_reg:x3; val_offset:144546*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144546*0 + 3*566*FLEN/8, x4, x1, x2)

inst_48183:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82e00000007fffff; valaddr_reg:x3; val_offset:144549*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144549*0 + 3*567*FLEN/8, x4, x1, x2)

inst_48184:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82e0000000ffffff; valaddr_reg:x3; val_offset:144552*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144552*0 + 3*568*FLEN/8, x4, x1, x2)

inst_48185:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82e0000001ffffff; valaddr_reg:x3; val_offset:144555*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144555*0 + 3*569*FLEN/8, x4, x1, x2)

inst_48186:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82e0000003ffffff; valaddr_reg:x3; val_offset:144558*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144558*0 + 3*570*FLEN/8, x4, x1, x2)

inst_48187:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82e0000007ffffff; valaddr_reg:x3; val_offset:144561*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144561*0 + 3*571*FLEN/8, x4, x1, x2)

inst_48188:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82e000000fffffff; valaddr_reg:x3; val_offset:144564*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144564*0 + 3*572*FLEN/8, x4, x1, x2)

inst_48189:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82e000001fffffff; valaddr_reg:x3; val_offset:144567*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144567*0 + 3*573*FLEN/8, x4, x1, x2)

inst_48190:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82e000003fffffff; valaddr_reg:x3; val_offset:144570*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144570*0 + 3*574*FLEN/8, x4, x1, x2)

inst_48191:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82e000007fffffff; valaddr_reg:x3; val_offset:144573*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144573*0 + 3*575*FLEN/8, x4, x1, x2)

inst_48192:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82e00000ffffffff; valaddr_reg:x3; val_offset:144576*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144576*0 + 3*576*FLEN/8, x4, x1, x2)

inst_48193:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82e00001ffffffff; valaddr_reg:x3; val_offset:144579*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144579*0 + 3*577*FLEN/8, x4, x1, x2)

inst_48194:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82e00003ffffffff; valaddr_reg:x3; val_offset:144582*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144582*0 + 3*578*FLEN/8, x4, x1, x2)

inst_48195:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82e00007ffffffff; valaddr_reg:x3; val_offset:144585*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144585*0 + 3*579*FLEN/8, x4, x1, x2)

inst_48196:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82e0000fffffffff; valaddr_reg:x3; val_offset:144588*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144588*0 + 3*580*FLEN/8, x4, x1, x2)

inst_48197:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82e0001fffffffff; valaddr_reg:x3; val_offset:144591*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144591*0 + 3*581*FLEN/8, x4, x1, x2)

inst_48198:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82e0003fffffffff; valaddr_reg:x3; val_offset:144594*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144594*0 + 3*582*FLEN/8, x4, x1, x2)

inst_48199:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82e0007fffffffff; valaddr_reg:x3; val_offset:144597*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144597*0 + 3*583*FLEN/8, x4, x1, x2)

inst_48200:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82e000ffffffffff; valaddr_reg:x3; val_offset:144600*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144600*0 + 3*584*FLEN/8, x4, x1, x2)

inst_48201:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82e001ffffffffff; valaddr_reg:x3; val_offset:144603*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144603*0 + 3*585*FLEN/8, x4, x1, x2)

inst_48202:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82e003ffffffffff; valaddr_reg:x3; val_offset:144606*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144606*0 + 3*586*FLEN/8, x4, x1, x2)

inst_48203:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82e007ffffffffff; valaddr_reg:x3; val_offset:144609*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144609*0 + 3*587*FLEN/8, x4, x1, x2)

inst_48204:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82e00fffffffffff; valaddr_reg:x3; val_offset:144612*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144612*0 + 3*588*FLEN/8, x4, x1, x2)

inst_48205:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82e01fffffffffff; valaddr_reg:x3; val_offset:144615*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144615*0 + 3*589*FLEN/8, x4, x1, x2)

inst_48206:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82e03fffffffffff; valaddr_reg:x3; val_offset:144618*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144618*0 + 3*590*FLEN/8, x4, x1, x2)

inst_48207:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82e07fffffffffff; valaddr_reg:x3; val_offset:144621*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144621*0 + 3*591*FLEN/8, x4, x1, x2)

inst_48208:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82e0ffffffffffff; valaddr_reg:x3; val_offset:144624*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144624*0 + 3*592*FLEN/8, x4, x1, x2)

inst_48209:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82e1ffffffffffff; valaddr_reg:x3; val_offset:144627*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144627*0 + 3*593*FLEN/8, x4, x1, x2)

inst_48210:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82e3ffffffffffff; valaddr_reg:x3; val_offset:144630*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144630*0 + 3*594*FLEN/8, x4, x1, x2)

inst_48211:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82e7ffffffffffff; valaddr_reg:x3; val_offset:144633*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144633*0 + 3*595*FLEN/8, x4, x1, x2)

inst_48212:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82e8000000000000; valaddr_reg:x3; val_offset:144636*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144636*0 + 3*596*FLEN/8, x4, x1, x2)

inst_48213:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82ec000000000000; valaddr_reg:x3; val_offset:144639*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144639*0 + 3*597*FLEN/8, x4, x1, x2)

inst_48214:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82ee000000000000; valaddr_reg:x3; val_offset:144642*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144642*0 + 3*598*FLEN/8, x4, x1, x2)

inst_48215:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82ef000000000000; valaddr_reg:x3; val_offset:144645*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144645*0 + 3*599*FLEN/8, x4, x1, x2)

inst_48216:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82ef800000000000; valaddr_reg:x3; val_offset:144648*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144648*0 + 3*600*FLEN/8, x4, x1, x2)

inst_48217:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82efc00000000000; valaddr_reg:x3; val_offset:144651*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144651*0 + 3*601*FLEN/8, x4, x1, x2)

inst_48218:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82efe00000000000; valaddr_reg:x3; val_offset:144654*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144654*0 + 3*602*FLEN/8, x4, x1, x2)

inst_48219:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82eff00000000000; valaddr_reg:x3; val_offset:144657*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144657*0 + 3*603*FLEN/8, x4, x1, x2)

inst_48220:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82eff80000000000; valaddr_reg:x3; val_offset:144660*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144660*0 + 3*604*FLEN/8, x4, x1, x2)

inst_48221:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82effc0000000000; valaddr_reg:x3; val_offset:144663*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144663*0 + 3*605*FLEN/8, x4, x1, x2)

inst_48222:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82effe0000000000; valaddr_reg:x3; val_offset:144666*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144666*0 + 3*606*FLEN/8, x4, x1, x2)

inst_48223:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82efff0000000000; valaddr_reg:x3; val_offset:144669*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144669*0 + 3*607*FLEN/8, x4, x1, x2)

inst_48224:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82efff8000000000; valaddr_reg:x3; val_offset:144672*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144672*0 + 3*608*FLEN/8, x4, x1, x2)

inst_48225:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82efffc000000000; valaddr_reg:x3; val_offset:144675*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144675*0 + 3*609*FLEN/8, x4, x1, x2)

inst_48226:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82efffe000000000; valaddr_reg:x3; val_offset:144678*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144678*0 + 3*610*FLEN/8, x4, x1, x2)

inst_48227:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82effff000000000; valaddr_reg:x3; val_offset:144681*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144681*0 + 3*611*FLEN/8, x4, x1, x2)

inst_48228:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82effff800000000; valaddr_reg:x3; val_offset:144684*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144684*0 + 3*612*FLEN/8, x4, x1, x2)

inst_48229:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82effffc00000000; valaddr_reg:x3; val_offset:144687*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144687*0 + 3*613*FLEN/8, x4, x1, x2)

inst_48230:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82effffe00000000; valaddr_reg:x3; val_offset:144690*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144690*0 + 3*614*FLEN/8, x4, x1, x2)

inst_48231:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82efffff00000000; valaddr_reg:x3; val_offset:144693*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144693*0 + 3*615*FLEN/8, x4, x1, x2)

inst_48232:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82efffff80000000; valaddr_reg:x3; val_offset:144696*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144696*0 + 3*616*FLEN/8, x4, x1, x2)

inst_48233:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82efffffc0000000; valaddr_reg:x3; val_offset:144699*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144699*0 + 3*617*FLEN/8, x4, x1, x2)

inst_48234:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82efffffe0000000; valaddr_reg:x3; val_offset:144702*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144702*0 + 3*618*FLEN/8, x4, x1, x2)

inst_48235:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82effffff0000000; valaddr_reg:x3; val_offset:144705*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144705*0 + 3*619*FLEN/8, x4, x1, x2)

inst_48236:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82effffff8000000; valaddr_reg:x3; val_offset:144708*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144708*0 + 3*620*FLEN/8, x4, x1, x2)

inst_48237:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82effffffc000000; valaddr_reg:x3; val_offset:144711*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144711*0 + 3*621*FLEN/8, x4, x1, x2)

inst_48238:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82effffffe000000; valaddr_reg:x3; val_offset:144714*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144714*0 + 3*622*FLEN/8, x4, x1, x2)

inst_48239:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82efffffff000000; valaddr_reg:x3; val_offset:144717*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144717*0 + 3*623*FLEN/8, x4, x1, x2)

inst_48240:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82efffffff800000; valaddr_reg:x3; val_offset:144720*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144720*0 + 3*624*FLEN/8, x4, x1, x2)

inst_48241:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82efffffffc00000; valaddr_reg:x3; val_offset:144723*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144723*0 + 3*625*FLEN/8, x4, x1, x2)

inst_48242:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82efffffffe00000; valaddr_reg:x3; val_offset:144726*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144726*0 + 3*626*FLEN/8, x4, x1, x2)

inst_48243:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82effffffff00000; valaddr_reg:x3; val_offset:144729*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144729*0 + 3*627*FLEN/8, x4, x1, x2)

inst_48244:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82effffffff80000; valaddr_reg:x3; val_offset:144732*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144732*0 + 3*628*FLEN/8, x4, x1, x2)

inst_48245:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82effffffffc0000; valaddr_reg:x3; val_offset:144735*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144735*0 + 3*629*FLEN/8, x4, x1, x2)

inst_48246:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82effffffffe0000; valaddr_reg:x3; val_offset:144738*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144738*0 + 3*630*FLEN/8, x4, x1, x2)

inst_48247:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82efffffffff0000; valaddr_reg:x3; val_offset:144741*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144741*0 + 3*631*FLEN/8, x4, x1, x2)

inst_48248:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82efffffffff8000; valaddr_reg:x3; val_offset:144744*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144744*0 + 3*632*FLEN/8, x4, x1, x2)

inst_48249:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82efffffffffc000; valaddr_reg:x3; val_offset:144747*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144747*0 + 3*633*FLEN/8, x4, x1, x2)

inst_48250:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82efffffffffe000; valaddr_reg:x3; val_offset:144750*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144750*0 + 3*634*FLEN/8, x4, x1, x2)

inst_48251:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82effffffffff000; valaddr_reg:x3; val_offset:144753*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144753*0 + 3*635*FLEN/8, x4, x1, x2)

inst_48252:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82effffffffff800; valaddr_reg:x3; val_offset:144756*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144756*0 + 3*636*FLEN/8, x4, x1, x2)

inst_48253:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82effffffffffc00; valaddr_reg:x3; val_offset:144759*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144759*0 + 3*637*FLEN/8, x4, x1, x2)

inst_48254:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82effffffffffe00; valaddr_reg:x3; val_offset:144762*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144762*0 + 3*638*FLEN/8, x4, x1, x2)

inst_48255:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82efffffffffff00; valaddr_reg:x3; val_offset:144765*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144765*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_48256:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82efffffffffff80; valaddr_reg:x3; val_offset:144768*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144768*0 + 3*640*FLEN/8, x4, x1, x2)

inst_48257:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82efffffffffffc0; valaddr_reg:x3; val_offset:144771*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144771*0 + 3*641*FLEN/8, x4, x1, x2)

inst_48258:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82efffffffffffe0; valaddr_reg:x3; val_offset:144774*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144774*0 + 3*642*FLEN/8, x4, x1, x2)

inst_48259:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82effffffffffff0; valaddr_reg:x3; val_offset:144777*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144777*0 + 3*643*FLEN/8, x4, x1, x2)

inst_48260:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82effffffffffff8; valaddr_reg:x3; val_offset:144780*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144780*0 + 3*644*FLEN/8, x4, x1, x2)

inst_48261:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82effffffffffffc; valaddr_reg:x3; val_offset:144783*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144783*0 + 3*645*FLEN/8, x4, x1, x2)

inst_48262:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82effffffffffffe; valaddr_reg:x3; val_offset:144786*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144786*0 + 3*646*FLEN/8, x4, x1, x2)

inst_48263:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb35e93a21545 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02e and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9eb35e93a21545; op2val:0x8000;
op3val:0x82efffffffffffff; valaddr_reg:x3; val_offset:144789*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144789*0 + 3*647*FLEN/8, x4, x1, x2)

inst_48264:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:144792*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144792*0 + 3*648*FLEN/8, x4, x1, x2)

inst_48265:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:144795*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144795*0 + 3*649*FLEN/8, x4, x1, x2)

inst_48266:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:144798*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144798*0 + 3*650*FLEN/8, x4, x1, x2)

inst_48267:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:144801*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144801*0 + 3*651*FLEN/8, x4, x1, x2)

inst_48268:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:144804*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144804*0 + 3*652*FLEN/8, x4, x1, x2)

inst_48269:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:144807*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144807*0 + 3*653*FLEN/8, x4, x1, x2)

inst_48270:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:144810*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144810*0 + 3*654*FLEN/8, x4, x1, x2)

inst_48271:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:144813*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144813*0 + 3*655*FLEN/8, x4, x1, x2)

inst_48272:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:144816*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144816*0 + 3*656*FLEN/8, x4, x1, x2)

inst_48273:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:144819*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144819*0 + 3*657*FLEN/8, x4, x1, x2)

inst_48274:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:144822*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144822*0 + 3*658*FLEN/8, x4, x1, x2)

inst_48275:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:144825*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144825*0 + 3*659*FLEN/8, x4, x1, x2)

inst_48276:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:144828*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144828*0 + 3*660*FLEN/8, x4, x1, x2)

inst_48277:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:144831*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144831*0 + 3*661*FLEN/8, x4, x1, x2)

inst_48278:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:144834*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144834*0 + 3*662*FLEN/8, x4, x1, x2)

inst_48279:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:144837*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144837*0 + 3*663*FLEN/8, x4, x1, x2)

inst_48280:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:144840*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144840*0 + 3*664*FLEN/8, x4, x1, x2)

inst_48281:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:144843*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144843*0 + 3*665*FLEN/8, x4, x1, x2)

inst_48282:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:144846*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144846*0 + 3*666*FLEN/8, x4, x1, x2)

inst_48283:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:144849*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144849*0 + 3*667*FLEN/8, x4, x1, x2)

inst_48284:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:144852*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144852*0 + 3*668*FLEN/8, x4, x1, x2)

inst_48285:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:144855*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144855*0 + 3*669*FLEN/8, x4, x1, x2)

inst_48286:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x360000000000000; valaddr_reg:x3; val_offset:144858*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144858*0 + 3*670*FLEN/8, x4, x1, x2)

inst_48287:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x360000000000001; valaddr_reg:x3; val_offset:144861*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144861*0 + 3*671*FLEN/8, x4, x1, x2)

inst_48288:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x360000000000003; valaddr_reg:x3; val_offset:144864*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144864*0 + 3*672*FLEN/8, x4, x1, x2)

inst_48289:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x360000000000007; valaddr_reg:x3; val_offset:144867*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144867*0 + 3*673*FLEN/8, x4, x1, x2)

inst_48290:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36000000000000f; valaddr_reg:x3; val_offset:144870*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144870*0 + 3*674*FLEN/8, x4, x1, x2)

inst_48291:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36000000000001f; valaddr_reg:x3; val_offset:144873*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144873*0 + 3*675*FLEN/8, x4, x1, x2)

inst_48292:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36000000000003f; valaddr_reg:x3; val_offset:144876*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144876*0 + 3*676*FLEN/8, x4, x1, x2)

inst_48293:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36000000000007f; valaddr_reg:x3; val_offset:144879*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144879*0 + 3*677*FLEN/8, x4, x1, x2)

inst_48294:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x3600000000000ff; valaddr_reg:x3; val_offset:144882*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144882*0 + 3*678*FLEN/8, x4, x1, x2)

inst_48295:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x3600000000001ff; valaddr_reg:x3; val_offset:144885*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144885*0 + 3*679*FLEN/8, x4, x1, x2)

inst_48296:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x3600000000003ff; valaddr_reg:x3; val_offset:144888*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144888*0 + 3*680*FLEN/8, x4, x1, x2)

inst_48297:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x3600000000007ff; valaddr_reg:x3; val_offset:144891*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144891*0 + 3*681*FLEN/8, x4, x1, x2)

inst_48298:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x360000000000fff; valaddr_reg:x3; val_offset:144894*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144894*0 + 3*682*FLEN/8, x4, x1, x2)

inst_48299:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x360000000001fff; valaddr_reg:x3; val_offset:144897*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144897*0 + 3*683*FLEN/8, x4, x1, x2)

inst_48300:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x360000000003fff; valaddr_reg:x3; val_offset:144900*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144900*0 + 3*684*FLEN/8, x4, x1, x2)

inst_48301:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x360000000007fff; valaddr_reg:x3; val_offset:144903*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144903*0 + 3*685*FLEN/8, x4, x1, x2)

inst_48302:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36000000000ffff; valaddr_reg:x3; val_offset:144906*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144906*0 + 3*686*FLEN/8, x4, x1, x2)

inst_48303:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36000000001ffff; valaddr_reg:x3; val_offset:144909*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144909*0 + 3*687*FLEN/8, x4, x1, x2)

inst_48304:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36000000003ffff; valaddr_reg:x3; val_offset:144912*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144912*0 + 3*688*FLEN/8, x4, x1, x2)

inst_48305:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36000000007ffff; valaddr_reg:x3; val_offset:144915*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144915*0 + 3*689*FLEN/8, x4, x1, x2)

inst_48306:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x3600000000fffff; valaddr_reg:x3; val_offset:144918*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144918*0 + 3*690*FLEN/8, x4, x1, x2)

inst_48307:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x3600000001fffff; valaddr_reg:x3; val_offset:144921*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144921*0 + 3*691*FLEN/8, x4, x1, x2)

inst_48308:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x3600000003fffff; valaddr_reg:x3; val_offset:144924*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144924*0 + 3*692*FLEN/8, x4, x1, x2)

inst_48309:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x3600000007fffff; valaddr_reg:x3; val_offset:144927*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144927*0 + 3*693*FLEN/8, x4, x1, x2)

inst_48310:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x360000000ffffff; valaddr_reg:x3; val_offset:144930*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144930*0 + 3*694*FLEN/8, x4, x1, x2)

inst_48311:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x360000001ffffff; valaddr_reg:x3; val_offset:144933*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144933*0 + 3*695*FLEN/8, x4, x1, x2)

inst_48312:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x360000003ffffff; valaddr_reg:x3; val_offset:144936*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144936*0 + 3*696*FLEN/8, x4, x1, x2)

inst_48313:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x360000007ffffff; valaddr_reg:x3; val_offset:144939*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144939*0 + 3*697*FLEN/8, x4, x1, x2)

inst_48314:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36000000fffffff; valaddr_reg:x3; val_offset:144942*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144942*0 + 3*698*FLEN/8, x4, x1, x2)

inst_48315:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36000001fffffff; valaddr_reg:x3; val_offset:144945*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144945*0 + 3*699*FLEN/8, x4, x1, x2)

inst_48316:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36000003fffffff; valaddr_reg:x3; val_offset:144948*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144948*0 + 3*700*FLEN/8, x4, x1, x2)

inst_48317:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36000007fffffff; valaddr_reg:x3; val_offset:144951*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144951*0 + 3*701*FLEN/8, x4, x1, x2)

inst_48318:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x3600000ffffffff; valaddr_reg:x3; val_offset:144954*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144954*0 + 3*702*FLEN/8, x4, x1, x2)

inst_48319:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x3600001ffffffff; valaddr_reg:x3; val_offset:144957*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144957*0 + 3*703*FLEN/8, x4, x1, x2)

inst_48320:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x3600003ffffffff; valaddr_reg:x3; val_offset:144960*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144960*0 + 3*704*FLEN/8, x4, x1, x2)

inst_48321:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x3600007ffffffff; valaddr_reg:x3; val_offset:144963*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144963*0 + 3*705*FLEN/8, x4, x1, x2)

inst_48322:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x360000fffffffff; valaddr_reg:x3; val_offset:144966*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144966*0 + 3*706*FLEN/8, x4, x1, x2)

inst_48323:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x360001fffffffff; valaddr_reg:x3; val_offset:144969*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144969*0 + 3*707*FLEN/8, x4, x1, x2)

inst_48324:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x360003fffffffff; valaddr_reg:x3; val_offset:144972*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144972*0 + 3*708*FLEN/8, x4, x1, x2)

inst_48325:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x360007fffffffff; valaddr_reg:x3; val_offset:144975*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144975*0 + 3*709*FLEN/8, x4, x1, x2)

inst_48326:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36000ffffffffff; valaddr_reg:x3; val_offset:144978*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144978*0 + 3*710*FLEN/8, x4, x1, x2)

inst_48327:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36001ffffffffff; valaddr_reg:x3; val_offset:144981*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144981*0 + 3*711*FLEN/8, x4, x1, x2)

inst_48328:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36003ffffffffff; valaddr_reg:x3; val_offset:144984*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144984*0 + 3*712*FLEN/8, x4, x1, x2)

inst_48329:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36007ffffffffff; valaddr_reg:x3; val_offset:144987*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144987*0 + 3*713*FLEN/8, x4, x1, x2)

inst_48330:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x3600fffffffffff; valaddr_reg:x3; val_offset:144990*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144990*0 + 3*714*FLEN/8, x4, x1, x2)

inst_48331:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x3601fffffffffff; valaddr_reg:x3; val_offset:144993*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144993*0 + 3*715*FLEN/8, x4, x1, x2)

inst_48332:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x3603fffffffffff; valaddr_reg:x3; val_offset:144996*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144996*0 + 3*716*FLEN/8, x4, x1, x2)

inst_48333:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x3607fffffffffff; valaddr_reg:x3; val_offset:144999*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144999*0 + 3*717*FLEN/8, x4, x1, x2)

inst_48334:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x360ffffffffffff; valaddr_reg:x3; val_offset:145002*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145002*0 + 3*718*FLEN/8, x4, x1, x2)

inst_48335:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x361ffffffffffff; valaddr_reg:x3; val_offset:145005*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145005*0 + 3*719*FLEN/8, x4, x1, x2)

inst_48336:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x363ffffffffffff; valaddr_reg:x3; val_offset:145008*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145008*0 + 3*720*FLEN/8, x4, x1, x2)

inst_48337:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x367ffffffffffff; valaddr_reg:x3; val_offset:145011*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145011*0 + 3*721*FLEN/8, x4, x1, x2)

inst_48338:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x368000000000000; valaddr_reg:x3; val_offset:145014*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145014*0 + 3*722*FLEN/8, x4, x1, x2)

inst_48339:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36c000000000000; valaddr_reg:x3; val_offset:145017*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145017*0 + 3*723*FLEN/8, x4, x1, x2)

inst_48340:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36e000000000000; valaddr_reg:x3; val_offset:145020*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145020*0 + 3*724*FLEN/8, x4, x1, x2)

inst_48341:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36f000000000000; valaddr_reg:x3; val_offset:145023*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145023*0 + 3*725*FLEN/8, x4, x1, x2)

inst_48342:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36f800000000000; valaddr_reg:x3; val_offset:145026*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145026*0 + 3*726*FLEN/8, x4, x1, x2)

inst_48343:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36fc00000000000; valaddr_reg:x3; val_offset:145029*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145029*0 + 3*727*FLEN/8, x4, x1, x2)

inst_48344:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36fe00000000000; valaddr_reg:x3; val_offset:145032*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145032*0 + 3*728*FLEN/8, x4, x1, x2)

inst_48345:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36ff00000000000; valaddr_reg:x3; val_offset:145035*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145035*0 + 3*729*FLEN/8, x4, x1, x2)

inst_48346:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36ff80000000000; valaddr_reg:x3; val_offset:145038*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145038*0 + 3*730*FLEN/8, x4, x1, x2)

inst_48347:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36ffc0000000000; valaddr_reg:x3; val_offset:145041*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145041*0 + 3*731*FLEN/8, x4, x1, x2)

inst_48348:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36ffe0000000000; valaddr_reg:x3; val_offset:145044*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145044*0 + 3*732*FLEN/8, x4, x1, x2)

inst_48349:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36fff0000000000; valaddr_reg:x3; val_offset:145047*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145047*0 + 3*733*FLEN/8, x4, x1, x2)

inst_48350:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36fff8000000000; valaddr_reg:x3; val_offset:145050*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145050*0 + 3*734*FLEN/8, x4, x1, x2)

inst_48351:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36fffc000000000; valaddr_reg:x3; val_offset:145053*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145053*0 + 3*735*FLEN/8, x4, x1, x2)

inst_48352:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36fffe000000000; valaddr_reg:x3; val_offset:145056*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145056*0 + 3*736*FLEN/8, x4, x1, x2)

inst_48353:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36ffff000000000; valaddr_reg:x3; val_offset:145059*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145059*0 + 3*737*FLEN/8, x4, x1, x2)

inst_48354:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36ffff800000000; valaddr_reg:x3; val_offset:145062*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145062*0 + 3*738*FLEN/8, x4, x1, x2)

inst_48355:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36ffffc00000000; valaddr_reg:x3; val_offset:145065*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145065*0 + 3*739*FLEN/8, x4, x1, x2)

inst_48356:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36ffffe00000000; valaddr_reg:x3; val_offset:145068*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145068*0 + 3*740*FLEN/8, x4, x1, x2)

inst_48357:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36fffff00000000; valaddr_reg:x3; val_offset:145071*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145071*0 + 3*741*FLEN/8, x4, x1, x2)

inst_48358:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36fffff80000000; valaddr_reg:x3; val_offset:145074*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145074*0 + 3*742*FLEN/8, x4, x1, x2)

inst_48359:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36fffffc0000000; valaddr_reg:x3; val_offset:145077*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145077*0 + 3*743*FLEN/8, x4, x1, x2)

inst_48360:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36fffffe0000000; valaddr_reg:x3; val_offset:145080*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145080*0 + 3*744*FLEN/8, x4, x1, x2)

inst_48361:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36ffffff0000000; valaddr_reg:x3; val_offset:145083*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145083*0 + 3*745*FLEN/8, x4, x1, x2)

inst_48362:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36ffffff8000000; valaddr_reg:x3; val_offset:145086*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145086*0 + 3*746*FLEN/8, x4, x1, x2)

inst_48363:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36ffffffc000000; valaddr_reg:x3; val_offset:145089*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145089*0 + 3*747*FLEN/8, x4, x1, x2)

inst_48364:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36ffffffe000000; valaddr_reg:x3; val_offset:145092*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145092*0 + 3*748*FLEN/8, x4, x1, x2)

inst_48365:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36fffffff000000; valaddr_reg:x3; val_offset:145095*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145095*0 + 3*749*FLEN/8, x4, x1, x2)

inst_48366:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36fffffff800000; valaddr_reg:x3; val_offset:145098*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145098*0 + 3*750*FLEN/8, x4, x1, x2)

inst_48367:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36fffffffc00000; valaddr_reg:x3; val_offset:145101*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145101*0 + 3*751*FLEN/8, x4, x1, x2)

inst_48368:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36fffffffe00000; valaddr_reg:x3; val_offset:145104*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145104*0 + 3*752*FLEN/8, x4, x1, x2)

inst_48369:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36ffffffff00000; valaddr_reg:x3; val_offset:145107*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145107*0 + 3*753*FLEN/8, x4, x1, x2)

inst_48370:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36ffffffff80000; valaddr_reg:x3; val_offset:145110*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145110*0 + 3*754*FLEN/8, x4, x1, x2)

inst_48371:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36ffffffffc0000; valaddr_reg:x3; val_offset:145113*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145113*0 + 3*755*FLEN/8, x4, x1, x2)

inst_48372:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36ffffffffe0000; valaddr_reg:x3; val_offset:145116*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145116*0 + 3*756*FLEN/8, x4, x1, x2)

inst_48373:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36fffffffff0000; valaddr_reg:x3; val_offset:145119*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145119*0 + 3*757*FLEN/8, x4, x1, x2)

inst_48374:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36fffffffff8000; valaddr_reg:x3; val_offset:145122*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145122*0 + 3*758*FLEN/8, x4, x1, x2)

inst_48375:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36fffffffffc000; valaddr_reg:x3; val_offset:145125*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145125*0 + 3*759*FLEN/8, x4, x1, x2)

inst_48376:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36fffffffffe000; valaddr_reg:x3; val_offset:145128*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145128*0 + 3*760*FLEN/8, x4, x1, x2)

inst_48377:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36ffffffffff000; valaddr_reg:x3; val_offset:145131*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145131*0 + 3*761*FLEN/8, x4, x1, x2)

inst_48378:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36ffffffffff800; valaddr_reg:x3; val_offset:145134*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145134*0 + 3*762*FLEN/8, x4, x1, x2)

inst_48379:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36ffffffffffc00; valaddr_reg:x3; val_offset:145137*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145137*0 + 3*763*FLEN/8, x4, x1, x2)

inst_48380:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36ffffffffffe00; valaddr_reg:x3; val_offset:145140*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145140*0 + 3*764*FLEN/8, x4, x1, x2)

inst_48381:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36fffffffffff00; valaddr_reg:x3; val_offset:145143*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145143*0 + 3*765*FLEN/8, x4, x1, x2)

inst_48382:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36fffffffffff80; valaddr_reg:x3; val_offset:145146*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145146*0 + 3*766*FLEN/8, x4, x1, x2)

inst_48383:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xebc09e9f121a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ebc09e9f121a5; op2val:0x0;
op3val:0x36fffffffffffc0; valaddr_reg:x3; val_offset:145149*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145149*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6889872933230064129,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273573888,64,FLEN)
NAN_BOXED(6889872933230064129,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273639424,64,FLEN)
NAN_BOXED(6889872933230064129,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273672192,64,FLEN)
NAN_BOXED(6889872933230064129,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273688576,64,FLEN)
NAN_BOXED(6889872933230064129,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273696768,64,FLEN)
NAN_BOXED(6889872933230064129,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273700864,64,FLEN)
NAN_BOXED(6889872933230064129,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273702912,64,FLEN)
NAN_BOXED(6889872933230064129,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273703936,64,FLEN)
NAN_BOXED(6889872933230064129,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704448,64,FLEN)
NAN_BOXED(6889872933230064129,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704704,64,FLEN)
NAN_BOXED(6889872933230064129,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704832,64,FLEN)
NAN_BOXED(6889872933230064129,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704896,64,FLEN)
NAN_BOXED(6889872933230064129,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704928,64,FLEN)
NAN_BOXED(6889872933230064129,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704944,64,FLEN)
NAN_BOXED(6889872933230064129,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704952,64,FLEN)
NAN_BOXED(6889872933230064129,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704956,64,FLEN)
NAN_BOXED(6889872933230064129,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704958,64,FLEN)
NAN_BOXED(6889872933230064129,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704959,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190336,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190337,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190339,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190343,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190351,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190367,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190399,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190463,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190591,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190847,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722191359,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722192383,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722194431,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722198527,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722206719,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722223103,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722255871,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722321407,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722452479,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722714623,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584723238911,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584724287487,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584726384639,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584730578943,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584738967551,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584755744767,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584789299199,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584856408063,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584990625791,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647585259061247,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647585795932159,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647586869673983,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647589017157631,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647593312124927,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647601902059519,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647619081928703,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647653441667071,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647722161143807,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647859600097279,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184648134478004223,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184648684233818111,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184649783745445887,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184651982768701439,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184656380815212543,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184665176908234751,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184682769094279167,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184717953466367999,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184788322210545663,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184929059698900991,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(185210534675611647,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(185773484629032959,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(186899384535875583,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(186899384535875584,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(188025284442718208,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(188588234396139520,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(188869709372850176,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189010446861205504,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189080815605383168,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189115999977472000,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189133592163516416,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189142388256538624,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189146786303049728,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189148985326305280,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189150084837933056,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189150634593746944,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189150909471653888,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151046910607360,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151115630084096,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151149989822464,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151167169691648,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151175759626240,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151180054593536,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151182202077184,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151183275819008,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151183812689920,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184081125376,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184215343104,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184282451968,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184316006400,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184332783616,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184341172224,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184345366528,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184347463680,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184348512256,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349036544,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349298688,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349429760,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349495296,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349528064,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349544448,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349552640,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349556736,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349558784,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349559808,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560320,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560576,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560704,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560768,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560800,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560816,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560824,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560828,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560830,64,FLEN)
NAN_BOXED(6889929827576944441,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560831,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111488,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111489,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111491,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111495,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111503,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111519,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111551,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111615,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111743,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111999,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882112511,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882113535,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882115583,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882119679,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882127871,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882144255,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882177023,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882242559,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882373631,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882635775,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798883160063,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798884208639,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798886305791,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798890500095,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798898888703,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798915665919,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798949220351,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510799016329215,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510799150546943,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510799418982399,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510799955853311,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510801029595135,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510803177078783,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510807472046079,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510816061980671,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510833241849855,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510867601588223,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510936321064959,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13511073760018431,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13511348637925375,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13511898393739263,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13512997905367039,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13515196928622591,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13519594975133695,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13528391068155903,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13545983254200319,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13581167626289151,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13651536370466815,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13792273858822143,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14073748835532799,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14636698788954111,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15762598695796735,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15762598695796736,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(16888498602639360,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(17451448556060672,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(17732923532771328,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(17873661021126656,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(17944029765304320,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(17979214137393152,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(17996806323437568,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18005602416459776,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18010000462970880,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18012199486226432,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18013298997854208,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18013848753668096,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014123631575040,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014261070528512,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014329790005248,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014364149743616,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014381329612800,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014389919547392,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014394214514688,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014396361998336,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014397435740160,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014397972611072,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398241046528,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398375264256,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398442373120,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398475927552,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398492704768,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398501093376,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398505287680,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398507384832,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398508433408,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398508957696,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509219840,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509350912,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509416448,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509449216,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509465600,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509473792,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509477888,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509479936,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509480960,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481472,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481728,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481856,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481920,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481952,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481968,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481976,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481980,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481982,64,FLEN)
NAN_BOXED(6890007444634105439,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481983,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13254093703351369728,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13254093703351369729,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13254093703351369731,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13254093703351369735,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13254093703351369743,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13254093703351369759,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13254093703351369791,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13254093703351369855,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13254093703351369983,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13254093703351370239,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13254093703351370751,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13254093703351371775,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13254093703351373823,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13254093703351377919,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13254093703351386111,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13254093703351402495,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13254093703351435263,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13254093703351500799,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13254093703351631871,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13254093703351894015,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13254093703352418303,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13254093703353466879,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13254093703355564031,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13254093703359758335,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13254093703368146943,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13254093703384924159,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13254093703418478591,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13254093703485587455,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13254093703619805183,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13254093703888240639,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13254093704425111551,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13254093705498853375,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13254093707646337023,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13254093711941304319,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13254093720531238911,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13254093737711108095,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13254093772070846463,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13254093840790323199,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13254093978229276671,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13254094253107183615,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13254094802862997503,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13254095902374625279,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13254098101397880831,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13254102499444391935,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13254111295537414143,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13254128887723458559,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13254164072095547391,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13254234440839725055,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13254375178328080383,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13254656653304791039,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13255219603258212351,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13256345503165054975,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13256345503165054976,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13257471403071897600,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13258034353025318912,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13258315828002029568,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13258456565490384896,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13258526934234562560,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13258562118606651392,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13258579710792695808,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13258588506885718016,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13258592904932229120,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13258595103955484672,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13258596203467112448,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13258596753222926336,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13258597028100833280,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13258597165539786752,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13258597234259263488,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13258597268619001856,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13258597285798871040,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13258597294388805632,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13258597298683772928,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13258597300831256576,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13258597301904998400,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13258597302441869312,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13258597302710304768,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13258597302844522496,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13258597302911631360,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13258597302945185792,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13258597302961963008,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13258597302970351616,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13258597302974545920,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13258597302976643072,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13258597302977691648,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13258597302978215936,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13258597302978478080,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13258597302978609152,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13258597302978674688,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13258597302978707456,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13258597302978723840,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13258597302978732032,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13258597302978736128,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13258597302978738176,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13258597302978739200,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13258597302978739712,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13258597302978739968,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13258597302978740096,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13258597302978740160,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13258597302978740192,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13258597302978740208,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13258597302978740216,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13258597302978740220,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13258597302978740222,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13258597302978740223,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6890093280584008567,64,FLEN)
NAN_BOXED(11515921301970076304,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13790022059008458752,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13790022059008458753,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13790022059008458755,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13790022059008458759,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13790022059008458767,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13790022059008458783,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13790022059008458815,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13790022059008458879,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13790022059008459007,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13790022059008459263,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13790022059008459775,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13790022059008460799,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13790022059008462847,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13790022059008466943,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13790022059008475135,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13790022059008491519,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13790022059008524287,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13790022059008589823,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13790022059008720895,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13790022059008983039,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13790022059009507327,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13790022059010555903,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13790022059012653055,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13790022059016847359,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13790022059025235967,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13790022059042013183,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13790022059075567615,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13790022059142676479,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13790022059276894207,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13790022059545329663,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13790022060082200575,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13790022061155942399,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13790022063303426047,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13790022067598393343,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13790022076188327935,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13790022093368197119,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13790022127727935487,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13790022196447412223,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13790022333886365695,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13790022608764272639,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13790023158520086527,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13790024258031714303,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13790026457054969855,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13790030855101480959,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13790039651194503167,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13790057243380547583,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13790092427752636415,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13790162796496814079,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13790303533985169407,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13790585008961880063,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13791147958915301375,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13792273858822143999,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13792273858822144000,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13793399758728986624,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13793962708682407936,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13794244183659118592,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13794384921147473920,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13794455289891651584,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13794490474263740416,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13794508066449784832,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13794516862542807040,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13794521260589318144,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13794523459612573696,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13794524559124201472,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13794525108880015360,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13794525383757922304,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13794525521196875776,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13794525589916352512,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13794525624276090880,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13794525641455960064,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13794525650045894656,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13794525654340861952,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13794525656488345600,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13794525657562087424,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13794525658098958336,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13794525658367393792,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13794525658501611520,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13794525658568720384,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13794525658602274816,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13794525658619052032,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13794525658627440640,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13794525658631634944,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13794525658633732096,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13794525658634780672,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13794525658635304960,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13794525658635567104,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13794525658635698176,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13794525658635763712,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13794525658635796480,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13794525658635812864,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13794525658635821056,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13794525658635825152,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13794525658635827200,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13794525658635828224,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13794525658635828736,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13794525658635828992,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13794525658635829120,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13794525658635829184,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13794525658635829216,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13794525658635829232,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13794525658635829240,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13794525658635829244,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13794525658635829246,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13794525658635829247,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6890126008992071243,64,FLEN)
NAN_BOXED(11515903390600543885,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713818624,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713818625,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713818627,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713818631,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713818639,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713818655,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713818687,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713818751,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713818879,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713819135,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713819647,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713820671,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713822719,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713826815,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713835007,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713851391,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713884159,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713949695,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619714080767,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619714342911,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619714867199,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619715915775,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619718012927,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619722207231,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619730595839,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619747373055,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619780927487,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619848036351,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619982254079,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537620250689535,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537620787560447,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537621861302271,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537624008785919,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537628303753215,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537636893687807,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537654073556991,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537688433295359,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537757152772095,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537894591725567,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430538169469632511,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430538719225446399,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430539818737074175,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430542017760329727,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430546415806840831,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430555211899863039,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430572804085907455,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430607988457996287,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430678357202173951,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430819094690529279,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9431100569667239935,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9431663519620661247,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9432789419527503871,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9432789419527503872,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9433915319434346496,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9434478269387767808,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9434759744364478464,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9434900481852833792,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9434970850597011456,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435006034969100288,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435023627155144704,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435032423248166912,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435036821294678016,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435039020317933568,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435040119829561344,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435040669585375232,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435040944463282176,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041081902235648,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041150621712384,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041184981450752,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041202161319936,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041210751254528,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041215046221824,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041217193705472,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041218267447296,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041218804318208,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219072753664,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219206971392,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219274080256,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219307634688,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219324411904,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219332800512,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219336994816,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219339091968,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219340140544,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219340664832,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219340926976,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341058048,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341123584,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341156352,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341172736,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341180928,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341185024,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341187072,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341188096,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341188608,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341188864,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341188992,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341189056,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341189088,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341189104,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341189112,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341189116,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341189118,64,FLEN)
NAN_BOXED(6890141698708608325,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341189119,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006784,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006785,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006787,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006791,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006799,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006815,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006847,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006911,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878007039,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878007295,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878007807,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878008831,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878010879,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878014975,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878023167,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878039551,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878072319,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878137855,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878268927,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878531071,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379879055359,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379880103935,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379882201087,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379886395391,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379894783999,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379911561215,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379945115647,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194380012224511,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194380146442239,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194380414877695,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194380951748607,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194382025490431,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194384172974079,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194388467941375,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194397057875967,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194414237745151,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194448597483519,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194517316960255,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194654755913727,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194929633820671,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243195479389634559,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243196578901262335,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243198777924517887,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243203175971028991,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243211972064051199,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243229564250095615,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243264748622184447,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243335117366362111,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243475854854717439,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243757329831428095,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(244320279784849407,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(245446179691692031,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(245446179691692032,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(246572079598534656,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247135029551955968,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247416504528666624,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247557242017021952,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247627610761199616,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247662795133288448,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247680387319332864,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247689183412355072,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247693581458866176,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247695780482121728,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247696879993749504,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697429749563392,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697704627470336,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697842066423808,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697910785900544,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697945145638912,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697962325508096,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697970915442688,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697975210409984,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697977357893632,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697978431635456,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697978968506368,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979236941824,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979371159552,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979438268416,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979471822848,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979488600064,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979496988672,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979501182976,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979503280128,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979504328704,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979504852992,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505115136,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505246208,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505311744,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505344512,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505360896,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505369088,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505373184,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505375232,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505376256,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505376768,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377024,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377152,64,FLEN)
NAN_BOXED(6890151230689059237,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377216,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
