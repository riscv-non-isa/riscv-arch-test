
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:39 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_6912:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:20736*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20736*0 + 3*0*FLEN/8, x4, x1, x2)

inst_6913:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:20739*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20739*0 + 3*1*FLEN/8, x4, x1, x2)

inst_6914:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:20742*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20742*0 + 3*2*FLEN/8, x4, x1, x2)

inst_6915:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:20745*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20745*0 + 3*3*FLEN/8, x4, x1, x2)

inst_6916:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:20748*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20748*0 + 3*4*FLEN/8, x4, x1, x2)

inst_6917:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:20751*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20751*0 + 3*5*FLEN/8, x4, x1, x2)

inst_6918:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:20754*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20754*0 + 3*6*FLEN/8, x4, x1, x2)

inst_6919:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:20757*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20757*0 + 3*7*FLEN/8, x4, x1, x2)

inst_6920:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:20760*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20760*0 + 3*8*FLEN/8, x4, x1, x2)

inst_6921:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:20763*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20763*0 + 3*9*FLEN/8, x4, x1, x2)

inst_6922:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:20766*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20766*0 + 3*10*FLEN/8, x4, x1, x2)

inst_6923:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:20769*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20769*0 + 3*11*FLEN/8, x4, x1, x2)

inst_6924:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:20772*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20772*0 + 3*12*FLEN/8, x4, x1, x2)

inst_6925:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:20775*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20775*0 + 3*13*FLEN/8, x4, x1, x2)

inst_6926:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:20778*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20778*0 + 3*14*FLEN/8, x4, x1, x2)

inst_6927:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:20781*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20781*0 + 3*15*FLEN/8, x4, x1, x2)

inst_6928:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x280000000000000; valaddr_reg:x3; val_offset:20784*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20784*0 + 3*16*FLEN/8, x4, x1, x2)

inst_6929:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x280000000000001; valaddr_reg:x3; val_offset:20787*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20787*0 + 3*17*FLEN/8, x4, x1, x2)

inst_6930:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x280000000000003; valaddr_reg:x3; val_offset:20790*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20790*0 + 3*18*FLEN/8, x4, x1, x2)

inst_6931:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x280000000000007; valaddr_reg:x3; val_offset:20793*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20793*0 + 3*19*FLEN/8, x4, x1, x2)

inst_6932:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28000000000000f; valaddr_reg:x3; val_offset:20796*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20796*0 + 3*20*FLEN/8, x4, x1, x2)

inst_6933:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28000000000001f; valaddr_reg:x3; val_offset:20799*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20799*0 + 3*21*FLEN/8, x4, x1, x2)

inst_6934:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28000000000003f; valaddr_reg:x3; val_offset:20802*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20802*0 + 3*22*FLEN/8, x4, x1, x2)

inst_6935:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28000000000007f; valaddr_reg:x3; val_offset:20805*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20805*0 + 3*23*FLEN/8, x4, x1, x2)

inst_6936:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x2800000000000ff; valaddr_reg:x3; val_offset:20808*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20808*0 + 3*24*FLEN/8, x4, x1, x2)

inst_6937:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x2800000000001ff; valaddr_reg:x3; val_offset:20811*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20811*0 + 3*25*FLEN/8, x4, x1, x2)

inst_6938:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x2800000000003ff; valaddr_reg:x3; val_offset:20814*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20814*0 + 3*26*FLEN/8, x4, x1, x2)

inst_6939:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x2800000000007ff; valaddr_reg:x3; val_offset:20817*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20817*0 + 3*27*FLEN/8, x4, x1, x2)

inst_6940:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x280000000000fff; valaddr_reg:x3; val_offset:20820*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20820*0 + 3*28*FLEN/8, x4, x1, x2)

inst_6941:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x280000000001fff; valaddr_reg:x3; val_offset:20823*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20823*0 + 3*29*FLEN/8, x4, x1, x2)

inst_6942:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x280000000003fff; valaddr_reg:x3; val_offset:20826*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20826*0 + 3*30*FLEN/8, x4, x1, x2)

inst_6943:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x280000000007fff; valaddr_reg:x3; val_offset:20829*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20829*0 + 3*31*FLEN/8, x4, x1, x2)

inst_6944:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28000000000ffff; valaddr_reg:x3; val_offset:20832*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20832*0 + 3*32*FLEN/8, x4, x1, x2)

inst_6945:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28000000001ffff; valaddr_reg:x3; val_offset:20835*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20835*0 + 3*33*FLEN/8, x4, x1, x2)

inst_6946:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28000000003ffff; valaddr_reg:x3; val_offset:20838*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20838*0 + 3*34*FLEN/8, x4, x1, x2)

inst_6947:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28000000007ffff; valaddr_reg:x3; val_offset:20841*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20841*0 + 3*35*FLEN/8, x4, x1, x2)

inst_6948:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x2800000000fffff; valaddr_reg:x3; val_offset:20844*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20844*0 + 3*36*FLEN/8, x4, x1, x2)

inst_6949:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x2800000001fffff; valaddr_reg:x3; val_offset:20847*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20847*0 + 3*37*FLEN/8, x4, x1, x2)

inst_6950:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x2800000003fffff; valaddr_reg:x3; val_offset:20850*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20850*0 + 3*38*FLEN/8, x4, x1, x2)

inst_6951:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x2800000007fffff; valaddr_reg:x3; val_offset:20853*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20853*0 + 3*39*FLEN/8, x4, x1, x2)

inst_6952:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x280000000ffffff; valaddr_reg:x3; val_offset:20856*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20856*0 + 3*40*FLEN/8, x4, x1, x2)

inst_6953:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x280000001ffffff; valaddr_reg:x3; val_offset:20859*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20859*0 + 3*41*FLEN/8, x4, x1, x2)

inst_6954:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x280000003ffffff; valaddr_reg:x3; val_offset:20862*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20862*0 + 3*42*FLEN/8, x4, x1, x2)

inst_6955:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x280000007ffffff; valaddr_reg:x3; val_offset:20865*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20865*0 + 3*43*FLEN/8, x4, x1, x2)

inst_6956:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28000000fffffff; valaddr_reg:x3; val_offset:20868*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20868*0 + 3*44*FLEN/8, x4, x1, x2)

inst_6957:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28000001fffffff; valaddr_reg:x3; val_offset:20871*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20871*0 + 3*45*FLEN/8, x4, x1, x2)

inst_6958:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28000003fffffff; valaddr_reg:x3; val_offset:20874*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20874*0 + 3*46*FLEN/8, x4, x1, x2)

inst_6959:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28000007fffffff; valaddr_reg:x3; val_offset:20877*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20877*0 + 3*47*FLEN/8, x4, x1, x2)

inst_6960:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x2800000ffffffff; valaddr_reg:x3; val_offset:20880*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20880*0 + 3*48*FLEN/8, x4, x1, x2)

inst_6961:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x2800001ffffffff; valaddr_reg:x3; val_offset:20883*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20883*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6962:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x2800003ffffffff; valaddr_reg:x3; val_offset:20886*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20886*0 + 3*50*FLEN/8, x4, x1, x2)

inst_6963:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x2800007ffffffff; valaddr_reg:x3; val_offset:20889*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20889*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6964:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x280000fffffffff; valaddr_reg:x3; val_offset:20892*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20892*0 + 3*52*FLEN/8, x4, x1, x2)

inst_6965:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x280001fffffffff; valaddr_reg:x3; val_offset:20895*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20895*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6966:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x280003fffffffff; valaddr_reg:x3; val_offset:20898*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20898*0 + 3*54*FLEN/8, x4, x1, x2)

inst_6967:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x280007fffffffff; valaddr_reg:x3; val_offset:20901*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20901*0 + 3*55*FLEN/8, x4, x1, x2)

inst_6968:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28000ffffffffff; valaddr_reg:x3; val_offset:20904*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20904*0 + 3*56*FLEN/8, x4, x1, x2)

inst_6969:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28001ffffffffff; valaddr_reg:x3; val_offset:20907*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20907*0 + 3*57*FLEN/8, x4, x1, x2)

inst_6970:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28003ffffffffff; valaddr_reg:x3; val_offset:20910*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20910*0 + 3*58*FLEN/8, x4, x1, x2)

inst_6971:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28007ffffffffff; valaddr_reg:x3; val_offset:20913*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20913*0 + 3*59*FLEN/8, x4, x1, x2)

inst_6972:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x2800fffffffffff; valaddr_reg:x3; val_offset:20916*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20916*0 + 3*60*FLEN/8, x4, x1, x2)

inst_6973:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x2801fffffffffff; valaddr_reg:x3; val_offset:20919*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20919*0 + 3*61*FLEN/8, x4, x1, x2)

inst_6974:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x2803fffffffffff; valaddr_reg:x3; val_offset:20922*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20922*0 + 3*62*FLEN/8, x4, x1, x2)

inst_6975:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x2807fffffffffff; valaddr_reg:x3; val_offset:20925*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20925*0 + 3*63*FLEN/8, x4, x1, x2)

inst_6976:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x280ffffffffffff; valaddr_reg:x3; val_offset:20928*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20928*0 + 3*64*FLEN/8, x4, x1, x2)

inst_6977:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x281ffffffffffff; valaddr_reg:x3; val_offset:20931*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20931*0 + 3*65*FLEN/8, x4, x1, x2)

inst_6978:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x283ffffffffffff; valaddr_reg:x3; val_offset:20934*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20934*0 + 3*66*FLEN/8, x4, x1, x2)

inst_6979:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x287ffffffffffff; valaddr_reg:x3; val_offset:20937*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20937*0 + 3*67*FLEN/8, x4, x1, x2)

inst_6980:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x288000000000000; valaddr_reg:x3; val_offset:20940*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20940*0 + 3*68*FLEN/8, x4, x1, x2)

inst_6981:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28c000000000000; valaddr_reg:x3; val_offset:20943*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20943*0 + 3*69*FLEN/8, x4, x1, x2)

inst_6982:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28e000000000000; valaddr_reg:x3; val_offset:20946*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20946*0 + 3*70*FLEN/8, x4, x1, x2)

inst_6983:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28f000000000000; valaddr_reg:x3; val_offset:20949*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20949*0 + 3*71*FLEN/8, x4, x1, x2)

inst_6984:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28f800000000000; valaddr_reg:x3; val_offset:20952*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20952*0 + 3*72*FLEN/8, x4, x1, x2)

inst_6985:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28fc00000000000; valaddr_reg:x3; val_offset:20955*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20955*0 + 3*73*FLEN/8, x4, x1, x2)

inst_6986:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28fe00000000000; valaddr_reg:x3; val_offset:20958*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20958*0 + 3*74*FLEN/8, x4, x1, x2)

inst_6987:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28ff00000000000; valaddr_reg:x3; val_offset:20961*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20961*0 + 3*75*FLEN/8, x4, x1, x2)

inst_6988:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28ff80000000000; valaddr_reg:x3; val_offset:20964*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20964*0 + 3*76*FLEN/8, x4, x1, x2)

inst_6989:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28ffc0000000000; valaddr_reg:x3; val_offset:20967*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20967*0 + 3*77*FLEN/8, x4, x1, x2)

inst_6990:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28ffe0000000000; valaddr_reg:x3; val_offset:20970*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20970*0 + 3*78*FLEN/8, x4, x1, x2)

inst_6991:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28fff0000000000; valaddr_reg:x3; val_offset:20973*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20973*0 + 3*79*FLEN/8, x4, x1, x2)

inst_6992:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28fff8000000000; valaddr_reg:x3; val_offset:20976*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20976*0 + 3*80*FLEN/8, x4, x1, x2)

inst_6993:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28fffc000000000; valaddr_reg:x3; val_offset:20979*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20979*0 + 3*81*FLEN/8, x4, x1, x2)

inst_6994:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28fffe000000000; valaddr_reg:x3; val_offset:20982*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20982*0 + 3*82*FLEN/8, x4, x1, x2)

inst_6995:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28ffff000000000; valaddr_reg:x3; val_offset:20985*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20985*0 + 3*83*FLEN/8, x4, x1, x2)

inst_6996:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28ffff800000000; valaddr_reg:x3; val_offset:20988*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20988*0 + 3*84*FLEN/8, x4, x1, x2)

inst_6997:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28ffffc00000000; valaddr_reg:x3; val_offset:20991*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20991*0 + 3*85*FLEN/8, x4, x1, x2)

inst_6998:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28ffffe00000000; valaddr_reg:x3; val_offset:20994*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20994*0 + 3*86*FLEN/8, x4, x1, x2)

inst_6999:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28fffff00000000; valaddr_reg:x3; val_offset:20997*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20997*0 + 3*87*FLEN/8, x4, x1, x2)

inst_7000:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28fffff80000000; valaddr_reg:x3; val_offset:21000*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21000*0 + 3*88*FLEN/8, x4, x1, x2)

inst_7001:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28fffffc0000000; valaddr_reg:x3; val_offset:21003*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21003*0 + 3*89*FLEN/8, x4, x1, x2)

inst_7002:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28fffffe0000000; valaddr_reg:x3; val_offset:21006*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21006*0 + 3*90*FLEN/8, x4, x1, x2)

inst_7003:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28ffffff0000000; valaddr_reg:x3; val_offset:21009*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21009*0 + 3*91*FLEN/8, x4, x1, x2)

inst_7004:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28ffffff8000000; valaddr_reg:x3; val_offset:21012*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21012*0 + 3*92*FLEN/8, x4, x1, x2)

inst_7005:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28ffffffc000000; valaddr_reg:x3; val_offset:21015*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21015*0 + 3*93*FLEN/8, x4, x1, x2)

inst_7006:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28ffffffe000000; valaddr_reg:x3; val_offset:21018*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21018*0 + 3*94*FLEN/8, x4, x1, x2)

inst_7007:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28fffffff000000; valaddr_reg:x3; val_offset:21021*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21021*0 + 3*95*FLEN/8, x4, x1, x2)

inst_7008:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28fffffff800000; valaddr_reg:x3; val_offset:21024*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21024*0 + 3*96*FLEN/8, x4, x1, x2)

inst_7009:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28fffffffc00000; valaddr_reg:x3; val_offset:21027*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21027*0 + 3*97*FLEN/8, x4, x1, x2)

inst_7010:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28fffffffe00000; valaddr_reg:x3; val_offset:21030*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21030*0 + 3*98*FLEN/8, x4, x1, x2)

inst_7011:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28ffffffff00000; valaddr_reg:x3; val_offset:21033*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21033*0 + 3*99*FLEN/8, x4, x1, x2)

inst_7012:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28ffffffff80000; valaddr_reg:x3; val_offset:21036*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21036*0 + 3*100*FLEN/8, x4, x1, x2)

inst_7013:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28ffffffffc0000; valaddr_reg:x3; val_offset:21039*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21039*0 + 3*101*FLEN/8, x4, x1, x2)

inst_7014:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28ffffffffe0000; valaddr_reg:x3; val_offset:21042*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21042*0 + 3*102*FLEN/8, x4, x1, x2)

inst_7015:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28fffffffff0000; valaddr_reg:x3; val_offset:21045*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21045*0 + 3*103*FLEN/8, x4, x1, x2)

inst_7016:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28fffffffff8000; valaddr_reg:x3; val_offset:21048*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21048*0 + 3*104*FLEN/8, x4, x1, x2)

inst_7017:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28fffffffffc000; valaddr_reg:x3; val_offset:21051*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21051*0 + 3*105*FLEN/8, x4, x1, x2)

inst_7018:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28fffffffffe000; valaddr_reg:x3; val_offset:21054*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21054*0 + 3*106*FLEN/8, x4, x1, x2)

inst_7019:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28ffffffffff000; valaddr_reg:x3; val_offset:21057*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21057*0 + 3*107*FLEN/8, x4, x1, x2)

inst_7020:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28ffffffffff800; valaddr_reg:x3; val_offset:21060*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21060*0 + 3*108*FLEN/8, x4, x1, x2)

inst_7021:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28ffffffffffc00; valaddr_reg:x3; val_offset:21063*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21063*0 + 3*109*FLEN/8, x4, x1, x2)

inst_7022:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28ffffffffffe00; valaddr_reg:x3; val_offset:21066*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21066*0 + 3*110*FLEN/8, x4, x1, x2)

inst_7023:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28fffffffffff00; valaddr_reg:x3; val_offset:21069*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21069*0 + 3*111*FLEN/8, x4, x1, x2)

inst_7024:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28fffffffffff80; valaddr_reg:x3; val_offset:21072*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21072*0 + 3*112*FLEN/8, x4, x1, x2)

inst_7025:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28fffffffffffc0; valaddr_reg:x3; val_offset:21075*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21075*0 + 3*113*FLEN/8, x4, x1, x2)

inst_7026:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28fffffffffffe0; valaddr_reg:x3; val_offset:21078*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21078*0 + 3*114*FLEN/8, x4, x1, x2)

inst_7027:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28ffffffffffff0; valaddr_reg:x3; val_offset:21081*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21081*0 + 3*115*FLEN/8, x4, x1, x2)

inst_7028:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28ffffffffffff8; valaddr_reg:x3; val_offset:21084*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21084*0 + 3*116*FLEN/8, x4, x1, x2)

inst_7029:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28ffffffffffffc; valaddr_reg:x3; val_offset:21087*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21087*0 + 3*117*FLEN/8, x4, x1, x2)

inst_7030:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28ffffffffffffe; valaddr_reg:x3; val_offset:21090*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21090*0 + 3*118*FLEN/8, x4, x1, x2)

inst_7031:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x28137e80cf2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f728137e80cf2ef; op2val:0x0;
op3val:0x28fffffffffffff; valaddr_reg:x3; val_offset:21093*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21093*0 + 3*119*FLEN/8, x4, x1, x2)

inst_7032:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbad0000000000000; valaddr_reg:x3; val_offset:21096*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21096*0 + 3*120*FLEN/8, x4, x1, x2)

inst_7033:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbad0000000000001; valaddr_reg:x3; val_offset:21099*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21099*0 + 3*121*FLEN/8, x4, x1, x2)

inst_7034:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbad0000000000003; valaddr_reg:x3; val_offset:21102*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21102*0 + 3*122*FLEN/8, x4, x1, x2)

inst_7035:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbad0000000000007; valaddr_reg:x3; val_offset:21105*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21105*0 + 3*123*FLEN/8, x4, x1, x2)

inst_7036:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbad000000000000f; valaddr_reg:x3; val_offset:21108*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21108*0 + 3*124*FLEN/8, x4, x1, x2)

inst_7037:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbad000000000001f; valaddr_reg:x3; val_offset:21111*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21111*0 + 3*125*FLEN/8, x4, x1, x2)

inst_7038:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbad000000000003f; valaddr_reg:x3; val_offset:21114*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21114*0 + 3*126*FLEN/8, x4, x1, x2)

inst_7039:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbad000000000007f; valaddr_reg:x3; val_offset:21117*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21117*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_7040:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbad00000000000ff; valaddr_reg:x3; val_offset:21120*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21120*0 + 3*128*FLEN/8, x4, x1, x2)

inst_7041:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbad00000000001ff; valaddr_reg:x3; val_offset:21123*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21123*0 + 3*129*FLEN/8, x4, x1, x2)

inst_7042:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbad00000000003ff; valaddr_reg:x3; val_offset:21126*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21126*0 + 3*130*FLEN/8, x4, x1, x2)

inst_7043:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbad00000000007ff; valaddr_reg:x3; val_offset:21129*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21129*0 + 3*131*FLEN/8, x4, x1, x2)

inst_7044:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbad0000000000fff; valaddr_reg:x3; val_offset:21132*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21132*0 + 3*132*FLEN/8, x4, x1, x2)

inst_7045:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbad0000000001fff; valaddr_reg:x3; val_offset:21135*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21135*0 + 3*133*FLEN/8, x4, x1, x2)

inst_7046:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbad0000000003fff; valaddr_reg:x3; val_offset:21138*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21138*0 + 3*134*FLEN/8, x4, x1, x2)

inst_7047:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbad0000000007fff; valaddr_reg:x3; val_offset:21141*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21141*0 + 3*135*FLEN/8, x4, x1, x2)

inst_7048:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbad000000000ffff; valaddr_reg:x3; val_offset:21144*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21144*0 + 3*136*FLEN/8, x4, x1, x2)

inst_7049:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbad000000001ffff; valaddr_reg:x3; val_offset:21147*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21147*0 + 3*137*FLEN/8, x4, x1, x2)

inst_7050:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbad000000003ffff; valaddr_reg:x3; val_offset:21150*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21150*0 + 3*138*FLEN/8, x4, x1, x2)

inst_7051:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbad000000007ffff; valaddr_reg:x3; val_offset:21153*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21153*0 + 3*139*FLEN/8, x4, x1, x2)

inst_7052:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbad00000000fffff; valaddr_reg:x3; val_offset:21156*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21156*0 + 3*140*FLEN/8, x4, x1, x2)

inst_7053:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbad00000001fffff; valaddr_reg:x3; val_offset:21159*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21159*0 + 3*141*FLEN/8, x4, x1, x2)

inst_7054:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbad00000003fffff; valaddr_reg:x3; val_offset:21162*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21162*0 + 3*142*FLEN/8, x4, x1, x2)

inst_7055:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbad00000007fffff; valaddr_reg:x3; val_offset:21165*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21165*0 + 3*143*FLEN/8, x4, x1, x2)

inst_7056:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbad0000000ffffff; valaddr_reg:x3; val_offset:21168*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21168*0 + 3*144*FLEN/8, x4, x1, x2)

inst_7057:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbad0000001ffffff; valaddr_reg:x3; val_offset:21171*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21171*0 + 3*145*FLEN/8, x4, x1, x2)

inst_7058:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbad0000003ffffff; valaddr_reg:x3; val_offset:21174*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21174*0 + 3*146*FLEN/8, x4, x1, x2)

inst_7059:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbad0000007ffffff; valaddr_reg:x3; val_offset:21177*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21177*0 + 3*147*FLEN/8, x4, x1, x2)

inst_7060:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbad000000fffffff; valaddr_reg:x3; val_offset:21180*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21180*0 + 3*148*FLEN/8, x4, x1, x2)

inst_7061:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbad000001fffffff; valaddr_reg:x3; val_offset:21183*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21183*0 + 3*149*FLEN/8, x4, x1, x2)

inst_7062:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbad000003fffffff; valaddr_reg:x3; val_offset:21186*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21186*0 + 3*150*FLEN/8, x4, x1, x2)

inst_7063:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbad000007fffffff; valaddr_reg:x3; val_offset:21189*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21189*0 + 3*151*FLEN/8, x4, x1, x2)

inst_7064:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbad00000ffffffff; valaddr_reg:x3; val_offset:21192*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21192*0 + 3*152*FLEN/8, x4, x1, x2)

inst_7065:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbad00001ffffffff; valaddr_reg:x3; val_offset:21195*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21195*0 + 3*153*FLEN/8, x4, x1, x2)

inst_7066:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbad00003ffffffff; valaddr_reg:x3; val_offset:21198*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21198*0 + 3*154*FLEN/8, x4, x1, x2)

inst_7067:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbad00007ffffffff; valaddr_reg:x3; val_offset:21201*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21201*0 + 3*155*FLEN/8, x4, x1, x2)

inst_7068:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbad0000fffffffff; valaddr_reg:x3; val_offset:21204*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21204*0 + 3*156*FLEN/8, x4, x1, x2)

inst_7069:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbad0001fffffffff; valaddr_reg:x3; val_offset:21207*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21207*0 + 3*157*FLEN/8, x4, x1, x2)

inst_7070:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbad0003fffffffff; valaddr_reg:x3; val_offset:21210*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21210*0 + 3*158*FLEN/8, x4, x1, x2)

inst_7071:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbad0007fffffffff; valaddr_reg:x3; val_offset:21213*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21213*0 + 3*159*FLEN/8, x4, x1, x2)

inst_7072:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbad000ffffffffff; valaddr_reg:x3; val_offset:21216*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21216*0 + 3*160*FLEN/8, x4, x1, x2)

inst_7073:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbad001ffffffffff; valaddr_reg:x3; val_offset:21219*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21219*0 + 3*161*FLEN/8, x4, x1, x2)

inst_7074:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbad003ffffffffff; valaddr_reg:x3; val_offset:21222*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21222*0 + 3*162*FLEN/8, x4, x1, x2)

inst_7075:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbad007ffffffffff; valaddr_reg:x3; val_offset:21225*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21225*0 + 3*163*FLEN/8, x4, x1, x2)

inst_7076:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbad00fffffffffff; valaddr_reg:x3; val_offset:21228*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21228*0 + 3*164*FLEN/8, x4, x1, x2)

inst_7077:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbad01fffffffffff; valaddr_reg:x3; val_offset:21231*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21231*0 + 3*165*FLEN/8, x4, x1, x2)

inst_7078:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbad03fffffffffff; valaddr_reg:x3; val_offset:21234*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21234*0 + 3*166*FLEN/8, x4, x1, x2)

inst_7079:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbad07fffffffffff; valaddr_reg:x3; val_offset:21237*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21237*0 + 3*167*FLEN/8, x4, x1, x2)

inst_7080:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbad0ffffffffffff; valaddr_reg:x3; val_offset:21240*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21240*0 + 3*168*FLEN/8, x4, x1, x2)

inst_7081:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbad1ffffffffffff; valaddr_reg:x3; val_offset:21243*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21243*0 + 3*169*FLEN/8, x4, x1, x2)

inst_7082:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbad3ffffffffffff; valaddr_reg:x3; val_offset:21246*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21246*0 + 3*170*FLEN/8, x4, x1, x2)

inst_7083:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbad7ffffffffffff; valaddr_reg:x3; val_offset:21249*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21249*0 + 3*171*FLEN/8, x4, x1, x2)

inst_7084:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbad8000000000000; valaddr_reg:x3; val_offset:21252*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21252*0 + 3*172*FLEN/8, x4, x1, x2)

inst_7085:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbadc000000000000; valaddr_reg:x3; val_offset:21255*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21255*0 + 3*173*FLEN/8, x4, x1, x2)

inst_7086:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbade000000000000; valaddr_reg:x3; val_offset:21258*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21258*0 + 3*174*FLEN/8, x4, x1, x2)

inst_7087:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbadf000000000000; valaddr_reg:x3; val_offset:21261*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21261*0 + 3*175*FLEN/8, x4, x1, x2)

inst_7088:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbadf800000000000; valaddr_reg:x3; val_offset:21264*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21264*0 + 3*176*FLEN/8, x4, x1, x2)

inst_7089:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbadfc00000000000; valaddr_reg:x3; val_offset:21267*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21267*0 + 3*177*FLEN/8, x4, x1, x2)

inst_7090:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbadfe00000000000; valaddr_reg:x3; val_offset:21270*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21270*0 + 3*178*FLEN/8, x4, x1, x2)

inst_7091:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbadff00000000000; valaddr_reg:x3; val_offset:21273*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21273*0 + 3*179*FLEN/8, x4, x1, x2)

inst_7092:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbadff80000000000; valaddr_reg:x3; val_offset:21276*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21276*0 + 3*180*FLEN/8, x4, x1, x2)

inst_7093:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbadffc0000000000; valaddr_reg:x3; val_offset:21279*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21279*0 + 3*181*FLEN/8, x4, x1, x2)

inst_7094:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbadffe0000000000; valaddr_reg:x3; val_offset:21282*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21282*0 + 3*182*FLEN/8, x4, x1, x2)

inst_7095:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbadfff0000000000; valaddr_reg:x3; val_offset:21285*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21285*0 + 3*183*FLEN/8, x4, x1, x2)

inst_7096:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbadfff8000000000; valaddr_reg:x3; val_offset:21288*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21288*0 + 3*184*FLEN/8, x4, x1, x2)

inst_7097:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbadfffc000000000; valaddr_reg:x3; val_offset:21291*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21291*0 + 3*185*FLEN/8, x4, x1, x2)

inst_7098:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbadfffe000000000; valaddr_reg:x3; val_offset:21294*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21294*0 + 3*186*FLEN/8, x4, x1, x2)

inst_7099:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbadffff000000000; valaddr_reg:x3; val_offset:21297*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21297*0 + 3*187*FLEN/8, x4, x1, x2)

inst_7100:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbadffff800000000; valaddr_reg:x3; val_offset:21300*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21300*0 + 3*188*FLEN/8, x4, x1, x2)

inst_7101:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbadffffc00000000; valaddr_reg:x3; val_offset:21303*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21303*0 + 3*189*FLEN/8, x4, x1, x2)

inst_7102:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbadffffe00000000; valaddr_reg:x3; val_offset:21306*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21306*0 + 3*190*FLEN/8, x4, x1, x2)

inst_7103:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbadfffff00000000; valaddr_reg:x3; val_offset:21309*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21309*0 + 3*191*FLEN/8, x4, x1, x2)

inst_7104:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbadfffff80000000; valaddr_reg:x3; val_offset:21312*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21312*0 + 3*192*FLEN/8, x4, x1, x2)

inst_7105:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbadfffffc0000000; valaddr_reg:x3; val_offset:21315*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21315*0 + 3*193*FLEN/8, x4, x1, x2)

inst_7106:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbadfffffe0000000; valaddr_reg:x3; val_offset:21318*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21318*0 + 3*194*FLEN/8, x4, x1, x2)

inst_7107:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbadffffff0000000; valaddr_reg:x3; val_offset:21321*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21321*0 + 3*195*FLEN/8, x4, x1, x2)

inst_7108:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbadffffff8000000; valaddr_reg:x3; val_offset:21324*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21324*0 + 3*196*FLEN/8, x4, x1, x2)

inst_7109:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbadffffffc000000; valaddr_reg:x3; val_offset:21327*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21327*0 + 3*197*FLEN/8, x4, x1, x2)

inst_7110:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbadffffffe000000; valaddr_reg:x3; val_offset:21330*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21330*0 + 3*198*FLEN/8, x4, x1, x2)

inst_7111:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbadfffffff000000; valaddr_reg:x3; val_offset:21333*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21333*0 + 3*199*FLEN/8, x4, x1, x2)

inst_7112:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbadfffffff800000; valaddr_reg:x3; val_offset:21336*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21336*0 + 3*200*FLEN/8, x4, x1, x2)

inst_7113:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbadfffffffc00000; valaddr_reg:x3; val_offset:21339*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21339*0 + 3*201*FLEN/8, x4, x1, x2)

inst_7114:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbadfffffffe00000; valaddr_reg:x3; val_offset:21342*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21342*0 + 3*202*FLEN/8, x4, x1, x2)

inst_7115:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbadffffffff00000; valaddr_reg:x3; val_offset:21345*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21345*0 + 3*203*FLEN/8, x4, x1, x2)

inst_7116:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbadffffffff80000; valaddr_reg:x3; val_offset:21348*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21348*0 + 3*204*FLEN/8, x4, x1, x2)

inst_7117:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbadffffffffc0000; valaddr_reg:x3; val_offset:21351*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21351*0 + 3*205*FLEN/8, x4, x1, x2)

inst_7118:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbadffffffffe0000; valaddr_reg:x3; val_offset:21354*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21354*0 + 3*206*FLEN/8, x4, x1, x2)

inst_7119:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbadfffffffff0000; valaddr_reg:x3; val_offset:21357*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21357*0 + 3*207*FLEN/8, x4, x1, x2)

inst_7120:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbadfffffffff8000; valaddr_reg:x3; val_offset:21360*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21360*0 + 3*208*FLEN/8, x4, x1, x2)

inst_7121:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbadfffffffffc000; valaddr_reg:x3; val_offset:21363*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21363*0 + 3*209*FLEN/8, x4, x1, x2)

inst_7122:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbadfffffffffe000; valaddr_reg:x3; val_offset:21366*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21366*0 + 3*210*FLEN/8, x4, x1, x2)

inst_7123:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbadffffffffff000; valaddr_reg:x3; val_offset:21369*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21369*0 + 3*211*FLEN/8, x4, x1, x2)

inst_7124:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbadffffffffff800; valaddr_reg:x3; val_offset:21372*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21372*0 + 3*212*FLEN/8, x4, x1, x2)

inst_7125:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbadffffffffffc00; valaddr_reg:x3; val_offset:21375*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21375*0 + 3*213*FLEN/8, x4, x1, x2)

inst_7126:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbadffffffffffe00; valaddr_reg:x3; val_offset:21378*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21378*0 + 3*214*FLEN/8, x4, x1, x2)

inst_7127:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbadfffffffffff00; valaddr_reg:x3; val_offset:21381*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21381*0 + 3*215*FLEN/8, x4, x1, x2)

inst_7128:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbadfffffffffff80; valaddr_reg:x3; val_offset:21384*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21384*0 + 3*216*FLEN/8, x4, x1, x2)

inst_7129:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbadfffffffffffc0; valaddr_reg:x3; val_offset:21387*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21387*0 + 3*217*FLEN/8, x4, x1, x2)

inst_7130:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbadfffffffffffe0; valaddr_reg:x3; val_offset:21390*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21390*0 + 3*218*FLEN/8, x4, x1, x2)

inst_7131:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbadffffffffffff0; valaddr_reg:x3; val_offset:21393*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21393*0 + 3*219*FLEN/8, x4, x1, x2)

inst_7132:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbadffffffffffff8; valaddr_reg:x3; val_offset:21396*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21396*0 + 3*220*FLEN/8, x4, x1, x2)

inst_7133:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbadffffffffffffc; valaddr_reg:x3; val_offset:21399*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21399*0 + 3*221*FLEN/8, x4, x1, x2)

inst_7134:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbadffffffffffffe; valaddr_reg:x3; val_offset:21402*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21402*0 + 3*222*FLEN/8, x4, x1, x2)

inst_7135:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3ad and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbadfffffffffffff; valaddr_reg:x3; val_offset:21405*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21405*0 + 3*223*FLEN/8, x4, x1, x2)

inst_7136:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:21408*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21408*0 + 3*224*FLEN/8, x4, x1, x2)

inst_7137:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:21411*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21411*0 + 3*225*FLEN/8, x4, x1, x2)

inst_7138:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:21414*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21414*0 + 3*226*FLEN/8, x4, x1, x2)

inst_7139:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:21417*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21417*0 + 3*227*FLEN/8, x4, x1, x2)

inst_7140:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:21420*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21420*0 + 3*228*FLEN/8, x4, x1, x2)

inst_7141:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:21423*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21423*0 + 3*229*FLEN/8, x4, x1, x2)

inst_7142:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:21426*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21426*0 + 3*230*FLEN/8, x4, x1, x2)

inst_7143:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:21429*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21429*0 + 3*231*FLEN/8, x4, x1, x2)

inst_7144:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:21432*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21432*0 + 3*232*FLEN/8, x4, x1, x2)

inst_7145:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:21435*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21435*0 + 3*233*FLEN/8, x4, x1, x2)

inst_7146:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:21438*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21438*0 + 3*234*FLEN/8, x4, x1, x2)

inst_7147:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:21441*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21441*0 + 3*235*FLEN/8, x4, x1, x2)

inst_7148:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:21444*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21444*0 + 3*236*FLEN/8, x4, x1, x2)

inst_7149:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:21447*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21447*0 + 3*237*FLEN/8, x4, x1, x2)

inst_7150:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:21450*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21450*0 + 3*238*FLEN/8, x4, x1, x2)

inst_7151:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:21453*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21453*0 + 3*239*FLEN/8, x4, x1, x2)

inst_7152:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:21456*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21456*0 + 3*240*FLEN/8, x4, x1, x2)

inst_7153:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:21459*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21459*0 + 3*241*FLEN/8, x4, x1, x2)

inst_7154:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:21462*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21462*0 + 3*242*FLEN/8, x4, x1, x2)

inst_7155:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:21465*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21465*0 + 3*243*FLEN/8, x4, x1, x2)

inst_7156:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:21468*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21468*0 + 3*244*FLEN/8, x4, x1, x2)

inst_7157:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2840ea893fa8f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xba6e8989d70ba and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72840ea893fa8f; op2val:0x9ffba6e8989d70ba;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:21471*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21471*0 + 3*245*FLEN/8, x4, x1, x2)

inst_7158:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:21474*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21474*0 + 3*246*FLEN/8, x4, x1, x2)

inst_7159:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:21477*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21477*0 + 3*247*FLEN/8, x4, x1, x2)

inst_7160:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:21480*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21480*0 + 3*248*FLEN/8, x4, x1, x2)

inst_7161:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:21483*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21483*0 + 3*249*FLEN/8, x4, x1, x2)

inst_7162:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:21486*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21486*0 + 3*250*FLEN/8, x4, x1, x2)

inst_7163:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:21489*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21489*0 + 3*251*FLEN/8, x4, x1, x2)

inst_7164:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:21492*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21492*0 + 3*252*FLEN/8, x4, x1, x2)

inst_7165:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:21495*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21495*0 + 3*253*FLEN/8, x4, x1, x2)

inst_7166:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:21498*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21498*0 + 3*254*FLEN/8, x4, x1, x2)

inst_7167:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:21501*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21501*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_7168:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:21504*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21504*0 + 3*256*FLEN/8, x4, x1, x2)

inst_7169:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:21507*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21507*0 + 3*257*FLEN/8, x4, x1, x2)

inst_7170:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:21510*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21510*0 + 3*258*FLEN/8, x4, x1, x2)

inst_7171:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:21513*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21513*0 + 3*259*FLEN/8, x4, x1, x2)

inst_7172:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:21516*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21516*0 + 3*260*FLEN/8, x4, x1, x2)

inst_7173:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:21519*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21519*0 + 3*261*FLEN/8, x4, x1, x2)

inst_7174:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:21522*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21522*0 + 3*262*FLEN/8, x4, x1, x2)

inst_7175:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:21525*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21525*0 + 3*263*FLEN/8, x4, x1, x2)

inst_7176:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:21528*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21528*0 + 3*264*FLEN/8, x4, x1, x2)

inst_7177:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:21531*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21531*0 + 3*265*FLEN/8, x4, x1, x2)

inst_7178:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:21534*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21534*0 + 3*266*FLEN/8, x4, x1, x2)

inst_7179:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:21537*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21537*0 + 3*267*FLEN/8, x4, x1, x2)

inst_7180:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x90000000000000; valaddr_reg:x3; val_offset:21540*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21540*0 + 3*268*FLEN/8, x4, x1, x2)

inst_7181:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x90000000000001; valaddr_reg:x3; val_offset:21543*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21543*0 + 3*269*FLEN/8, x4, x1, x2)

inst_7182:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x90000000000003; valaddr_reg:x3; val_offset:21546*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21546*0 + 3*270*FLEN/8, x4, x1, x2)

inst_7183:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x90000000000007; valaddr_reg:x3; val_offset:21549*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21549*0 + 3*271*FLEN/8, x4, x1, x2)

inst_7184:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9000000000000f; valaddr_reg:x3; val_offset:21552*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21552*0 + 3*272*FLEN/8, x4, x1, x2)

inst_7185:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9000000000001f; valaddr_reg:x3; val_offset:21555*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21555*0 + 3*273*FLEN/8, x4, x1, x2)

inst_7186:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9000000000003f; valaddr_reg:x3; val_offset:21558*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21558*0 + 3*274*FLEN/8, x4, x1, x2)

inst_7187:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9000000000007f; valaddr_reg:x3; val_offset:21561*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21561*0 + 3*275*FLEN/8, x4, x1, x2)

inst_7188:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x900000000000ff; valaddr_reg:x3; val_offset:21564*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21564*0 + 3*276*FLEN/8, x4, x1, x2)

inst_7189:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x900000000001ff; valaddr_reg:x3; val_offset:21567*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21567*0 + 3*277*FLEN/8, x4, x1, x2)

inst_7190:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x900000000003ff; valaddr_reg:x3; val_offset:21570*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21570*0 + 3*278*FLEN/8, x4, x1, x2)

inst_7191:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x900000000007ff; valaddr_reg:x3; val_offset:21573*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21573*0 + 3*279*FLEN/8, x4, x1, x2)

inst_7192:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x90000000000fff; valaddr_reg:x3; val_offset:21576*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21576*0 + 3*280*FLEN/8, x4, x1, x2)

inst_7193:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x90000000001fff; valaddr_reg:x3; val_offset:21579*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21579*0 + 3*281*FLEN/8, x4, x1, x2)

inst_7194:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x90000000003fff; valaddr_reg:x3; val_offset:21582*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21582*0 + 3*282*FLEN/8, x4, x1, x2)

inst_7195:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x90000000007fff; valaddr_reg:x3; val_offset:21585*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21585*0 + 3*283*FLEN/8, x4, x1, x2)

inst_7196:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9000000000ffff; valaddr_reg:x3; val_offset:21588*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21588*0 + 3*284*FLEN/8, x4, x1, x2)

inst_7197:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9000000001ffff; valaddr_reg:x3; val_offset:21591*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21591*0 + 3*285*FLEN/8, x4, x1, x2)

inst_7198:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9000000003ffff; valaddr_reg:x3; val_offset:21594*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21594*0 + 3*286*FLEN/8, x4, x1, x2)

inst_7199:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9000000007ffff; valaddr_reg:x3; val_offset:21597*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21597*0 + 3*287*FLEN/8, x4, x1, x2)

inst_7200:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x900000000fffff; valaddr_reg:x3; val_offset:21600*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21600*0 + 3*288*FLEN/8, x4, x1, x2)

inst_7201:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x900000001fffff; valaddr_reg:x3; val_offset:21603*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21603*0 + 3*289*FLEN/8, x4, x1, x2)

inst_7202:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x900000003fffff; valaddr_reg:x3; val_offset:21606*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21606*0 + 3*290*FLEN/8, x4, x1, x2)

inst_7203:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x900000007fffff; valaddr_reg:x3; val_offset:21609*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21609*0 + 3*291*FLEN/8, x4, x1, x2)

inst_7204:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x90000000ffffff; valaddr_reg:x3; val_offset:21612*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21612*0 + 3*292*FLEN/8, x4, x1, x2)

inst_7205:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x90000001ffffff; valaddr_reg:x3; val_offset:21615*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21615*0 + 3*293*FLEN/8, x4, x1, x2)

inst_7206:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x90000003ffffff; valaddr_reg:x3; val_offset:21618*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21618*0 + 3*294*FLEN/8, x4, x1, x2)

inst_7207:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x90000007ffffff; valaddr_reg:x3; val_offset:21621*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21621*0 + 3*295*FLEN/8, x4, x1, x2)

inst_7208:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9000000fffffff; valaddr_reg:x3; val_offset:21624*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21624*0 + 3*296*FLEN/8, x4, x1, x2)

inst_7209:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9000001fffffff; valaddr_reg:x3; val_offset:21627*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21627*0 + 3*297*FLEN/8, x4, x1, x2)

inst_7210:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9000003fffffff; valaddr_reg:x3; val_offset:21630*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21630*0 + 3*298*FLEN/8, x4, x1, x2)

inst_7211:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9000007fffffff; valaddr_reg:x3; val_offset:21633*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21633*0 + 3*299*FLEN/8, x4, x1, x2)

inst_7212:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x900000ffffffff; valaddr_reg:x3; val_offset:21636*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21636*0 + 3*300*FLEN/8, x4, x1, x2)

inst_7213:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x900001ffffffff; valaddr_reg:x3; val_offset:21639*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21639*0 + 3*301*FLEN/8, x4, x1, x2)

inst_7214:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x900003ffffffff; valaddr_reg:x3; val_offset:21642*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21642*0 + 3*302*FLEN/8, x4, x1, x2)

inst_7215:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x900007ffffffff; valaddr_reg:x3; val_offset:21645*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21645*0 + 3*303*FLEN/8, x4, x1, x2)

inst_7216:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x90000fffffffff; valaddr_reg:x3; val_offset:21648*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21648*0 + 3*304*FLEN/8, x4, x1, x2)

inst_7217:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x90001fffffffff; valaddr_reg:x3; val_offset:21651*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21651*0 + 3*305*FLEN/8, x4, x1, x2)

inst_7218:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x90003fffffffff; valaddr_reg:x3; val_offset:21654*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21654*0 + 3*306*FLEN/8, x4, x1, x2)

inst_7219:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x90007fffffffff; valaddr_reg:x3; val_offset:21657*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21657*0 + 3*307*FLEN/8, x4, x1, x2)

inst_7220:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9000ffffffffff; valaddr_reg:x3; val_offset:21660*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21660*0 + 3*308*FLEN/8, x4, x1, x2)

inst_7221:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9001ffffffffff; valaddr_reg:x3; val_offset:21663*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21663*0 + 3*309*FLEN/8, x4, x1, x2)

inst_7222:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9003ffffffffff; valaddr_reg:x3; val_offset:21666*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21666*0 + 3*310*FLEN/8, x4, x1, x2)

inst_7223:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9007ffffffffff; valaddr_reg:x3; val_offset:21669*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21669*0 + 3*311*FLEN/8, x4, x1, x2)

inst_7224:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x900fffffffffff; valaddr_reg:x3; val_offset:21672*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21672*0 + 3*312*FLEN/8, x4, x1, x2)

inst_7225:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x901fffffffffff; valaddr_reg:x3; val_offset:21675*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21675*0 + 3*313*FLEN/8, x4, x1, x2)

inst_7226:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x903fffffffffff; valaddr_reg:x3; val_offset:21678*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21678*0 + 3*314*FLEN/8, x4, x1, x2)

inst_7227:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x907fffffffffff; valaddr_reg:x3; val_offset:21681*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21681*0 + 3*315*FLEN/8, x4, x1, x2)

inst_7228:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x90ffffffffffff; valaddr_reg:x3; val_offset:21684*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21684*0 + 3*316*FLEN/8, x4, x1, x2)

inst_7229:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x91ffffffffffff; valaddr_reg:x3; val_offset:21687*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21687*0 + 3*317*FLEN/8, x4, x1, x2)

inst_7230:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x93ffffffffffff; valaddr_reg:x3; val_offset:21690*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21690*0 + 3*318*FLEN/8, x4, x1, x2)

inst_7231:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x97ffffffffffff; valaddr_reg:x3; val_offset:21693*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21693*0 + 3*319*FLEN/8, x4, x1, x2)

inst_7232:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x98000000000000; valaddr_reg:x3; val_offset:21696*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21696*0 + 3*320*FLEN/8, x4, x1, x2)

inst_7233:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9c000000000000; valaddr_reg:x3; val_offset:21699*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21699*0 + 3*321*FLEN/8, x4, x1, x2)

inst_7234:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9e000000000000; valaddr_reg:x3; val_offset:21702*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21702*0 + 3*322*FLEN/8, x4, x1, x2)

inst_7235:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9f000000000000; valaddr_reg:x3; val_offset:21705*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21705*0 + 3*323*FLEN/8, x4, x1, x2)

inst_7236:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9f800000000000; valaddr_reg:x3; val_offset:21708*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21708*0 + 3*324*FLEN/8, x4, x1, x2)

inst_7237:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9fc00000000000; valaddr_reg:x3; val_offset:21711*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21711*0 + 3*325*FLEN/8, x4, x1, x2)

inst_7238:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9fe00000000000; valaddr_reg:x3; val_offset:21714*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21714*0 + 3*326*FLEN/8, x4, x1, x2)

inst_7239:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9ff00000000000; valaddr_reg:x3; val_offset:21717*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21717*0 + 3*327*FLEN/8, x4, x1, x2)

inst_7240:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9ff80000000000; valaddr_reg:x3; val_offset:21720*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21720*0 + 3*328*FLEN/8, x4, x1, x2)

inst_7241:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9ffc0000000000; valaddr_reg:x3; val_offset:21723*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21723*0 + 3*329*FLEN/8, x4, x1, x2)

inst_7242:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9ffe0000000000; valaddr_reg:x3; val_offset:21726*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21726*0 + 3*330*FLEN/8, x4, x1, x2)

inst_7243:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9fff0000000000; valaddr_reg:x3; val_offset:21729*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21729*0 + 3*331*FLEN/8, x4, x1, x2)

inst_7244:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9fff8000000000; valaddr_reg:x3; val_offset:21732*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21732*0 + 3*332*FLEN/8, x4, x1, x2)

inst_7245:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9fffc000000000; valaddr_reg:x3; val_offset:21735*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21735*0 + 3*333*FLEN/8, x4, x1, x2)

inst_7246:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9fffe000000000; valaddr_reg:x3; val_offset:21738*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21738*0 + 3*334*FLEN/8, x4, x1, x2)

inst_7247:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9ffff000000000; valaddr_reg:x3; val_offset:21741*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21741*0 + 3*335*FLEN/8, x4, x1, x2)

inst_7248:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9ffff800000000; valaddr_reg:x3; val_offset:21744*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21744*0 + 3*336*FLEN/8, x4, x1, x2)

inst_7249:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9ffffc00000000; valaddr_reg:x3; val_offset:21747*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21747*0 + 3*337*FLEN/8, x4, x1, x2)

inst_7250:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9ffffe00000000; valaddr_reg:x3; val_offset:21750*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21750*0 + 3*338*FLEN/8, x4, x1, x2)

inst_7251:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9fffff00000000; valaddr_reg:x3; val_offset:21753*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21753*0 + 3*339*FLEN/8, x4, x1, x2)

inst_7252:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9fffff80000000; valaddr_reg:x3; val_offset:21756*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21756*0 + 3*340*FLEN/8, x4, x1, x2)

inst_7253:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9fffffc0000000; valaddr_reg:x3; val_offset:21759*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21759*0 + 3*341*FLEN/8, x4, x1, x2)

inst_7254:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9fffffe0000000; valaddr_reg:x3; val_offset:21762*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21762*0 + 3*342*FLEN/8, x4, x1, x2)

inst_7255:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9ffffff0000000; valaddr_reg:x3; val_offset:21765*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21765*0 + 3*343*FLEN/8, x4, x1, x2)

inst_7256:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9ffffff8000000; valaddr_reg:x3; val_offset:21768*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21768*0 + 3*344*FLEN/8, x4, x1, x2)

inst_7257:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9ffffffc000000; valaddr_reg:x3; val_offset:21771*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21771*0 + 3*345*FLEN/8, x4, x1, x2)

inst_7258:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9ffffffe000000; valaddr_reg:x3; val_offset:21774*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21774*0 + 3*346*FLEN/8, x4, x1, x2)

inst_7259:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9fffffff000000; valaddr_reg:x3; val_offset:21777*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21777*0 + 3*347*FLEN/8, x4, x1, x2)

inst_7260:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9fffffff800000; valaddr_reg:x3; val_offset:21780*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21780*0 + 3*348*FLEN/8, x4, x1, x2)

inst_7261:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9fffffffc00000; valaddr_reg:x3; val_offset:21783*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21783*0 + 3*349*FLEN/8, x4, x1, x2)

inst_7262:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9fffffffe00000; valaddr_reg:x3; val_offset:21786*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21786*0 + 3*350*FLEN/8, x4, x1, x2)

inst_7263:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9ffffffff00000; valaddr_reg:x3; val_offset:21789*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21789*0 + 3*351*FLEN/8, x4, x1, x2)

inst_7264:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9ffffffff80000; valaddr_reg:x3; val_offset:21792*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21792*0 + 3*352*FLEN/8, x4, x1, x2)

inst_7265:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9ffffffffc0000; valaddr_reg:x3; val_offset:21795*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21795*0 + 3*353*FLEN/8, x4, x1, x2)

inst_7266:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9ffffffffe0000; valaddr_reg:x3; val_offset:21798*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21798*0 + 3*354*FLEN/8, x4, x1, x2)

inst_7267:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9fffffffff0000; valaddr_reg:x3; val_offset:21801*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21801*0 + 3*355*FLEN/8, x4, x1, x2)

inst_7268:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9fffffffff8000; valaddr_reg:x3; val_offset:21804*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21804*0 + 3*356*FLEN/8, x4, x1, x2)

inst_7269:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9fffffffffc000; valaddr_reg:x3; val_offset:21807*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21807*0 + 3*357*FLEN/8, x4, x1, x2)

inst_7270:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9fffffffffe000; valaddr_reg:x3; val_offset:21810*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21810*0 + 3*358*FLEN/8, x4, x1, x2)

inst_7271:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9ffffffffff000; valaddr_reg:x3; val_offset:21813*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21813*0 + 3*359*FLEN/8, x4, x1, x2)

inst_7272:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9ffffffffff800; valaddr_reg:x3; val_offset:21816*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21816*0 + 3*360*FLEN/8, x4, x1, x2)

inst_7273:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9ffffffffffc00; valaddr_reg:x3; val_offset:21819*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21819*0 + 3*361*FLEN/8, x4, x1, x2)

inst_7274:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9ffffffffffe00; valaddr_reg:x3; val_offset:21822*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21822*0 + 3*362*FLEN/8, x4, x1, x2)

inst_7275:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9fffffffffff00; valaddr_reg:x3; val_offset:21825*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21825*0 + 3*363*FLEN/8, x4, x1, x2)

inst_7276:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9fffffffffff80; valaddr_reg:x3; val_offset:21828*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21828*0 + 3*364*FLEN/8, x4, x1, x2)

inst_7277:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9fffffffffffc0; valaddr_reg:x3; val_offset:21831*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21831*0 + 3*365*FLEN/8, x4, x1, x2)

inst_7278:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9fffffffffffe0; valaddr_reg:x3; val_offset:21834*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21834*0 + 3*366*FLEN/8, x4, x1, x2)

inst_7279:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9ffffffffffff0; valaddr_reg:x3; val_offset:21837*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21837*0 + 3*367*FLEN/8, x4, x1, x2)

inst_7280:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9ffffffffffff8; valaddr_reg:x3; val_offset:21840*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21840*0 + 3*368*FLEN/8, x4, x1, x2)

inst_7281:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9ffffffffffffc; valaddr_reg:x3; val_offset:21843*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21843*0 + 3*369*FLEN/8, x4, x1, x2)

inst_7282:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9ffffffffffffe; valaddr_reg:x3; val_offset:21846*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21846*0 + 3*370*FLEN/8, x4, x1, x2)

inst_7283:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2cb2f3a17263f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f72cb2f3a17263f; op2val:0x0;
op3val:0x9fffffffffffff; valaddr_reg:x3; val_offset:21849*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21849*0 + 3*371*FLEN/8, x4, x1, x2)

inst_7284:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb00000000000000; valaddr_reg:x3; val_offset:21852*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21852*0 + 3*372*FLEN/8, x4, x1, x2)

inst_7285:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb00000000000001; valaddr_reg:x3; val_offset:21855*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21855*0 + 3*373*FLEN/8, x4, x1, x2)

inst_7286:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb00000000000003; valaddr_reg:x3; val_offset:21858*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21858*0 + 3*374*FLEN/8, x4, x1, x2)

inst_7287:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb00000000000007; valaddr_reg:x3; val_offset:21861*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21861*0 + 3*375*FLEN/8, x4, x1, x2)

inst_7288:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0000000000000f; valaddr_reg:x3; val_offset:21864*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21864*0 + 3*376*FLEN/8, x4, x1, x2)

inst_7289:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0000000000001f; valaddr_reg:x3; val_offset:21867*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21867*0 + 3*377*FLEN/8, x4, x1, x2)

inst_7290:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0000000000003f; valaddr_reg:x3; val_offset:21870*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21870*0 + 3*378*FLEN/8, x4, x1, x2)

inst_7291:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0000000000007f; valaddr_reg:x3; val_offset:21873*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21873*0 + 3*379*FLEN/8, x4, x1, x2)

inst_7292:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb000000000000ff; valaddr_reg:x3; val_offset:21876*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21876*0 + 3*380*FLEN/8, x4, x1, x2)

inst_7293:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb000000000001ff; valaddr_reg:x3; val_offset:21879*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21879*0 + 3*381*FLEN/8, x4, x1, x2)

inst_7294:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb000000000003ff; valaddr_reg:x3; val_offset:21882*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21882*0 + 3*382*FLEN/8, x4, x1, x2)

inst_7295:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb000000000007ff; valaddr_reg:x3; val_offset:21885*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21885*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_7296:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb00000000000fff; valaddr_reg:x3; val_offset:21888*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21888*0 + 3*384*FLEN/8, x4, x1, x2)

inst_7297:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb00000000001fff; valaddr_reg:x3; val_offset:21891*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21891*0 + 3*385*FLEN/8, x4, x1, x2)

inst_7298:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb00000000003fff; valaddr_reg:x3; val_offset:21894*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21894*0 + 3*386*FLEN/8, x4, x1, x2)

inst_7299:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb00000000007fff; valaddr_reg:x3; val_offset:21897*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21897*0 + 3*387*FLEN/8, x4, x1, x2)

inst_7300:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0000000000ffff; valaddr_reg:x3; val_offset:21900*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21900*0 + 3*388*FLEN/8, x4, x1, x2)

inst_7301:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0000000001ffff; valaddr_reg:x3; val_offset:21903*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21903*0 + 3*389*FLEN/8, x4, x1, x2)

inst_7302:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0000000003ffff; valaddr_reg:x3; val_offset:21906*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21906*0 + 3*390*FLEN/8, x4, x1, x2)

inst_7303:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0000000007ffff; valaddr_reg:x3; val_offset:21909*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21909*0 + 3*391*FLEN/8, x4, x1, x2)

inst_7304:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb000000000fffff; valaddr_reg:x3; val_offset:21912*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21912*0 + 3*392*FLEN/8, x4, x1, x2)

inst_7305:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb000000001fffff; valaddr_reg:x3; val_offset:21915*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21915*0 + 3*393*FLEN/8, x4, x1, x2)

inst_7306:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb000000003fffff; valaddr_reg:x3; val_offset:21918*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21918*0 + 3*394*FLEN/8, x4, x1, x2)

inst_7307:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb000000007fffff; valaddr_reg:x3; val_offset:21921*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21921*0 + 3*395*FLEN/8, x4, x1, x2)

inst_7308:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb00000000ffffff; valaddr_reg:x3; val_offset:21924*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21924*0 + 3*396*FLEN/8, x4, x1, x2)

inst_7309:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb00000001ffffff; valaddr_reg:x3; val_offset:21927*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21927*0 + 3*397*FLEN/8, x4, x1, x2)

inst_7310:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb00000003ffffff; valaddr_reg:x3; val_offset:21930*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21930*0 + 3*398*FLEN/8, x4, x1, x2)

inst_7311:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb00000007ffffff; valaddr_reg:x3; val_offset:21933*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21933*0 + 3*399*FLEN/8, x4, x1, x2)

inst_7312:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0000000fffffff; valaddr_reg:x3; val_offset:21936*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21936*0 + 3*400*FLEN/8, x4, x1, x2)

inst_7313:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0000001fffffff; valaddr_reg:x3; val_offset:21939*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21939*0 + 3*401*FLEN/8, x4, x1, x2)

inst_7314:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0000003fffffff; valaddr_reg:x3; val_offset:21942*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21942*0 + 3*402*FLEN/8, x4, x1, x2)

inst_7315:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0000007fffffff; valaddr_reg:x3; val_offset:21945*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21945*0 + 3*403*FLEN/8, x4, x1, x2)

inst_7316:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb000000ffffffff; valaddr_reg:x3; val_offset:21948*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21948*0 + 3*404*FLEN/8, x4, x1, x2)

inst_7317:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb000001ffffffff; valaddr_reg:x3; val_offset:21951*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21951*0 + 3*405*FLEN/8, x4, x1, x2)

inst_7318:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb000003ffffffff; valaddr_reg:x3; val_offset:21954*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21954*0 + 3*406*FLEN/8, x4, x1, x2)

inst_7319:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb000007ffffffff; valaddr_reg:x3; val_offset:21957*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21957*0 + 3*407*FLEN/8, x4, x1, x2)

inst_7320:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb00000fffffffff; valaddr_reg:x3; val_offset:21960*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21960*0 + 3*408*FLEN/8, x4, x1, x2)

inst_7321:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb00001fffffffff; valaddr_reg:x3; val_offset:21963*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21963*0 + 3*409*FLEN/8, x4, x1, x2)

inst_7322:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb00003fffffffff; valaddr_reg:x3; val_offset:21966*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21966*0 + 3*410*FLEN/8, x4, x1, x2)

inst_7323:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb00007fffffffff; valaddr_reg:x3; val_offset:21969*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21969*0 + 3*411*FLEN/8, x4, x1, x2)

inst_7324:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0000ffffffffff; valaddr_reg:x3; val_offset:21972*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21972*0 + 3*412*FLEN/8, x4, x1, x2)

inst_7325:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0001ffffffffff; valaddr_reg:x3; val_offset:21975*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21975*0 + 3*413*FLEN/8, x4, x1, x2)

inst_7326:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0003ffffffffff; valaddr_reg:x3; val_offset:21978*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21978*0 + 3*414*FLEN/8, x4, x1, x2)

inst_7327:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0007ffffffffff; valaddr_reg:x3; val_offset:21981*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21981*0 + 3*415*FLEN/8, x4, x1, x2)

inst_7328:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb000fffffffffff; valaddr_reg:x3; val_offset:21984*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21984*0 + 3*416*FLEN/8, x4, x1, x2)

inst_7329:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb001fffffffffff; valaddr_reg:x3; val_offset:21987*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21987*0 + 3*417*FLEN/8, x4, x1, x2)

inst_7330:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb003fffffffffff; valaddr_reg:x3; val_offset:21990*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21990*0 + 3*418*FLEN/8, x4, x1, x2)

inst_7331:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb007fffffffffff; valaddr_reg:x3; val_offset:21993*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21993*0 + 3*419*FLEN/8, x4, x1, x2)

inst_7332:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb00ffffffffffff; valaddr_reg:x3; val_offset:21996*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21996*0 + 3*420*FLEN/8, x4, x1, x2)

inst_7333:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb01ffffffffffff; valaddr_reg:x3; val_offset:21999*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 21999*0 + 3*421*FLEN/8, x4, x1, x2)

inst_7334:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb03ffffffffffff; valaddr_reg:x3; val_offset:22002*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22002*0 + 3*422*FLEN/8, x4, x1, x2)

inst_7335:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb07ffffffffffff; valaddr_reg:x3; val_offset:22005*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22005*0 + 3*423*FLEN/8, x4, x1, x2)

inst_7336:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb08000000000000; valaddr_reg:x3; val_offset:22008*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22008*0 + 3*424*FLEN/8, x4, x1, x2)

inst_7337:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0c000000000000; valaddr_reg:x3; val_offset:22011*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22011*0 + 3*425*FLEN/8, x4, x1, x2)

inst_7338:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0e000000000000; valaddr_reg:x3; val_offset:22014*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22014*0 + 3*426*FLEN/8, x4, x1, x2)

inst_7339:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0f000000000000; valaddr_reg:x3; val_offset:22017*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22017*0 + 3*427*FLEN/8, x4, x1, x2)

inst_7340:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0f800000000000; valaddr_reg:x3; val_offset:22020*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22020*0 + 3*428*FLEN/8, x4, x1, x2)

inst_7341:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0fc00000000000; valaddr_reg:x3; val_offset:22023*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22023*0 + 3*429*FLEN/8, x4, x1, x2)

inst_7342:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0fe00000000000; valaddr_reg:x3; val_offset:22026*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22026*0 + 3*430*FLEN/8, x4, x1, x2)

inst_7343:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0ff00000000000; valaddr_reg:x3; val_offset:22029*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22029*0 + 3*431*FLEN/8, x4, x1, x2)

inst_7344:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0ff80000000000; valaddr_reg:x3; val_offset:22032*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22032*0 + 3*432*FLEN/8, x4, x1, x2)

inst_7345:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0ffc0000000000; valaddr_reg:x3; val_offset:22035*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22035*0 + 3*433*FLEN/8, x4, x1, x2)

inst_7346:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0ffe0000000000; valaddr_reg:x3; val_offset:22038*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22038*0 + 3*434*FLEN/8, x4, x1, x2)

inst_7347:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0fff0000000000; valaddr_reg:x3; val_offset:22041*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22041*0 + 3*435*FLEN/8, x4, x1, x2)

inst_7348:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0fff8000000000; valaddr_reg:x3; val_offset:22044*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22044*0 + 3*436*FLEN/8, x4, x1, x2)

inst_7349:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0fffc000000000; valaddr_reg:x3; val_offset:22047*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22047*0 + 3*437*FLEN/8, x4, x1, x2)

inst_7350:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0fffe000000000; valaddr_reg:x3; val_offset:22050*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22050*0 + 3*438*FLEN/8, x4, x1, x2)

inst_7351:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0ffff000000000; valaddr_reg:x3; val_offset:22053*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22053*0 + 3*439*FLEN/8, x4, x1, x2)

inst_7352:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0ffff800000000; valaddr_reg:x3; val_offset:22056*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22056*0 + 3*440*FLEN/8, x4, x1, x2)

inst_7353:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0ffffc00000000; valaddr_reg:x3; val_offset:22059*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22059*0 + 3*441*FLEN/8, x4, x1, x2)

inst_7354:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0ffffe00000000; valaddr_reg:x3; val_offset:22062*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22062*0 + 3*442*FLEN/8, x4, x1, x2)

inst_7355:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0fffff00000000; valaddr_reg:x3; val_offset:22065*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22065*0 + 3*443*FLEN/8, x4, x1, x2)

inst_7356:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0fffff80000000; valaddr_reg:x3; val_offset:22068*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22068*0 + 3*444*FLEN/8, x4, x1, x2)

inst_7357:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0fffffc0000000; valaddr_reg:x3; val_offset:22071*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22071*0 + 3*445*FLEN/8, x4, x1, x2)

inst_7358:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0fffffe0000000; valaddr_reg:x3; val_offset:22074*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22074*0 + 3*446*FLEN/8, x4, x1, x2)

inst_7359:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0ffffff0000000; valaddr_reg:x3; val_offset:22077*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22077*0 + 3*447*FLEN/8, x4, x1, x2)

inst_7360:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0ffffff8000000; valaddr_reg:x3; val_offset:22080*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22080*0 + 3*448*FLEN/8, x4, x1, x2)

inst_7361:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0ffffffc000000; valaddr_reg:x3; val_offset:22083*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22083*0 + 3*449*FLEN/8, x4, x1, x2)

inst_7362:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0ffffffe000000; valaddr_reg:x3; val_offset:22086*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22086*0 + 3*450*FLEN/8, x4, x1, x2)

inst_7363:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0fffffff000000; valaddr_reg:x3; val_offset:22089*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22089*0 + 3*451*FLEN/8, x4, x1, x2)

inst_7364:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0fffffff800000; valaddr_reg:x3; val_offset:22092*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22092*0 + 3*452*FLEN/8, x4, x1, x2)

inst_7365:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0fffffffc00000; valaddr_reg:x3; val_offset:22095*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22095*0 + 3*453*FLEN/8, x4, x1, x2)

inst_7366:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0fffffffe00000; valaddr_reg:x3; val_offset:22098*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22098*0 + 3*454*FLEN/8, x4, x1, x2)

inst_7367:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0ffffffff00000; valaddr_reg:x3; val_offset:22101*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22101*0 + 3*455*FLEN/8, x4, x1, x2)

inst_7368:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0ffffffff80000; valaddr_reg:x3; val_offset:22104*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22104*0 + 3*456*FLEN/8, x4, x1, x2)

inst_7369:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0ffffffffc0000; valaddr_reg:x3; val_offset:22107*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22107*0 + 3*457*FLEN/8, x4, x1, x2)

inst_7370:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0ffffffffe0000; valaddr_reg:x3; val_offset:22110*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22110*0 + 3*458*FLEN/8, x4, x1, x2)

inst_7371:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0fffffffff0000; valaddr_reg:x3; val_offset:22113*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22113*0 + 3*459*FLEN/8, x4, x1, x2)

inst_7372:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0fffffffff8000; valaddr_reg:x3; val_offset:22116*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22116*0 + 3*460*FLEN/8, x4, x1, x2)

inst_7373:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0fffffffffc000; valaddr_reg:x3; val_offset:22119*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22119*0 + 3*461*FLEN/8, x4, x1, x2)

inst_7374:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0fffffffffe000; valaddr_reg:x3; val_offset:22122*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22122*0 + 3*462*FLEN/8, x4, x1, x2)

inst_7375:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0ffffffffff000; valaddr_reg:x3; val_offset:22125*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22125*0 + 3*463*FLEN/8, x4, x1, x2)

inst_7376:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0ffffffffff800; valaddr_reg:x3; val_offset:22128*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22128*0 + 3*464*FLEN/8, x4, x1, x2)

inst_7377:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0ffffffffffc00; valaddr_reg:x3; val_offset:22131*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22131*0 + 3*465*FLEN/8, x4, x1, x2)

inst_7378:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0ffffffffffe00; valaddr_reg:x3; val_offset:22134*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22134*0 + 3*466*FLEN/8, x4, x1, x2)

inst_7379:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0fffffffffff00; valaddr_reg:x3; val_offset:22137*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22137*0 + 3*467*FLEN/8, x4, x1, x2)

inst_7380:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0fffffffffff80; valaddr_reg:x3; val_offset:22140*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22140*0 + 3*468*FLEN/8, x4, x1, x2)

inst_7381:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0fffffffffffc0; valaddr_reg:x3; val_offset:22143*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22143*0 + 3*469*FLEN/8, x4, x1, x2)

inst_7382:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0fffffffffffe0; valaddr_reg:x3; val_offset:22146*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22146*0 + 3*470*FLEN/8, x4, x1, x2)

inst_7383:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0ffffffffffff0; valaddr_reg:x3; val_offset:22149*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22149*0 + 3*471*FLEN/8, x4, x1, x2)

inst_7384:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0ffffffffffff8; valaddr_reg:x3; val_offset:22152*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22152*0 + 3*472*FLEN/8, x4, x1, x2)

inst_7385:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0ffffffffffffc; valaddr_reg:x3; val_offset:22155*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22155*0 + 3*473*FLEN/8, x4, x1, x2)

inst_7386:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0ffffffffffffe; valaddr_reg:x3; val_offset:22158*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22158*0 + 3*474*FLEN/8, x4, x1, x2)

inst_7387:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3b0 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbb0fffffffffffff; valaddr_reg:x3; val_offset:22161*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22161*0 + 3*475*FLEN/8, x4, x1, x2)

inst_7388:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:22164*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22164*0 + 3*476*FLEN/8, x4, x1, x2)

inst_7389:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:22167*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22167*0 + 3*477*FLEN/8, x4, x1, x2)

inst_7390:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:22170*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22170*0 + 3*478*FLEN/8, x4, x1, x2)

inst_7391:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:22173*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22173*0 + 3*479*FLEN/8, x4, x1, x2)

inst_7392:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:22176*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22176*0 + 3*480*FLEN/8, x4, x1, x2)

inst_7393:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:22179*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22179*0 + 3*481*FLEN/8, x4, x1, x2)

inst_7394:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:22182*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22182*0 + 3*482*FLEN/8, x4, x1, x2)

inst_7395:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:22185*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22185*0 + 3*483*FLEN/8, x4, x1, x2)

inst_7396:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:22188*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22188*0 + 3*484*FLEN/8, x4, x1, x2)

inst_7397:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:22191*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22191*0 + 3*485*FLEN/8, x4, x1, x2)

inst_7398:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:22194*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22194*0 + 3*486*FLEN/8, x4, x1, x2)

inst_7399:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:22197*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22197*0 + 3*487*FLEN/8, x4, x1, x2)

inst_7400:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:22200*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22200*0 + 3*488*FLEN/8, x4, x1, x2)

inst_7401:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:22203*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22203*0 + 3*489*FLEN/8, x4, x1, x2)

inst_7402:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:22206*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22206*0 + 3*490*FLEN/8, x4, x1, x2)

inst_7403:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:22209*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22209*0 + 3*491*FLEN/8, x4, x1, x2)

inst_7404:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:22212*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22212*0 + 3*492*FLEN/8, x4, x1, x2)

inst_7405:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:22215*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22215*0 + 3*493*FLEN/8, x4, x1, x2)

inst_7406:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:22218*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22218*0 + 3*494*FLEN/8, x4, x1, x2)

inst_7407:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:22221*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22221*0 + 3*495*FLEN/8, x4, x1, x2)

inst_7408:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:22224*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22224*0 + 3*496*FLEN/8, x4, x1, x2)

inst_7409:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x33bb4c0b03e47 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0xa9edf8344d0ec and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f733bb4c0b03e47; op2val:0x9ffa9edf8344d0ec;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:22227*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22227*0 + 3*497*FLEN/8, x4, x1, x2)

inst_7410:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a20000000000000; valaddr_reg:x3; val_offset:22230*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22230*0 + 3*498*FLEN/8, x4, x1, x2)

inst_7411:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a20000000000001; valaddr_reg:x3; val_offset:22233*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22233*0 + 3*499*FLEN/8, x4, x1, x2)

inst_7412:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a20000000000003; valaddr_reg:x3; val_offset:22236*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22236*0 + 3*500*FLEN/8, x4, x1, x2)

inst_7413:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a20000000000007; valaddr_reg:x3; val_offset:22239*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22239*0 + 3*501*FLEN/8, x4, x1, x2)

inst_7414:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2000000000000f; valaddr_reg:x3; val_offset:22242*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22242*0 + 3*502*FLEN/8, x4, x1, x2)

inst_7415:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2000000000001f; valaddr_reg:x3; val_offset:22245*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22245*0 + 3*503*FLEN/8, x4, x1, x2)

inst_7416:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2000000000003f; valaddr_reg:x3; val_offset:22248*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22248*0 + 3*504*FLEN/8, x4, x1, x2)

inst_7417:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2000000000007f; valaddr_reg:x3; val_offset:22251*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22251*0 + 3*505*FLEN/8, x4, x1, x2)

inst_7418:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a200000000000ff; valaddr_reg:x3; val_offset:22254*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22254*0 + 3*506*FLEN/8, x4, x1, x2)

inst_7419:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a200000000001ff; valaddr_reg:x3; val_offset:22257*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22257*0 + 3*507*FLEN/8, x4, x1, x2)

inst_7420:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a200000000003ff; valaddr_reg:x3; val_offset:22260*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22260*0 + 3*508*FLEN/8, x4, x1, x2)

inst_7421:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a200000000007ff; valaddr_reg:x3; val_offset:22263*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22263*0 + 3*509*FLEN/8, x4, x1, x2)

inst_7422:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a20000000000fff; valaddr_reg:x3; val_offset:22266*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22266*0 + 3*510*FLEN/8, x4, x1, x2)

inst_7423:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a20000000001fff; valaddr_reg:x3; val_offset:22269*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22269*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_7424:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a20000000003fff; valaddr_reg:x3; val_offset:22272*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22272*0 + 3*512*FLEN/8, x4, x1, x2)

inst_7425:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a20000000007fff; valaddr_reg:x3; val_offset:22275*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22275*0 + 3*513*FLEN/8, x4, x1, x2)

inst_7426:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2000000000ffff; valaddr_reg:x3; val_offset:22278*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22278*0 + 3*514*FLEN/8, x4, x1, x2)

inst_7427:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2000000001ffff; valaddr_reg:x3; val_offset:22281*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22281*0 + 3*515*FLEN/8, x4, x1, x2)

inst_7428:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2000000003ffff; valaddr_reg:x3; val_offset:22284*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22284*0 + 3*516*FLEN/8, x4, x1, x2)

inst_7429:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2000000007ffff; valaddr_reg:x3; val_offset:22287*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22287*0 + 3*517*FLEN/8, x4, x1, x2)

inst_7430:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a200000000fffff; valaddr_reg:x3; val_offset:22290*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22290*0 + 3*518*FLEN/8, x4, x1, x2)

inst_7431:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a200000001fffff; valaddr_reg:x3; val_offset:22293*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22293*0 + 3*519*FLEN/8, x4, x1, x2)

inst_7432:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a200000003fffff; valaddr_reg:x3; val_offset:22296*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22296*0 + 3*520*FLEN/8, x4, x1, x2)

inst_7433:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a200000007fffff; valaddr_reg:x3; val_offset:22299*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22299*0 + 3*521*FLEN/8, x4, x1, x2)

inst_7434:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a20000000ffffff; valaddr_reg:x3; val_offset:22302*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22302*0 + 3*522*FLEN/8, x4, x1, x2)

inst_7435:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a20000001ffffff; valaddr_reg:x3; val_offset:22305*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22305*0 + 3*523*FLEN/8, x4, x1, x2)

inst_7436:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a20000003ffffff; valaddr_reg:x3; val_offset:22308*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22308*0 + 3*524*FLEN/8, x4, x1, x2)

inst_7437:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a20000007ffffff; valaddr_reg:x3; val_offset:22311*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22311*0 + 3*525*FLEN/8, x4, x1, x2)

inst_7438:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2000000fffffff; valaddr_reg:x3; val_offset:22314*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22314*0 + 3*526*FLEN/8, x4, x1, x2)

inst_7439:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2000001fffffff; valaddr_reg:x3; val_offset:22317*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22317*0 + 3*527*FLEN/8, x4, x1, x2)

inst_7440:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2000003fffffff; valaddr_reg:x3; val_offset:22320*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22320*0 + 3*528*FLEN/8, x4, x1, x2)

inst_7441:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2000007fffffff; valaddr_reg:x3; val_offset:22323*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22323*0 + 3*529*FLEN/8, x4, x1, x2)

inst_7442:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a200000ffffffff; valaddr_reg:x3; val_offset:22326*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22326*0 + 3*530*FLEN/8, x4, x1, x2)

inst_7443:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a200001ffffffff; valaddr_reg:x3; val_offset:22329*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22329*0 + 3*531*FLEN/8, x4, x1, x2)

inst_7444:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a200003ffffffff; valaddr_reg:x3; val_offset:22332*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22332*0 + 3*532*FLEN/8, x4, x1, x2)

inst_7445:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a200007ffffffff; valaddr_reg:x3; val_offset:22335*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22335*0 + 3*533*FLEN/8, x4, x1, x2)

inst_7446:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a20000fffffffff; valaddr_reg:x3; val_offset:22338*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22338*0 + 3*534*FLEN/8, x4, x1, x2)

inst_7447:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a20001fffffffff; valaddr_reg:x3; val_offset:22341*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22341*0 + 3*535*FLEN/8, x4, x1, x2)

inst_7448:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a20003fffffffff; valaddr_reg:x3; val_offset:22344*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22344*0 + 3*536*FLEN/8, x4, x1, x2)

inst_7449:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a20007fffffffff; valaddr_reg:x3; val_offset:22347*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22347*0 + 3*537*FLEN/8, x4, x1, x2)

inst_7450:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2000ffffffffff; valaddr_reg:x3; val_offset:22350*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22350*0 + 3*538*FLEN/8, x4, x1, x2)

inst_7451:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2001ffffffffff; valaddr_reg:x3; val_offset:22353*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22353*0 + 3*539*FLEN/8, x4, x1, x2)

inst_7452:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2003ffffffffff; valaddr_reg:x3; val_offset:22356*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22356*0 + 3*540*FLEN/8, x4, x1, x2)

inst_7453:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2007ffffffffff; valaddr_reg:x3; val_offset:22359*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22359*0 + 3*541*FLEN/8, x4, x1, x2)

inst_7454:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a200fffffffffff; valaddr_reg:x3; val_offset:22362*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22362*0 + 3*542*FLEN/8, x4, x1, x2)

inst_7455:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a201fffffffffff; valaddr_reg:x3; val_offset:22365*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22365*0 + 3*543*FLEN/8, x4, x1, x2)

inst_7456:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a203fffffffffff; valaddr_reg:x3; val_offset:22368*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22368*0 + 3*544*FLEN/8, x4, x1, x2)

inst_7457:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a207fffffffffff; valaddr_reg:x3; val_offset:22371*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22371*0 + 3*545*FLEN/8, x4, x1, x2)

inst_7458:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a20ffffffffffff; valaddr_reg:x3; val_offset:22374*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22374*0 + 3*546*FLEN/8, x4, x1, x2)

inst_7459:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a21ffffffffffff; valaddr_reg:x3; val_offset:22377*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22377*0 + 3*547*FLEN/8, x4, x1, x2)

inst_7460:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a23ffffffffffff; valaddr_reg:x3; val_offset:22380*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22380*0 + 3*548*FLEN/8, x4, x1, x2)

inst_7461:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a27ffffffffffff; valaddr_reg:x3; val_offset:22383*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22383*0 + 3*549*FLEN/8, x4, x1, x2)

inst_7462:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a28000000000000; valaddr_reg:x3; val_offset:22386*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22386*0 + 3*550*FLEN/8, x4, x1, x2)

inst_7463:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2c000000000000; valaddr_reg:x3; val_offset:22389*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22389*0 + 3*551*FLEN/8, x4, x1, x2)

inst_7464:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2e000000000000; valaddr_reg:x3; val_offset:22392*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22392*0 + 3*552*FLEN/8, x4, x1, x2)

inst_7465:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2f000000000000; valaddr_reg:x3; val_offset:22395*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22395*0 + 3*553*FLEN/8, x4, x1, x2)

inst_7466:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2f800000000000; valaddr_reg:x3; val_offset:22398*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22398*0 + 3*554*FLEN/8, x4, x1, x2)

inst_7467:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2fc00000000000; valaddr_reg:x3; val_offset:22401*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22401*0 + 3*555*FLEN/8, x4, x1, x2)

inst_7468:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2fe00000000000; valaddr_reg:x3; val_offset:22404*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22404*0 + 3*556*FLEN/8, x4, x1, x2)

inst_7469:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2ff00000000000; valaddr_reg:x3; val_offset:22407*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22407*0 + 3*557*FLEN/8, x4, x1, x2)

inst_7470:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2ff80000000000; valaddr_reg:x3; val_offset:22410*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22410*0 + 3*558*FLEN/8, x4, x1, x2)

inst_7471:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2ffc0000000000; valaddr_reg:x3; val_offset:22413*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22413*0 + 3*559*FLEN/8, x4, x1, x2)

inst_7472:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2ffe0000000000; valaddr_reg:x3; val_offset:22416*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22416*0 + 3*560*FLEN/8, x4, x1, x2)

inst_7473:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2fff0000000000; valaddr_reg:x3; val_offset:22419*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22419*0 + 3*561*FLEN/8, x4, x1, x2)

inst_7474:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2fff8000000000; valaddr_reg:x3; val_offset:22422*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22422*0 + 3*562*FLEN/8, x4, x1, x2)

inst_7475:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2fffc000000000; valaddr_reg:x3; val_offset:22425*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22425*0 + 3*563*FLEN/8, x4, x1, x2)

inst_7476:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2fffe000000000; valaddr_reg:x3; val_offset:22428*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22428*0 + 3*564*FLEN/8, x4, x1, x2)

inst_7477:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2ffff000000000; valaddr_reg:x3; val_offset:22431*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22431*0 + 3*565*FLEN/8, x4, x1, x2)

inst_7478:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2ffff800000000; valaddr_reg:x3; val_offset:22434*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22434*0 + 3*566*FLEN/8, x4, x1, x2)

inst_7479:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2ffffc00000000; valaddr_reg:x3; val_offset:22437*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22437*0 + 3*567*FLEN/8, x4, x1, x2)

inst_7480:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2ffffe00000000; valaddr_reg:x3; val_offset:22440*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22440*0 + 3*568*FLEN/8, x4, x1, x2)

inst_7481:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2fffff00000000; valaddr_reg:x3; val_offset:22443*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22443*0 + 3*569*FLEN/8, x4, x1, x2)

inst_7482:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2fffff80000000; valaddr_reg:x3; val_offset:22446*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22446*0 + 3*570*FLEN/8, x4, x1, x2)

inst_7483:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2fffffc0000000; valaddr_reg:x3; val_offset:22449*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22449*0 + 3*571*FLEN/8, x4, x1, x2)

inst_7484:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2fffffe0000000; valaddr_reg:x3; val_offset:22452*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22452*0 + 3*572*FLEN/8, x4, x1, x2)

inst_7485:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2ffffff0000000; valaddr_reg:x3; val_offset:22455*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22455*0 + 3*573*FLEN/8, x4, x1, x2)

inst_7486:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2ffffff8000000; valaddr_reg:x3; val_offset:22458*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22458*0 + 3*574*FLEN/8, x4, x1, x2)

inst_7487:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2ffffffc000000; valaddr_reg:x3; val_offset:22461*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22461*0 + 3*575*FLEN/8, x4, x1, x2)

inst_7488:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2ffffffe000000; valaddr_reg:x3; val_offset:22464*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22464*0 + 3*576*FLEN/8, x4, x1, x2)

inst_7489:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2fffffff000000; valaddr_reg:x3; val_offset:22467*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22467*0 + 3*577*FLEN/8, x4, x1, x2)

inst_7490:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2fffffff800000; valaddr_reg:x3; val_offset:22470*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22470*0 + 3*578*FLEN/8, x4, x1, x2)

inst_7491:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2fffffffc00000; valaddr_reg:x3; val_offset:22473*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22473*0 + 3*579*FLEN/8, x4, x1, x2)

inst_7492:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2fffffffe00000; valaddr_reg:x3; val_offset:22476*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22476*0 + 3*580*FLEN/8, x4, x1, x2)

inst_7493:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2ffffffff00000; valaddr_reg:x3; val_offset:22479*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22479*0 + 3*581*FLEN/8, x4, x1, x2)

inst_7494:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2ffffffff80000; valaddr_reg:x3; val_offset:22482*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22482*0 + 3*582*FLEN/8, x4, x1, x2)

inst_7495:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2ffffffffc0000; valaddr_reg:x3; val_offset:22485*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22485*0 + 3*583*FLEN/8, x4, x1, x2)

inst_7496:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2ffffffffe0000; valaddr_reg:x3; val_offset:22488*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22488*0 + 3*584*FLEN/8, x4, x1, x2)

inst_7497:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2fffffffff0000; valaddr_reg:x3; val_offset:22491*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22491*0 + 3*585*FLEN/8, x4, x1, x2)

inst_7498:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2fffffffff8000; valaddr_reg:x3; val_offset:22494*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22494*0 + 3*586*FLEN/8, x4, x1, x2)

inst_7499:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2fffffffffc000; valaddr_reg:x3; val_offset:22497*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22497*0 + 3*587*FLEN/8, x4, x1, x2)

inst_7500:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2fffffffffe000; valaddr_reg:x3; val_offset:22500*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22500*0 + 3*588*FLEN/8, x4, x1, x2)

inst_7501:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2ffffffffff000; valaddr_reg:x3; val_offset:22503*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22503*0 + 3*589*FLEN/8, x4, x1, x2)

inst_7502:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2ffffffffff800; valaddr_reg:x3; val_offset:22506*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22506*0 + 3*590*FLEN/8, x4, x1, x2)

inst_7503:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2ffffffffffc00; valaddr_reg:x3; val_offset:22509*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22509*0 + 3*591*FLEN/8, x4, x1, x2)

inst_7504:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2ffffffffffe00; valaddr_reg:x3; val_offset:22512*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22512*0 + 3*592*FLEN/8, x4, x1, x2)

inst_7505:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2fffffffffff00; valaddr_reg:x3; val_offset:22515*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22515*0 + 3*593*FLEN/8, x4, x1, x2)

inst_7506:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2fffffffffff80; valaddr_reg:x3; val_offset:22518*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22518*0 + 3*594*FLEN/8, x4, x1, x2)

inst_7507:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2fffffffffffc0; valaddr_reg:x3; val_offset:22521*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22521*0 + 3*595*FLEN/8, x4, x1, x2)

inst_7508:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2fffffffffffe0; valaddr_reg:x3; val_offset:22524*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22524*0 + 3*596*FLEN/8, x4, x1, x2)

inst_7509:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2ffffffffffff0; valaddr_reg:x3; val_offset:22527*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22527*0 + 3*597*FLEN/8, x4, x1, x2)

inst_7510:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2ffffffffffff8; valaddr_reg:x3; val_offset:22530*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22530*0 + 3*598*FLEN/8, x4, x1, x2)

inst_7511:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2ffffffffffffc; valaddr_reg:x3; val_offset:22533*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22533*0 + 3*599*FLEN/8, x4, x1, x2)

inst_7512:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2ffffffffffffe; valaddr_reg:x3; val_offset:22536*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22536*0 + 3*600*FLEN/8, x4, x1, x2)

inst_7513:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3a2 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3a2fffffffffffff; valaddr_reg:x3; val_offset:22539*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22539*0 + 3*601*FLEN/8, x4, x1, x2)

inst_7514:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:22542*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22542*0 + 3*602*FLEN/8, x4, x1, x2)

inst_7515:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:22545*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22545*0 + 3*603*FLEN/8, x4, x1, x2)

inst_7516:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:22548*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22548*0 + 3*604*FLEN/8, x4, x1, x2)

inst_7517:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:22551*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22551*0 + 3*605*FLEN/8, x4, x1, x2)

inst_7518:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:22554*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22554*0 + 3*606*FLEN/8, x4, x1, x2)

inst_7519:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:22557*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22557*0 + 3*607*FLEN/8, x4, x1, x2)

inst_7520:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:22560*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22560*0 + 3*608*FLEN/8, x4, x1, x2)

inst_7521:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:22563*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22563*0 + 3*609*FLEN/8, x4, x1, x2)

inst_7522:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:22566*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22566*0 + 3*610*FLEN/8, x4, x1, x2)

inst_7523:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:22569*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22569*0 + 3*611*FLEN/8, x4, x1, x2)

inst_7524:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:22572*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22572*0 + 3*612*FLEN/8, x4, x1, x2)

inst_7525:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:22575*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22575*0 + 3*613*FLEN/8, x4, x1, x2)

inst_7526:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:22578*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22578*0 + 3*614*FLEN/8, x4, x1, x2)

inst_7527:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:22581*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22581*0 + 3*615*FLEN/8, x4, x1, x2)

inst_7528:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:22584*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22584*0 + 3*616*FLEN/8, x4, x1, x2)

inst_7529:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:22587*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22587*0 + 3*617*FLEN/8, x4, x1, x2)

inst_7530:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:22590*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22590*0 + 3*618*FLEN/8, x4, x1, x2)

inst_7531:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:22593*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22593*0 + 3*619*FLEN/8, x4, x1, x2)

inst_7532:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:22596*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22596*0 + 3*620*FLEN/8, x4, x1, x2)

inst_7533:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:22599*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22599*0 + 3*621*FLEN/8, x4, x1, x2)

inst_7534:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:22602*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22602*0 + 3*622*FLEN/8, x4, x1, x2)

inst_7535:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x391f9a9ee7faf and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa298645f27086 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7391f9a9ee7faf; op2val:0x206a298645f27086;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:22605*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22605*0 + 3*623*FLEN/8, x4, x1, x2)

inst_7536:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ea0000000000000; valaddr_reg:x3; val_offset:22608*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22608*0 + 3*624*FLEN/8, x4, x1, x2)

inst_7537:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ea0000000000001; valaddr_reg:x3; val_offset:22611*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22611*0 + 3*625*FLEN/8, x4, x1, x2)

inst_7538:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ea0000000000003; valaddr_reg:x3; val_offset:22614*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22614*0 + 3*626*FLEN/8, x4, x1, x2)

inst_7539:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ea0000000000007; valaddr_reg:x3; val_offset:22617*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22617*0 + 3*627*FLEN/8, x4, x1, x2)

inst_7540:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ea000000000000f; valaddr_reg:x3; val_offset:22620*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22620*0 + 3*628*FLEN/8, x4, x1, x2)

inst_7541:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ea000000000001f; valaddr_reg:x3; val_offset:22623*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22623*0 + 3*629*FLEN/8, x4, x1, x2)

inst_7542:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ea000000000003f; valaddr_reg:x3; val_offset:22626*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22626*0 + 3*630*FLEN/8, x4, x1, x2)

inst_7543:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ea000000000007f; valaddr_reg:x3; val_offset:22629*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22629*0 + 3*631*FLEN/8, x4, x1, x2)

inst_7544:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ea00000000000ff; valaddr_reg:x3; val_offset:22632*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22632*0 + 3*632*FLEN/8, x4, x1, x2)

inst_7545:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ea00000000001ff; valaddr_reg:x3; val_offset:22635*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22635*0 + 3*633*FLEN/8, x4, x1, x2)

inst_7546:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ea00000000003ff; valaddr_reg:x3; val_offset:22638*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22638*0 + 3*634*FLEN/8, x4, x1, x2)

inst_7547:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ea00000000007ff; valaddr_reg:x3; val_offset:22641*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22641*0 + 3*635*FLEN/8, x4, x1, x2)

inst_7548:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ea0000000000fff; valaddr_reg:x3; val_offset:22644*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22644*0 + 3*636*FLEN/8, x4, x1, x2)

inst_7549:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ea0000000001fff; valaddr_reg:x3; val_offset:22647*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22647*0 + 3*637*FLEN/8, x4, x1, x2)

inst_7550:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ea0000000003fff; valaddr_reg:x3; val_offset:22650*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22650*0 + 3*638*FLEN/8, x4, x1, x2)

inst_7551:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ea0000000007fff; valaddr_reg:x3; val_offset:22653*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22653*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_7552:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ea000000000ffff; valaddr_reg:x3; val_offset:22656*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22656*0 + 3*640*FLEN/8, x4, x1, x2)

inst_7553:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ea000000001ffff; valaddr_reg:x3; val_offset:22659*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22659*0 + 3*641*FLEN/8, x4, x1, x2)

inst_7554:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ea000000003ffff; valaddr_reg:x3; val_offset:22662*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22662*0 + 3*642*FLEN/8, x4, x1, x2)

inst_7555:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ea000000007ffff; valaddr_reg:x3; val_offset:22665*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22665*0 + 3*643*FLEN/8, x4, x1, x2)

inst_7556:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ea00000000fffff; valaddr_reg:x3; val_offset:22668*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22668*0 + 3*644*FLEN/8, x4, x1, x2)

inst_7557:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ea00000001fffff; valaddr_reg:x3; val_offset:22671*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22671*0 + 3*645*FLEN/8, x4, x1, x2)

inst_7558:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ea00000003fffff; valaddr_reg:x3; val_offset:22674*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22674*0 + 3*646*FLEN/8, x4, x1, x2)

inst_7559:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ea00000007fffff; valaddr_reg:x3; val_offset:22677*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22677*0 + 3*647*FLEN/8, x4, x1, x2)

inst_7560:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ea0000000ffffff; valaddr_reg:x3; val_offset:22680*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22680*0 + 3*648*FLEN/8, x4, x1, x2)

inst_7561:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ea0000001ffffff; valaddr_reg:x3; val_offset:22683*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22683*0 + 3*649*FLEN/8, x4, x1, x2)

inst_7562:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ea0000003ffffff; valaddr_reg:x3; val_offset:22686*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22686*0 + 3*650*FLEN/8, x4, x1, x2)

inst_7563:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ea0000007ffffff; valaddr_reg:x3; val_offset:22689*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22689*0 + 3*651*FLEN/8, x4, x1, x2)

inst_7564:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ea000000fffffff; valaddr_reg:x3; val_offset:22692*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22692*0 + 3*652*FLEN/8, x4, x1, x2)

inst_7565:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ea000001fffffff; valaddr_reg:x3; val_offset:22695*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22695*0 + 3*653*FLEN/8, x4, x1, x2)

inst_7566:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ea000003fffffff; valaddr_reg:x3; val_offset:22698*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22698*0 + 3*654*FLEN/8, x4, x1, x2)

inst_7567:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ea000007fffffff; valaddr_reg:x3; val_offset:22701*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22701*0 + 3*655*FLEN/8, x4, x1, x2)

inst_7568:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ea00000ffffffff; valaddr_reg:x3; val_offset:22704*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22704*0 + 3*656*FLEN/8, x4, x1, x2)

inst_7569:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ea00001ffffffff; valaddr_reg:x3; val_offset:22707*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22707*0 + 3*657*FLEN/8, x4, x1, x2)

inst_7570:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ea00003ffffffff; valaddr_reg:x3; val_offset:22710*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22710*0 + 3*658*FLEN/8, x4, x1, x2)

inst_7571:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ea00007ffffffff; valaddr_reg:x3; val_offset:22713*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22713*0 + 3*659*FLEN/8, x4, x1, x2)

inst_7572:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ea0000fffffffff; valaddr_reg:x3; val_offset:22716*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22716*0 + 3*660*FLEN/8, x4, x1, x2)

inst_7573:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ea0001fffffffff; valaddr_reg:x3; val_offset:22719*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22719*0 + 3*661*FLEN/8, x4, x1, x2)

inst_7574:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ea0003fffffffff; valaddr_reg:x3; val_offset:22722*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22722*0 + 3*662*FLEN/8, x4, x1, x2)

inst_7575:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ea0007fffffffff; valaddr_reg:x3; val_offset:22725*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22725*0 + 3*663*FLEN/8, x4, x1, x2)

inst_7576:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ea000ffffffffff; valaddr_reg:x3; val_offset:22728*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22728*0 + 3*664*FLEN/8, x4, x1, x2)

inst_7577:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ea001ffffffffff; valaddr_reg:x3; val_offset:22731*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22731*0 + 3*665*FLEN/8, x4, x1, x2)

inst_7578:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ea003ffffffffff; valaddr_reg:x3; val_offset:22734*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22734*0 + 3*666*FLEN/8, x4, x1, x2)

inst_7579:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ea007ffffffffff; valaddr_reg:x3; val_offset:22737*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22737*0 + 3*667*FLEN/8, x4, x1, x2)

inst_7580:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ea00fffffffffff; valaddr_reg:x3; val_offset:22740*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22740*0 + 3*668*FLEN/8, x4, x1, x2)

inst_7581:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ea01fffffffffff; valaddr_reg:x3; val_offset:22743*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22743*0 + 3*669*FLEN/8, x4, x1, x2)

inst_7582:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ea03fffffffffff; valaddr_reg:x3; val_offset:22746*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22746*0 + 3*670*FLEN/8, x4, x1, x2)

inst_7583:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ea07fffffffffff; valaddr_reg:x3; val_offset:22749*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22749*0 + 3*671*FLEN/8, x4, x1, x2)

inst_7584:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ea0ffffffffffff; valaddr_reg:x3; val_offset:22752*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22752*0 + 3*672*FLEN/8, x4, x1, x2)

inst_7585:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ea1ffffffffffff; valaddr_reg:x3; val_offset:22755*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22755*0 + 3*673*FLEN/8, x4, x1, x2)

inst_7586:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ea3ffffffffffff; valaddr_reg:x3; val_offset:22758*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22758*0 + 3*674*FLEN/8, x4, x1, x2)

inst_7587:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ea7ffffffffffff; valaddr_reg:x3; val_offset:22761*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22761*0 + 3*675*FLEN/8, x4, x1, x2)

inst_7588:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ea8000000000000; valaddr_reg:x3; val_offset:22764*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22764*0 + 3*676*FLEN/8, x4, x1, x2)

inst_7589:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3eac000000000000; valaddr_reg:x3; val_offset:22767*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22767*0 + 3*677*FLEN/8, x4, x1, x2)

inst_7590:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3eae000000000000; valaddr_reg:x3; val_offset:22770*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22770*0 + 3*678*FLEN/8, x4, x1, x2)

inst_7591:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3eaf000000000000; valaddr_reg:x3; val_offset:22773*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22773*0 + 3*679*FLEN/8, x4, x1, x2)

inst_7592:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3eaf800000000000; valaddr_reg:x3; val_offset:22776*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22776*0 + 3*680*FLEN/8, x4, x1, x2)

inst_7593:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3eafc00000000000; valaddr_reg:x3; val_offset:22779*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22779*0 + 3*681*FLEN/8, x4, x1, x2)

inst_7594:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3eafe00000000000; valaddr_reg:x3; val_offset:22782*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22782*0 + 3*682*FLEN/8, x4, x1, x2)

inst_7595:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3eaff00000000000; valaddr_reg:x3; val_offset:22785*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22785*0 + 3*683*FLEN/8, x4, x1, x2)

inst_7596:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3eaff80000000000; valaddr_reg:x3; val_offset:22788*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22788*0 + 3*684*FLEN/8, x4, x1, x2)

inst_7597:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3eaffc0000000000; valaddr_reg:x3; val_offset:22791*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22791*0 + 3*685*FLEN/8, x4, x1, x2)

inst_7598:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3eaffe0000000000; valaddr_reg:x3; val_offset:22794*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22794*0 + 3*686*FLEN/8, x4, x1, x2)

inst_7599:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3eafff0000000000; valaddr_reg:x3; val_offset:22797*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22797*0 + 3*687*FLEN/8, x4, x1, x2)

inst_7600:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3eafff8000000000; valaddr_reg:x3; val_offset:22800*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22800*0 + 3*688*FLEN/8, x4, x1, x2)

inst_7601:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3eafffc000000000; valaddr_reg:x3; val_offset:22803*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22803*0 + 3*689*FLEN/8, x4, x1, x2)

inst_7602:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3eafffe000000000; valaddr_reg:x3; val_offset:22806*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22806*0 + 3*690*FLEN/8, x4, x1, x2)

inst_7603:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3eaffff000000000; valaddr_reg:x3; val_offset:22809*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22809*0 + 3*691*FLEN/8, x4, x1, x2)

inst_7604:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3eaffff800000000; valaddr_reg:x3; val_offset:22812*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22812*0 + 3*692*FLEN/8, x4, x1, x2)

inst_7605:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3eaffffc00000000; valaddr_reg:x3; val_offset:22815*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22815*0 + 3*693*FLEN/8, x4, x1, x2)

inst_7606:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3eaffffe00000000; valaddr_reg:x3; val_offset:22818*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22818*0 + 3*694*FLEN/8, x4, x1, x2)

inst_7607:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3eafffff00000000; valaddr_reg:x3; val_offset:22821*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22821*0 + 3*695*FLEN/8, x4, x1, x2)

inst_7608:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3eafffff80000000; valaddr_reg:x3; val_offset:22824*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22824*0 + 3*696*FLEN/8, x4, x1, x2)

inst_7609:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3eafffffc0000000; valaddr_reg:x3; val_offset:22827*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22827*0 + 3*697*FLEN/8, x4, x1, x2)

inst_7610:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3eafffffe0000000; valaddr_reg:x3; val_offset:22830*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22830*0 + 3*698*FLEN/8, x4, x1, x2)

inst_7611:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3eaffffff0000000; valaddr_reg:x3; val_offset:22833*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22833*0 + 3*699*FLEN/8, x4, x1, x2)

inst_7612:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3eaffffff8000000; valaddr_reg:x3; val_offset:22836*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22836*0 + 3*700*FLEN/8, x4, x1, x2)

inst_7613:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3eaffffffc000000; valaddr_reg:x3; val_offset:22839*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22839*0 + 3*701*FLEN/8, x4, x1, x2)

inst_7614:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3eaffffffe000000; valaddr_reg:x3; val_offset:22842*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22842*0 + 3*702*FLEN/8, x4, x1, x2)

inst_7615:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3eafffffff000000; valaddr_reg:x3; val_offset:22845*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22845*0 + 3*703*FLEN/8, x4, x1, x2)

inst_7616:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3eafffffff800000; valaddr_reg:x3; val_offset:22848*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22848*0 + 3*704*FLEN/8, x4, x1, x2)

inst_7617:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3eafffffffc00000; valaddr_reg:x3; val_offset:22851*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22851*0 + 3*705*FLEN/8, x4, x1, x2)

inst_7618:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3eafffffffe00000; valaddr_reg:x3; val_offset:22854*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22854*0 + 3*706*FLEN/8, x4, x1, x2)

inst_7619:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3eaffffffff00000; valaddr_reg:x3; val_offset:22857*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22857*0 + 3*707*FLEN/8, x4, x1, x2)

inst_7620:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3eaffffffff80000; valaddr_reg:x3; val_offset:22860*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22860*0 + 3*708*FLEN/8, x4, x1, x2)

inst_7621:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3eaffffffffc0000; valaddr_reg:x3; val_offset:22863*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22863*0 + 3*709*FLEN/8, x4, x1, x2)

inst_7622:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3eaffffffffe0000; valaddr_reg:x3; val_offset:22866*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22866*0 + 3*710*FLEN/8, x4, x1, x2)

inst_7623:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3eafffffffff0000; valaddr_reg:x3; val_offset:22869*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22869*0 + 3*711*FLEN/8, x4, x1, x2)

inst_7624:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3eafffffffff8000; valaddr_reg:x3; val_offset:22872*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22872*0 + 3*712*FLEN/8, x4, x1, x2)

inst_7625:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3eafffffffffc000; valaddr_reg:x3; val_offset:22875*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22875*0 + 3*713*FLEN/8, x4, x1, x2)

inst_7626:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3eafffffffffe000; valaddr_reg:x3; val_offset:22878*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22878*0 + 3*714*FLEN/8, x4, x1, x2)

inst_7627:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3eaffffffffff000; valaddr_reg:x3; val_offset:22881*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22881*0 + 3*715*FLEN/8, x4, x1, x2)

inst_7628:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3eaffffffffff800; valaddr_reg:x3; val_offset:22884*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22884*0 + 3*716*FLEN/8, x4, x1, x2)

inst_7629:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3eaffffffffffc00; valaddr_reg:x3; val_offset:22887*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22887*0 + 3*717*FLEN/8, x4, x1, x2)

inst_7630:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3eaffffffffffe00; valaddr_reg:x3; val_offset:22890*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22890*0 + 3*718*FLEN/8, x4, x1, x2)

inst_7631:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3eafffffffffff00; valaddr_reg:x3; val_offset:22893*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22893*0 + 3*719*FLEN/8, x4, x1, x2)

inst_7632:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3eafffffffffff80; valaddr_reg:x3; val_offset:22896*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22896*0 + 3*720*FLEN/8, x4, x1, x2)

inst_7633:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3eafffffffffffc0; valaddr_reg:x3; val_offset:22899*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22899*0 + 3*721*FLEN/8, x4, x1, x2)

inst_7634:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3eafffffffffffe0; valaddr_reg:x3; val_offset:22902*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22902*0 + 3*722*FLEN/8, x4, x1, x2)

inst_7635:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3eaffffffffffff0; valaddr_reg:x3; val_offset:22905*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22905*0 + 3*723*FLEN/8, x4, x1, x2)

inst_7636:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3eaffffffffffff8; valaddr_reg:x3; val_offset:22908*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22908*0 + 3*724*FLEN/8, x4, x1, x2)

inst_7637:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3eaffffffffffffc; valaddr_reg:x3; val_offset:22911*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22911*0 + 3*725*FLEN/8, x4, x1, x2)

inst_7638:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3eaffffffffffffe; valaddr_reg:x3; val_offset:22914*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22914*0 + 3*726*FLEN/8, x4, x1, x2)

inst_7639:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ea and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3eafffffffffffff; valaddr_reg:x3; val_offset:22917*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22917*0 + 3*727*FLEN/8, x4, x1, x2)

inst_7640:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:22920*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22920*0 + 3*728*FLEN/8, x4, x1, x2)

inst_7641:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:22923*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22923*0 + 3*729*FLEN/8, x4, x1, x2)

inst_7642:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:22926*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22926*0 + 3*730*FLEN/8, x4, x1, x2)

inst_7643:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:22929*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22929*0 + 3*731*FLEN/8, x4, x1, x2)

inst_7644:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:22932*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22932*0 + 3*732*FLEN/8, x4, x1, x2)

inst_7645:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:22935*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22935*0 + 3*733*FLEN/8, x4, x1, x2)

inst_7646:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:22938*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22938*0 + 3*734*FLEN/8, x4, x1, x2)

inst_7647:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:22941*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22941*0 + 3*735*FLEN/8, x4, x1, x2)

inst_7648:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:22944*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22944*0 + 3*736*FLEN/8, x4, x1, x2)

inst_7649:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:22947*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22947*0 + 3*737*FLEN/8, x4, x1, x2)

inst_7650:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:22950*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22950*0 + 3*738*FLEN/8, x4, x1, x2)

inst_7651:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:22953*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22953*0 + 3*739*FLEN/8, x4, x1, x2)

inst_7652:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:22956*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22956*0 + 3*740*FLEN/8, x4, x1, x2)

inst_7653:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:22959*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22959*0 + 3*741*FLEN/8, x4, x1, x2)

inst_7654:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:22962*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22962*0 + 3*742*FLEN/8, x4, x1, x2)

inst_7655:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:22965*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22965*0 + 3*743*FLEN/8, x4, x1, x2)

inst_7656:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:22968*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22968*0 + 3*744*FLEN/8, x4, x1, x2)

inst_7657:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:22971*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22971*0 + 3*745*FLEN/8, x4, x1, x2)

inst_7658:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:22974*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22974*0 + 3*746*FLEN/8, x4, x1, x2)

inst_7659:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:22977*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22977*0 + 3*747*FLEN/8, x4, x1, x2)

inst_7660:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:22980*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22980*0 + 3*748*FLEN/8, x4, x1, x2)

inst_7661:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x39f711243d797 and fs2 == 0 and fe2 == 0x206 and fm2 == 0xa179200b66b7d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f739f711243d797; op2val:0x206a179200b66b7d;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:22983*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22983*0 + 3*749*FLEN/8, x4, x1, x2)

inst_7662:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb90000000000000; valaddr_reg:x3; val_offset:22986*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22986*0 + 3*750*FLEN/8, x4, x1, x2)

inst_7663:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb90000000000001; valaddr_reg:x3; val_offset:22989*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22989*0 + 3*751*FLEN/8, x4, x1, x2)

inst_7664:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb90000000000003; valaddr_reg:x3; val_offset:22992*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22992*0 + 3*752*FLEN/8, x4, x1, x2)

inst_7665:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb90000000000007; valaddr_reg:x3; val_offset:22995*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22995*0 + 3*753*FLEN/8, x4, x1, x2)

inst_7666:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9000000000000f; valaddr_reg:x3; val_offset:22998*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 22998*0 + 3*754*FLEN/8, x4, x1, x2)

inst_7667:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9000000000001f; valaddr_reg:x3; val_offset:23001*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23001*0 + 3*755*FLEN/8, x4, x1, x2)

inst_7668:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9000000000003f; valaddr_reg:x3; val_offset:23004*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23004*0 + 3*756*FLEN/8, x4, x1, x2)

inst_7669:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9000000000007f; valaddr_reg:x3; val_offset:23007*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23007*0 + 3*757*FLEN/8, x4, x1, x2)

inst_7670:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb900000000000ff; valaddr_reg:x3; val_offset:23010*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23010*0 + 3*758*FLEN/8, x4, x1, x2)

inst_7671:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb900000000001ff; valaddr_reg:x3; val_offset:23013*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23013*0 + 3*759*FLEN/8, x4, x1, x2)

inst_7672:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb900000000003ff; valaddr_reg:x3; val_offset:23016*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23016*0 + 3*760*FLEN/8, x4, x1, x2)

inst_7673:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb900000000007ff; valaddr_reg:x3; val_offset:23019*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23019*0 + 3*761*FLEN/8, x4, x1, x2)

inst_7674:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb90000000000fff; valaddr_reg:x3; val_offset:23022*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23022*0 + 3*762*FLEN/8, x4, x1, x2)

inst_7675:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb90000000001fff; valaddr_reg:x3; val_offset:23025*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23025*0 + 3*763*FLEN/8, x4, x1, x2)

inst_7676:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb90000000003fff; valaddr_reg:x3; val_offset:23028*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23028*0 + 3*764*FLEN/8, x4, x1, x2)

inst_7677:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb90000000007fff; valaddr_reg:x3; val_offset:23031*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23031*0 + 3*765*FLEN/8, x4, x1, x2)

inst_7678:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9000000000ffff; valaddr_reg:x3; val_offset:23034*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23034*0 + 3*766*FLEN/8, x4, x1, x2)

inst_7679:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9000000001ffff; valaddr_reg:x3; val_offset:23037*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23037*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094819840,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094819841,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094819843,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094819847,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094819855,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094819871,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094819903,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094819967,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094820095,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094820351,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094820863,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094821887,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094823935,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094828031,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094836223,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094852607,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094885375,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094950911,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985095081983,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985095344127,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985095868415,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985096916991,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985099014143,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985103208447,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985111597055,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985128374271,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985161928703,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985229037567,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985363255295,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985631690751,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143986168561663,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143987242303487,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143989389787135,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143993684754431,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180144002274689023,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180144019454558207,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180144053814296575,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180144122533773311,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180144259972726783,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180144534850633727,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180145084606447615,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180146184118075391,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180148383141330943,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180152781187842047,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180161577280864255,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180179169466908671,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180214353838997503,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180284722583175167,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180425460071530495,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180706935048241151,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(181269885001662463,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(182395784908505087,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(182395784908505088,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(183521684815347712,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184084634768769024,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184366109745479680,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184506847233835008,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184577215978012672,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184612400350101504,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184629992536145920,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184638788629168128,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184643186675679232,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184645385698934784,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184646485210562560,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647034966376448,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647309844283392,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647447283236864,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647516002713600,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647550362451968,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647567542321152,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647576132255744,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647580427223040,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647582574706688,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647583648448512,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584185319424,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584453754880,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584587972608,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584655081472,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584688635904,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584705413120,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584713801728,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584717996032,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584720093184,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584721141760,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584721666048,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584721928192,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722059264,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722124800,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722157568,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722173952,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722182144,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722186240,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722188288,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722189312,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722189824,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190080,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190208,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190272,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190304,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190320,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190328,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190332,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190334,64,FLEN)
NAN_BOXED(6877701658064515823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190335,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13461259286210412544,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13461259286210412545,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13461259286210412547,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13461259286210412551,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13461259286210412559,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13461259286210412575,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13461259286210412607,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13461259286210412671,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13461259286210412799,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13461259286210413055,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13461259286210413567,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13461259286210414591,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13461259286210416639,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13461259286210420735,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13461259286210428927,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13461259286210445311,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13461259286210478079,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13461259286210543615,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13461259286210674687,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13461259286210936831,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13461259286211461119,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13461259286212509695,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13461259286214606847,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13461259286218801151,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13461259286227189759,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13461259286243966975,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13461259286277521407,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13461259286344630271,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13461259286478847999,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13461259286747283455,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13461259287284154367,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13461259288357896191,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13461259290505379839,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13461259294800347135,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13461259303390281727,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13461259320570150911,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13461259354929889279,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13461259423649366015,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13461259561088319487,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13461259835966226431,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13461260385722040319,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13461261485233668095,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13461263684256923647,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13461268082303434751,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13461276878396456959,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13461294470582501375,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13461329654954590207,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13461400023698767871,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13461540761187123199,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13461822236163833855,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13462385186117255167,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13463511086024097791,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13463511086024097792,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13464636985930940416,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13465199935884361728,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13465481410861072384,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13465622148349427712,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13465692517093605376,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13465727701465694208,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13465745293651738624,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13465754089744760832,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13465758487791271936,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13465760686814527488,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13465761786326155264,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13465762336081969152,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13465762610959876096,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13465762748398829568,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13465762817118306304,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13465762851478044672,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13465762868657913856,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13465762877247848448,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13465762881542815744,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13465762883690299392,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13465762884764041216,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13465762885300912128,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13465762885569347584,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13465762885703565312,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13465762885770674176,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13465762885804228608,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13465762885821005824,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13465762885829394432,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13465762885833588736,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13465762885835685888,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13465762885836734464,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13465762885837258752,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13465762885837520896,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13465762885837651968,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13465762885837717504,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13465762885837750272,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13465762885837766656,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13465762885837774848,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13465762885837778944,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13465762885837780992,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13465762885837782016,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13465762885837782528,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13465762885837782784,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13465762885837782912,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13465762885837782976,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13465762885837783008,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13465762885837783024,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13465762885837783032,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13465762885837783036,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13465762885837783038,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13465762885837783039,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6877704779440847503,64,FLEN)
NAN_BOXED(11527991189107994810,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334464,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334465,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334467,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334471,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334479,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334495,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334527,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334591,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334719,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334975,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646335487,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646336511,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646338559,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646342655,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646350847,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646367231,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646399999,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646465535,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646596607,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646858751,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396647383039,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396648431615,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396650528767,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396654723071,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396663111679,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396679888895,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396713443327,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396780552191,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396914769919,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532397183205375,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532397720076287,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532398793818111,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532400941301759,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532405236269055,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532413826203647,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532431006072831,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532465365811199,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532534085287935,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532671524241407,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532946402148351,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40533496157962239,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40534595669590015,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40536794692845567,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40541192739356671,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40549988832378879,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40567581018423295,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40602765390512127,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40673134134689791,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40813871623045119,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(41095346599755775,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(41658296553177087,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(42784196460019711,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(42784196460019712,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(43910096366862336,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(44473046320283648,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(44754521296994304,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(44895258785349632,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(44965627529527296,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45000811901616128,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45018404087660544,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45027200180682752,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45031598227193856,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45033797250449408,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45034896762077184,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035446517891072,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035721395798016,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035858834751488,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035927554228224,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035961913966592,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035979093835776,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035987683770368,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035991978737664,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035994126221312,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035995199963136,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035995736834048,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996005269504,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996139487232,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996206596096,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996240150528,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996256927744,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996265316352,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996269510656,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996271607808,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996272656384,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273180672,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273442816,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273573888,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273639424,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273672192,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273688576,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273696768,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273700864,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273702912,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273703936,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704448,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704704,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704832,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704896,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704928,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704944,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704952,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704956,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704958,64,FLEN)
NAN_BOXED(6877782984646665791,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704959,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13474770085092524032,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13474770085092524033,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13474770085092524035,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13474770085092524039,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13474770085092524047,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13474770085092524063,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13474770085092524095,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13474770085092524159,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13474770085092524287,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13474770085092524543,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13474770085092525055,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13474770085092526079,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13474770085092528127,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13474770085092532223,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13474770085092540415,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13474770085092556799,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13474770085092589567,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13474770085092655103,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13474770085092786175,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13474770085093048319,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13474770085093572607,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13474770085094621183,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13474770085096718335,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13474770085100912639,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13474770085109301247,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13474770085126078463,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13474770085159632895,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13474770085226741759,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13474770085360959487,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13474770085629394943,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13474770086166265855,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13474770087240007679,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13474770089387491327,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13474770093682458623,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13474770102272393215,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13474770119452262399,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13474770153812000767,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13474770222531477503,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13474770359970430975,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13474770634848337919,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13474771184604151807,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13474772284115779583,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13474774483139035135,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13474778881185546239,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13474787677278568447,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13474805269464612863,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13474840453836701695,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13474910822580879359,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13475051560069234687,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13475333035045945343,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13475895984999366655,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13477021884906209279,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13477021884906209280,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13478147784813051904,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13478710734766473216,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13478992209743183872,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13479132947231539200,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13479203315975716864,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13479238500347805696,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13479256092533850112,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13479264888626872320,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13479269286673383424,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13479271485696638976,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13479272585208266752,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13479273134964080640,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13479273409841987584,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13479273547280941056,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13479273616000417792,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13479273650360156160,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13479273667540025344,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13479273676129959936,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13479273680424927232,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13479273682572410880,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13479273683646152704,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13479273684183023616,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13479273684451459072,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13479273684585676800,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13479273684652785664,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13479273684686340096,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13479273684703117312,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13479273684711505920,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13479273684715700224,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13479273684717797376,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13479273684718845952,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13479273684719370240,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13479273684719632384,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13479273684719763456,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13479273684719828992,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13479273684719861760,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13479273684719878144,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13479273684719886336,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13479273684719890432,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13479273684719892480,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13479273684719893504,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13479273684719894016,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13479273684719894272,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13479273684719894400,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13479273684719894464,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13479273684719894496,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13479273684719894512,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13479273684719894520,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13479273684719894524,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13479273684719894526,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13479273684719894527,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6877906703437807175,64,FLEN)
NAN_BOXED(11527700879025426668,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4188347653454561280,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4188347653454561281,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4188347653454561283,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4188347653454561287,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4188347653454561295,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4188347653454561311,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4188347653454561343,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4188347653454561407,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4188347653454561535,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4188347653454561791,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4188347653454562303,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4188347653454563327,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4188347653454565375,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4188347653454569471,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4188347653454577663,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4188347653454594047,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4188347653454626815,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4188347653454692351,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4188347653454823423,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4188347653455085567,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4188347653455609855,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4188347653456658431,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4188347653458755583,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4188347653462949887,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4188347653471338495,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4188347653488115711,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4188347653521670143,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4188347653588779007,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4188347653722996735,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4188347653991432191,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4188347654528303103,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4188347655602044927,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4188347657749528575,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4188347662044495871,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4188347670634430463,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4188347687814299647,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4188347722174038015,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4188347790893514751,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4188347928332468223,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4188348203210375167,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4188348752966189055,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4188349852477816831,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4188352051501072383,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4188356449547583487,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4188365245640605695,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4188382837826650111,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4188418022198738943,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4188488390942916607,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4188629128431271935,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4188910603407982591,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4189473553361403903,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4190599453268246527,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4190599453268246528,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4191725353175089152,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4192288303128510464,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4192569778105221120,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4192710515593576448,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4192780884337754112,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4192816068709842944,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4192833660895887360,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4192842456988909568,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4192846855035420672,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4192849054058676224,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4192850153570304000,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4192850703326117888,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4192850978204024832,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4192851115642978304,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4192851184362455040,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4192851218722193408,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4192851235902062592,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4192851244491997184,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4192851248786964480,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4192851250934448128,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4192851252008189952,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4192851252545060864,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4192851252813496320,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4192851252947714048,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4192851253014822912,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4192851253048377344,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4192851253065154560,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4192851253073543168,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4192851253077737472,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4192851253079834624,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4192851253080883200,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4192851253081407488,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4192851253081669632,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4192851253081800704,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4192851253081866240,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4192851253081899008,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4192851253081915392,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4192851253081923584,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4192851253081927680,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4192851253081929728,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4192851253081930752,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4192851253081931264,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4192851253081931520,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4192851253081931648,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4192851253081931712,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4192851253081931744,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4192851253081931760,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4192851253081931768,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4192851253081931772,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4192851253081931774,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4192851253081931775,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6878001557408743343,64,FLEN)
NAN_BOXED(2335725013420896390,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4512606826625236992,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4512606826625236993,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4512606826625236995,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4512606826625236999,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4512606826625237007,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4512606826625237023,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4512606826625237055,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4512606826625237119,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4512606826625237247,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4512606826625237503,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4512606826625238015,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4512606826625239039,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4512606826625241087,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4512606826625245183,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4512606826625253375,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4512606826625269759,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4512606826625302527,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4512606826625368063,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4512606826625499135,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4512606826625761279,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4512606826626285567,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4512606826627334143,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4512606826629431295,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4512606826633625599,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4512606826642014207,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4512606826658791423,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4512606826692345855,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4512606826759454719,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4512606826893672447,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4512606827162107903,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4512606827698978815,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4512606828772720639,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4512606830920204287,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4512606835215171583,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4512606843805106175,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4512606860984975359,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4512606895344713727,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4512606964064190463,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4512607101503143935,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4512607376381050879,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4512607926136864767,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4512609025648492543,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4512611224671748095,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4512615622718259199,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4512624418811281407,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4512642010997325823,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4512677195369414655,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4512747564113592319,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4512888301601947647,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4513169776578658303,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4513732726532079615,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4514858626438922239,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4514858626438922240,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4515984526345764864,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4516547476299186176,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4516828951275896832,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4516969688764252160,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4517040057508429824,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4517075241880518656,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4517092834066563072,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4517101630159585280,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4517106028206096384,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4517108227229351936,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4517109326740979712,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4517109876496793600,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4517110151374700544,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4517110288813654016,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4517110357533130752,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4517110391892869120,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4517110409072738304,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4517110417662672896,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4517110421957640192,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4517110424105123840,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4517110425178865664,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4517110425715736576,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4517110425984172032,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4517110426118389760,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4517110426185498624,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4517110426219053056,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4517110426235830272,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4517110426244218880,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4517110426248413184,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4517110426250510336,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4517110426251558912,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4517110426252083200,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4517110426252345344,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4517110426252476416,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4517110426252541952,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4517110426252574720,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4517110426252591104,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4517110426252599296,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4517110426252603392,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4517110426252605440,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4517110426252606464,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4517110426252606976,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4517110426252607232,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4517110426252607360,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4517110426252607424,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4517110426252607456,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4517110426252607472,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4517110426252607480,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4517110426252607484,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4517110426252607486,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4517110426252607487,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6878016363911436183,64,FLEN)
NAN_BOXED(2335705272589642621,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13515302481738858496,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13515302481738858497,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13515302481738858499,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13515302481738858503,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13515302481738858511,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13515302481738858527,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13515302481738858559,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13515302481738858623,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13515302481738858751,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13515302481738859007,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13515302481738859519,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13515302481738860543,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13515302481738862591,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13515302481738866687,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13515302481738874879,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13515302481738891263,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13515302481738924031,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13515302481738989567,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
